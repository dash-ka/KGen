s12	"prototype that evaluates basic sparql queries over arbitrary rdf graphs"
s12	"prototype that evaluates basic sparql queries over arbitrary rdf graphs"	rdf:subject	"prototype"
s12	"prototype that evaluates basic sparql queries over arbitrary rdf graphs"	rdf:predicate	"evaluate"
s12	"prototype that evaluates basic sparql queries over arbitrary rdf graphs"	rdf:object	"basic sparql query arbitrary rdf graph"
s12	"basic sparql query arbitrary rdf graph"	rdfs:member	"arbitrary rdf graph"
s12	"basic sparql query arbitrary rdf graph"	rdfs:member	"basic sparql query"
s12	"basic sparql"	rdfs:subClassOf	"sparql"
s12	"rdf graph"	rdfs:member	"rdf"
s12	"arbitrary rdf graph"	rdfs:member	"arbitrary rdf"
s12	"arbitrary rdf"	rdfs:member	"arbitrary"
s12	"sparql query"	rdfs:member	"sparql"
s12	"arbitrary rdf"	rdfs:subClassOf	"rdf"
s12	"basic sparql query"	rdfs:subClassOf	"query"
s12	"rdf graph"	rdfs:subClassOf	"graph"
s12	"arbitrary rdf graph"	rdfs:subClassOf	"graph"
s12	"basic sparql"	rdfs:member	"basic"
s12	"sparql query"	rdfs:subClassOf	"query"
s12	"basic sparql query"	rdfs:member	"basic sparql"
s12	"arbitrary rdf graph"	rdfs:subClassOf	"rdf graph"
s12	"query arbitrary rdf graph"	rdfs:subClassOf	"arbitrary rdf graph"
s12	"sparql query arbitrary rdf graph"	rdfs:subClassOf	"query arbitrary rdf graph"
s12	"basic sparql query arbitrary rdf graph"	rdfs:subClassOf	"sparql query arbitrary rdf graph"
s11	"we present we prototype"
s11	"we present we prototype"	rdf:subject	"we"
s11	"we present we prototype"	rdf:predicate	"present"
s11	"we present we prototype"	rdf:object	"prototype"
s10	"prototype that show initial results over large datasets"
s10	"prototype that show initial results over large datasets"	rdf:subject	"prototype"
s10	"prototype that show initial results over large datasets"	rdf:predicate	"show"
s10	"prototype that show initial results over large datasets"	rdf:object	"initial result over large datasets"
s10	"initial result over large datasets"	rdfs:member	"initial result"
s10	"initial result over large datasets"	rdfs:member	"large datasets"
s10	"initial result"	rdfs:subClassOf	"result"
s10	"large datasets"	rdfs:member	"large"
s10	"large datasets"	rdfs:subClassOf	"datasets"
s10	"initial result"	rdfs:member	"initial"
s10	"initial result over large datasets"	rdfs:member	"initial result"
s10	"initial result over large datasets"	rdfs:member	"large datasets"
s9	"the individuals evolve independently parallel execution"
s9	"the individuals evolve independently parallel execution"	rdf:subject	"individual"
s9	"the individuals evolve independently parallel execution"	rdf:predicate	"evolve"
s9	"the individuals evolve independently parallel execution"	rdf:object	"independently parallel execution"
s9	"independently parallel"	rdfs:member	"independently"
s9	"independently parallel"	rdfs:subClassOf	"parallel"
s9	"independently parallel execution"	rdfs:member	"independently parallel"
s9	"independently parallel execution"	rdfs:subClassOf	"execution"
s9	"parallel execution"	rdfs:member	"parallel"
s9	"parallel execution"	rdfs:subClassOf	"execution"
s8.1	"we reducing the need for disk io during query evaluation"
s8.1	"we reducing the need for disk io during query evaluation"	rdf:subject	"we"
s8.1	"we reducing the need for disk io during query evaluation"	rdf:predicate	"reduce"
s8.1	"we reducing the need for disk io during query evaluation"	rdf:object	"need for disk io"
s8.1	"need for disk io"	rdfs:member	"disk io"
s8.1	"need for disk io"	rdfs:member	"need"
s8.1	"disk io"	rdfs:subClassOf	"io"
s8.1	"disk io"	rdfs:member	"disk"
s8.1	"need for disk io"	rdfs:member	"need"
s8.1	"need for disk io"	rdfs:member	"disk io"
s8.1	"we reducing the need for disk io during query evaluation"	local:AM-TMP	"query evaluation"
s8.1	"query evaluation"	rdfs:member	"query"
s8.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	rdf:subject	"we"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	rdf:predicate	"fit"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	rdf:object	"large graph"
s8	"large graph"	rdfs:subClassOf	"graph"
s8	"large graph"	rdfs:member	"large"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	local:AM-ADV	"secondly through bloom filter compression"
s8	"filter compression"	rdfs:subClassOf	"compression"
s8	"bloom filter"	rdfs:member	"bloom"
s8	"bloom filter"	rdfs:subClassOf	"filter"
s8	"bloom filter compression"	rdfs:member	"bloom filter"
s8	"filter compression"	rdfs:member	"filter"
s8	"bloom filter compression"	rdfs:subClassOf	"compression"
s8	"bloom filter compression"	rdfs:subClassOf	"filter compression"
s8	"secondly through bloom filter compression"	rdfs:member	"secondly"
s8	"secondly through bloom filter compression"	rdfs:member	"bloom filter compression"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	local:AM-ADV	"reduce the need for disk io"
s8	"reduce the need for disk io"	rdfs:member	"disk io"
s8	"reduce the need for disk io"	rdfs:member	"need"
s8	"disk io"	rdfs:subClassOf	"io"
s8	"disk io"	rdfs:member	"disk"
s8	"need for disk io"	rdfs:member	"need"
s8	"need for disk io"	rdfs:member	"disk io"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	local:AM-LOC	"main memory"
s8	"main memory"	rdfs:subClassOf	"memory"
s8	"main memory"	rdfs:member	"main"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	local:AM-MOD	"can"
s8	"secondly through bloom filter compression we can fit large graphs in main memory reducing the need for disk io during query evaluation"	local:AM-TMP	"query evaluation"
s8	"query evaluation"	rdfs:member	"query"
s8	"query evaluation"	rdfs:subClassOf	"evaluation"
s7.2	"varying the size of the bloom filters"
s7.2	"varying the size of the bloom filters"	rdf:subject	"size of the bloom filter"
s7.2	"size of the bloom filter"	rdfs:member	"size"
s7.2	"size of the bloom filter"	rdfs:member	"bloom filter"
s7.2	"bloom filter"	rdfs:subClassOf	"filter"
s7.2	"bloom filter"	rdfs:member	"bloom"
s7.2	"size of bloom filter"	rdfs:member	"size"
s7.2	"size of bloom filter"	rdfs:member	"bloom filter"
s7.2	"varying the size of the bloom filters"	rdf:predicate	"vary"
s7.1	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"
s7.1	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"result quality converge"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"approximation"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"evolution"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"arbitrary tradeoff"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"computation time"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"addition"
s7.1	"first the result quality converge with each evolution with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"level"
s7.1	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s7.1	"computation time"	rdfs:member	"computation"
s7.1	"result quality"	rdfs:member	"result"
s7.1	"quality converge"	rdfs:member	"quality"
s7.1	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s7.1	"result quality converge"	rdfs:subClassOf	"converge"
s7.1	"result quality"	rdfs:subClassOf	"quality"
s7.1	"result quality converge"	rdfs:member	"result quality"
s7.1	"quality converge"	rdfs:subClassOf	"converge"
s7.1	"computation time"	rdfs:subClassOf	"time"
s7.1	"converge with evolution"	rdfs:member	"converge"
s7.1	"converge with evolution"	rdfs:member	"evolution"
s7.1	"evolution with arbitrary tradeoff"	rdfs:member	"evolution"
s7.1	"evolution with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s7.1	"converge with evolution between computation time"	rdfs:member	"converge with evolution"
s7.1	"converge with evolution between computation time"	rdfs:member	"computation time"
s7.1	"computation time in addition"	rdfs:member	"computation time"
s7.1	"computation time in addition"	rdfs:member	"addition"
s7.1	"level of approximation"	rdfs:member	"level"
s7.1	"level of approximation"	rdfs:member	"approximation"
s7.1	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:predicate	"tune"
s7.1	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MNR	"vary the size of the bloom filter"
s7.1	"vary the size of the bloom filter"	rdfs:member	"size"
s7.1	"vary the size of the bloom filter"	rdfs:member	"bloom filter"
s7.1	"bloom filter"	rdfs:subClassOf	"filter"
s7.1	"bloom filter"	rdfs:member	"bloom"
s7.1	"size of bloom filter"	rdfs:member	"size"
s7.1	"size of bloom filter"	rdfs:member	"bloom filter"
s7.1	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MOD	"can"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality"
s7	"result quality"	rdfs:member	"result"
s7	"result quality"	rdfs:subClassOf	"quality"
s7	"first result"	rdfs:subClassOf	"result"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:predicate	"converge"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:object	"evolution"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	local:AM-MNR	"arbitrary tradeoff"
s7	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s7	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	local:AM-MNR	"addition the level of approximation can be tune by vary the size of the bloom filter"
s7	"addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"approximation"
s7	"addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"bloom filter"
s7	"addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"size"
s7	"addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"addition"
s7	"addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"level"
s7	"bloom filter"	rdfs:subClassOf	"filter"
s7	"bloom filter"	rdfs:member	"bloom"
s7	"can tune"	rdfs:subClassOf	"tune"
s7	"level of approximation"	rdfs:member	"level"
s7	"level of approximation"	rdfs:member	"approximation"
s7	"size of bloom filter"	rdfs:member	"size"
s7	"size of bloom filter"	rdfs:member	"bloom filter"
s7	"first the result quality converges with each evolution with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	local:AM-TMP	"computation time"
s7	"computation time"	rdfs:member	"computation"
s7	"computation time"	rdfs:subClassOf	"time"
s6.1	"varying the size of the bloom filters"
s6.1	"varying the size of the bloom filters"	rdf:subject	"size of the bloom filter"
s6.1	"size of the bloom filter"	rdfs:member	"size"
s6.1	"size of the bloom filter"	rdfs:member	"bloom filter"
s6.1	"bloom filter"	rdfs:subClassOf	"filter"
s6.1	"bloom filter"	rdfs:member	"bloom"
s6.1	"size of bloom filter"	rdfs:member	"size"
s6.1	"size of bloom filter"	rdfs:member	"bloom filter"
s6.1	"varying the size of the bloom filters"	rdf:predicate	"vary"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:subject	"level of approximation"
s6	"level of approximation"	rdfs:member	"approximation"
s6	"level of approximation"	rdfs:member	"level"
s6	"level of approximation"	rdfs:member	"level"
s6	"level of approximation"	rdfs:member	"approximation"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:predicate	"tune"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-ADV	"first the result quality increase monotonically in addition"
s6	"first the result quality increase monotonically in addition"	rdfs:member	"result quality increase"
s6	"first the result quality increase monotonically in addition"	rdfs:member	"addition"
s6	"result quality"	rdfs:member	"result"
s6	"quality increase"	rdfs:member	"quality"
s6	"result quality increase"	rdfs:subClassOf	"increase"
s6	"result quality"	rdfs:subClassOf	"quality"
s6	"result quality increase"	rdfs:member	"result quality"
s6	"quality increase"	rdfs:subClassOf	"increase"
s6	"monotonically increase"	rdfs:subClassOf	"increase"
s6	"quality monotonically increase"	rdfs:subClassOf	"monotonically increase"
s6	"first result"	rdfs:subClassOf	"result"
s6	"quality monotonically increase in addition"	rdfs:member	"quality monotonically increase"
s6	"quality monotonically increase in addition"	rdfs:member	"addition"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MNR	"vary the size of the bloom filter"
s6	"vary the size of the bloom filter"	rdfs:member	"size"
s6	"vary the size of the bloom filter"	rdfs:member	"bloom filter"
s6	"bloom filter"	rdfs:subClassOf	"filter"
s6	"bloom filter"	rdfs:member	"bloom"
s6	"size of bloom filter"	rdfs:member	"size"
s6	"size of bloom filter"	rdfs:member	"bloom filter"
s6	"first the result quality increases monotonically in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MOD	"can"
s5.2	"varying the size of the bloom filters"
s5.2	"varying the size of the bloom filters"	rdf:subject	"size of the bloom filter"
s5.2	"size of the bloom filter"	rdfs:member	"size"
s5.2	"size of the bloom filter"	rdfs:member	"bloom filter"
s5.2	"bloom filter"	rdfs:subClassOf	"filter"
s5.2	"bloom filter"	rdfs:member	"bloom"
s5.2	"size of bloom filter"	rdfs:member	"size"
s5.2	"size of bloom filter"	rdfs:member	"bloom filter"
s5.2	"varying the size of the bloom filters"	rdf:predicate	"vary"
s5.1	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"
s5.1	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"query result"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"result quality converge"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"approximation"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"evolution"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"arbitrary tradeoff"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"addition"
s5.1	"first the result quality converge with each evolution with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"level"
s5.1	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s5.1	"result quality"	rdfs:member	"result"
s5.1	"quality converge"	rdfs:member	"quality"
s5.1	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s5.1	"result quality"	rdfs:subClassOf	"quality"
s5.1	"result quality converge"	rdfs:subClassOf	"converge"
s5.1	"result quality converge"	rdfs:member	"result quality"
s5.1	"query result"	rdfs:member	"query"
s5.1	"quality converge"	rdfs:subClassOf	"converge"
s5.1	"query result"	rdfs:subClassOf	"result"
s5.1	"converge with evolution"	rdfs:member	"converge"
s5.1	"converge with evolution"	rdfs:member	"evolution"
s5.1	"evolution with arbitrary tradeoff"	rdfs:member	"evolution"
s5.1	"evolution with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s5.1	"converge with evolution between query result"	rdfs:member	"converge with evolution"
s5.1	"converge with evolution between query result"	rdfs:member	"query result"
s5.1	"query result in addition"	rdfs:member	"query result"
s5.1	"query result in addition"	rdfs:member	"addition"
s5.1	"level of approximation"	rdfs:member	"level"
s5.1	"level of approximation"	rdfs:member	"approximation"
s5.1	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:predicate	"tune"
s5.1	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MNR	"vary the size of the bloom filter"
s5.1	"vary the size of the bloom filter"	rdfs:member	"size"
s5.1	"vary the size of the bloom filter"	rdfs:member	"bloom filter"
s5.1	"bloom filter"	rdfs:subClassOf	"filter"
s5.1	"bloom filter"	rdfs:member	"bloom"
s5.1	"size of bloom filter"	rdfs:member	"size"
s5.1	"size of bloom filter"	rdfs:member	"bloom filter"
s5.1	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MOD	"can"
s5	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"
s5	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality"
s5	"result quality"	rdfs:member	"result"
s5	"result quality"	rdfs:subClassOf	"quality"
s5	"first result"	rdfs:subClassOf	"result"
s5	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:predicate	"converge"
s5	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:object	"evolution"
s5	"first the result quality converges with each evolution with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	local:AM-MNR	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"query result"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"approximation"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"arbitrary tradeoff"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"bloom filter"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"size"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"addition"
s5	"arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"level"
s5	"bloom filter"	rdfs:member	"bloom"
s5	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s5	"bloom filter"	rdfs:subClassOf	"filter"
s5	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s5	"query result"	rdfs:member	"query"
s5	"query result"	rdfs:subClassOf	"result"
s5	"tune tradeoff"	rdfs:subClassOf	"tradeoff"
s5	"can tune"	rdfs:subClassOf	"tune"
s5	"arbitrary tune tradeoff"	rdfs:subClassOf	"tune tradeoff"
s5	"can tune between query result"	rdfs:member	"can tune"
s5	"can tune between query result"	rdfs:member	"query result"
s5	"can tune between query result in addition"	rdfs:member	"can tune between query result"
s5	"can tune between query result in addition"	rdfs:member	"addition"
s5	"level of approximation"	rdfs:member	"level"
s5	"level of approximation"	rdfs:member	"approximation"
s5	"size of bloom filter"	rdfs:member	"size"
s5	"size of bloom filter"	rdfs:member	"bloom filter"
s4.3	"varying the size of the bloom filters"
s4.3	"varying the size of the bloom filters"	rdf:subject	"size of the bloom filter"
s4.3	"size of the bloom filter"	rdfs:member	"size"
s4.3	"size of the bloom filter"	rdfs:member	"bloom filter"
s4.3	"bloom filter"	rdfs:subClassOf	"filter"
s4.3	"bloom filter"	rdfs:member	"bloom"
s4.3	"size of bloom filter"	rdfs:member	"size"
s4.3	"size of bloom filter"	rdfs:member	"bloom filter"
s4.3	"varying the size of the bloom filters"	rdf:predicate	"vary"
s4.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"
s4.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"query result"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"result quality converge"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"offer"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"approximation"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"arbitrary tradeoff"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"addition"
s4.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation"	rdfs:member	"level"
s4.2	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s4.2	"result quality"	rdfs:member	"result"
s4.2	"quality converge"	rdfs:member	"quality"
s4.2	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s4.2	"result quality"	rdfs:subClassOf	"quality"
s4.2	"result quality converge"	rdfs:subClassOf	"converge"
s4.2	"result quality converge"	rdfs:member	"result quality"
s4.2	"query result"	rdfs:member	"query"
s4.2	"quality converge"	rdfs:subClassOf	"converge"
s4.2	"query result"	rdfs:subClassOf	"result"
s4.2	"anytime behaviour"	rdfs:subClassOf	"behaviour"
s4.2	"converge with offer"	rdfs:member	"converge"
s4.2	"converge with offer"	rdfs:member	"offer"
s4.2	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"anytime behaviour"
s4.2	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s4.2	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"anytime behaviour with arbitrary tradeoff"
s4.2	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"query result"
s4.2	"query result in addition"	rdfs:member	"query result"
s4.2	"query result in addition"	rdfs:member	"addition"
s4.2	"level of approximation"	rdfs:member	"level"
s4.2	"level of approximation"	rdfs:member	"approximation"
s4.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:predicate	"tune"
s4.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MNR	"vary the size of the bloom filter"
s4.2	"vary the size of the bloom filter"	rdfs:member	"size"
s4.2	"vary the size of the bloom filter"	rdfs:member	"bloom filter"
s4.2	"bloom filter"	rdfs:subClassOf	"filter"
s4.2	"bloom filter"	rdfs:member	"bloom"
s4.2	"size of bloom filter"	rdfs:member	"size"
s4.2	"size of bloom filter"	rdfs:member	"bloom filter"
s4.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MOD	"can"
s4.1	"offering anytime behaviour with arbitrary tradeoff between query results"
s4.1	"offering anytime behaviour with arbitrary tradeoff between query results"	rdf:subject	"anytime behaviour with arbitrary tradeoff between query result"
s4.1	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"anytime behaviour"
s4.1	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"arbitrary tradeoff"
s4.1	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"query result"
s4.1	"anytime behaviour"	rdfs:member	"anytime"
s4.1	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s4.1	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s4.1	"anytime behaviour"	rdfs:subClassOf	"behaviour"
s4.1	"query result"	rdfs:member	"query"
s4.1	"query result"	rdfs:subClassOf	"result"
s4.1	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"anytime behaviour"
s4.1	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s4.1	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"anytime behaviour with arbitrary tradeoff"
s4.1	"anytime behaviour with arbitrary tradeoff between query result"	rdfs:member	"query result"
s4.1	"offering anytime behaviour with arbitrary tradeoff between query results"	rdf:predicate	"offer"
s4	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"
s4	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality"
s4	"result quality"	rdfs:member	"result"
s4	"result quality"	rdfs:subClassOf	"quality"
s4	"first result"	rdfs:subClassOf	"result"
s4	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:predicate	"converge"
s4	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between query results in addition the level of approximation can be tuned by varying the size of the bloom filters"	local:AM-MNR	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"query result"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"offer"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"approximation"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"arbitrary tradeoff"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"bloom filter"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"size"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"addition"
s4	"offer anytime behaviour with arbitrary tradeoff between query result in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"level"
s4	"bloom filter"	rdfs:member	"bloom"
s4	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s4	"bloom filter"	rdfs:subClassOf	"filter"
s4	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s4	"query result"	rdfs:member	"query"
s4	"query result"	rdfs:subClassOf	"result"
s4	"tune behaviour"	rdfs:subClassOf	"behaviour"
s4	"can tune"	rdfs:subClassOf	"tune"
s4	"anytime tune behaviour"	rdfs:subClassOf	"tune behaviour"
s4	"offer anytime tune behaviour"	rdfs:subClassOf	"anytime tune behaviour"
s4	"offer anytime tune behaviour with arbitrary tradeoff"	rdfs:member	"offer anytime tune behaviour"
s4	"offer anytime tune behaviour with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s4	"can tune between query result"	rdfs:member	"can tune"
s4	"can tune between query result"	rdfs:member	"query result"
s4	"can tune between query result in addition"	rdfs:member	"can tune between query result"
s4	"can tune between query result in addition"	rdfs:member	"addition"
s4	"level of approximation"	rdfs:member	"level"
s4	"level of approximation"	rdfs:member	"approximation"
s4	"size of bloom filter"	rdfs:member	"size"
s4	"size of bloom filter"	rdfs:member	"bloom filter"
s3.3	"varying the size of the bloom filters"
s3.3	"varying the size of the bloom filters"	rdf:subject	"size of the bloom filter"
s3.3	"size of the bloom filter"	rdfs:member	"size"
s3.3	"size of the bloom filter"	rdfs:member	"bloom filter"
s3.3	"bloom filter"	rdfs:subClassOf	"filter"
s3.3	"bloom filter"	rdfs:member	"bloom"
s3.3	"size of bloom filter"	rdfs:member	"size"
s3.3	"size of bloom filter"	rdfs:member	"bloom filter"
s3.3	"varying the size of the bloom filters"	rdf:predicate	"vary"
s3.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"
s3.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"result quality converge"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"offer"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"approximation"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"arbitrary tradeoff"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"computation time"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"addition"
s3.2	"first the result quality converge with offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation"	rdfs:member	"level"
s3.2	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s3.2	"computation time"	rdfs:member	"computation"
s3.2	"result quality"	rdfs:member	"result"
s3.2	"quality converge"	rdfs:member	"quality"
s3.2	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s3.2	"result quality converge"	rdfs:subClassOf	"converge"
s3.2	"result quality"	rdfs:subClassOf	"quality"
s3.2	"result quality converge"	rdfs:member	"result quality"
s3.2	"quality converge"	rdfs:subClassOf	"converge"
s3.2	"computation time"	rdfs:subClassOf	"time"
s3.2	"anytime behaviour"	rdfs:subClassOf	"behaviour"
s3.2	"converge with offer"	rdfs:member	"converge"
s3.2	"converge with offer"	rdfs:member	"offer"
s3.2	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"anytime behaviour"
s3.2	"anytime behaviour with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s3.2	"anytime behaviour with arbitrary tradeoff between computation time"	rdfs:member	"anytime behaviour with arbitrary tradeoff"
s3.2	"anytime behaviour with arbitrary tradeoff between computation time"	rdfs:member	"computation time"
s3.2	"computation time in addition"	rdfs:member	"computation time"
s3.2	"computation time in addition"	rdfs:member	"addition"
s3.2	"level of approximation"	rdfs:member	"level"
s3.2	"level of approximation"	rdfs:member	"approximation"
s3.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	rdf:predicate	"tune"
s3.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MNR	"vary the size of the bloom filter"
s3.2	"vary the size of the bloom filter"	rdfs:member	"size"
s3.2	"vary the size of the bloom filter"	rdfs:member	"bloom filter"
s3.2	"bloom filter"	rdfs:subClassOf	"filter"
s3.2	"bloom filter"	rdfs:member	"bloom"
s3.2	"size of bloom filter"	rdfs:member	"size"
s3.2	"size of bloom filter"	rdfs:member	"bloom filter"
s3.2	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can tuned by varying the size of the bloom filters"	local:AM-MOD	"can"
s3.1	"offering anytime behaviour"
s3.1	"offering anytime behaviour"	rdf:subject	"anytime behaviour"
s3.1	"anytime behaviour"	rdfs:subClassOf	"behaviour"
s3.1	"anytime behaviour"	rdfs:member	"anytime"
s3.1	"offering anytime behaviour"	rdf:predicate	"offer"
s3	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"
s3	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:subject	"first the result quality"
s3	"result quality"	rdfs:member	"result"
s3	"result quality"	rdfs:subClassOf	"quality"
s3	"first result"	rdfs:subClassOf	"result"
s3	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:predicate	"converge"
s3	"first the result quality converges with offering anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tuned by varying the size of the bloom filters"	rdf:object	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"offer"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"approximation"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"arbitrary tradeoff"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"computation time"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"bloom filter"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"size"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"addition"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time in addition the level of approximation can be tune by vary the size of the bloom filter"	rdfs:member	"level"
s3	"bloom filter"	rdfs:member	"bloom"
s3	"computation time"	rdfs:member	"computation"
s3	"arbitrary tradeoff"	rdfs:member	"arbitrary"
s3	"bloom filter"	rdfs:subClassOf	"filter"
s3	"arbitrary tradeoff"	rdfs:subClassOf	"tradeoff"
s3	"computation time"	rdfs:subClassOf	"time"
s3	"can tune"	rdfs:subClassOf	"tune"
s3	"anytime behaviour"	rdfs:subClassOf	"behaviour"
s3	"offer anytime behaviour"	rdfs:subClassOf	"anytime behaviour"
s3	"offer anytime behaviour with arbitrary tradeoff"	rdfs:member	"offer anytime behaviour"
s3	"offer anytime behaviour with arbitrary tradeoff"	rdfs:member	"arbitrary tradeoff"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time"	rdfs:member	"offer anytime behaviour with arbitrary tradeoff"
s3	"offer anytime behaviour with arbitrary tradeoff between computation time"	rdfs:member	"computation time"
s3	"computation time in addition"	rdfs:member	"computation time"
s3	"computation time in addition"	rdfs:member	"addition"
s3	"level of approximation"	rdfs:member	"level"
s3	"level of approximation"	rdfs:member	"approximation"
s3	"size of bloom filter"	rdfs:member	"size"
s3	"size of bloom filter"	rdfs:member	"bloom filter"
s2	"we evolutionary approach has several advantages compared to traditional databasestyle query answering"
s2	"we evolutionary approach has several advantages compared to traditional databasestyle query answering"	rdf:subject	"evolutionary approach"
s2	"evolutionary approach"	rdfs:member	"evolutionary"
s2	"evolutionary approach"	rdfs:subClassOf	"approach"
s2	"we evolutionary approach has several advantages compared to traditional databasestyle query answering"	rdf:predicate	"have"
s2	"we evolutionary approach has several advantages compared to traditional databasestyle query answering"	rdf:object	"several advantage compare to traditional databasestyle query answer"
s2	"several advantage compare to traditional databasestyle query answer"	rdfs:member	"traditional databasestyle query answer"
s2	"several advantage compare to traditional databasestyle query answer"	rdfs:member	"several advantage compare"
s2	"several advantage compare"	rdfs:member	"several advantage"
s2	"databasestyle query"	rdfs:subClassOf	"query"
s2	"query answer"	rdfs:member	"query"
s2	"traditional databasestyle query answer"	rdfs:member	"traditional databasestyle query"
s2	"traditional databasestyle"	rdfs:subClassOf	"databasestyle"
s2	"advantage compare"	rdfs:subClassOf	"compare"
s2	"databasestyle query answer"	rdfs:member	"databasestyle query"
s2	"databasestyle query answer"	rdfs:subClassOf	"answer"
s2	"several advantage"	rdfs:member	"several"
s2	"advantage compare"	rdfs:member	"advantage"
s2	"several advantage compare"	rdfs:subClassOf	"compare"
s2	"databasestyle query"	rdfs:member	"databasestyle"
s2	"query answer"	rdfs:subClassOf	"answer"
s2	"several advantage"	rdfs:subClassOf	"advantage"
s2	"traditional databasestyle query"	rdfs:member	"traditional databasestyle"
s2	"traditional databasestyle query"	rdfs:subClassOf	"query"
s2	"traditional databasestyle query answer"	rdfs:subClassOf	"answer"
s2	"traditional databasestyle"	rdfs:member	"traditional"
s2	"databasestyle query answer"	rdfs:subClassOf	"query answer"
s2	"traditional databasestyle query answer"	rdfs:subClassOf	"databasestyle query answer"
s2	"compare to traditional databasestyle query answer"	rdfs:member	"compare"
s2	"compare to traditional databasestyle query answer"	rdfs:member	"traditional databasestyle query answer"
s1.1	"an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"
s1.1	"an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:subject	"evolutionary search algorithm"
s1.1	"search algorithm"	rdfs:subClassOf	"algorithm"
s1.1	"search algorithm"	rdfs:member	"search"
s1.1	"evolutionary search algorithm"	rdfs:member	"evolutionary search"
s1.1	"evolutionary search"	rdfs:member	"evolutionary"
s1.1	"evolutionary search"	rdfs:subClassOf	"search"
s1.1	"evolutionary search algorithm"	rdfs:subClassOf	"algorithm"
s1.1	"evolutionary search algorithm"	rdfs:subClassOf	"search algorithm"
s1.1	"an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:predicate	"use"
s1.1	"an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:object	"fingerprint for rapid approximate evaluation of generate solution"
s1.1	"fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"generate solution"
s1.1	"fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"rapid approximate evaluation"
s1.1	"fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"fingerprint"
s1.1	"approximate evaluation"	rdfs:member	"approximate"
s1.1	"approximate evaluation"	rdfs:subClassOf	"evaluation"
s1.1	"rapid approximate evaluation"	rdfs:subClassOf	"evaluation"
s1.1	"rapid approximate"	rdfs:subClassOf	"approximate"
s1.1	"generate solution"	rdfs:member	"generate"
s1.1	"generate solution"	rdfs:subClassOf	"solution"
s1.1	"rapid approximate"	rdfs:member	"rapid"
s1.1	"rapid approximate evaluation"	rdfs:member	"rapid approximate"
s1.1	"rapid approximate evaluation"	rdfs:subClassOf	"approximate evaluation"
s1.1	"fingerprint for rapid approximate evaluation"	rdfs:member	"fingerprint"
s1.1	"fingerprint for rapid approximate evaluation"	rdfs:member	"rapid approximate evaluation"
s1	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"
s1	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:subject	"we"
s1	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:predicate	"present"
s1	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	rdf:object	"technique for answer query over rdf data"
s1	"technique for answer query over rdf data"	rdfs:member	"technique"
s1	"technique for answer query over rdf data"	rdfs:member	"rdf data"
s1	"technique for answer query over rdf data"	rdfs:member	"answer query"
s1	"answer query"	rdfs:member	"answer"
s1	"rdf data"	rdfs:subClassOf	"data"
s1	"rdf data"	rdfs:member	"rdf"
s1	"answer query"	rdfs:subClassOf	"query"
s1	"technique for answer query"	rdfs:member	"technique"
s1	"technique for answer query"	rdfs:member	"answer query"
s1	"technique for answer query over rdf data"	rdfs:member	"technique for answer query"
s1	"technique for answer query over rdf data"	rdfs:member	"rdf data"
s1	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using fingerprinting for rapid approximate evaluation of generated solutions"	local:AM-MNR	"evolutionary search algorithm use fingerprint for rapid approximate evaluation of generate solution"
s1	"evolutionary search algorithm use fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"generate solution"
s1	"evolutionary search algorithm use fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"rapid approximate evaluation"
s1	"evolutionary search algorithm use fingerprint for rapid approximate evaluation of generate solution"	rdfs:member	"evolutionary search algorithm use fingerprint"
s1	"search algorithm"	rdfs:subClassOf	"algorithm"
s1	"approximate evaluation"	rdfs:member	"approximate"
s1	"algorithm use"	rdfs:member	"algorithm"
s1	"approximate evaluation"	rdfs:subClassOf	"evaluation"
s1	"evolutionary search algorithm"	rdfs:member	"evolutionary search"
s1	"search algorithm use fingerprint"	rdfs:subClassOf	"fingerprint"
s1	"algorithm use fingerprint"	rdfs:member	"algorithm use"
s1	"search algorithm use"	rdfs:member	"search algorithm"
s1	"rapid approximate"	rdfs:member	"rapid"
s1	"evolutionary search algorithm use"	rdfs:subClassOf	"use"
s1	"search algorithm use"	rdfs:subClassOf	"use"
s1	"rapid approximate evaluation"	rdfs:subClassOf	"evaluation"
s1	"rapid approximate"	rdfs:subClassOf	"approximate"
s1	"evolutionary search algorithm use fingerprint"	rdfs:subClassOf	"fingerprint"
s1	"search algorithm use fingerprint"	rdfs:member	"search algorithm use"
s1	"use fingerprint"	rdfs:subClassOf	"fingerprint"
s1	"algorithm use"	rdfs:subClassOf	"use"
s1	"evolutionary search"	rdfs:subClassOf	"search"
s1	"evolutionary search algorithm"	rdfs:subClassOf	"algorithm"
s1	"algorithm use fingerprint"	rdfs:subClassOf	"fingerprint"
s1	"evolutionary search algorithm use fingerprint"	rdfs:member	"evolutionary search algorithm use"
s1	"search algorithm"	rdfs:member	"search"
s1	"generate solution"	rdfs:member	"generate"
s1	"use fingerprint"	rdfs:member	"use"
s1	"evolutionary search algorithm use"	rdfs:member	"evolutionary search algorithm"
s1	"generate solution"	rdfs:subClassOf	"solution"
s1	"rapid approximate evaluation"	rdfs:member	"rapid approximate"
s1	"evolutionary search"	rdfs:member	"evolutionary"
s1	"rapid approximate evaluation"	rdfs:subClassOf	"approximate evaluation"
s1	"algorithm use fingerprint"	rdfs:subClassOf	"use fingerprint"
s1	"search algorithm use fingerprint"	rdfs:subClassOf	"algorithm use fingerprint"
s1	"evolutionary search algorithm use fingerprint"	rdfs:subClassOf	"search algorithm use fingerprint"
s1	"evolutionary search algorithm use fingerprint for rapid approximate evaluation"	rdfs:member	"evolutionary search algorithm use fingerprint"
s1	"evolutionary search algorithm use fingerprint for rapid approximate evaluation"	rdfs:member	"rapid approximate evaluation"
s0.1	"an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"
s0.1	"an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:subject	"evolutionary search algorithm"
s0.1	"search algorithm"	rdfs:subClassOf	"algorithm"
s0.1	"search algorithm"	rdfs:member	"search"
s0.1	"evolutionary search algorithm"	rdfs:member	"evolutionary search"
s0.1	"evolutionary search"	rdfs:member	"evolutionary"
s0.1	"evolutionary search"	rdfs:subClassOf	"search"
s0.1	"evolutionary search algorithm"	rdfs:subClassOf	"algorithm"
s0.1	"evolutionary search algorithm"	rdfs:subClassOf	"search algorithm"
s0.1	"an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:predicate	"use"
s0.1	"an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:object	"bloom filter rapid approximate evaluation of generate solution"
s0.1	"bloom filter rapid approximate evaluation of generate solution"	rdfs:member	"generate solution"
s0.1	"bloom filter rapid approximate evaluation of generate solution"	rdfs:member	"rapid approximate evaluation"
s0.1	"bloom filter rapid approximate evaluation of generate solution"	rdfs:member	"bloom filter"
s0.1	"approximate evaluation"	rdfs:member	"approximate"
s0.1	"bloom filter"	rdfs:member	"bloom"
s0.1	"approximate evaluation"	rdfs:subClassOf	"evaluation"
s0.1	"bloom filter"	rdfs:subClassOf	"filter"
s0.1	"rapid approximate evaluation"	rdfs:subClassOf	"evaluation"
s0.1	"rapid approximate"	rdfs:subClassOf	"approximate"
s0.1	"generate solution"	rdfs:member	"generate"
s0.1	"generate solution"	rdfs:subClassOf	"solution"
s0.1	"rapid approximate"	rdfs:member	"rapid"
s0.1	"rapid approximate evaluation"	rdfs:member	"rapid approximate"
s0.1	"rapid approximate evaluation"	rdfs:subClassOf	"approximate evaluation"
s0.1	"filter rapid approximate evaluation"	rdfs:subClassOf	"rapid approximate evaluation"
s0.1	"bloom filter rapid approximate evaluation"	rdfs:subClassOf	"filter rapid approximate evaluation"
s0	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"
s0	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:subject	"we"
s0	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:predicate	"present"
s0	"we present a technique for answering queries over rdf data through an evolutionary search algorithm using bloom filters for rapid approximate evaluation of generated solutions"	rdf:object	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"generate solution"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"evolutionary search algorithm use bloom filter"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"answer query"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"rdf data"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"technique"
s0	"technique for answer query over rdf data through an evolutionary search algorithm use bloom filter for rapid approximate evaluation of generate solution"	rdfs:member	"rapid approximate evaluation"
s0	"search algorithm"	rdfs:subClassOf	"algorithm"
s0	"approximate evaluation"	rdfs:member	"approximate"
s0	"algorithm use"	rdfs:member	"algorithm"
s0	"evolutionary search algorithm use bloom filter"	rdfs:member	"evolutionary search algorithm use bloom"
s0	"approximate evaluation"	rdfs:subClassOf	"evaluation"
s0	"evolutionary search algorithm"	rdfs:member	"evolutionary search"
s0	"use bloom"	rdfs:subClassOf	"bloom"
s0	"algorithm use bloom"	rdfs:member	"algorithm use"
s0	"search algorithm use"	rdfs:member	"search algorithm"
s0	"search algorithm use bloom filter"	rdfs:subClassOf	"filter"
s0	"rapid approximate"	rdfs:member	"rapid"
s0	"evolutionary search algorithm use"	rdfs:subClassOf	"use"
s0	"bloom filter"	rdfs:member	"bloom"
s0	"search algorithm use"	rdfs:subClassOf	"use"
s0	"rdf data"	rdfs:subClassOf	"data"
s0	"rapid approximate evaluation"	rdfs:subClassOf	"evaluation"
s0	"rapid approximate"	rdfs:subClassOf	"approximate"
s0	"search algorithm use bloom"	rdfs:member	"search algorithm use"
s0	"search algorithm use bloom"	rdfs:subClassOf	"bloom"
s0	"answer query"	rdfs:member	"answer"
s0	"algorithm use bloom filter"	rdfs:subClassOf	"filter"
s0	"search algorithm use bloom filter"	rdfs:member	"search algorithm use bloom"
s0	"rdf data"	rdfs:member	"rdf"
s0	"algorithm use"	rdfs:subClassOf	"use"
s0	"evolutionary search"	rdfs:subClassOf	"search"
s0	"algorithm use bloom filter"	rdfs:member	"algorithm use bloom"
s0	"use bloom filter"	rdfs:subClassOf	"filter"
s0	"evolutionary search algorithm"	rdfs:subClassOf	"algorithm"
s0	"evolutionary search algorithm use bloom"	rdfs:member	"evolutionary search algorithm use"
s0	"evolutionary search algorithm use bloom"	rdfs:subClassOf	"bloom"
s0	"search algorithm"	rdfs:member	"search"
s0	"bloom filter"	rdfs:subClassOf	"filter"
s0	"algorithm use bloom"	rdfs:subClassOf	"bloom"
s0	"use bloom filter"	rdfs:member	"use bloom"
s0	"answer query"	rdfs:subClassOf	"query"
s0	"generate solution"	rdfs:member	"generate"
s0	"use bloom"	rdfs:member	"use"
s0	"evolutionary search algorithm use"	rdfs:member	"evolutionary search algorithm"
s0	"generate solution"	rdfs:subClassOf	"solution"
s0	"rapid approximate evaluation"	rdfs:member	"rapid approximate"
s0	"evolutionary search"	rdfs:member	"evolutionary"
s0	"evolutionary search algorithm use bloom filter"	rdfs:subClassOf	"filter"
s0	"rapid approximate evaluation"	rdfs:subClassOf	"approximate evaluation"
s0	"use bloom filter"	rdfs:subClassOf	"bloom filter"
s0	"algorithm use bloom filter"	rdfs:subClassOf	"use bloom filter"
s0	"search algorithm use bloom filter"	rdfs:subClassOf	"algorithm use bloom filter"
s0	"evolutionary search algorithm use bloom filter"	rdfs:subClassOf	"search algorithm use bloom filter"
s0	"technique for answer query"	rdfs:member	"technique"
s0	"technique for answer query"	rdfs:member	"answer query"
s0	"technique for answer query over rdf data"	rdfs:member	"technique for answer query"
s0	"technique for answer query over rdf data"	rdfs:member	"rdf data"
s0	"technique for answer query over rdf data through evolutionary search algorithm use bloom filter"	rdfs:member	"technique for answer query over rdf data"
s0	"technique for answer query over rdf data through evolutionary search algorithm use bloom filter"	rdfs:member	"evolutionary search algorithm use bloom filter"
s0	"evolutionary search algorithm use bloom filter for rapid approximate evaluation"	rdfs:member	"evolutionary search algorithm use bloom filter"
s0	"evolutionary search algorithm use bloom filter for rapid approximate evaluation"	rdfs:member	"rapid approximate evaluation"
