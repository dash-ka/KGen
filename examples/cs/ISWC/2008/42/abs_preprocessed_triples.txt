s12.1	"in this context our measure outperforms the classical semantic measures"
s12.1	"in this context our measure outperforms the classical semantic measures"	rdf:subject	"measure"
s12.1	"in this context our measure outperforms the classical semantic measures"	rdf:predicate	"outperform"
s12.1	"in this context our measure outperforms the classical semantic measures"	rdf:object	"classical semantic measure"
s12.1	"semantic measure"	rdfs:member	"semantic"
s12.1	"classical semantic"	rdfs:member	"classical"
s12.1	"classical semantic"	rdfs:subClassOf	"semantic"
s12.1	"classical semantic measure"	rdfs:member	"classical semantic"
s12.1	"semantic measure"	rdfs:subClassOf	"measure"
s12.1	"classical semantic measure"	rdfs:subClassOf	"measure"
s12.1	"classical semantic measure"	rdfs:subClassOf	"semantic measure"
s12.1	"in this context our measure outperforms the classical semantic measures"	local:AM-MNR	"context"
s12	"we show that in this context our measure outperforms the classical semantic measures"
s12	"we show that in this context our measure outperforms the classical semantic measures"	rdf:subject	"we"
s12	"we show that in this context our measure outperforms the classical semantic measures"	rdf:predicate	"show"
s12	"we show that in this context our measure outperforms the classical semantic measures"	rdf:object	"context our measure outperform the classical semantic measure"
s12	"context our measure outperform the classical semantic measure"	rdfs:member	"classical semantic measure"
s12	"context our measure outperform the classical semantic measure"	rdfs:member	"measure"
s12	"semantic measure"	rdfs:member	"semantic"
s12	"classical semantic"	rdfs:member	"classical"
s12	"classical semantic"	rdfs:subClassOf	"semantic"
s12	"classical semantic measure"	rdfs:member	"classical semantic"
s12	"semantic measure"	rdfs:subClassOf	"measure"
s12	"classical semantic measure"	rdfs:subClassOf	"measure"
s12	"classical semantic measure"	rdfs:subClassOf	"semantic measure"
s12	"our measure"	rdfs:subClassOf	"measure"
s12	"context outperform"	rdfs:subClassOf	"outperform"
s11.1	"an evaluation of we measure on the lexical base wordnet"
s11.1	"an evaluation of we measure on the lexical base wordnet"	rdf:subject	"evaluation of we"
s11.1	"evaluation of we"	rdfs:member	"evaluation"
s11.1	"evaluation of we"	rdfs:member	"we"
s11.1	"an evaluation of we measure on the lexical base wordnet"	rdf:predicate	"measure"
s11.1	"an evaluation of we measure on the lexical base wordnet"	rdf:object	"lexical base wordnet"
s11.1	"base wordnet"	rdfs:member	"base"
s11.1	"lexical base wordnet"	rdfs:member	"lexical base"
s11.1	"base wordnet"	rdfs:subClassOf	"wordnet"
s11.1	"lexical base wordnet"	rdfs:subClassOf	"wordnet"
s11.1	"lexical base"	rdfs:member	"lexical"
s11.1	"lexical base"	rdfs:subClassOf	"base"
s11.1	"lexical base wordnet"	rdfs:subClassOf	"base wordnet"
s11	"we propose an evaluation of we measure on the lexical base wordnet"
s11	"we propose an evaluation of we measure on the lexical base wordnet"	rdf:subject	"we"
s11	"we propose an evaluation of we measure on the lexical base wordnet"	rdf:predicate	"propose"
s11	"we propose an evaluation of we measure on the lexical base wordnet"	rdf:object	"evaluation of we measure on the lexical base wordnet"
s11	"evaluation of we measure on the lexical base wordnet"	rdfs:member	"evaluation"
s11	"evaluation of we measure on the lexical base wordnet"	rdfs:member	"lexical base wordnet"
s11	"base wordnet"	rdfs:member	"base"
s11	"lexical base wordnet"	rdfs:member	"lexical base"
s11	"base wordnet"	rdfs:subClassOf	"wordnet"
s11	"lexical base wordnet"	rdfs:subClassOf	"wordnet"
s11	"lexical base"	rdfs:member	"lexical"
s11	"lexical base"	rdfs:subClassOf	"base"
s11	"lexical base wordnet"	rdfs:subClassOf	"base wordnet"
s11	"measure on lexical base wordnet"	rdfs:member	"measure"
s11	"measure on lexical base wordnet"	rdfs:member	"lexical base wordnet"
s10	"the lexical base wordnet using partof relation with two different benchmarks"
s10	"the lexical base wordnet using partof relation with two different benchmarks"	rdf:subject	"lexical base wordnet"
s10	"base wordnet"	rdfs:member	"base"
s10	"lexical base wordnet"	rdfs:member	"lexical base"
s10	"base wordnet"	rdfs:subClassOf	"wordnet"
s10	"lexical base wordnet"	rdfs:subClassOf	"wordnet"
s10	"lexical base"	rdfs:member	"lexical"
s10	"lexical base"	rdfs:subClassOf	"base"
s10	"lexical base wordnet"	rdfs:subClassOf	"base wordnet"
s10	"the lexical base wordnet using partof relation with two different benchmarks"	rdf:predicate	"use"
s10	"the lexical base wordnet using partof relation with two different benchmarks"	rdf:object	"partof relation with two different benchmark"
s10	"partof relation with two different benchmark"	rdfs:member	"different benchmark"
s10	"partof relation with two different benchmark"	rdfs:member	"partof relation"
s10	"different benchmark"	rdfs:subClassOf	"benchmark"
s10	"partof relation"	rdfs:member	"partof"
s10	"partof relation"	rdfs:subClassOf	"relation"
s10	"different benchmark"	rdfs:member	"different"
s10	"two different benchmark"	rdfs:subClassOf	"different benchmark"
s10	"partof relation with two different benchmark"	rdfs:member	"partof relation"
s10	"partof relation with two different benchmark"	rdfs:member	"two different benchmark"
s9.3	"a cost represented as a weight"
s9.3	"a cost represented as a weight"	rdf:subject	"cost"
s9.3	"a cost represented as a weight"	rdf:predicate	"represent"
s9.3	"a cost represented as a weight"	local:AM-MNR	"weight"
s9.2	"a given edge in a path has a cost represented as a weight"
s9.2	"a given edge in a path has a cost represented as a weight"	rdf:subject	"give edge in a path"
s9.2	"give edge in a path"	rdfs:member	"edge"
s9.2	"give edge in a path"	rdfs:member	"path"
s9.2	"give in path"	rdfs:member	"give"
s9.2	"give in path"	rdfs:member	"path"
s9.2	"a given edge in a path has a cost represented as a weight"	rdf:predicate	"have"
s9.2	"a given edge in a path has a cost represented as a weight"	rdf:object	"cost represent a a weight"
s9.2	"cost represent a a weight"	rdfs:member	"weight"
s9.2	"cost represent a a weight"	rdfs:member	"cost"
s9.1	"given edge"
s9.1	"given edge"	rdf:subject	"edge"
s9.1	"given edge"	rdf:predicate	"give"
s9	"following a given edge in a path has a cost represented as a weight"
s9	"following a given edge in a path has a cost represented as a weight"	rdf:predicate	"follow"
s9	"following a given edge in a path has a cost represented as a weight"	rdf:object	"give edge in a path have a cost represent a a weight"
s9	"give edge in a path have a cost represent a a weight"	rdfs:member	"edge"
s9	"give edge in a path have a cost represent a a weight"	rdfs:member	"path"
s9	"give edge in a path have a cost represent a a weight"	rdfs:member	"weight"
s9	"give edge in a path have a cost represent a a weight"	rdfs:member	"cost represent"
s9	"cost represent"	rdfs:member	"cost"
s9	"cost represent"	rdfs:subClassOf	"represent"
s9	"have represent"	rdfs:subClassOf	"represent"
s9	"give in path"	rdfs:member	"give"
s9	"give in path"	rdfs:member	"path"
s8.2	"given edge"
s8.2	"given edge"	rdf:subject	"edge"
s8.2	"given edge"	rdf:predicate	"give"
s8.1	"a weight which depends on a given edge in a path context in the ontology"
s8.1	"a weight which depends on a given edge in a path context in the ontology"	rdf:subject	"weight"
s8.1	"a weight which depends on a given edge in a path context in the ontology"	rdf:predicate	"depend"
s8.1	"a weight which depends on a given edge in a path context in the ontology"	rdf:object	"give edge in a path context in the ontology"
s8.1	"give edge in a path context in the ontology"	rdfs:member	"ontology"
s8.1	"give edge in a path context in the ontology"	rdfs:member	"edge"
s8.1	"give edge in a path context in the ontology"	rdfs:member	"path context"
s8.1	"path context"	rdfs:member	"path"
s8.1	"path context"	rdfs:subClassOf	"context"
s8.1	"give in path context"	rdfs:member	"give"
s8.1	"give in path context"	rdfs:member	"path context"
s8.1	"path context in ontology"	rdfs:member	"path context"
s8.1	"path context in ontology"	rdfs:member	"ontology"
s8	"a cost represented as a weight which depends on a given edge in a path context in the ontology"
s8	"a cost represented as a weight which depends on a given edge in a path context in the ontology"	rdf:subject	"cost"
s8	"a cost represented as a weight which depends on a given edge in a path context in the ontology"	rdf:predicate	"represent"
s8	"a cost represented as a weight which depends on a given edge in a path context in the ontology"	rdf:object	"weight which depend on a give edge in a path context in the ontology"
s8	"weight which depend on a give edge in a path context in the ontology"	rdfs:member	"give edge"
s8	"weight which depend on a give edge in a path context in the ontology"	rdfs:member	"path context"
s8	"weight which depend on a give edge in a path context in the ontology"	rdfs:member	"ontology"
s8	"weight which depend on a give edge in a path context in the ontology"	rdfs:member	"weight"
s8	"give edge"	rdfs:subClassOf	"edge"
s8	"path context"	rdfs:member	"path"
s8	"give edge"	rdfs:member	"give"
s8	"path context"	rdfs:subClassOf	"context"
s8	"depend on give edge"	rdfs:member	"depend"
s8	"depend on give edge"	rdfs:member	"give edge"
s8	"give edge in path context"	rdfs:member	"give edge"
s8	"give edge in path context"	rdfs:member	"path context"
s8	"path context in ontology"	rdfs:member	"path context"
s8	"path context in ontology"	rdfs:member	"ontology"
s7.2	"given edge"
s7.2	"given edge"	rdf:subject	"edge"
s7.2	"given edge"	rdf:predicate	"give"
s7.1	"a weight which depends on a given edge in a path type"
s7.1	"a weight which depends on a given edge in a path type"	rdf:subject	"weight"
s7.1	"a weight which depends on a given edge in a path type"	rdf:predicate	"depend"
s7.1	"a weight which depends on a given edge in a path type"	rdf:object	"give edge in a path type"
s7.1	"give edge in a path type"	rdfs:member	"edge"
s7.1	"give edge in a path type"	rdfs:member	"path type"
s7.1	"path type"	rdfs:subClassOf	"type"
s7.1	"path type"	rdfs:member	"path"
s7.1	"give in path type"	rdfs:member	"give"
s7.1	"give in path type"	rdfs:member	"path type"
s7	"a cost represented as a weight which depends on a given edge in a path type"
s7	"a cost represented as a weight which depends on a given edge in a path type"	rdf:subject	"cost"
s7	"a cost represented as a weight which depends on a given edge in a path type"	rdf:predicate	"represent"
s7	"a cost represented as a weight which depends on a given edge in a path type"	rdf:object	"weight which depend on a give edge in a path type"
s7	"weight which depend on a give edge in a path type"	rdfs:member	"give edge"
s7	"weight which depend on a give edge in a path type"	rdfs:member	"path type"
s7	"weight which depend on a give edge in a path type"	rdfs:member	"weight"
s7	"give edge"	rdfs:subClassOf	"edge"
s7	"path type"	rdfs:subClassOf	"type"
s7	"path type"	rdfs:member	"path"
s7	"give edge"	rdfs:member	"give"
s7	"depend on give edge"	rdfs:member	"depend"
s7	"depend on give edge"	rdfs:member	"give edge"
s7	"give edge in path type"	rdfs:member	"give edge"
s7	"give edge in path type"	rdfs:member	"path type"
s6.2	"given edge"
s6.2	"given edge"	rdf:subject	"edge"
s6.2	"given edge"	rdf:predicate	"give"
s6.1	"a weight which depends on a given edge in a path position in a path"
s6.1	"a weight which depends on a given edge in a path position in a path"	rdf:subject	"weight"
s6.1	"a weight which depends on a given edge in a path position in a path"	rdf:predicate	"depend"
s6.1	"a weight which depends on a given edge in a path position in a path"	rdf:object	"give edge in a path position in a path"
s6.1	"give edge in a path position in a path"	rdfs:member	"edge"
s6.1	"give edge in a path position in a path"	rdfs:member	"path"
s6.1	"give edge in a path position in a path"	rdfs:member	"path position"
s6.1	"path position"	rdfs:member	"path"
s6.1	"path position"	rdfs:subClassOf	"position"
s6.1	"give in path position"	rdfs:member	"give"
s6.1	"give in path position"	rdfs:member	"path position"
s6.1	"path position in path"	rdfs:member	"path position"
s6.1	"path position in path"	rdfs:member	"path"
s6	"a cost represented as a weight which depends on a given edge in a path position in a path"
s6	"a cost represented as a weight which depends on a given edge in a path position in a path"	rdf:subject	"cost"
s6	"a cost represented as a weight which depends on a given edge in a path position in a path"	rdf:predicate	"represent"
s6	"a cost represented as a weight which depends on a given edge in a path position in a path"	rdf:object	"weight which depend on a give edge in a path position in a path"
s6	"weight which depend on a give edge in a path position in a path"	rdfs:member	"give edge"
s6	"weight which depend on a give edge in a path position in a path"	rdfs:member	"path"
s6	"weight which depend on a give edge in a path position in a path"	rdfs:member	"weight"
s6	"weight which depend on a give edge in a path position in a path"	rdfs:member	"path position"
s6	"give edge"	rdfs:subClassOf	"edge"
s6	"path position"	rdfs:member	"path"
s6	"path position"	rdfs:subClassOf	"position"
s6	"give edge"	rdfs:member	"give"
s6	"depend on give edge"	rdfs:member	"depend"
s6	"depend on give edge"	rdfs:member	"give edge"
s6	"give edge in path position"	rdfs:member	"give edge"
s6	"give edge in path position"	rdfs:member	"path position"
s6	"path position in path"	rdfs:member	"path position"
s6	"path position in path"	rdfs:member	"path"
s5.2	"given edge"
s5.2	"given edge"	rdf:subject	"edge"
s5.2	"given edge"	rdf:predicate	"give"
s5.1	"a weight which depends on a given edge in isa partof"
s5.1	"a weight which depends on a given edge in isa partof"	rdf:subject	"weight"
s5.1	"a weight which depends on a given edge in isa partof"	rdf:predicate	"depend"
s5.1	"a weight which depends on a given edge in isa partof"	rdf:object	"give edge in isa partof"
s5.1	"give edge in isa partof"	rdfs:member	"isa partof"
s5.1	"give edge in isa partof"	rdfs:member	"edge"
s5.1	"isa partof"	rdfs:member	"isa"
s5.1	"isa partof"	rdfs:subClassOf	"partof"
s5.1	"give in isa partof"	rdfs:member	"give"
s5.1	"give in isa partof"	rdfs:member	"isa partof"
s5	"a cost represented as a weight which depends on a given edge in isa partof"
s5	"a cost represented as a weight which depends on a given edge in isa partof"	rdf:subject	"cost"
s5	"a cost represented as a weight which depends on a given edge in isa partof"	rdf:predicate	"represent"
s5	"a cost represented as a weight which depends on a given edge in isa partof"	rdf:object	"weight which depend on a give edge in isa partof"
s5	"weight which depend on a give edge in isa partof"	rdfs:member	"give edge"
s5	"weight which depend on a give edge in isa partof"	rdfs:member	"weight"
s5	"weight which depend on a give edge in isa partof"	rdfs:member	"isa partof"
s5	"give edge"	rdfs:subClassOf	"edge"
s5	"isa partof"	rdfs:member	"isa"
s5	"isa partof"	rdfs:subClassOf	"partof"
s5	"give edge"	rdfs:member	"give"
s5	"depend on give edge"	rdfs:member	"depend"
s5	"depend on give edge"	rdfs:member	"give edge"
s5	"give edge in isa partof"	rdfs:member	"give edge"
s5	"give edge in isa partof"	rdfs:member	"isa partof"
s4.4	"given set of rules"
s4.4	"given set of rules"	rdf:subject	"set"
s4.4	"given set of rules"	rdf:predicate	"give"
s4.4	"given set of rules"	rdf:object	"rule"
s4.3	"these paths obey to a given set of rules"
s4.3	"these paths obey to a given set of rules"	rdf:subject	"path"
s4.3	"these paths obey to a given set of rules"	rdf:predicate	"obey"
s4.3	"these paths obey to a given set of rules"	rdf:object	"give set of rule"
s4.3	"give set of rule"	rdfs:member	"give set"
s4.3	"give set of rule"	rdfs:member	"rule"
s4.3	"give set"	rdfs:member	"give"
s4.3	"give set"	rdfs:subClassOf	"set"
s4.3	"set of rule"	rdfs:member	"set"
s4.3	"set of rule"	rdfs:member	"rule"
s4.2	"firstly using only object properties only a few paths semantically corrects"
s4.2	"firstly using only object properties only a few paths semantically corrects"	rdf:predicate	"correct"
s4.2	"firstly using only object properties only a few paths semantically corrects"	local:AM-ADV	"firstly use only object property only a few path"
s4.2	"firstly use only object property only a few path"	rdfs:member	"few path"
s4.2	"firstly use only object property only a few path"	rdfs:member	"only object property"
s4.2	"object property"	rdfs:member	"object"
s4.2	"only object"	rdfs:subClassOf	"object"
s4.2	"few path"	rdfs:member	"few"
s4.2	"few path"	rdfs:subClassOf	"path"
s4.2	"only object property"	rdfs:member	"only object"
s4.2	"only object"	rdfs:member	"only"
s4.2	"only object property"	rdfs:subClassOf	"property"
s4.2	"object property"	rdfs:subClassOf	"property"
s4.2	"path object"	rdfs:subClassOf	"object"
s4.2	"only few path"	rdfs:subClassOf	"few path"
s4.2	"only path object"	rdfs:subClassOf	"path object"
s4.2	"firstly use"	rdfs:subClassOf	"use"
s4.2	"firstly using only object properties only a few paths semantically corrects"	local:AM-MNR	"semantically"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"	rdf:subject	"path"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"	rdf:predicate	"consider"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"	rdf:object	"semantically give set of rule"
s4.1	"semantically give set of rule"	rdfs:member	"semantically give set"
s4.1	"semantically give set of rule"	rdfs:member	"rule"
s4.1	"give set"	rdfs:member	"give"
s4.1	"semantically give"	rdfs:member	"semantically"
s4.1	"give set"	rdfs:subClassOf	"set"
s4.1	"semantically give set"	rdfs:member	"semantically give"
s4.1	"semantically give set"	rdfs:subClassOf	"set"
s4.1	"semantically give"	rdfs:subClassOf	"give"
s4.1	"set of rule"	rdfs:member	"set"
s4.1	"set of rule"	rdfs:member	"rule"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"	local:AM-ADV	"firstly use only object property"
s4.1	"object property"	rdfs:member	"object"
s4.1	"only object"	rdfs:subClassOf	"object"
s4.1	"only object property"	rdfs:member	"only object"
s4.1	"only object property"	rdfs:subClassOf	"property"
s4.1	"only object"	rdfs:member	"only"
s4.1	"object property"	rdfs:subClassOf	"property"
s4.1	"firstly use"	rdfs:subClassOf	"use"
s4.1	"firstly using only object properties only a few paths can considered as semantically to a given set of rules"	local:AM-MOD	"can"
s4	"using only object properties only a few paths"
s4	"using only object properties only a few paths"	rdf:subject	"object property"
s4	"object property"	rdfs:member	"object"
s4	"object property"	rdfs:subClassOf	"property"
s4	"using only object properties only a few paths"	rdf:predicate	"use"
s4	"using only object properties only a few paths"	rdf:object	"path"
s3.4	"given set of rules"
s3.4	"given set of rules"	rdf:subject	"set"
s3.4	"given set of rules"	rdf:predicate	"give"
s3.4	"given set of rules"	rdf:object	"rule"
s3.3	"these paths obey to a given set of rules"
s3.3	"these paths obey to a given set of rules"	rdf:subject	"path"
s3.3	"these paths obey to a given set of rules"	rdf:predicate	"obey"
s3.3	"these paths obey to a given set of rules"	rdf:object	"give set of rule"
s3.3	"give set of rule"	rdfs:member	"give set"
s3.3	"give set of rule"	rdfs:member	"rule"
s3.3	"give set"	rdfs:member	"give"
s3.3	"give set"	rdfs:subClassOf	"set"
s3.3	"set of rule"	rdfs:member	"set"
s3.3	"set of rule"	rdfs:member	"rule"
s3.2	"semantically corrects to a given set of rules"
s3.2	"semantically corrects to a given set of rules"	rdf:predicate	"correct"
s3.2	"semantically corrects to a given set of rules"	rdf:object	"give set of rule"
s3.2	"give set of rule"	rdfs:member	"give set"
s3.2	"give set of rule"	rdfs:member	"rule"
s3.2	"give set"	rdfs:member	"give"
s3.2	"give set"	rdfs:subClassOf	"set"
s3.2	"set of rule"	rdfs:member	"set"
s3.2	"set of rule"	rdfs:member	"rule"
s3.2	"semantically corrects to a given set of rules"	local:AM-MNR	"semantically"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"	rdf:subject	"path"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"	rdf:predicate	"consider"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"	rdf:object	"semantically give set of rule"
s3.1	"semantically give set of rule"	rdfs:member	"semantically give set"
s3.1	"semantically give set of rule"	rdfs:member	"rule"
s3.1	"give set"	rdfs:member	"give"
s3.1	"semantically give"	rdfs:member	"semantically"
s3.1	"give set"	rdfs:subClassOf	"set"
s3.1	"semantically give set"	rdfs:member	"semantically give"
s3.1	"semantically give set"	rdfs:subClassOf	"set"
s3.1	"semantically give"	rdfs:subClassOf	"give"
s3.1	"set of rule"	rdfs:member	"set"
s3.1	"set of rule"	rdfs:member	"rule"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"	local:AM-ADV	"firstly use only concept hierarchy"
s3.1	"only concept hierarchy"	rdfs:subClassOf	"hierarchy"
s3.1	"only concept"	rdfs:member	"only"
s3.1	"only concept hierarchy"	rdfs:member	"only concept"
s3.1	"concept hierarchy"	rdfs:subClassOf	"hierarchy"
s3.1	"concept hierarchy"	rdfs:member	"concept"
s3.1	"only concept"	rdfs:subClassOf	"concept"
s3.1	"only concept hierarchy"	rdfs:subClassOf	"concept hierarchy"
s3.1	"firstly use"	rdfs:subClassOf	"use"
s3.1	"firstly using only concept hierarchy only a few paths can considered as semantically to a given set of rules"	local:AM-MOD	"can"
s3	"using only concept hierarchy only a few paths"
s3	"using only concept hierarchy only a few paths"	rdf:subject	"concept hierarchy only a few path"
s3	"concept hierarchy only a few path"	rdfs:member	"few path"
s3	"concept hierarchy only a few path"	rdfs:member	"concept"
s3	"few path"	rdfs:subClassOf	"path"
s3	"few path"	rdfs:member	"few"
s3	"only few path"	rdfs:subClassOf	"few path"
s3	"concept hierarchy"	rdfs:subClassOf	"hierarchy"
s3	"using only concept hierarchy only a few paths"	rdf:predicate	"use"
s2	"our approach relies on two hypotheses"
s2	"our approach relies on two hypotheses"	rdf:subject	"approach"
s2	"our approach relies on two hypotheses"	rdf:predicate	"rely"
s2	"our approach relies on two hypotheses"	rdf:object	"two hypothesis"
s2	"two hypothesis"	rdfs:subClassOf	"hypothesis"
s1	"this paper presents a new semantic relatedness measure on ontologies"
s1	"this paper presents a new semantic relatedness measure on ontologies"	rdf:subject	"paper"
s1	"this paper presents a new semantic relatedness measure on ontologies"	rdf:predicate	"present"
s1	"this paper presents a new semantic relatedness measure on ontologies"	rdf:object	"new semantic relatedness measure on ontology"
s1	"new semantic relatedness measure on ontology"	rdfs:member	"ontology"
s1	"new semantic relatedness measure on ontology"	rdfs:member	"new semantic relatedness measure"
s1	"new semantic"	rdfs:member	"new"
s1	"relatedness measure"	rdfs:member	"relatedness"
s1	"new semantic relatedness measure"	rdfs:member	"new semantic relatedness"
s1	"new semantic relatedness"	rdfs:member	"new semantic"
s1	"new semantic"	rdfs:subClassOf	"semantic"
s1	"semantic relatedness"	rdfs:subClassOf	"relatedness"
s1	"semantic relatedness measure"	rdfs:subClassOf	"measure"
s1	"relatedness measure"	rdfs:subClassOf	"measure"
s1	"new semantic relatedness"	rdfs:subClassOf	"relatedness"
s1	"semantic relatedness measure"	rdfs:member	"semantic relatedness"
s1	"semantic relatedness"	rdfs:member	"semantic"
s1	"new semantic relatedness measure"	rdfs:subClassOf	"measure"
s1	"semantic relatedness measure"	rdfs:subClassOf	"relatedness measure"
s1	"new semantic relatedness measure"	rdfs:subClassOf	"semantic relatedness measure"
s1	"new semantic relatedness measure on ontology"	rdfs:member	"new semantic relatedness measure"
s1	"new semantic relatedness measure on ontology"	rdfs:member	"ontology"
s0	"ontologies which considers especially the object properties between the concepts"
s0	"ontologies which considers especially the object properties between the concepts"	rdf:subject	"object property between the concept"
s0	"object property between the concept"	rdfs:member	"object property"
s0	"object property between the concept"	rdfs:member	"concept"
s0	"object property"	rdfs:member	"object"
s0	"object property"	rdfs:subClassOf	"property"
s0	"object property between concept"	rdfs:member	"object property"
s0	"object property between concept"	rdfs:member	"concept"
s0	"ontologies which considers especially the object properties between the concepts"	rdf:predicate	"consider"
s0	"ontologies which considers especially the object properties between the concepts"	rdf:object	"ontology especially"
s0	"especially ontology"	rdfs:subClassOf	"ontology"
