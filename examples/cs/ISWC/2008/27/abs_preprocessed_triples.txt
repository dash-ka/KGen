s8	"the algorithm admits easy extensions with ground conjunctive queries"
s8	"the algorithm admits easy extensions with ground conjunctive queries"	rdf:subject	"algorithm"
s8	"the algorithm admits easy extensions with ground conjunctive queries"	rdf:predicate	"admit"
s8	"the algorithm admits easy extensions with ground conjunctive queries"	rdf:object	"easy extensions with ground conjunctive queries"
s8	"easy extensions with ground conjunctive queries"	rdfs:member	"conjunctive queries"
s8	"easy extensions with ground conjunctive queries"	rdfs:member	"ground"
s8	"easy extensions with ground conjunctive queries"	rdfs:member	"easy extensions"
s8	"conjunctive queries"	rdfs:subClassOf	"queries"
s8	"easy extensions"	rdfs:subClassOf	"extensions"
s8	"easy extensions"	rdfs:member	"easy"
s8	"conjunctive queries"	rdfs:member	"conjunctive"
s8	"ground conjunctive queries"	rdfs:subClassOf	"conjunctive queries"
s8	"easy extensions with ground conjunctive queries"	rdfs:member	"easy extensions"
s8	"easy extensions with ground conjunctive queries"	rdfs:member	"ground conjunctive queries"
s7	"the algorithm admits easy extensions with dlsafe rules"
s7	"the algorithm admits easy extensions with dlsafe rules"	rdf:subject	"algorithm"
s7	"the algorithm admits easy extensions with dlsafe rules"	rdf:predicate	"admit"
s7	"the algorithm admits easy extensions with dlsafe rules"	rdf:object	"easy extensions with DLsafe rules"
s7	"easy extensions with dlsafe rules"	rdfs:member	"dlsafe rules"
s7	"easy extensions with dlsafe rules"	rdfs:member	"easy extensions"
s7	"easy extensions"	rdfs:subClassOf	"extensions"
s7	"easy extensions"	rdfs:member	"easy"
s7	"dlsafe rules"	rdfs:member	"dlsafe"
s7	"dlsafe rules"	rdfs:subClassOf	"rules"
s7	"easy extensions with dlsafe rules"	rdfs:member	"easy extensions"
s7	"easy extensions with dlsafe rules"	rdfs:member	"dlsafe rules"
s6	"this an turned into a disjunctive datalog program"
s6	"this an turned into a disjunctive datalog program"	rdf:subject	"an"
s6	"this an turned into a disjunctive datalog program"	rdf:predicate	"turn"
s6	"this an turned into a disjunctive datalog program"	rdf:object	"disjunctive datalog program"
s6	"disjunctive datalog"	rdfs:member	"disjunctive"
s6	"datalog program"	rdfs:member	"datalog"
s6	"disjunctive datalog program"	rdfs:subClassOf	"program"
s6	"disjunctive datalog"	rdfs:subClassOf	"datalog"
s6	"disjunctive datalog program"	rdfs:member	"disjunctive datalog"
s6	"datalog program"	rdfs:subClassOf	"program"
s6	"disjunctive datalog program"	rdfs:subClassOf	"datalog program"
s5	"ordered binary decision diagram"
s5	"ordered binary decision diagram"	rdf:subject	"binary decision diagram"
s5	"decision diagram"	rdfs:member	"decision"
s5	"decision diagram"	rdfs:subClassOf	"diagram"
s5	"binary decision diagram"	rdfs:member	"binary decision"
s5	"binary decision"	rdfs:member	"binary"
s5	"binary decision"	rdfs:subClassOf	"decision"
s5	"binary decision diagram"	rdfs:subClassOf	"diagram"
s5	"binary decision diagram"	rdfs:subClassOf	"decision diagram"
s5	"ordered binary decision diagram"	rdf:predicate	"order"
s4	"a disjunctive datalog program that can used for abox reasoning"
s4	"a disjunctive datalog program that can used for abox reasoning"	rdf:subject	"disjunctive datalog program"
s4	"disjunctive datalog"	rdfs:member	"disjunctive"
s4	"datalog program"	rdfs:member	"datalog"
s4	"disjunctive datalog program"	rdfs:subClassOf	"program"
s4	"disjunctive datalog"	rdfs:subClassOf	"datalog"
s4	"disjunctive datalog program"	rdfs:member	"disjunctive datalog"
s4	"datalog program"	rdfs:subClassOf	"program"
s4	"disjunctive datalog program"	rdfs:subClassOf	"datalog program"
s4	"a disjunctive datalog program that can used for abox reasoning"	rdf:predicate	"use"
s4	"a disjunctive datalog program that can used for abox reasoning"	rdf:object	"Abox reasoning"
s4	"abox reasoning"	rdfs:subClassOf	"reasoning"
s4	"a disjunctive datalog program that can used for abox reasoning"	local:AM-MOD	"can"
s3.1	"an ordered binary decision diagram which represents a canonical model for t"
s3.1	"an ordered binary decision diagram which represents a canonical model for t"	rdf:subject	"ordered binary decision diagram"
s3.1	"an ordered binary decision diagram which represents a canonical model for t"	rdf:predicate	"represent"
s3.1	"an ordered binary decision diagram which represents a canonical model for t"	rdf:object	"canonical model for T"
s3.1	"canonical model for t"	rdfs:member	"t"
s3.1	"canonical model for t"	rdfs:member	"canonical model"
s3.1	"canonical model"	rdfs:member	"canonical"
s3.1	"canonical model"	rdfs:subClassOf	"model"
s3.1	"canonical model for t"	rdfs:member	"canonical model"
s3.1	"canonical model for t"	rdfs:member	"t"
s3	"ordered binary decision"
s3	"ordered binary decision"	rdf:subject	"binary decision"
s3	"binary decision"	rdfs:subClassOf	"decision"
s3	"binary decision"	rdfs:member	"binary"
s3	"ordered binary decision"	rdf:predicate	"order"
s2.1	"ordered binary decision diagram"
s2.1	"ordered binary decision diagram"	rdf:subject	"binary decision diagram"
s2.1	"decision diagram"	rdfs:member	"decision"
s2.1	"decision diagram"	rdfs:subClassOf	"diagram"
s2.1	"binary decision diagram"	rdfs:member	"binary decision"
s2.1	"binary decision"	rdfs:member	"binary"
s2.1	"binary decision"	rdfs:subClassOf	"decision"
s2.1	"binary decision diagram"	rdfs:subClassOf	"diagram"
s2.1	"binary decision diagram"	rdfs:subClassOf	"decision diagram"
s2.1	"ordered binary decision diagram"	rdf:predicate	"order"
s2	"a satisfiability converted into an ordered binary decision diagram"
s2	"a satisfiability converted into an ordered binary decision diagram"	rdf:subject	"satisfiability"
s2	"a satisfiability converted into an ordered binary decision diagram"	rdf:predicate	"convert"
s2	"a satisfiability converted into an ordered binary decision diagram"	rdf:object	"ordered binary decision diagram"
s1.1	"obtained alcib tbox t"
s1.1	"obtained alcib tbox t"	rdf:subject	"ALCIb Tbox T"
s1.1	"alcib tbox"	rdfs:subClassOf	"tbox"
s1.1	"tbox t"	rdfs:subClassOf	"t"
s1.1	"alcib tbox t"	rdfs:subClassOf	"t"
s1.1	"alcib tbox"	rdfs:member	"alcib"
s1.1	"alcib tbox t"	rdfs:member	"alcib tbox"
s1.1	"tbox t"	rdfs:member	"tbox"
s1.1	"alcib tbox t"	rdfs:subClassOf	"tbox t"
s1.1	"obtained alcib tbox t"	rdf:predicate	"obtain"
s1	"preserving transformation"
s1	"preserving transformation"	rdf:subject	"transformation"
s1	"preserving transformation"	rdf:predicate	"preserve"
s0	"we propose a novel method for reasoning in the description logic shiq"
s0	"we propose a novel method for reasoning in the description logic shiq"	rdf:subject	"We"
s0	"we propose a novel method for reasoning in the description logic shiq"	rdf:predicate	"propose"
s0	"we propose a novel method for reasoning in the description logic shiq"	rdf:object	"novel method for reasoning in the description logic SHIQ"
s0	"novel method for reasoning in the description logic shiq"	rdfs:member	"description logic shiq"
s0	"novel method for reasoning in the description logic shiq"	rdfs:member	"novel method"
s0	"novel method"	rdfs:subClassOf	"method"
s0	"description logic shiq"	rdfs:subClassOf	"shiq"
s0	"description logic"	rdfs:subClassOf	"logic"
s0	"novel method"	rdfs:member	"novel"
s0	"description logic shiq"	rdfs:member	"description logic"
s0	"description logic"	rdfs:member	"description"
s0	"logic shiq"	rdfs:subClassOf	"shiq"
s0	"logic shiq"	rdfs:member	"logic"
s0	"description logic shiq"	rdfs:subClassOf	"logic shiq"
s0	"novel method for reasoning"	rdfs:member	"novel method"
s0	"novel method for reasoning"	rdfs:member	"reasoning"
s0	"reasoning in description logic shiq"	rdfs:member	"reasoning"
s0	"reasoning in description logic shiq"	rdfs:member	"description logic shiq"
