s22.1	"the benefits of the proposed method demonstrated through experimental evaluation on both real data"
s22.1	"the benefits of the proposed method demonstrated through experimental evaluation on both real data"	rdf:subject	"benefit of the propose method"
s22.1	"benefit of the propose method"	rdfs:member	"propose method"
s22.1	"benefit of the propose method"	rdfs:member	"benefit"
s22.1	"propose method"	rdfs:subClassOf	"method"
s22.1	"propose method"	rdfs:member	"propose"
s22.1	"benefit of propose method"	rdfs:member	"benefit"
s22.1	"benefit of propose method"	rdfs:member	"propose method"
s22.1	"the benefits of the proposed method demonstrated through experimental evaluation on both real data"	rdf:predicate	"demonstrate"
s22.1	"the benefits of the proposed method demonstrated through experimental evaluation on both real data"	local:AM-MNR	"experimental evaluation on both real data"
s22.1	"experimental evaluation on both real data"	rdfs:member	"experimental evaluation"
s22.1	"experimental evaluation on both real data"	rdfs:member	"real data"
s22.1	"experimental evaluation"	rdfs:subClassOf	"evaluation"
s22.1	"experimental evaluation"	rdfs:member	"experimental"
s22.1	"real data"	rdfs:member	"real"
s22.1	"real data"	rdfs:subClassOf	"data"
s22.1	"experimental evaluation on real data"	rdfs:member	"experimental evaluation"
s22.1	"experimental evaluation on real data"	rdfs:member	"real data"
s22	"proposed method"
s22	"proposed method"	rdf:subject	"method"
s22	"proposed method"	rdf:predicate	"propose"
s21.1	"the benefits of the proposed method demonstrated through experimental evaluation on both synthetic data"
s21.1	"the benefits of the proposed method demonstrated through experimental evaluation on both synthetic data"	rdf:subject	"benefit of the propose method"
s21.1	"benefit of the propose method"	rdfs:member	"propose method"
s21.1	"benefit of the propose method"	rdfs:member	"benefit"
s21.1	"propose method"	rdfs:subClassOf	"method"
s21.1	"propose method"	rdfs:member	"propose"
s21.1	"benefit of propose method"	rdfs:member	"benefit"
s21.1	"benefit of propose method"	rdfs:member	"propose method"
s21.1	"the benefits of the proposed method demonstrated through experimental evaluation on both synthetic data"	rdf:predicate	"demonstrate"
s21.1	"the benefits of the proposed method demonstrated through experimental evaluation on both synthetic data"	local:AM-MNR	"experimental evaluation on both synthetic data"
s21.1	"experimental evaluation on both synthetic data"	rdfs:member	"experimental evaluation"
s21.1	"experimental evaluation on both synthetic data"	rdfs:member	"synthetic data"
s21.1	"synthetic data"	rdfs:member	"synthetic"
s21.1	"experimental evaluation"	rdfs:subClassOf	"evaluation"
s21.1	"experimental evaluation"	rdfs:member	"experimental"
s21.1	"synthetic data"	rdfs:subClassOf	"data"
s21.1	"experimental evaluation on synthetic data"	rdfs:member	"experimental evaluation"
s21.1	"experimental evaluation on synthetic data"	rdfs:member	"synthetic data"
s21	"proposed method"
s21	"proposed method"	rdf:subject	"method"
s21	"proposed method"	rdf:predicate	"propose"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"	rdf:subject	"search engine"
s20.1	"search engine"	rdfs:member	"search"
s20.1	"search engine"	rdfs:subClassOf	"engine"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"	rdf:predicate	"perform"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"	local:AM-LOC	"suitable structure p2p overlay network"
s20.1	"structure p2p overlay network"	rdfs:subClassOf	"network"
s20.1	"structure p2p overlay network"	rdfs:member	"structure p2p overlay"
s20.1	"suitable structure p2p overlay network"	rdfs:subClassOf	"network"
s20.1	"suitable structure"	rdfs:member	"suitable"
s20.1	"structure p2p"	rdfs:subClassOf	"p2p"
s20.1	"overlay network"	rdfs:subClassOf	"network"
s20.1	"p2p overlay"	rdfs:subClassOf	"overlay"
s20.1	"suitable structure"	rdfs:subClassOf	"structure"
s20.1	"p2p overlay network"	rdfs:member	"p2p overlay"
s20.1	"overlay network"	rdfs:member	"overlay"
s20.1	"p2p overlay"	rdfs:member	"p2p"
s20.1	"suitable structure p2p overlay"	rdfs:subClassOf	"overlay"
s20.1	"structure p2p overlay"	rdfs:subClassOf	"overlay"
s20.1	"suitable structure p2p"	rdfs:subClassOf	"p2p"
s20.1	"p2p overlay network"	rdfs:subClassOf	"network"
s20.1	"suitable structure p2p overlay network"	rdfs:member	"suitable structure p2p overlay"
s20.1	"structure p2p"	rdfs:member	"structure"
s20.1	"structure p2p overlay"	rdfs:member	"structure p2p"
s20.1	"suitable structure p2p"	rdfs:member	"suitable structure"
s20.1	"suitable structure p2p overlay"	rdfs:member	"suitable structure p2p"
s20.1	"p2p overlay network"	rdfs:subClassOf	"overlay network"
s20.1	"structure p2p overlay network"	rdfs:subClassOf	"p2p overlay network"
s20.1	"suitable structure p2p overlay network"	rdfs:subClassOf	"structure p2p overlay network"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"	local:AM-MNR	"efficiently"
s20.1	"the search engines can performed efficiently in a suitable structured p2p overlay network"	local:AM-MOD	"can"
s20	"we also show how the search engines can be performed efficiently in a suitable structured p2p overlay network"
s20	"we also show how the search engines can be performed efficiently in a suitable structured p2p overlay network"	rdf:subject	"we"
s20	"we also show how the search engines can be performed efficiently in a suitable structured p2p overlay network"	rdf:predicate	"show"
s20	"we also show how the search engines can be performed efficiently in a suitable structured p2p overlay network"	rdf:object	"search engine can be perform efficiently in a suitable structure p2p overlay network"
s20	"search engine can be perform efficiently in a suitable structure p2p overlay network"	rdfs:member	"suitable structure p2p overlay network"
s20	"search engine can be perform efficiently in a suitable structure p2p overlay network"	rdfs:member	"search engine"
s20	"structure p2p overlay network"	rdfs:subClassOf	"network"
s20	"structure p2p overlay network"	rdfs:member	"structure p2p overlay"
s20	"suitable structure p2p overlay network"	rdfs:subClassOf	"network"
s20	"suitable structure"	rdfs:member	"suitable"
s20	"structure p2p"	rdfs:subClassOf	"p2p"
s20	"overlay network"	rdfs:subClassOf	"network"
s20	"p2p overlay"	rdfs:subClassOf	"overlay"
s20	"suitable structure"	rdfs:subClassOf	"structure"
s20	"p2p overlay network"	rdfs:member	"p2p overlay"
s20	"overlay network"	rdfs:member	"overlay"
s20	"p2p overlay"	rdfs:member	"p2p"
s20	"suitable structure p2p overlay"	rdfs:subClassOf	"overlay"
s20	"search engine"	rdfs:subClassOf	"engine"
s20	"structure p2p overlay"	rdfs:subClassOf	"overlay"
s20	"suitable structure p2p"	rdfs:subClassOf	"p2p"
s20	"p2p overlay network"	rdfs:subClassOf	"network"
s20	"suitable structure p2p overlay network"	rdfs:member	"suitable structure p2p overlay"
s20	"search engine"	rdfs:member	"search"
s20	"structure p2p"	rdfs:member	"structure"
s20	"structure p2p overlay"	rdfs:member	"structure p2p"
s20	"suitable structure p2p"	rdfs:member	"suitable structure"
s20	"suitable structure p2p overlay"	rdfs:member	"suitable structure p2p"
s20	"p2p overlay network"	rdfs:subClassOf	"overlay network"
s20	"structure p2p overlay network"	rdfs:subClassOf	"p2p overlay network"
s20	"suitable structure p2p overlay network"	rdfs:subClassOf	"structure p2p overlay network"
s20	"efficiently perform"	rdfs:subClassOf	"perform"
s20	"be efficiently perform"	rdfs:subClassOf	"efficiently perform"
s20	"can be efficiently perform"	rdfs:subClassOf	"be efficiently perform"
s20	"can be efficiently perform in suitable structure p2p overlay network"	rdfs:member	"can be efficiently perform"
s20	"can be efficiently perform in suitable structure p2p overlay network"	rdfs:member	"suitable structure p2p overlay network"
s20	"we also show how the search engines can be performed efficiently in a suitable structured p2p overlay network"	local:AM-DIS	"also"
s19	"better matches returned first thereby further"
s19	"better matches returned first thereby further"	rdf:subject	"better match"
s19	"better match"	rdfs:subClassOf	"match"
s19	"better match"	rdfs:member	"better"
s19	"better matches returned first thereby further"	rdf:predicate	"return"
s19	"better matches returned first thereby further"	local:AM-ADV	"thereby further"
s19	"thereby further"	rdfs:subClassOf	"further"
s19	"better matches returned first thereby further"	local:AM-TMP	"first"
s18	"better matches computed first thereby further"
s18	"better matches computed first thereby further"	rdf:subject	"better match"
s18	"better match"	rdfs:subClassOf	"match"
s18	"better match"	rdfs:member	"better"
s18	"better matches computed first thereby further"	rdf:predicate	"compute"
s18	"better matches computed first thereby further"	local:AM-ADV	"thereby further"
s18	"thereby further"	rdfs:subClassOf	"further"
s18	"better matches computed first thereby further"	local:AM-TMP	"first"
s17	"further reducing the search engines response time"
s17	"further reducing the search engines response time"	rdf:subject	"search engine response time"
s17	"search engine"	rdfs:member	"search"
s17	"search engine response time"	rdfs:subClassOf	"time"
s17	"engine response"	rdfs:member	"engine"
s17	"response time"	rdfs:member	"response"
s17	"engine response time"	rdfs:member	"engine response"
s17	"engine response time"	rdfs:subClassOf	"time"
s17	"search engine"	rdfs:subClassOf	"engine"
s17	"search engine response time"	rdfs:member	"search engine response"
s17	"engine response"	rdfs:subClassOf	"response"
s17	"response time"	rdfs:subClassOf	"time"
s17	"search engine response"	rdfs:subClassOf	"response"
s17	"search engine response"	rdfs:member	"search engine"
s17	"engine response time"	rdfs:subClassOf	"response time"
s17	"search engine response time"	rdfs:subClassOf	"engine response time"
s17	"further reducing the search engines response time"	rdf:predicate	"reduce"
s17	"further reducing the search engines response time"	rdf:object	"further"
s16.2	"a desired ranking function the search algorithm can retrieve the topk matches"
s16.2	"a desired ranking function the search algorithm can retrieve the topk matches"	rdf:subject	"desire rank function the search algorithm"
s16.2	"desire rank function the search algorithm"	rdfs:member	"desire rank function"
s16.2	"desire rank function the search algorithm"	rdfs:member	"search algorithm"
s16.2	"desire rank"	rdfs:subClassOf	"rank"
s16.2	"desire rank"	rdfs:member	"desire"
s16.2	"search algorithm"	rdfs:subClassOf	"algorithm"
s16.2	"desire rank function"	rdfs:member	"desire rank"
s16.2	"rank function"	rdfs:subClassOf	"function"
s16.2	"search algorithm"	rdfs:member	"search"
s16.2	"rank function"	rdfs:member	"rank"
s16.2	"desire rank function"	rdfs:subClassOf	"function"
s16.2	"a desired ranking function the search algorithm can retrieve the topk matches"	rdf:predicate	"retrieve"
s16.2	"a desired ranking function the search algorithm can retrieve the topk matches"	rdf:object	"topk match"
s16.2	"topk match"	rdfs:subClassOf	"match"
s16.2	"topk match"	rdfs:member	"topk"
s16.2	"a desired ranking function the search algorithm can retrieve the topk matches"	local:AM-MOD	"can"
s16.1	"desired ranking function"
s16.1	"desired ranking function"	rdf:subject	"rank function"
s16.1	"rank function"	rdfs:subClassOf	"function"
s16.1	"rank function"	rdfs:member	"rank"
s16.1	"desired ranking function"	rdf:predicate	"desire"
s16	"given a desired ranking function the search algorithm can retrieve the topk matches"
s16	"given a desired ranking function the search algorithm can retrieve the topk matches"	rdf:subject	"desire rank function the search algorithm can retrieve the topk match"
s16	"desire rank function the search algorithm can retrieve the topk match"	rdfs:member	"desire rank function"
s16	"desire rank function the search algorithm can retrieve the topk match"	rdfs:member	"topk match"
s16	"desire rank function the search algorithm can retrieve the topk match"	rdfs:member	"search algorithm"
s16	"desire rank"	rdfs:subClassOf	"rank"
s16	"desire rank"	rdfs:member	"desire"
s16	"topk match"	rdfs:subClassOf	"match"
s16	"search algorithm"	rdfs:subClassOf	"algorithm"
s16	"desire rank function"	rdfs:member	"desire rank"
s16	"rank function"	rdfs:subClassOf	"function"
s16	"search algorithm"	rdfs:member	"search"
s16	"rank function"	rdfs:member	"rank"
s16	"desire rank function"	rdfs:subClassOf	"function"
s16	"topk match"	rdfs:member	"topk"
s16	"can retrieve"	rdfs:subClassOf	"retrieve"
s16	"given a desired ranking function the search algorithm can retrieve the topk matches"	rdf:predicate	"give"
s15	"comparisons"
s15	"comparisons"	rdf:subject	"comparison"
s15	"comparisons"	rdf:predicate	"require"
s14.5	"the search space reducing the number of comparisons"
s14.5	"the search space reducing the number of comparisons"	rdf:subject	"search space"
s14.5	"search space"	rdfs:subClassOf	"space"
s14.5	"search space"	rdfs:member	"search"
s14.5	"the search space reducing the number of comparisons"	rdf:predicate	"reduce"
s14.5	"the search space reducing the number of comparisons"	rdf:object	"number of comparison"
s14.5	"number of comparison"	rdfs:member	"comparison"
s14.5	"number of comparison"	rdfs:member	"number"
s14.5	"number of comparison"	rdfs:member	"number"
s14.5	"number of comparison"	rdfs:member	"comparison"
s14.4	"we these representations prune the search space reducing the number of comparisons"
s14.4	"we these representations prune the search space reducing the number of comparisons"	rdf:subject	"representation"
s14.4	"we these representations prune the search space reducing the number of comparisons"	rdf:predicate	"prune"
s14.4	"we these representations prune the search space reducing the number of comparisons"	rdf:object	"search space reduce the number of comparison"
s14.4	"search space reduce the number of comparison"	rdfs:member	"comparison"
s14.4	"search space reduce the number of comparison"	rdfs:member	"search space"
s14.4	"search space reduce the number of comparison"	rdfs:member	"number"
s14.4	"search space"	rdfs:subClassOf	"space"
s14.4	"search space"	rdfs:member	"search"
s14.4	"number of comparison"	rdfs:member	"number"
s14.4	"number of comparison"	rdfs:member	"comparison"
s14.3	"we index these representations to prune the search space reducing the number of comparisons"
s14.3	"we index these representations to prune the search space reducing the number of comparisons"	rdf:subject	"we"
s14.3	"we index these representations to prune the search space reducing the number of comparisons"	rdf:predicate	"index"
s14.3	"we index these representations to prune the search space reducing the number of comparisons"	rdf:object	"representation prune the search space reduce the number of comparison"
s14.3	"representation prune the search space reduce the number of comparison"	rdfs:member	"comparison"
s14.3	"representation prune the search space reduce the number of comparison"	rdfs:member	"search space"
s14.3	"representation prune the search space reduce the number of comparison"	rdfs:member	"representation"
s14.3	"representation prune the search space reduce the number of comparison"	rdfs:member	"number"
s14.3	"search space"	rdfs:subClassOf	"space"
s14.3	"search space"	rdfs:member	"search"
s14.3	"number of comparison"	rdfs:member	"number"
s14.3	"number of comparison"	rdfs:member	"comparison"
s14.2	"an advertisement evaluated in constant time"
s14.2	"an advertisement evaluated in constant time"	rdf:subject	"advertisement"
s14.2	"an advertisement evaluated in constant time"	rdf:predicate	"evaluate"
s14.2	"an advertisement evaluated in constant time"	local:AM-TMP	"constant time"
s14.2	"constant time"	rdfs:subClassOf	"time"
s14.2	"constant time"	rdfs:member	"constant"
s14.1	"the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time"
s14.1	"the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time"	rdf:subject	"service description"
s14.1	"service description"	rdfs:member	"service"
s14.1	"service description"	rdfs:subClassOf	"description"
s14.1	"the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time"	rdf:predicate	"allow"
s14.1	"the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time"	rdf:object	"match between a request and an advertisement to be evaluate in constant time"
s14.1	"match between a request and an advertisement to be evaluate in constant time"	rdfs:member	"constant time"
s14.1	"match between a request and an advertisement to be evaluate in constant time"	rdfs:member	"request"
s14.1	"match between a request and an advertisement to be evaluate in constant time"	rdfs:member	"advertisement"
s14.1	"match between a request and an advertisement to be evaluate in constant time"	rdfs:member	"match"
s14.1	"constant time"	rdfs:subClassOf	"time"
s14.1	"constant time"	rdfs:member	"constant"
s14.1	"be evaluate"	rdfs:subClassOf	"evaluate"
s14.1	"match between request"	rdfs:member	"match"
s14.1	"match between request"	rdfs:member	"request"
s14.1	"match between request between advertisement"	rdfs:member	"match between request"
s14.1	"match between request between advertisement"	rdfs:member	"advertisement"
s14.1	"be evaluate in constant time"	rdfs:member	"be evaluate"
s14.1	"be evaluate in constant time"	rdfs:member	"constant time"
s14	"we employ a novel encoding of the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time and we index these representations to prune the search space reducing the number of comparisons"
s14	"we employ a novel encoding of the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time and we index these representations to prune the search space reducing the number of comparisons"	rdf:subject	"we"
s14	"we employ a novel encoding of the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time and we index these representations to prune the search space reducing the number of comparisons"	rdf:predicate	"employ"
s14	"we employ a novel encoding of the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time and we index these representations to prune the search space reducing the number of comparisons"	rdf:object	"novel encode of the service description"
s14	"novel encode of the service description"	rdfs:member	"service description"
s14	"novel encode of the service description"	rdfs:member	"novel encode"
s14	"service description"	rdfs:member	"service"
s14	"service description"	rdfs:subClassOf	"description"
s14	"novel encode"	rdfs:member	"novel"
s14	"novel encode"	rdfs:subClassOf	"encode"
s14	"novel encode of service description"	rdfs:member	"novel encode"
s14	"novel encode of service description"	rdfs:member	"service description"
s14	"we employ a novel encoding of the service descriptions allowing the match between a request and an advertisement to be evaluated in constant time and we index these representations to prune the search space reducing the number of comparisons"	local:AM-PNC	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"advertisement"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"search space"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"comparison"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"constant time"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"representation"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"number"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"match"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"index"
s14	"allow the match between a request and an advertisement to be evaluate in constant time and we index these representation to prune the search space reduce the number of comparison"	rdfs:member	"request"
s14	"search space"	rdfs:subClassOf	"space"
s14	"constant time"	rdfs:subClassOf	"time"
s14	"search space"	rdfs:member	"search"
s14	"constant time"	rdfs:member	"constant"
s14	"be evaluate"	rdfs:subClassOf	"evaluate"
s14	"match between request"	rdfs:member	"match"
s14	"match between request"	rdfs:member	"request"
s14	"match between request between advertisement"	rdfs:member	"match between request"
s14	"match between request between advertisement"	rdfs:member	"advertisement"
s14	"be evaluate in constant time"	rdfs:member	"be evaluate"
s14	"be evaluate in constant time"	rdfs:member	"constant time"
s14	"number of comparison"	rdfs:member	"number"
s14	"number of comparison"	rdfs:member	"comparison"
s13	"the semantic web service discovery that allows for fast selection of services at query time"
s13	"the semantic web service discovery that allows for fast selection of services at query time"	rdf:subject	"semantic web service discovery"
s13	"web service"	rdfs:member	"web"
s13	"web service"	rdfs:subClassOf	"service"
s13	"semantic web"	rdfs:member	"semantic"
s13	"service discovery"	rdfs:member	"service"
s13	"semantic web service discovery"	rdfs:subClassOf	"discovery"
s13	"service discovery"	rdfs:subClassOf	"discovery"
s13	"web service discovery"	rdfs:member	"web service"
s13	"semantic web service"	rdfs:subClassOf	"service"
s13	"semantic web service"	rdfs:member	"semantic web"
s13	"web service discovery"	rdfs:subClassOf	"discovery"
s13	"semantic web service discovery"	rdfs:member	"semantic web service"
s13	"semantic web"	rdfs:subClassOf	"web"
s13	"web service discovery"	rdfs:subClassOf	"service discovery"
s13	"semantic web service discovery"	rdfs:subClassOf	"web service discovery"
s13	"the semantic web service discovery that allows for fast selection of services at query time"	rdf:predicate	"allow"
s13	"the semantic web service discovery that allows for fast selection of services at query time"	rdf:object	"fast selection of service at query time"
s13	"fast selection of service at query time"	rdfs:member	"service"
s13	"fast selection of service at query time"	rdfs:member	"query time"
s13	"fast selection of service at query time"	rdfs:member	"fast selection"
s13	"fast selection"	rdfs:subClassOf	"selection"
s13	"fast selection"	rdfs:member	"fast"
s13	"query time"	rdfs:member	"query"
s13	"query time"	rdfs:subClassOf	"time"
s13	"fast selection of service"	rdfs:member	"fast selection"
s13	"fast selection of service"	rdfs:member	"service"
s13	"fast selection of service at query time"	rdfs:member	"fast selection of service"
s13	"fast selection of service at query time"	rdfs:member	"query time"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"	rdf:subject	"paper"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"	rdf:predicate	"present"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"	rdf:object	"scalable indexbased method"
s12	"indexbased method"	rdfs:subClassOf	"method"
s12	"scalable indexbased method"	rdfs:subClassOf	"indexbased method"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"	local:AM-LOC	"hand"
s12	"on the other hand this paper presents an scalable indexbased method for the semantic web service discovery"	local:AM-PNC	"semantic web service discovery"
s12	"web service"	rdfs:member	"web"
s12	"web service"	rdfs:subClassOf	"service"
s12	"semantic web"	rdfs:member	"semantic"
s12	"service discovery"	rdfs:member	"service"
s12	"semantic web service discovery"	rdfs:subClassOf	"discovery"
s12	"service discovery"	rdfs:subClassOf	"discovery"
s12	"web service discovery"	rdfs:member	"web service"
s12	"semantic web service"	rdfs:subClassOf	"service"
s12	"semantic web service"	rdfs:member	"semantic web"
s12	"web service discovery"	rdfs:subClassOf	"discovery"
s12	"semantic web service discovery"	rdfs:member	"semantic web service"
s12	"semantic web"	rdfs:subClassOf	"web"
s12	"web service discovery"	rdfs:subClassOf	"service discovery"
s12	"semantic web service discovery"	rdfs:subClassOf	"web service discovery"
s9	"on the other hand this paper presents an efficient indexbased method for the semantic web service discovery"
s9	"on the other hand this paper presents an efficient indexbased method for the semantic web service discovery"	rdf:subject	"paper"
s9	"on the other hand this paper presents an efficient indexbased method for the semantic web service discovery"	rdf:predicate	"present"
s9	"on the other hand this paper presents an efficient indexbased method for the semantic web service discovery"	rdf:object	"efficient indexbased method for the semantic web service discovery"
s9	"efficient indexbased method for the semantic web service discovery"	rdfs:member	"semantic web service discovery"
s9	"efficient indexbased method for the semantic web service discovery"	rdfs:member	"efficient"
s9	"efficient indexbased method for the semantic web service discovery"	rdfs:member	"method"
s9	"web service"	rdfs:member	"web"
s9	"web service"	rdfs:subClassOf	"service"
s9	"semantic web"	rdfs:member	"semantic"
s9	"service discovery"	rdfs:member	"service"
s9	"semantic web service discovery"	rdfs:subClassOf	"discovery"
s9	"service discovery"	rdfs:subClassOf	"discovery"
s9	"web service discovery"	rdfs:member	"web service"
s9	"semantic web service"	rdfs:subClassOf	"service"
s9	"semantic web service"	rdfs:member	"semantic web"
s9	"web service discovery"	rdfs:subClassOf	"discovery"
s9	"semantic web service discovery"	rdfs:member	"semantic web service"
s9	"semantic web"	rdfs:subClassOf	"web"
s9	"web service discovery"	rdfs:subClassOf	"service discovery"
s9	"semantic web service discovery"	rdfs:subClassOf	"web service discovery"
s9	"indexbased method"	rdfs:subClassOf	"method"
s9	"efficient indexbased method"	rdfs:subClassOf	"indexbased method"
s9	"efficient indexbased method for semantic web service discovery"	rdfs:member	"efficient indexbased method"
s9	"efficient indexbased method for semantic web service discovery"	rdfs:member	"semantic web service discovery"
s9	"on the other hand this paper presents an efficient indexbased method for the semantic web service discovery"	local:AM-LOC	"hand"
s8	"the ontologies involved"
s8	"the ontologies involved"	rdf:subject	"ontology"
s8	"the ontologies involved"	rdf:predicate	"involve"
s7.1	"such approaches scale with respect to the size of the ontologies"
s7.1	"such approaches scale with respect to the size of the ontologies"	rdf:subject	"approach"
s7.1	"such approaches scale with respect to the size of the ontologies"	rdf:predicate	"scale"
s7.1	"such approaches scale with respect to the size of the ontologies"	local:AM-MNR	"respect to the size of the ontology"
s7.1	"respect to the size of the ontology"	rdfs:member	"ontology"
s7.1	"respect to the size of the ontology"	rdfs:member	"respect"
s7.1	"respect to the size of the ontology"	rdfs:member	"size"
s7.1	"respect to size"	rdfs:member	"respect"
s7.1	"respect to size"	rdfs:member	"size"
s7.1	"size of ontology"	rdfs:member	"size"
s7.1	"size of ontology"	rdfs:member	"ontology"
s7	"such approaches however fail to scale with respect to the size of the ontologies"
s7	"such approaches however fail to scale with respect to the size of the ontologies"	rdf:subject	"approach"
s7	"such approaches however fail to scale with respect to the size of the ontologies"	rdf:predicate	"fail"
s7	"such approaches however fail to scale with respect to the size of the ontologies"	rdf:object	"scale with respect to the size of the ontology"
s7	"scale with respect to the size of the ontology"	rdfs:member	"scale"
s7	"scale with respect to the size of the ontology"	rdfs:member	"ontology"
s7	"scale with respect to the size of the ontology"	rdfs:member	"respect"
s7	"scale with respect to the size of the ontology"	rdfs:member	"size"
s7	"scale with_respect_to size"	rdfs:member	"scale"
s7	"scale with_respect_to size"	rdfs:member	"size"
s7	"size of ontology"	rdfs:member	"size"
s7	"size of ontology"	rdfs:member	"ontology"
s7	"such approaches however fail to scale with respect to the size of the ontologies"	local:AM-DIS	"however"
s6.1	"such approaches scale with respect to the number of service advertisements"
s6.1	"such approaches scale with respect to the number of service advertisements"	rdf:subject	"approach"
s6.1	"such approaches scale with respect to the number of service advertisements"	rdf:predicate	"scale"
s6.1	"such approaches scale with respect to the number of service advertisements"	local:AM-MNR	"respect to the number of service advertisement"
s6.1	"respect to the number of service advertisement"	rdfs:member	"service advertisement"
s6.1	"respect to the number of service advertisement"	rdfs:member	"number"
s6.1	"respect to the number of service advertisement"	rdfs:member	"respect"
s6.1	"service advertisement"	rdfs:subClassOf	"advertisement"
s6.1	"service advertisement"	rdfs:member	"service"
s6.1	"respect to number"	rdfs:member	"respect"
s6.1	"respect to number"	rdfs:member	"number"
s6.1	"number of service advertisement"	rdfs:member	"number"
s6.1	"number of service advertisement"	rdfs:member	"service advertisement"
s6	"such approaches however fail to scale with respect to the number of service advertisements"
s6	"such approaches however fail to scale with respect to the number of service advertisements"	rdf:subject	"approach"
s6	"such approaches however fail to scale with respect to the number of service advertisements"	rdf:predicate	"fail"
s6	"such approaches however fail to scale with respect to the number of service advertisements"	rdf:object	"scale with respect to the number of service advertisement"
s6	"scale with respect to the number of service advertisement"	rdfs:member	"scale"
s6	"scale with respect to the number of service advertisement"	rdfs:member	"service advertisement"
s6	"scale with respect to the number of service advertisement"	rdfs:member	"number"
s6	"scale with respect to the number of service advertisement"	rdfs:member	"respect"
s6	"service advertisement"	rdfs:subClassOf	"advertisement"
s6	"service advertisement"	rdfs:member	"service"
s6	"scale with_respect_to number"	rdfs:member	"scale"
s6	"scale with_respect_to number"	rdfs:member	"number"
s6	"number of service advertisement"	rdfs:member	"number"
s6	"number of service advertisement"	rdfs:member	"service advertisement"
s6	"such approaches however fail to scale with respect to the number of service advertisements"	local:AM-DIS	"however"
s5.2	"storing the results of the semantic matcher for all possible query concepts"
s5.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:subject	"result of the semantic matcher"
s5.2	"result of the semantic matcher"	rdfs:member	"semantic matcher"
s5.2	"result of the semantic matcher"	rdfs:member	"result"
s5.2	"semantic matcher"	rdfs:subClassOf	"matcher"
s5.2	"semantic matcher"	rdfs:member	"semantic"
s5.2	"result of semantic matcher"	rdfs:member	"result"
s5.2	"result of semantic matcher"	rdfs:member	"semantic matcher"
s5.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:predicate	"store"
s5.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:object	"possible query concept"
s5.2	"possible query concept"	rdfs:subClassOf	"concept"
s5.2	"query concept"	rdfs:subClassOf	"concept"
s5.2	"query concept"	rdfs:member	"query"
s5.2	"possible query"	rdfs:member	"possible"
s5.2	"possible query concept"	rdfs:member	"possible query"
s5.2	"possible query"	rdfs:subClassOf	"query"
s5.2	"possible query concept"	rdfs:subClassOf	"query concept"
s5.1	"the majority of currently existing approaches focuses on deals with efficiency typically by storing the results of the semantic matcher for all possible query concepts"
s5.1	"the majority of currently existing approaches focuses on deals with efficiency typically by storing the results of the semantic matcher for all possible query concepts"	rdf:subject	"majority of currently exist approach"
s5.1	"majority of currently exist approach"	rdfs:member	"majority"
s5.1	"majority of currently exist approach"	rdfs:member	"approach"
s5.1	"currently exist"	rdfs:subClassOf	"exist"
s5.1	"majority of"	rdfs:member	"majority"
s5.1	"majority of"	rdfs:member	"of"
s5.1	"the majority of currently existing approaches focuses on deals with efficiency typically by storing the results of the semantic matcher for all possible query concepts"	rdf:predicate	"focus"
s5.1	"the majority of currently existing approaches focuses on deals with efficiency typically by storing the results of the semantic matcher for all possible query concepts"	rdf:object	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"semantic matcher"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"deal"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"possible query concept"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"efficiency"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"result"
s5.1	"deal with efficiency typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"store"
s5.1	"possible query concept"	rdfs:subClassOf	"concept"
s5.1	"query concept"	rdfs:subClassOf	"concept"
s5.1	"semantic matcher"	rdfs:subClassOf	"matcher"
s5.1	"query concept"	rdfs:member	"query"
s5.1	"possible query"	rdfs:member	"possible"
s5.1	"possible query concept"	rdfs:member	"possible query"
s5.1	"semantic matcher"	rdfs:member	"semantic"
s5.1	"possible query"	rdfs:subClassOf	"query"
s5.1	"possible query concept"	rdfs:subClassOf	"query concept"
s5.1	"typically store"	rdfs:subClassOf	"store"
s5.1	"deal with efficiency"	rdfs:member	"deal"
s5.1	"deal with efficiency"	rdfs:member	"efficiency"
s5.1	"deal with efficiency by typically store"	rdfs:member	"deal with efficiency"
s5.1	"deal with efficiency by typically store"	rdfs:member	"typically store"
s5.1	"result of semantic matcher"	rdfs:member	"result"
s5.1	"result of semantic matcher"	rdfs:member	"semantic matcher"
s5.1	"semantic matcher for possible query concept"	rdfs:member	"semantic matcher"
s5.1	"semantic matcher for possible query concept"	rdfs:member	"possible query concept"
s5	"currently existing approaches"
s5	"currently existing approaches"	rdf:subject	"approach"
s5	"currently existing approaches"	rdf:predicate	"exist"
s5	"currently existing approaches"	local:AM-TMP	"currently"
s4.2	"storing the results of the semantic matcher for all possible query concepts"
s4.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:subject	"result of the semantic matcher"
s4.2	"result of the semantic matcher"	rdfs:member	"semantic matcher"
s4.2	"result of the semantic matcher"	rdfs:member	"result"
s4.2	"semantic matcher"	rdfs:subClassOf	"matcher"
s4.2	"semantic matcher"	rdfs:member	"semantic"
s4.2	"result of semantic matcher"	rdfs:member	"result"
s4.2	"result of semantic matcher"	rdfs:member	"semantic matcher"
s4.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:predicate	"store"
s4.2	"storing the results of the semantic matcher for all possible query concepts"	rdf:object	"possible query concept"
s4.2	"possible query concept"	rdfs:subClassOf	"concept"
s4.2	"query concept"	rdfs:subClassOf	"concept"
s4.2	"query concept"	rdfs:member	"query"
s4.2	"possible query"	rdfs:member	"possible"
s4.2	"possible query concept"	rdfs:member	"possible query"
s4.2	"possible query"	rdfs:subClassOf	"query"
s4.2	"possible query concept"	rdfs:subClassOf	"query concept"
s4.1	"the majority of currently existing approaches focuses on centralized architectures typically by storing the results of the semantic matcher for all possible query concepts"
s4.1	"the majority of currently existing approaches focuses on centralized architectures typically by storing the results of the semantic matcher for all possible query concepts"	rdf:subject	"majority of currently exist approach"
s4.1	"majority of currently exist approach"	rdfs:member	"majority"
s4.1	"majority of currently exist approach"	rdfs:member	"approach"
s4.1	"currently exist"	rdfs:subClassOf	"exist"
s4.1	"majority of"	rdfs:member	"majority"
s4.1	"majority of"	rdfs:member	"of"
s4.1	"the majority of currently existing approaches focuses on centralized architectures typically by storing the results of the semantic matcher for all possible query concepts"	rdf:predicate	"focus"
s4.1	"the majority of currently existing approaches focuses on centralized architectures typically by storing the results of the semantic matcher for all possible query concepts"	rdf:object	"centralize architecture"
s4.1	"centralize architecture"	rdfs:subClassOf	"architecture"
s4.1	"centralize architecture"	rdfs:member	"centralize"
s4.1	"the majority of currently existing approaches focuses on centralized architectures typically by storing the results of the semantic matcher for all possible query concepts"	local:AM-MNR	"typically by store the result of the semantic matcher for all possible query concept"
s4.1	"typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"semantic matcher"
s4.1	"typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"result"
s4.1	"typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"possible query concept"
s4.1	"typically by store the result of the semantic matcher for all possible query concept"	rdfs:member	"store"
s4.1	"possible query concept"	rdfs:subClassOf	"concept"
s4.1	"query concept"	rdfs:subClassOf	"concept"
s4.1	"semantic matcher"	rdfs:subClassOf	"matcher"
s4.1	"query concept"	rdfs:member	"query"
s4.1	"possible query"	rdfs:member	"possible"
s4.1	"possible query concept"	rdfs:member	"possible query"
s4.1	"semantic matcher"	rdfs:member	"semantic"
s4.1	"possible query"	rdfs:subClassOf	"query"
s4.1	"possible query concept"	rdfs:subClassOf	"query concept"
s4.1	"typically store"	rdfs:subClassOf	"store"
s4.1	"result of semantic matcher"	rdfs:member	"result"
s4.1	"result of semantic matcher"	rdfs:member	"semantic matcher"
s4.1	"semantic matcher for possible query concept"	rdfs:member	"semantic matcher"
s4.1	"semantic matcher for possible query concept"	rdfs:member	"possible query concept"
s4	"currently existing approaches"
s4	"currently existing approaches"	rdf:subject	"approach"
s4	"currently existing approaches"	rdf:predicate	"exist"
s4	"currently existing approaches"	local:AM-TMP	"currently"
s3.1	"the majority of currently existing approaches focuses on deals with efficiency typically by precomputing concepts"
s3.1	"the majority of currently existing approaches focuses on deals with efficiency typically by precomputing concepts"	rdf:subject	"majority of currently exist approach"
s3.1	"majority of currently exist approach"	rdfs:member	"majority"
s3.1	"majority of currently exist approach"	rdfs:member	"approach"
s3.1	"currently exist"	rdfs:subClassOf	"exist"
s3.1	"majority of"	rdfs:member	"majority"
s3.1	"majority of"	rdfs:member	"of"
s3.1	"the majority of currently existing approaches focuses on deals with efficiency typically by precomputing concepts"	rdf:predicate	"focus"
s3.1	"the majority of currently existing approaches focuses on deals with efficiency typically by precomputing concepts"	rdf:object	"deal with efficiency typically by precomputing concept"
s3.1	"deal with efficiency typically by precomputing concept"	rdfs:member	"concept"
s3.1	"deal with efficiency typically by precomputing concept"	rdfs:member	"efficiency"
s3.1	"deal with efficiency typically by precomputing concept"	rdfs:member	"deal"
s3.1	"typically precomputing"	rdfs:subClassOf	"precomputing"
s3.1	"deal with efficiency"	rdfs:member	"deal"
s3.1	"deal with efficiency"	rdfs:member	"efficiency"
s3	"currently existing approaches"
s3	"currently existing approaches"	rdf:subject	"approach"
s3	"currently existing approaches"	rdf:predicate	"exist"
s3	"currently existing approaches"	local:AM-TMP	"currently"
s2.1	"the majority of currently existing approaches focuses on centralized architectures typically by precomputing concepts"
s2.1	"the majority of currently existing approaches focuses on centralized architectures typically by precomputing concepts"	rdf:subject	"majority of currently exist approach"
s2.1	"majority of currently exist approach"	rdfs:member	"majority"
s2.1	"majority of currently exist approach"	rdfs:member	"approach"
s2.1	"currently exist"	rdfs:subClassOf	"exist"
s2.1	"majority of"	rdfs:member	"majority"
s2.1	"majority of"	rdfs:member	"of"
s2.1	"the majority of currently existing approaches focuses on centralized architectures typically by precomputing concepts"	rdf:predicate	"focus"
s2.1	"the majority of currently existing approaches focuses on centralized architectures typically by precomputing concepts"	rdf:object	"centralize architecture"
s2.1	"centralize architecture"	rdfs:subClassOf	"architecture"
s2.1	"centralize architecture"	rdfs:member	"centralize"
s2.1	"the majority of currently existing approaches focuses on centralized architectures typically by precomputing concepts"	local:AM-MNR	"typically by precomputing concept"
s2.1	"typically precomputing"	rdfs:subClassOf	"precomputing"
s2	"currently existing approaches"
s2	"currently existing approaches"	rdf:subject	"approach"
s2	"currently existing approaches"	rdf:predicate	"exist"
s2	"currently existing approaches"	local:AM-TMP	"currently"
s1	"scalable discovery mechanisms enabling serviceoriented architectures on the semantic web"
s1	"scalable discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:subject	"scalable discovery mechanism"
s1	"scalable discovery"	rdfs:member	"scalable"
s1	"scalable discovery mechanism"	rdfs:member	"scalable discovery"
s1	"scalable discovery"	rdfs:subClassOf	"discovery"
s1	"scalable discovery mechanism"	rdfs:subClassOf	"mechanism"
s1	"discovery mechanism"	rdfs:member	"discovery"
s1	"discovery mechanism"	rdfs:subClassOf	"mechanism"
s1	"scalable discovery mechanism"	rdfs:subClassOf	"discovery mechanism"
s1	"scalable discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:predicate	"enable"
s1	"scalable discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:object	"serviceoriented architecture on the semantic web"
s1	"serviceoriented architecture on the semantic web"	rdfs:member	"architecture"
s1	"serviceoriented architecture on the semantic web"	rdfs:member	"semantic web"
s1	"semantic web"	rdfs:member	"semantic"
s1	"semantic web"	rdfs:subClassOf	"web"
s1	"serviceoriented architecture"	rdfs:subClassOf	"architecture"
s1	"serviceoriented architecture on semantic web"	rdfs:member	"serviceoriented architecture"
s1	"serviceoriented architecture on semantic web"	rdfs:member	"semantic web"
s0	"efficient discovery mechanisms enabling serviceoriented architectures on the semantic web"
s0	"efficient discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:subject	"efficient discovery mechanism"
s0	"efficient discovery"	rdfs:subClassOf	"discovery"
s0	"efficient discovery"	rdfs:member	"efficient"
s0	"efficient discovery mechanism"	rdfs:member	"efficient discovery"
s0	"discovery mechanism"	rdfs:member	"discovery"
s0	"efficient discovery mechanism"	rdfs:subClassOf	"mechanism"
s0	"discovery mechanism"	rdfs:subClassOf	"mechanism"
s0	"efficient discovery mechanism"	rdfs:subClassOf	"discovery mechanism"
s0	"efficient discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:predicate	"enable"
s0	"efficient discovery mechanisms enabling serviceoriented architectures on the semantic web"	rdf:object	"serviceoriented architecture on the semantic web"
s0	"serviceoriented architecture on the semantic web"	rdfs:member	"architecture"
s0	"serviceoriented architecture on the semantic web"	rdfs:member	"semantic web"
s0	"semantic web"	rdfs:member	"semantic"
s0	"semantic web"	rdfs:subClassOf	"web"
s0	"serviceoriented architecture"	rdfs:subClassOf	"architecture"
s0	"serviceoriented architecture on semantic web"	rdfs:member	"serviceoriented architecture"
s0	"serviceoriented architecture on semantic web"	rdfs:member	"semantic web"
