s14	"the results illustrate the efficiency and generality of this method"
s14	"the results illustrate the efficiency and generality of this method"	rdf:subject	"result"
s14	"the results illustrate the efficiency and generality of this method"	rdf:predicate	"illustrate"
s14	"the results illustrate the efficiency and generality of this method"	rdf:object	"efficiency and generality of this method"
s14	"efficiency and generality of this method"	rdfs:member	"method"
s14	"efficiency and generality of this method"	rdfs:member	"generality"
s14	"efficiency and generality of this method"	rdfs:member	"efficiency"
s14	"efficiency of method"	rdfs:member	"efficiency"
s14	"efficiency of method"	rdfs:member	"method"
s13.1	"resulting classifiers"
s13.1	"resulting classifiers"	rdf:subject	"classifier"
s13.1	"resulting classifiers"	rdf:predicate	"result"
s13	"we evaluate the resulting classifiers on one with heterogeneous instances"
s13	"we evaluate the resulting classifiers on one with heterogeneous instances"	rdf:subject	"we"
s13	"we evaluate the resulting classifiers on one with heterogeneous instances"	rdf:predicate	"evaluate"
s13	"we evaluate the resulting classifiers on one with heterogeneous instances"	rdf:object	"result classifier on one with heterogeneous instance"
s13	"result classifier on one with heterogeneous instance"	rdfs:member	"heterogeneous instance"
s13	"result classifier on one with heterogeneous instance"	rdfs:member	"result classifier"
s13	"result classifier"	rdfs:subClassOf	"classifier"
s13	"heterogeneous instance"	rdfs:subClassOf	"instance"
s13	"heterogeneous instance"	rdfs:member	"heterogeneous"
s13	"result classifier"	rdfs:member	"result"
s13	"result classifier on one"	rdfs:member	"result classifier"
s13	"result classifier on one"	rdfs:member	"one"
s13	"one with heterogeneous instance"	rdfs:member	"one"
s13	"one with heterogeneous instance"	rdfs:member	"heterogeneous instance"
s12.1	"resulting classifiers"
s12.1	"resulting classifiers"	rdf:subject	"classifier"
s12.1	"resulting classifiers"	rdf:predicate	"result"
s12	"we evaluate the resulting classifiers on one with homogeneous"
s12	"we evaluate the resulting classifiers on one with homogeneous"	rdf:subject	"we"
s12	"we evaluate the resulting classifiers on one with homogeneous"	rdf:predicate	"evaluate"
s12	"we evaluate the resulting classifiers on one with homogeneous"	rdf:object	"result classifier on one with homogeneous"
s12	"result classifier"	rdfs:subClassOf	"classifier"
s12	"result classifier"	rdfs:member	"result"
s12	"result classifier on one"	rdfs:member	"result classifier"
s12	"result classifier on one"	rdfs:member	"one"
s12	"one with homogeneous"	rdfs:member	"one"
s12	"one with homogeneous"	rdfs:member	"homogeneous"
s11.1	"resulting classifiers on two realworld use cases"
s11.1	"resulting classifiers on two realworld use cases"	rdf:subject	"two realworld use case"
s11.1	"realworld use case"	rdfs:member	"realworld use"
s11.1	"realworld use"	rdfs:subClassOf	"use"
s11.1	"use case"	rdfs:member	"use"
s11.1	"realworld use"	rdfs:member	"realworld"
s11.1	"realworld use case"	rdfs:subClassOf	"case"
s11.1	"use case"	rdfs:subClassOf	"case"
s11.1	"realworld use case"	rdfs:subClassOf	"use case"
s11.1	"two realworld use case"	rdfs:subClassOf	"realworld use case"
s11.1	"resulting classifiers on two realworld use cases"	rdf:predicate	"result"
s11.1	"resulting classifiers on two realworld use cases"	rdf:object	"classifier"
s11	"we evaluate the resulting classifiers on two realworld use cases"
s11	"we evaluate the resulting classifiers on two realworld use cases"	rdf:subject	"we"
s11	"we evaluate the resulting classifiers on two realworld use cases"	rdf:predicate	"evaluate"
s11	"we evaluate the resulting classifiers on two realworld use cases"	rdf:object	"result classifier on two realworld use case"
s11	"result classifier on two realworld use case"	rdfs:member	"result classifier"
s11	"result classifier on two realworld use case"	rdfs:member	"realworld use case"
s11	"realworld use case"	rdfs:member	"realworld use"
s11	"result classifier"	rdfs:subClassOf	"classifier"
s11	"realworld use"	rdfs:subClassOf	"use"
s11	"result classifier"	rdfs:member	"result"
s11	"use case"	rdfs:member	"use"
s11	"realworld use"	rdfs:member	"realworld"
s11	"realworld use case"	rdfs:subClassOf	"case"
s11	"use case"	rdfs:subClassOf	"case"
s11	"realworld use case"	rdfs:subClassOf	"use case"
s11	"two realworld use case"	rdfs:subClassOf	"realworld use case"
s11	"result classifier on two realworld use case"	rdfs:member	"result classifier"
s11	"result classifier on two realworld use case"	rdfs:member	"two realworld use case"
s10.3	"the method can applied to any two corpora annotated with two own vocabularies"
s10.3	"the method can applied to any two corpora annotated with two own vocabularies"	rdf:subject	"method"
s10.3	"the method can applied to any two corpora annotated with two own vocabularies"	rdf:predicate	"apply"
s10.3	"the method can applied to any two corpora annotated with two own vocabularies"	rdf:object	"two corpus annotate with two own vocabulary"
s10.3	"two corpus annotate with two own vocabulary"	rdfs:member	"corpus annotate"
s10.3	"two corpus annotate with two own vocabulary"	rdfs:member	"own vocabulary"
s10.3	"own vocabulary"	rdfs:member	"own"
s10.3	"own vocabulary"	rdfs:subClassOf	"vocabulary"
s10.3	"corpus annotate"	rdfs:subClassOf	"annotate"
s10.3	"corpus annotate"	rdfs:member	"corpus"
s10.3	"two own vocabulary"	rdfs:subClassOf	"own vocabulary"
s10.3	"two corpus"	rdfs:subClassOf	"corpus"
s10.3	"annotate with two own vocabulary"	rdfs:member	"annotate"
s10.3	"annotate with two own vocabulary"	rdfs:member	"two own vocabulary"
s10.3	"the method can applied to any two corpora annotated with two own vocabularies"	local:AM-MOD	"can"
s10.2	"the advantage that no doubly annotated instances required so that the method can be applied to any two corpora annotated with two own vocabularies"
s10.2	"the advantage that no doubly annotated instances required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:subject	"doubly annotate instance"
s10.2	"doubly annotate instance"	rdfs:subClassOf	"instance"
s10.2	"annotate instance"	rdfs:subClassOf	"instance"
s10.2	"doubly annotate instance"	rdfs:member	"doubly annotate"
s10.2	"doubly annotate"	rdfs:subClassOf	"annotate"
s10.2	"annotate instance"	rdfs:member	"annotate"
s10.2	"doubly annotate"	rdfs:member	"doubly"
s10.2	"the advantage that no doubly annotated instances required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:predicate	"require"
s10.2	"the advantage that no doubly annotated instances required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:object	"advantage"
s10.2	"the advantage that no doubly annotated instances required so that the method can be applied to any two corpora annotated with two own vocabularies"	local:AM-PNC	"method can be apply to any two corpus annotate with two own vocabulary"
s10.2	"method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"corpus annotate"
s10.2	"method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"method"
s10.2	"method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"own vocabulary"
s10.2	"own vocabulary"	rdfs:member	"own"
s10.2	"own vocabulary"	rdfs:subClassOf	"vocabulary"
s10.2	"corpus annotate"	rdfs:subClassOf	"annotate"
s10.2	"corpus annotate"	rdfs:member	"corpus"
s10.2	"two own vocabulary"	rdfs:subClassOf	"own vocabulary"
s10.2	"two corpus"	rdfs:subClassOf	"corpus"
s10.2	"be apply"	rdfs:subClassOf	"apply"
s10.2	"can be apply"	rdfs:subClassOf	"be apply"
s10.2	"can be apply to two corpus"	rdfs:member	"can be apply"
s10.2	"can be apply to two corpus"	rdfs:member	"two corpus"
s10.2	"annotate with two own vocabulary"	rdfs:member	"annotate"
s10.2	"annotate with two own vocabulary"	rdfs:member	"two own vocabulary"
s10.1	"annotated with two own vocabularies"
s10.1	"annotated with two own vocabularies"	rdf:subject	"instance"
s10.1	"annotated with two own vocabularies"	rdf:predicate	"annotate"
s10.1	"annotated with two own vocabularies"	rdf:object	"two own vocabulary"
s10.1	"own vocabulary"	rdfs:member	"own"
s10.1	"own vocabulary"	rdfs:subClassOf	"vocabulary"
s10.1	"two own vocabulary"	rdfs:subClassOf	"own vocabulary"
s10	"this has the advantage that no doubly annotated instances are required so that the method can be applied to any two corpora annotated with two own vocabularies"
s10	"this has the advantage that no doubly annotated instances are required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:subject	"this"
s10	"this has the advantage that no doubly annotated instances are required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:predicate	"have"
s10	"this has the advantage that no doubly annotated instances are required so that the method can be applied to any two corpora annotated with two own vocabularies"	rdf:object	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"
s10	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"advantage"
s10	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"instance"
s10	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"corpus annotate"
s10	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"method"
s10	"advantage that no doubly annotate instance be require so that the method can be apply to any two corpus annotate with two own vocabulary"	rdfs:member	"own vocabulary"
s10	"own vocabulary"	rdfs:member	"own"
s10	"own vocabulary"	rdfs:subClassOf	"vocabulary"
s10	"corpus annotate"	rdfs:subClassOf	"annotate"
s10	"corpus annotate"	rdfs:member	"corpus"
s10	"two own vocabulary"	rdfs:subClassOf	"own vocabulary"
s10	"two corpus"	rdfs:subClassOf	"corpus"
s10	"be apply"	rdfs:subClassOf	"apply"
s10	"can be apply"	rdfs:subClassOf	"be apply"
s10	"be require"	rdfs:subClassOf	"require"
s10	"doubly annotate"	rdfs:subClassOf	"annotate"
s10	"no doubly"	rdfs:subClassOf	"doubly"
s10	"can be apply to two corpus"	rdfs:member	"can be apply"
s10	"can be apply to two corpus"	rdfs:member	"two corpus"
s10	"two corpus annotate"	rdfs:member	"two corpus"
s10	"two corpus annotate"	rdfs:member	"annotate"
s10	"annotate with two own vocabulary"	rdfs:member	"annotate"
s10	"annotate with two own vocabulary"	rdfs:member	"two own vocabulary"
s9.1	"a classification problem based on the similarity between instances of concepts"
s9.1	"a classification problem based on the similarity between instances of concepts"	rdf:subject	"classification problem"
s9.1	"classification problem"	rdfs:subClassOf	"problem"
s9.1	"classification problem"	rdfs:member	"classification"
s9.1	"a classification problem based on the similarity between instances of concepts"	rdf:predicate	"base"
s9.1	"a classification problem based on the similarity between instances of concepts"	rdf:object	"similarity between instance of concept"
s9.1	"similarity between instance of concept"	rdfs:member	"similarity"
s9.1	"similarity between instance of concept"	rdfs:member	"concept"
s9.1	"similarity between instance of concept"	rdfs:member	"instance"
s9.1	"similarity between instance"	rdfs:member	"similarity"
s9.1	"similarity between instance"	rdfs:member	"instance"
s9.1	"instance of concept"	rdfs:member	"instance"
s9.1	"instance of concept"	rdfs:member	"concept"
s9	"in this paper we approach the mapping problem as a classification problem based on the similarity between instances of concepts"
s9	"in this paper we approach the mapping problem as a classification problem based on the similarity between instances of concepts"	rdf:subject	"we"
s9	"in this paper we approach the mapping problem as a classification problem based on the similarity between instances of concepts"	rdf:predicate	"approach"
s9	"in this paper we approach the mapping problem as a classification problem based on the similarity between instances of concepts"	rdf:object	"map problem a a classification problem base on the similarity between instance of concept"
s9	"map problem a a classification problem base on the similarity between instance of concept"	rdfs:member	"classification problem base"
s9	"map problem a a classification problem base on the similarity between instance of concept"	rdfs:member	"instance"
s9	"map problem a a classification problem base on the similarity between instance of concept"	rdfs:member	"concept"
s9	"map problem a a classification problem base on the similarity between instance of concept"	rdfs:member	"map problem"
s9	"map problem a a classification problem base on the similarity between instance of concept"	rdfs:member	"similarity"
s9	"classification problem"	rdfs:member	"classification"
s9	"problem base"	rdfs:member	"problem"
s9	"classification problem base"	rdfs:subClassOf	"base"
s9	"map problem"	rdfs:subClassOf	"problem"
s9	"classification problem"	rdfs:subClassOf	"problem"
s9	"problem base"	rdfs:subClassOf	"base"
s9	"map problem"	rdfs:member	"map"
s9	"classification problem base"	rdfs:member	"classification problem"
s9	"classification problem base"	rdfs:subClassOf	"problem base"
s9	"classification problem base on similarity"	rdfs:member	"classification problem base"
s9	"classification problem base on similarity"	rdfs:member	"similarity"
s9	"similarity between instance"	rdfs:member	"similarity"
s9	"similarity between instance"	rdfs:member	"instance"
s9	"instance of concept"	rdfs:member	"instance"
s9	"instance of concept"	rdfs:member	"concept"
s9	"in this paper we approach the mapping problem as a classification problem based on the similarity between instances of concepts"	local:AM-LOC	"paper"
s8	"cases where a substantial set of instances that doubly annotated"
s8	"cases where a substantial set of instances that doubly annotated"	rdf:predicate	"annotate"
s8	"cases where a substantial set of instances that doubly annotated"	local:AM-LOC	"case where a substantial set of instance"
s8	"case where a substantial set of instance"	rdfs:member	"instance"
s8	"case where a substantial set of instance"	rdfs:member	"case"
s8	"case where a substantial set of instance"	rdfs:member	"substantial set"
s8	"substantial set"	rdfs:subClassOf	"set"
s8	"substantial set"	rdfs:member	"substantial"
s8	"substantial set of instance"	rdfs:member	"substantial set"
s8	"substantial set of instance"	rdfs:member	"instance"
s8	"cases where a substantial set of instances that doubly annotated"	local:AM-MNR	"doubly"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"	rdf:subject	"method"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"	rdf:predicate	"not investigate"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"	rdf:object	"ontology map linguistic technique"
s5	"ontology map linguistic technique"	rdfs:member	"linguistic technique"
s5	"ontology map linguistic technique"	rdfs:member	"ontology"
s5	"linguistic technique"	rdfs:member	"linguistic"
s5	"linguistic technique"	rdfs:subClassOf	"technique"
s5	"map linguistic technique"	rdfs:subClassOf	"linguistic technique"
s5	"ontology map linguistic technique"	rdfs:subClassOf	"map linguistic technique"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"	local:AM-MNR	"widely"
s5	"such methods not at present widely investigated in ontology mapping to linguistic techniques"	local:AM-TMP	"present"
s4.1	"ontology mapping compared to structural techniques"
s4.1	"ontology mapping compared to structural techniques"	rdf:subject	"ontology map"
s4.1	"ontology map"	rdfs:subClassOf	"map"
s4.1	"ontology map"	rdfs:member	"ontology"
s4.1	"ontology mapping compared to structural techniques"	rdf:predicate	"compare"
s4.1	"ontology mapping compared to structural techniques"	rdf:object	"structural technique"
s4.1	"structural technique"	rdfs:subClassOf	"technique"
s4.1	"structural technique"	rdfs:member	"structural"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"	rdf:subject	"method"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"	rdf:predicate	"not investigate"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"	rdf:object	"ontology map structural technique"
s4	"ontology map structural technique"	rdfs:member	"ontology"
s4	"ontology map structural technique"	rdfs:member	"structural technique"
s4	"structural technique"	rdfs:subClassOf	"technique"
s4	"structural technique"	rdfs:member	"structural"
s4	"map structural technique"	rdfs:subClassOf	"structural technique"
s4	"ontology map structural technique"	rdfs:subClassOf	"map structural technique"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"	local:AM-MNR	"widely"
s4	"such methods not at present widely investigated in ontology mapping to structural techniques"	local:AM-TMP	"present"
s3.2	"focusing on the most active parts of the ontologies"
s3.2	"focusing on the most active parts of the ontologies"	rdf:predicate	"focus"
s3.2	"focusing on the most active parts of the ontologies"	rdf:object	"active part of the ontology"
s3.2	"active part of the ontology"	rdfs:member	"active part"
s3.2	"active part of the ontology"	rdfs:member	"ontology"
s3.2	"active part"	rdfs:subClassOf	"part"
s3.2	"active part"	rdfs:member	"active"
s3.2	"active part of ontology"	rdfs:member	"active part"
s3.2	"active part of ontology"	rdfs:member	"ontology"
s3.1	"instancebased methods for solving this problem have the advantage of focusing on the most active parts of the ontologies"
s3.1	"instancebased methods for solving this problem have the advantage of focusing on the most active parts of the ontologies"	rdf:subject	"instancebased method for solve this problem"
s3.1	"instancebased method for solve this problem"	rdfs:member	"problem"
s3.1	"instancebased method for solve this problem"	rdfs:member	"solve"
s3.1	"instancebased method for solve this problem"	rdfs:member	"instancebased method"
s3.1	"instancebased method"	rdfs:member	"instancebased"
s3.1	"instancebased method"	rdfs:subClassOf	"method"
s3.1	"instancebased methods for solving this problem have the advantage of focusing on the most active parts of the ontologies"	rdf:predicate	"have"
s3.1	"instancebased methods for solving this problem have the advantage of focusing on the most active parts of the ontologies"	rdf:object	"advantage of focus on the most active part of the ontology"
s3.1	"advantage of focus on the most active part of the ontology"	rdfs:member	"focus"
s3.1	"advantage of focus on the most active part of the ontology"	rdfs:member	"advantage"
s3.1	"advantage of focus on the most active part of the ontology"	rdfs:member	"ontology"
s3.1	"advantage of focus on the most active part of the ontology"	rdfs:member	"most active part"
s3.1	"most active part"	rdfs:subClassOf	"part"
s3.1	"active part"	rdfs:member	"active"
s3.1	"most active part"	rdfs:member	"most active"
s3.1	"most active"	rdfs:member	"most"
s3.1	"active part"	rdfs:subClassOf	"part"
s3.1	"most active"	rdfs:subClassOf	"active"
s3.1	"advantage of focus"	rdfs:member	"advantage"
s3.1	"advantage of focus"	rdfs:member	"focus"
s3.1	"advantage of focus on active part"	rdfs:member	"advantage of focus"
s3.1	"advantage of focus on active part"	rdfs:member	"active part"
s3.1	"active part of ontology"	rdfs:member	"active part"
s3.1	"active part of ontology"	rdfs:member	"ontology"
s3	"instancebased methods solving this problem"
s3	"instancebased methods solving this problem"	rdf:subject	"instancebased method"
s3	"instancebased method"	rdfs:subClassOf	"method"
s3	"instancebased methods solving this problem"	rdf:predicate	"solve"
s3	"instancebased methods solving this problem"	rdf:object	"problem"
s2.2	"the most active parts of the ontologies actually used"
s2.2	"the most active parts of the ontologies actually used"	rdf:subject	"active part of the ontology"
s2.2	"active part of the ontology"	rdfs:member	"active part"
s2.2	"active part of the ontology"	rdfs:member	"ontology"
s2.2	"active part"	rdfs:subClassOf	"part"
s2.2	"active part"	rdfs:member	"active"
s2.2	"active part of ontology"	rdfs:member	"active part"
s2.2	"active part of ontology"	rdfs:member	"ontology"
s2.2	"the most active parts of the ontologies actually used"	rdf:predicate	"use"
s2.2	"the most active parts of the ontologies actually used"	local:AM-ADV	"actually"
s2.1	"instancebased methods for solving this problem reflect concept semantics as the most active parts of the ontologies are actually being used"
s2.1	"instancebased methods for solving this problem reflect concept semantics as the most active parts of the ontologies are actually being used"	rdf:subject	"concept semantics a the most active part of the ontology be actually be use"
s2.1	"concept semantics a the most active part of the ontology be actually be use"	rdfs:member	"most active part"
s2.1	"concept semantics a the most active part of the ontology be actually be use"	rdfs:member	"ontology"
s2.1	"concept semantics a the most active part of the ontology be actually be use"	rdfs:member	"concept semantics"
s2.1	"concept semantics a the most active part of the ontology be actually be use"	rdfs:member	"use"
s2.1	"most active part"	rdfs:subClassOf	"part"
s2.1	"active part"	rdfs:member	"active"
s2.1	"most active part"	rdfs:member	"most active"
s2.1	"most active"	rdfs:member	"most"
s2.1	"concept semantics"	rdfs:subClassOf	"semantics"
s2.1	"concept semantics"	rdfs:member	"concept"
s2.1	"active part"	rdfs:subClassOf	"part"
s2.1	"most active"	rdfs:subClassOf	"active"
s2.1	"actually use"	rdfs:subClassOf	"use"
s2.1	"be actually use"	rdfs:subClassOf	"actually use"
s2.1	"active part of ontology"	rdfs:member	"active part"
s2.1	"active part of ontology"	rdfs:member	"ontology"
s2.1	"instancebased methods for solving this problem reflect concept semantics as the most active parts of the ontologies are actually being used"	rdf:predicate	"reflect"
s2.1	"instancebased methods for solving this problem reflect concept semantics as the most active parts of the ontologies are actually being used"	rdf:object	"instancebased method for solve this problem"
s2.1	"instancebased method for solve this problem"	rdfs:member	"problem"
s2.1	"instancebased method for solve this problem"	rdfs:member	"solve"
s2.1	"instancebased method for solve this problem"	rdfs:member	"instancebased method"
s2.1	"instancebased method"	rdfs:member	"instancebased"
s2.1	"instancebased method"	rdfs:subClassOf	"method"
s2	"solving this problem"
s2	"solving this problem"	rdf:subject	"problem"
s2	"solving this problem"	rdf:predicate	"solve"
s1	"finding mappings between compatible ontologies is an difficult open problem"
s1	"finding mappings between compatible ontologies is an difficult open problem"	rdf:subject	"mapping between compatible ontology be an difficult open problem"
s1	"mapping between compatible ontology be an difficult open problem"	rdfs:member	"difficult open problem"
s1	"mapping between compatible ontology be an difficult open problem"	rdfs:member	"compatible ontology"
s1	"difficult open problem"	rdfs:member	"difficult open"
s1	"difficult open problem"	rdfs:subClassOf	"problem"
s1	"open problem"	rdfs:member	"open"
s1	"open problem"	rdfs:subClassOf	"problem"
s1	"compatible ontology"	rdfs:subClassOf	"ontology"
s1	"difficult open"	rdfs:member	"difficult"
s1	"compatible ontology"	rdfs:member	"compatible"
s1	"difficult open"	rdfs:subClassOf	"open"
s1	"difficult open problem"	rdfs:subClassOf	"open problem"
s1	"mapping between compatible ontology"	rdfs:member	"mapping"
s1	"mapping between compatible ontology"	rdfs:member	"compatible ontology"
s1	"finding mappings between compatible ontologies is an difficult open problem"	rdf:predicate	"find"
s0	"finding mappings between compatible ontologies is an important open problem"
s0	"finding mappings between compatible ontologies is an important open problem"	rdf:subject	"mapping between compatible ontology be an important open problem"
s0	"mapping between compatible ontology be an important open problem"	rdfs:member	"important open problem"
s0	"mapping between compatible ontology be an important open problem"	rdfs:member	"compatible ontology"
s0	"important open"	rdfs:subClassOf	"open"
s0	"important open"	rdfs:member	"important"
s0	"important open problem"	rdfs:member	"important open"
s0	"important open problem"	rdfs:subClassOf	"problem"
s0	"open problem"	rdfs:member	"open"
s0	"open problem"	rdfs:subClassOf	"problem"
s0	"compatible ontology"	rdfs:subClassOf	"ontology"
s0	"compatible ontology"	rdfs:member	"compatible"
s0	"important open problem"	rdfs:subClassOf	"open problem"
s0	"mapping between compatible ontology"	rdfs:member	"mapping"
s0	"mapping between compatible ontology"	rdfs:member	"compatible ontology"
s0	"finding mappings between compatible ontologies is an important open problem"	rdf:predicate	"find"
