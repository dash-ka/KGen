s22	"we present experimental results"
s22	"we present experimental results"	rdf:subject	"we"
s22	"we present experimental results"	rdf:predicate	"present"
s22	"we present experimental results"	rdf:object	"experimental result"
s22	"experimental result"	rdfs:subClassOf	"result"
s22	"experimental result"	rdfs:member	"experimental"
s21	"experimental results that demonstrate the strong performance of this method"
s21	"experimental results that demonstrate the strong performance of this method"	rdf:subject	"experimental result"
s21	"experimental result"	rdfs:subClassOf	"result"
s21	"experimental result"	rdfs:member	"experimental"
s21	"experimental results that demonstrate the strong performance of this method"	rdf:predicate	"demonstrate"
s21	"experimental results that demonstrate the strong performance of this method"	rdf:object	"strong performance of this method"
s21	"strong performance of this method"	rdfs:member	"strong performance"
s21	"strong performance of this method"	rdfs:member	"method"
s21	"strong performance"	rdfs:subClassOf	"performance"
s21	"strong performance"	rdfs:member	"strong"
s21	"strong performance of method"	rdfs:member	"strong performance"
s21	"strong performance of method"	rdfs:member	"method"
s19.2	"obtain a representation"
s19.2	"obtain a representation"	rdf:subject	"representation"
s19.2	"obtain a representation"	rdf:predicate	"obtain"
s19.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"
s19.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:subject	"neural network model base on graph convolutional network"
s19.1	"neural network model base on graph convolutional network"	rdfs:member	"convolutional network"
s19.1	"neural network model base on graph convolutional network"	rdfs:member	"neural network model base"
s19.1	"neural network model base on graph convolutional network"	rdfs:member	"graph"
s19.1	"model base"	rdfs:member	"model"
s19.1	"convolutional network"	rdfs:subClassOf	"network"
s19.1	"neural network"	rdfs:member	"neural"
s19.1	"neural network model base"	rdfs:member	"neural network model"
s19.1	"model base"	rdfs:subClassOf	"base"
s19.1	"network model"	rdfs:subClassOf	"model"
s19.1	"convolutional network"	rdfs:member	"convolutional"
s19.1	"neural network"	rdfs:subClassOf	"network"
s19.1	"neural network model"	rdfs:member	"neural network"
s19.1	"neural network model"	rdfs:subClassOf	"model"
s19.1	"network model base"	rdfs:subClassOf	"base"
s19.1	"network model base"	rdfs:member	"network model"
s19.1	"neural network model base"	rdfs:subClassOf	"base"
s19.1	"network model"	rdfs:member	"network"
s19.1	"graph convolutional network"	rdfs:subClassOf	"convolutional network"
s19.1	"network model base"	rdfs:subClassOf	"model base"
s19.1	"neural network model base"	rdfs:subClassOf	"network model base"
s19.1	"neural network model base on graph convolutional network"	rdfs:member	"neural network model base"
s19.1	"neural network model base on graph convolutional network"	rdfs:member	"graph convolutional network"
s19.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:predicate	"refine"
s19.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:object	"initial vector representation of the predicate"
s19.1	"initial vector representation of the predicate"	rdfs:member	"initial vector representation"
s19.1	"initial vector representation of the predicate"	rdfs:member	"predicate"
s19.1	"vector representation"	rdfs:subClassOf	"representation"
s19.1	"vector representation"	rdfs:member	"vector"
s19.1	"initial vector"	rdfs:subClassOf	"vector"
s19.1	"initial vector representation"	rdfs:member	"initial vector"
s19.1	"initial vector"	rdfs:member	"initial"
s19.1	"initial vector representation"	rdfs:subClassOf	"representation"
s19.1	"initial vector representation"	rdfs:subClassOf	"vector representation"
s19.1	"initial vector representation of predicate"	rdfs:member	"initial vector representation"
s19.1	"initial vector representation of predicate"	rdfs:member	"predicate"
s19.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	local:AM-PNC	"obtain a representation"
s19	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"
s19	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdf:predicate	"base"
s19	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdf:object	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"
s19	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"	rdfs:member	"representation"
s19	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"	rdfs:member	"predicate"
s19	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"	rdfs:member	"initial vector representation"
s19	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"	rdfs:member	"convolutional network"
s19	"graph convolutional network to refine the initial vector representation of the predicate to obtain a representation"	rdfs:member	"graph"
s19	"convolutional network"	rdfs:subClassOf	"network"
s19	"vector representation"	rdfs:subClassOf	"representation"
s19	"convolutional network"	rdfs:member	"convolutional"
s19	"vector representation"	rdfs:member	"vector"
s19	"initial vector"	rdfs:subClassOf	"vector"
s19	"initial vector representation"	rdfs:member	"initial vector"
s19	"initial vector"	rdfs:member	"initial"
s19	"initial vector representation"	rdfs:subClassOf	"representation"
s19	"initial vector representation"	rdfs:subClassOf	"vector representation"
s19	"graph convolutional network"	rdfs:subClassOf	"convolutional network"
s19	"initial vector representation of predicate"	rdfs:member	"initial vector representation"
s19	"initial vector representation of predicate"	rdfs:member	"predicate"
s18	"we then use a neural network model"
s18	"we then use a neural network model"	rdf:subject	"we"
s18	"we then use a neural network model"	rdf:predicate	"use"
s18	"we then use a neural network model"	rdf:object	"neural network model"
s18	"neural network"	rdfs:member	"neural"
s18	"network model"	rdfs:subClassOf	"model"
s18	"neural network"	rdfs:subClassOf	"network"
s18	"neural network model"	rdfs:member	"neural network"
s18	"neural network model"	rdfs:subClassOf	"model"
s18	"network model"	rdfs:member	"network"
s18	"neural network model"	rdfs:subClassOf	"network model"
s18	"we then use a neural network model"	local:AM-TMP	"then"
s16.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"
s16.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:subject	"type of rule in which the predicate cooccur"
s16.2	"type of rule in which the predicate cooccur"	rdfs:member	"rule"
s16.2	"type of rule in which the predicate cooccur"	rdfs:member	"type"
s16.2	"type of rule in which the predicate cooccur"	rdfs:member	"predicate cooccur"
s16.2	"predicate cooccur"	rdfs:subClassOf	"cooccur"
s16.2	"predicate cooccur"	rdfs:member	"predicate"
s16.2	"type of rule"	rdfs:member	"type"
s16.2	"type of rule"	rdfs:member	"rule"
s16.2	"type of rule in which"	rdfs:member	"type of rule"
s16.2	"type of rule in which"	rdfs:member	"which"
s16.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:predicate	"reflect"
s16.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:object	"predicate that cooccur in the vector annotation"
s16.2	"predicate that cooccur in the vector annotation"	rdfs:member	"predicate"
s16.2	"predicate that cooccur in the vector annotation"	rdfs:member	"vector annotation"
s16.2	"vector annotation"	rdfs:member	"vector"
s16.2	"vector annotation"	rdfs:subClassOf	"annotation"
s16.2	"predicate in vector annotation"	rdfs:member	"predicate"
s16.2	"predicate in vector annotation"	rdfs:member	"vector annotation"
s16.1	"predicates that cooccur in the vectors annotations"
s16.1	"predicates that cooccur in the vectors annotations"	rdf:subject	"predicate"
s16.1	"predicates that cooccur in the vectors annotations"	rdf:predicate	"cooccur"
s16.1	"predicates that cooccur in the vectors annotations"	local:AM-LOC	"vector annotation"
s16.1	"vector annotation"	rdfs:member	"vector"
s16.1	"vector annotation"	rdfs:subClassOf	"annotation"
s16	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"
s16	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:subject	"edge"
s16	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:predicate	"connect"
s16	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:object	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"
s16	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"	rdfs:member	"predicate"
s16	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"	rdfs:member	"type"
s16	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"	rdfs:member	"predicate cooccur"
s16	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"	rdfs:member	"rule"
s16	"predicate that cooccur in the vector annotation reflect the type of rule in which the predicate cooccur"	rdfs:member	"vector annotation"
s16	"predicate cooccur"	rdfs:subClassOf	"cooccur"
s16	"vector annotation"	rdfs:member	"vector"
s16	"vector annotation"	rdfs:subClassOf	"annotation"
s16	"predicate cooccur"	rdfs:member	"predicate"
s16	"predicate in vector annotation"	rdfs:member	"predicate"
s16	"predicate in vector annotation"	rdfs:member	"vector annotation"
s16	"type of rule"	rdfs:member	"type"
s16	"type of rule"	rdfs:member	"rule"
s16	"type of rule in which"	rdfs:member	"type of rule"
s16	"type of rule in which"	rdfs:member	"which"
s15.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"
s15.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:subject	"type of rule in which the predicate cooccur"
s15.2	"type of rule in which the predicate cooccur"	rdfs:member	"rule"
s15.2	"type of rule in which the predicate cooccur"	rdfs:member	"type"
s15.2	"type of rule in which the predicate cooccur"	rdfs:member	"predicate cooccur"
s15.2	"predicate cooccur"	rdfs:subClassOf	"cooccur"
s15.2	"predicate cooccur"	rdfs:member	"predicate"
s15.2	"type of rule"	rdfs:member	"type"
s15.2	"type of rule"	rdfs:member	"rule"
s15.2	"type of rule in which"	rdfs:member	"type of rule"
s15.2	"type of rule in which"	rdfs:member	"which"
s15.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:predicate	"reflect"
s15.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:object	"predicate that cooccur in the same rule"
s15.2	"predicate that cooccur in the same rule"	rdfs:member	"predicate"
s15.2	"predicate that cooccur in the same rule"	rdfs:member	"same rule"
s15.2	"same rule"	rdfs:member	"same"
s15.2	"same rule"	rdfs:subClassOf	"rule"
s15.2	"predicate in same rule"	rdfs:member	"predicate"
s15.2	"predicate in same rule"	rdfs:member	"same rule"
s15.1	"predicates that cooccur in the same rule"
s15.1	"predicates that cooccur in the same rule"	rdf:subject	"predicate"
s15.1	"predicates that cooccur in the same rule"	rdf:predicate	"cooccur"
s15.1	"predicates that cooccur in the same rule"	rdf:object	"rule"
s15	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"
s15	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:subject	"edge"
s15	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:predicate	"connect"
s15	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:object	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"
s15	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"	rdfs:member	"predicate"
s15	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"	rdfs:member	"same rule"
s15	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"	rdfs:member	"type"
s15	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"	rdfs:member	"predicate cooccur"
s15	"predicate that cooccur in the same rule reflect the type of rule in which the predicate cooccur"	rdfs:member	"rule"
s15	"predicate cooccur"	rdfs:subClassOf	"cooccur"
s15	"same rule"	rdfs:member	"same"
s15	"same rule"	rdfs:subClassOf	"rule"
s15	"predicate cooccur"	rdfs:member	"predicate"
s15	"predicate in same rule"	rdfs:member	"predicate"
s15	"predicate in same rule"	rdfs:member	"same rule"
s15	"type of rule"	rdfs:member	"type"
s15	"type of rule"	rdfs:member	"rule"
s15	"type of rule in which"	rdfs:member	"type of rule"
s15	"type of rule in which"	rdfs:member	"which"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:subject	"external resource such a the vector"
s14.1	"external resource such a the vector"	rdfs:member	"external resource"
s14.1	"external resource such a the vector"	rdfs:member	"vector"
s14.1	"external resource"	rdfs:member	"external"
s14.1	"external resource"	rdfs:subClassOf	"resource"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:predicate	"estimate"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:object	"rule base itself rule base"
s14.1	"rule base"	rdfs:member	"rule"
s14.1	"rule base"	rdfs:subClassOf	"base"
s14.1	"itself base"	rdfs:subClassOf	"base"
s14.1	"rule itself base"	rdfs:subClassOf	"itself base"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	local:AM-MOD	"could"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:subject	"vector"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:predicate	"obtain"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:object	"external resource such a the vector could be estimate from the rule base the rule base itself"
s14	"external resource such a the vector could be estimate from the rule base the rule base itself"	rdfs:member	"rule base"
s14	"external resource such a the vector could be estimate from the rule base the rule base itself"	rdfs:member	"rule"
s14	"external resource such a the vector could be estimate from the rule base the rule base itself"	rdfs:member	"external resource"
s14	"external resource such a the vector could be estimate from the rule base the rule base itself"	rdfs:member	"vector"
s14	"rule base"	rdfs:member	"rule"
s14	"external resource"	rdfs:member	"external"
s14	"external resource"	rdfs:subClassOf	"resource"
s14	"rule base"	rdfs:subClassOf	"base"
s14	"itself base"	rdfs:subClassOf	"base"
s14	"rule itself base"	rdfs:subClassOf	"itself base"
s14	"could estimate"	rdfs:subClassOf	"estimate"
s14	"vector resource"	rdfs:subClassOf	"resource"
s14	"external vector resource"	rdfs:subClassOf	"vector resource"
s14	"could estimate from rule base"	rdfs:member	"could estimate"
s14	"could estimate from rule base"	rdfs:member	"rule base"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	local:AM-MOD	"may"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:subject	"external resource such a word embeddings"
s13.1	"external resource such a word embeddings"	rdfs:member	"word embeddings"
s13.1	"external resource such a word embeddings"	rdfs:member	"external resource"
s13.1	"word embeddings"	rdfs:subClassOf	"embeddings"
s13.1	"external resource"	rdfs:member	"external"
s13.1	"external resource"	rdfs:subClassOf	"resource"
s13.1	"word embeddings"	rdfs:member	"word"
s13.1	"such word embeddings"	rdfs:subClassOf	"word embeddings"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:predicate	"estimate"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:object	"rule base itself rule base"
s13.1	"rule base"	rdfs:member	"rule"
s13.1	"rule base"	rdfs:subClassOf	"base"
s13.1	"itself base"	rdfs:subClassOf	"base"
s13.1	"rule itself base"	rdfs:subClassOf	"itself base"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	local:AM-MOD	"could"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:subject	"vector"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:predicate	"obtain"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:object	"external resource such a word embeddings could be estimate from the rule base the rule base itself"
s13	"external resource such a word embeddings could be estimate from the rule base the rule base itself"	rdfs:member	"rule base"
s13	"external resource such a word embeddings could be estimate from the rule base the rule base itself"	rdfs:member	"rule"
s13	"external resource such a word embeddings could be estimate from the rule base the rule base itself"	rdfs:member	"word embeddings"
s13	"external resource such a word embeddings could be estimate from the rule base the rule base itself"	rdfs:member	"external resource"
s13	"external resource"	rdfs:subClassOf	"resource"
s13	"rule base"	rdfs:subClassOf	"base"
s13	"word embeddings"	rdfs:subClassOf	"embeddings"
s13	"word embeddings"	rdfs:member	"word"
s13	"rule base"	rdfs:member	"rule"
s13	"external resource"	rdfs:member	"external"
s13	"itself base"	rdfs:subClassOf	"base"
s13	"rule itself base"	rdfs:subClassOf	"itself base"
s13	"could estimate"	rdfs:subClassOf	"estimate"
s13	"such word embeddings"	rdfs:subClassOf	"word embeddings"
s13	"could estimate from rule base"	rdfs:member	"could estimate"
s13	"could estimate from rule base"	rdfs:member	"rule base"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	local:AM-MOD	"may"
s10	"nodes of the annotated with the vectors"
s10	"nodes of the annotated with the vectors"	rdf:subject	"nod of the"
s10	"nod of the"	rdfs:member	"nod"
s10	"nod of the"	rdfs:member	"the"
s10	"nodes of the annotated with the vectors"	rdf:predicate	"annotate"
s10	"nodes of the annotated with the vectors"	rdf:object	"vector"
s8	"to this end we propose a graphbased representation of rule bases"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:subject	"we"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:predicate	"propose"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:object	"graphbased representation of rule base"
s8	"graphbased representation of rule base"	rdfs:member	"graphbased representation"
s8	"graphbased representation of rule base"	rdfs:member	"rule base"
s8	"rule base"	rdfs:member	"rule"
s8	"graphbased representation"	rdfs:subClassOf	"representation"
s8	"graphbased representation"	rdfs:member	"graphbased"
s8	"rule base"	rdfs:subClassOf	"base"
s8	"graphbased representation of rule base"	rdfs:member	"graphbased representation"
s8	"graphbased representation of rule base"	rdfs:member	"rule base"
s8	"to this end we propose a graphbased representation of rule bases"	local:AM-TMP	"end"
s7.1	"we find rules"
s7.1	"we find rules"	rdf:subject	"we"
s7.1	"we find rules"	rdf:predicate	"find"
s7.1	"we find rules"	rdf:object	"rule"
s7	"we aim"
s7	"we aim"	rdf:subject	"we"
s7	"we aim"	rdf:predicate	"aim"
s6.2	"given ontology"
s6.2	"given ontology"	rdf:subject	"ontology"
s6.2	"given ontology"	rdf:predicate	"give"
s6.1	"which can not deduced from the given ontology"
s6.1	"which can not deduced from the given ontology"	rdf:predicate	"not deduce"
s6.1	"which can not deduced from the given ontology"	rdf:object	"give ontology"
s6.1	"which can not deduced from the given ontology"	local:AM-MOD	"can"
s6	"in particular we aim which can not be deduced from the given ontology"
s6	"in particular we aim which can not be deduced from the given ontology"	rdf:subject	"we"
s6	"in particular we aim which can not be deduced from the given ontology"	rdf:predicate	"aim"
s6	"in particular we aim which can not be deduced from the given ontology"	rdf:object	"deduce from the give ontology"
s6	"deduce from the give ontology"	rdfs:member	"deduce"
s6	"deduce from the give ontology"	rdfs:member	"give ontology"
s6	"give ontology"	rdfs:member	"give"
s6	"give ontology"	rdfs:subClassOf	"ontology"
s6	"deduce from the"	rdfs:member	"deduce"
s6	"deduce from the"	rdfs:member	"the"
s6	"in particular we aim which can not be deduced from the given ontology"	local:AM-ADV	"particular"
s4	"ontologies that encoded as a set of existential rules"
s4	"ontologies that encoded as a set of existential rules"	rdf:subject	"ontology"
s4	"ontologies that encoded as a set of existential rules"	rdf:predicate	"encode"
s4	"ontologies that encoded as a set of existential rules"	rdf:object	"set of existential rule"
s4	"set of existential rule"	rdfs:member	"existential rule"
s4	"set of existential rule"	rdfs:member	"set"
s4	"existential rule"	rdfs:subClassOf	"rule"
s4	"existential rule"	rdfs:member	"existential"
s4	"set of existential rule"	rdfs:member	"set"
s4	"set of existential rule"	rdfs:member	"existential rule"
s3.1	"in this paper we automatically extending ontologies"
s3.1	"in this paper we automatically extending ontologies"	rdf:subject	"we"
s3.1	"in this paper we automatically extending ontologies"	rdf:predicate	"extend"
s3.1	"in this paper we automatically extending ontologies"	rdf:object	"ontology"
s3.1	"in this paper we automatically extending ontologies"	local:AM-LOC	"paper"
s3.1	"in this paper we automatically extending ontologies"	local:AM-MNR	"automatically"
s3	"in this paper we instead focus on automatically"
s3	"in this paper we instead focus on automatically"	rdf:subject	"we"
s3	"in this paper we instead focus on automatically"	rdf:predicate	"focus"
s3	"in this paper we instead focus on automatically"	local:AM-DIS	"instead"
s3	"in this paper we instead focus on automatically"	local:AM-LOC	"paper"
s3	"in this paper we instead focus on automatically"	local:AM-MNR	"automatically"
s2.1	"finding plausible knowledge graph triples in particular"
s2.1	"finding plausible knowledge graph triples in particular"	rdf:subject	"plausible knowledge graph triple"
s2.1	"plausible knowledge graph"	rdfs:subClassOf	"graph"
s2.1	"plausible knowledge graph triple"	rdfs:member	"plausible knowledge graph"
s2.1	"graph triple"	rdfs:subClassOf	"triple"
s2.1	"plausible knowledge"	rdfs:member	"plausible"
s2.1	"knowledge graph triple"	rdfs:member	"knowledge graph"
s2.1	"plausible knowledge"	rdfs:subClassOf	"knowledge"
s2.1	"knowledge graph"	rdfs:subClassOf	"graph"
s2.1	"knowledge graph"	rdfs:member	"knowledge"
s2.1	"plausible knowledge graph triple"	rdfs:subClassOf	"triple"
s2.1	"knowledge graph triple"	rdfs:subClassOf	"triple"
s2.1	"graph triple"	rdfs:member	"graph"
s2.1	"plausible knowledge graph"	rdfs:member	"plausible knowledge"
s2.1	"triple graph"	rdfs:subClassOf	"graph"
s2.1	"knowledge triple graph"	rdfs:subClassOf	"triple graph"
s2.1	"plausible knowledge triple graph"	rdfs:subClassOf	"knowledge triple graph"
s2.1	"finding plausible knowledge graph triples in particular"	rdf:predicate	"find"
s2.1	"finding plausible knowledge graph triples in particular"	local:AM-LOC	"particular"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:subject	"vast majority of many method"
s2	"vast majority of many method"	rdfs:member	"vast majority"
s2	"vast majority of many method"	rdfs:member	"many method"
s2	"vast majority"	rdfs:subClassOf	"majority"
s2	"vast majority"	rdfs:member	"vast"
s2	"many method"	rdfs:member	"many"
s2	"many method"	rdfs:subClassOf	"method"
s2	"vast majority of many method"	rdfs:member	"vast majority"
s2	"vast majority of many method"	rdfs:member	"many method"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:predicate	"focus"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:object	"find plausible knowledge graph triple in particular"
s2	"plausible knowledge graph"	rdfs:subClassOf	"graph"
s2	"plausible knowledge graph triple"	rdfs:member	"plausible knowledge graph"
s2	"graph triple"	rdfs:subClassOf	"triple"
s2	"plausible knowledge"	rdfs:member	"plausible"
s2	"knowledge graph triple"	rdfs:member	"knowledge graph"
s2	"plausible knowledge"	rdfs:subClassOf	"knowledge"
s2	"knowledge graph"	rdfs:subClassOf	"graph"
s2	"knowledge graph"	rdfs:member	"knowledge"
s2	"plausible knowledge graph triple"	rdfs:subClassOf	"triple"
s2	"knowledge graph triple"	rdfs:subClassOf	"triple"
s2	"graph triple"	rdfs:member	"graph"
s2	"plausible knowledge graph"	rdfs:member	"plausible knowledge"
s2	"triple graph"	rdfs:subClassOf	"graph"
s2	"knowledge triple graph"	rdfs:subClassOf	"triple graph"
s2	"plausible knowledge triple graph"	rdfs:subClassOf	"knowledge triple graph"
s2	"triple in particular"	rdfs:member	"triple"
s2	"triple in particular"	rdfs:member	"particular"
s1.1	"automatically extend knowledge bases"
s1.1	"automatically extend knowledge bases"	rdf:subject	"knowledge base"
s1.1	"knowledge base"	rdfs:subClassOf	"base"
s1.1	"knowledge base"	rdfs:member	"knowledge"
s1.1	"automatically extend knowledge bases"	rdf:predicate	"extend"
s1.1	"automatically extend knowledge bases"	local:AM-MNR	"automatically"
s1	"many methods proposed to automatically extend knowledge bases"
s1	"many methods proposed to automatically extend knowledge bases"	rdf:subject	"many method"
s1	"many method"	rdfs:subClassOf	"method"
s1	"many method"	rdfs:member	"many"
s1	"many methods proposed to automatically extend knowledge bases"	rdf:predicate	"propose"
s1	"many methods proposed to automatically extend knowledge bases"	local:AM-ADV	"automatically extend knowledge base"
s1	"knowledge base"	rdfs:subClassOf	"base"
s1	"knowledge base"	rdfs:member	"knowledge"
s1	"automatically extend"	rdfs:subClassOf	"extend"
s0.2	"missing facts"
s0.2	"missing facts"	rdf:subject	"fact"
s0.2	"missing facts"	rdf:predicate	"miss"
s0.1	"finding plausible missing facts graph triples in particular"
s0.1	"finding plausible missing facts graph triples in particular"	rdf:subject	"plausible miss fact graph triple in particular"
s0.1	"plausible miss"	rdfs:subClassOf	"miss"
s0.1	"plausible miss fact graph triple"	rdfs:member	"plausible miss fact graph"
s0.1	"plausible miss fact"	rdfs:subClassOf	"fact"
s0.1	"fact graph triple"	rdfs:subClassOf	"triple"
s0.1	"plausible miss"	rdfs:member	"plausible"
s0.1	"plausible miss fact graph"	rdfs:subClassOf	"graph"
s0.1	"fact graph triple"	rdfs:member	"fact graph"
s0.1	"miss fact"	rdfs:subClassOf	"fact"
s0.1	"fact graph"	rdfs:subClassOf	"graph"
s0.1	"plausible miss fact graph triple"	rdfs:subClassOf	"triple"
s0.1	"miss fact graph"	rdfs:subClassOf	"graph"
s0.1	"miss fact graph triple"	rdfs:subClassOf	"triple"
s0.1	"plausible miss fact graph"	rdfs:member	"plausible miss fact"
s0.1	"graph triple"	rdfs:subClassOf	"triple"
s0.1	"miss fact"	rdfs:member	"miss"
s0.1	"fact graph"	rdfs:member	"fact"
s0.1	"miss fact graph triple"	rdfs:member	"miss fact graph"
s0.1	"plausible miss fact"	rdfs:member	"plausible miss"
s0.1	"miss fact graph"	rdfs:member	"miss fact"
s0.1	"graph triple"	rdfs:member	"graph"
s0.1	"triple miss"	rdfs:subClassOf	"miss"
s0.1	"triple miss in particular"	rdfs:member	"triple miss"
s0.1	"triple miss in particular"	rdfs:member	"particular"
s0.1	"finding plausible missing facts graph triples in particular"	rdf:predicate	"find"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:subject	"vast majority of many method"
s0	"vast majority of many method"	rdfs:member	"vast majority"
s0	"vast majority of many method"	rdfs:member	"many method"
s0	"vast majority"	rdfs:subClassOf	"majority"
s0	"vast majority"	rdfs:member	"vast"
s0	"many method"	rdfs:member	"many"
s0	"many method"	rdfs:subClassOf	"method"
s0	"vast majority of many method"	rdfs:member	"vast majority"
s0	"vast majority of many method"	rdfs:member	"many method"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:predicate	"focus"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:object	"find plausible miss fact graph triple in particular"
s0	"plausible miss"	rdfs:subClassOf	"miss"
s0	"plausible miss fact graph triple"	rdfs:member	"plausible miss fact graph"
s0	"plausible miss fact"	rdfs:subClassOf	"fact"
s0	"fact graph triple"	rdfs:subClassOf	"triple"
s0	"plausible miss"	rdfs:member	"plausible"
s0	"plausible miss fact graph"	rdfs:subClassOf	"graph"
s0	"fact graph triple"	rdfs:member	"fact graph"
s0	"miss fact"	rdfs:subClassOf	"fact"
s0	"fact graph"	rdfs:subClassOf	"graph"
s0	"plausible miss fact graph triple"	rdfs:subClassOf	"triple"
s0	"miss fact graph"	rdfs:subClassOf	"graph"
s0	"miss fact graph triple"	rdfs:subClassOf	"triple"
s0	"plausible miss fact graph"	rdfs:member	"plausible miss fact"
s0	"graph triple"	rdfs:subClassOf	"triple"
s0	"miss fact"	rdfs:member	"miss"
s0	"fact graph"	rdfs:member	"fact"
s0	"miss fact graph triple"	rdfs:member	"miss fact graph"
s0	"plausible miss fact"	rdfs:member	"plausible miss"
s0	"miss fact graph"	rdfs:member	"miss fact"
s0	"graph triple"	rdfs:member	"graph"
s0	"triple miss"	rdfs:subClassOf	"miss"
s0	"triple miss in particular"	rdfs:member	"triple miss"
s0	"triple miss in particular"	rdfs:member	"particular"
