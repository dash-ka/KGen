s22	"experimental results that demonstrate the strong performance of this method"
s22	"experimental results that demonstrate the strong performance of this method"	rdf:subject	"experimental results"
s22	"experimental results"	rdfs:member	"experimental"
s22	"experimental results"	rdfs:subClassOf	"results"
s22	"experimental results that demonstrate the strong performance of this method"	rdf:predicate	"demonstrate"
s22	"experimental results that demonstrate the strong performance of this method"	rdf:object	"strong performance of this method"
s22	"strong performance of this method"	rdfs:member	"strong performance"
s22	"strong performance of this method"	rdfs:member	"method"
s22	"strong performance"	rdfs:subClassOf	"performance"
s22	"strong performance"	rdfs:member	"strong"
s22	"strong performance of method"	rdfs:member	"strong performance"
s22	"strong performance of method"	rdfs:member	"method"
s21	"we present experimental results"
s21	"we present experimental results"	rdf:subject	"We"
s21	"we present experimental results"	rdf:predicate	"present"
s21	"we present experimental results"	rdf:object	"experimental results"
s21	"experimental results"	rdfs:member	"experimental"
s21	"experimental results"	rdfs:subClassOf	"results"
s19	"we then use a neural network model"
s19	"we then use a neural network model"	rdf:subject	"We"
s19	"we then use a neural network model"	rdf:predicate	"use"
s19	"we then use a neural network model"	rdf:object	"neural network model"
s19	"network model"	rdfs:subClassOf	"model"
s19	"neural network"	rdfs:member	"neural"
s19	"neural network"	rdfs:subClassOf	"network"
s19	"neural network model"	rdfs:subClassOf	"model"
s19	"neural network model"	rdfs:member	"neural network"
s19	"network model"	rdfs:member	"network"
s19	"neural network model"	rdfs:subClassOf	"network model"
s19	"we then use a neural network model"	local:AM-TMP	"then"
s18.2	"obtain a representation"
s18.2	"obtain a representation"	rdf:subject	"representation"
s18.2	"obtain a representation"	rdf:predicate	"obtain"
s18.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"
s18.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:subject	"neural network model based on Graph Convolutional Networks"
s18.1	"neural network model based on graph convolutional networks"	rdfs:member	"graph convolutional networks"
s18.1	"neural network model based on graph convolutional networks"	rdfs:member	"neural network model"
s18.1	"graph convolutional"	rdfs:subClassOf	"convolutional"
s18.1	"graph convolutional networks"	rdfs:member	"graph convolutional"
s18.1	"network model"	rdfs:subClassOf	"model"
s18.1	"graph convolutional"	rdfs:member	"graph"
s18.1	"neural network"	rdfs:member	"neural"
s18.1	"neural network"	rdfs:subClassOf	"network"
s18.1	"convolutional networks"	rdfs:member	"convolutional"
s18.1	"neural network model"	rdfs:subClassOf	"model"
s18.1	"neural network model"	rdfs:member	"neural network"
s18.1	"graph convolutional networks"	rdfs:subClassOf	"networks"
s18.1	"network model"	rdfs:member	"network"
s18.1	"convolutional networks"	rdfs:subClassOf	"networks"
s18.1	"graph convolutional networks"	rdfs:subClassOf	"convolutional networks"
s18.1	"neural network model"	rdfs:subClassOf	"network model"
s18.1	"neural network model based"	rdfs:member	"neural network model"
s18.1	"neural network model based"	rdfs:member	"based"
s18.1	"based on graph convolutional networks"	rdfs:member	"based"
s18.1	"based on graph convolutional networks"	rdfs:member	"graph convolutional networks"
s18.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:predicate	"refine"
s18.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	rdf:object	"initial vector representation of the predicates"
s18.1	"initial vector representation of the predicates"	rdfs:member	"initial vector representation"
s18.1	"initial vector representation of the predicates"	rdfs:member	"predicates"
s18.1	"initial vector representation"	rdfs:member	"initial vector"
s18.1	"vector representation"	rdfs:subClassOf	"representation"
s18.1	"initial vector representation"	rdfs:subClassOf	"representation"
s18.1	"initial vector"	rdfs:member	"initial"
s18.1	"initial vector"	rdfs:subClassOf	"vector"
s18.1	"vector representation"	rdfs:member	"vector"
s18.1	"initial vector representation"	rdfs:subClassOf	"vector representation"
s18.1	"initial vector representation of predicates"	rdfs:member	"initial vector representation"
s18.1	"initial vector representation of predicates"	rdfs:member	"predicates"
s18.1	"a neural network model based on graph convolutional networks refine the initial vector representation of the predicates to obtain a representation"	local:AM-PNC	"obtain a representation"
s18	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"
s18	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdf:predicate	"base"
s18	"based on graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdf:object	"Graph Convolutional Networks to refine the initial vector representation of the predicates to obtain a representation"
s18	"graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdfs:member	"graph convolutional networks"
s18	"graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdfs:member	"initial vector representation"
s18	"graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdfs:member	"predicates"
s18	"graph convolutional networks to refine the initial vector representation of the predicates to obtain a representation"	rdfs:member	"representation"
s18	"graph convolutional"	rdfs:subClassOf	"convolutional"
s18	"initial vector representation"	rdfs:member	"initial vector"
s18	"graph convolutional networks"	rdfs:member	"graph convolutional"
s18	"graph convolutional"	rdfs:member	"graph"
s18	"vector representation"	rdfs:subClassOf	"representation"
s18	"initial vector representation"	rdfs:subClassOf	"representation"
s18	"convolutional networks"	rdfs:member	"convolutional"
s18	"vector representation"	rdfs:member	"vector"
s18	"graph convolutional networks"	rdfs:subClassOf	"networks"
s18	"initial vector"	rdfs:member	"initial"
s18	"initial vector"	rdfs:subClassOf	"vector"
s18	"convolutional networks"	rdfs:subClassOf	"networks"
s18	"initial vector representation"	rdfs:subClassOf	"vector representation"
s18	"graph convolutional networks"	rdfs:subClassOf	"convolutional networks"
s18	"initial vector representation of predicates"	rdfs:member	"initial vector representation"
s18	"initial vector representation of predicates"	rdfs:member	"predicates"
s16.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"
s16.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:subject	"types of rules in which the predicates cooccur"
s16.2	"types of rules in which the predicates cooccur"	rdfs:member	"types"
s16.2	"types of rules in which the predicates cooccur"	rdfs:member	"predicates"
s16.2	"types of rules in which the predicates cooccur"	rdfs:member	"rules"
s16.2	"types of rules"	rdfs:member	"types"
s16.2	"types of rules"	rdfs:member	"rules"
s16.2	"cooccur in rules"	rdfs:member	"cooccur"
s16.2	"cooccur in rules"	rdfs:member	"rules"
s16.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:predicate	"reflect"
s16.2	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:object	"predicates that cooccur in the same rule"
s16.2	"predicates that cooccur in the same rule"	rdfs:member	"predicates"
s16.2	"predicates that cooccur in the same rule"	rdfs:member	"same rule"
s16.2	"same rule"	rdfs:subClassOf	"rule"
s16.2	"same rule"	rdfs:member	"same"
s16.2	"cooccur in same rule"	rdfs:member	"cooccur"
s16.2	"cooccur in same rule"	rdfs:member	"same rule"
s16.1	"predicates that cooccur in the same rule"
s16.1	"predicates that cooccur in the same rule"	rdf:subject	"predicates"
s16.1	"predicates that cooccur in the same rule"	rdf:predicate	"cooccur"
s16.1	"predicates that cooccur in the same rule"	rdf:object	"rule"
s16	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"
s16	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:subject	"Edges"
s16	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:predicate	"connect"
s16	"edges connect predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"	rdf:object	"predicates that cooccur in the same rule reflect the types of rules in which the predicates cooccur"
s15.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"
s15.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:subject	"types of rules in which the predicates cooccur"
s15.2	"types of rules in which the predicates cooccur"	rdfs:member	"types"
s15.2	"types of rules in which the predicates cooccur"	rdfs:member	"predicates"
s15.2	"types of rules in which the predicates cooccur"	rdfs:member	"rules"
s15.2	"types of rules"	rdfs:member	"types"
s15.2	"types of rules"	rdfs:member	"rules"
s15.2	"cooccur in rules"	rdfs:member	"cooccur"
s15.2	"cooccur in rules"	rdfs:member	"rules"
s15.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:predicate	"reflect"
s15.2	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:object	"predicates that cooccur in The vectors annotations"
s15.2	"predicates that cooccur in the vectors annotations"	rdfs:member	"vectors annotations"
s15.2	"predicates that cooccur in the vectors annotations"	rdfs:member	"predicates"
s15.2	"vectors annotations"	rdfs:member	"vectors"
s15.2	"vectors annotations"	rdfs:subClassOf	"annotations"
s15.2	"cooccur in vectors"	rdfs:member	"cooccur"
s15.2	"cooccur in vectors"	rdfs:member	"vectors"
s15.1	"predicates that cooccur in the vectors annotations"
s15.1	"predicates that cooccur in the vectors annotations"	rdf:subject	"predicates"
s15.1	"predicates that cooccur in the vectors annotations"	rdf:predicate	"cooccur"
s15.1	"predicates that cooccur in the vectors annotations"	local:AM-LOC	"vectors annotations"
s15.1	"vectors annotations"	rdfs:member	"vectors"
s15.1	"vectors annotations"	rdfs:subClassOf	"annotations"
s15	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"
s15	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:subject	"Edges"
s15	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:predicate	"connect"
s15	"edges connect predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdf:object	"predicates that cooccur in The vectors annotations reflect the types of rules in which the predicates cooccur"
s15	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdfs:member	"vectors annotations"
s15	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdfs:member	"types"
s15	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdfs:member	"predicates"
s15	"predicates that cooccur in the vectors annotations reflect the types of rules in which the predicates cooccur"	rdfs:member	"rules"
s15	"vectors annotations"	rdfs:member	"vectors"
s15	"vectors annotations"	rdfs:subClassOf	"annotations"
s15	"reflect in vectors"	rdfs:member	"reflect"
s15	"reflect in vectors"	rdfs:member	"vectors"
s15	"types of rules"	rdfs:member	"types"
s15	"types of rules"	rdfs:member	"rules"
s15	"cooccur in rules"	rdfs:member	"cooccur"
s15	"cooccur in rules"	rdfs:member	"rules"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:subject	"external resources such as The vectors"
s14.1	"external resources such as the vectors"	rdfs:member	"vectors"
s14.1	"external resources such as the vectors"	rdfs:member	"external resources"
s14.1	"external resources"	rdfs:subClassOf	"resources"
s14.1	"external resources"	rdfs:member	"external"
s14.1	"external resources such_as vectors"	rdfs:member	"external resources"
s14.1	"external resources such_as vectors"	rdfs:member	"vectors"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:predicate	"estimate"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	rdf:object	"rule base itself rule base"
s14.1	"rule base"	rdfs:member	"rule"
s14.1	"rule base"	rdfs:subClassOf	"base"
s14.1	"itself base"	rdfs:subClassOf	"base"
s14.1	"rule itself base"	rdfs:subClassOf	"itself base"
s14.1	"external resources such as the vectors could estimated from the rule base the rule base itself"	local:AM-MOD	"could"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:subject	"vectors"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:predicate	"obtain"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	rdf:object	"external resources such as The vectors could be estimated from the rule base the rule base itself"
s14	"external resources such as the vectors could be estimated from the rule base the rule base itself"	rdfs:member	"rule base"
s14	"external resources such as the vectors could be estimated from the rule base the rule base itself"	rdfs:member	"vectors"
s14	"external resources such as the vectors could be estimated from the rule base the rule base itself"	rdfs:member	"rule"
s14	"external resources such as the vectors could be estimated from the rule base the rule base itself"	rdfs:member	"external resources"
s14	"external resources"	rdfs:subClassOf	"resources"
s14	"rule base"	rdfs:member	"rule"
s14	"external resources"	rdfs:member	"external"
s14	"rule base"	rdfs:subClassOf	"base"
s14	"itself base"	rdfs:subClassOf	"base"
s14	"rule itself base"	rdfs:subClassOf	"itself base"
s14	"could estimated"	rdfs:subClassOf	"estimated"
s14	"external resources such_as vectors"	rdfs:member	"external resources"
s14	"external resources such_as vectors"	rdfs:member	"vectors"
s14	"could estimated from rule base"	rdfs:member	"could estimated"
s14	"could estimated from rule base"	rdfs:member	"rule base"
s14	"the vectors may obtained from external resources such as the vectors could be estimated from the rule base the rule base itself"	local:AM-MOD	"may"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:subject	"external resources such as word embeddings"
s13.1	"external resources such as word embeddings"	rdfs:member	"word embeddings"
s13.1	"external resources such as word embeddings"	rdfs:member	"external resources"
s13.1	"word embeddings"	rdfs:member	"word"
s13.1	"word embeddings"	rdfs:subClassOf	"embeddings"
s13.1	"external resources"	rdfs:member	"external"
s13.1	"external resources"	rdfs:subClassOf	"resources"
s13.1	"external resources such_as word embeddings"	rdfs:member	"external resources"
s13.1	"external resources such_as word embeddings"	rdfs:member	"word embeddings"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:predicate	"estimate"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	rdf:object	"rule base itself rule base"
s13.1	"rule base"	rdfs:member	"rule"
s13.1	"rule base"	rdfs:subClassOf	"base"
s13.1	"itself base"	rdfs:subClassOf	"base"
s13.1	"rule itself base"	rdfs:subClassOf	"itself base"
s13.1	"external resources such as word embeddings could estimated from the rule base the rule base itself"	local:AM-MOD	"could"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:subject	"vectors"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:predicate	"obtain"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdf:object	"external resources such as word embeddings could be estimated from the rule base the rule base itself"
s13	"external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdfs:member	"rule base"
s13	"external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdfs:member	"word embeddings"
s13	"external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdfs:member	"rule"
s13	"external resources such as word embeddings could be estimated from the rule base the rule base itself"	rdfs:member	"external resources"
s13	"rule base"	rdfs:member	"rule"
s13	"external resources"	rdfs:subClassOf	"resources"
s13	"word embeddings"	rdfs:member	"word"
s13	"external resources"	rdfs:member	"external"
s13	"rule base"	rdfs:subClassOf	"base"
s13	"word embeddings"	rdfs:subClassOf	"embeddings"
s13	"itself base"	rdfs:subClassOf	"base"
s13	"rule itself base"	rdfs:subClassOf	"itself base"
s13	"could estimated"	rdfs:subClassOf	"estimated"
s13	"external resources such_as word embeddings"	rdfs:member	"external resources"
s13	"external resources such_as word embeddings"	rdfs:member	"word embeddings"
s13	"could estimated from rule base"	rdfs:member	"could estimated"
s13	"could estimated from rule base"	rdfs:member	"rule base"
s13	"the vectors may obtained from external resources such as word embeddings could be estimated from the rule base the rule base itself"	local:AM-MOD	"may"
s11	"nodes of the annotated with the vectors"
s11	"nodes of the annotated with the vectors"	rdf:subject	"Nodes of the"
s11	"nodes of the"	rdfs:member	"nodes"
s11	"nodes of the"	rdfs:member	"the"
s11	"nodes of the annotated with the vectors"	rdf:predicate	"annotate"
s11	"nodes of the annotated with the vectors"	rdf:object	"vectors"
s8	"to this end we propose a graphbased representation of rule bases"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:subject	"we"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:predicate	"propose"
s8	"to this end we propose a graphbased representation of rule bases"	rdf:object	"graphbased representation of rule bases"
s8	"graphbased representation of rule bases"	rdfs:member	"rule bases"
s8	"graphbased representation of rule bases"	rdfs:member	"graphbased representation"
s8	"rule bases"	rdfs:subClassOf	"bases"
s8	"graphbased representation"	rdfs:subClassOf	"representation"
s8	"graphbased representation"	rdfs:member	"graphbased"
s8	"rule bases"	rdfs:member	"rule"
s8	"graphbased representation of rule bases"	rdfs:member	"graphbased representation"
s8	"graphbased representation of rule bases"	rdfs:member	"rule bases"
s8	"to this end we propose a graphbased representation of rule bases"	local:AM-TMP	"end"
s7.2	"given ontology"
s7.2	"given ontology"	rdf:subject	"ontology"
s7.2	"given ontology"	rdf:predicate	"give"
s7.1	"which can not deduced from the given ontology"
s7.1	"which can not deduced from the given ontology"	rdf:predicate	"not deduce"
s7.1	"which can not deduced from the given ontology"	rdf:object	"given ontology"
s7.1	"which can not deduced from the given ontology"	local:AM-MOD	"can"
s7	"in particular we aim which can not be deduced from the given ontology"
s7	"in particular we aim which can not be deduced from the given ontology"	rdf:subject	"we"
s7	"in particular we aim which can not be deduced from the given ontology"	rdf:predicate	"aim"
s7	"in particular we aim which can not be deduced from the given ontology"	rdf:object	"deduced from the given ontology"
s7	"given ontology"	rdfs:subClassOf	"ontology"
s7	"deduced from given ontology"	rdfs:member	"deduced"
s7	"deduced from given ontology"	rdfs:member	"given ontology"
s7	"in particular we aim which can not be deduced from the given ontology"	local:AM-ADV	"particular"
s6.1	"we find rules"
s6.1	"we find rules"	rdf:subject	"we"
s6.1	"we find rules"	rdf:predicate	"find"
s6.1	"we find rules"	rdf:object	"rules"
s6	"we aim"
s6	"we aim"	rdf:subject	"we"
s6	"we aim"	rdf:predicate	"aim"
s4	"ontologies that encoded as a set of existential rules"
s4	"ontologies that encoded as a set of existential rules"	rdf:subject	"ontologies"
s4	"ontologies that encoded as a set of existential rules"	rdf:predicate	"encode"
s4	"ontologies that encoded as a set of existential rules"	rdf:object	"set of existential rules"
s4	"set of existential rules"	rdfs:member	"set"
s4	"set of existential rules"	rdfs:member	"existential rules"
s4	"existential rules"	rdfs:member	"existential"
s4	"existential rules"	rdfs:subClassOf	"rules"
s4	"set of existential rules"	rdfs:member	"set"
s4	"set of existential rules"	rdfs:member	"existential rules"
s3.1	"in this paper we automatically extending ontologies"
s3.1	"in this paper we automatically extending ontologies"	rdf:subject	"we"
s3.1	"in this paper we automatically extending ontologies"	rdf:predicate	"extend"
s3.1	"in this paper we automatically extending ontologies"	rdf:object	"ontologies"
s3.1	"in this paper we automatically extending ontologies"	local:AM-LOC	"paper"
s3.1	"in this paper we automatically extending ontologies"	local:AM-MNR	"automatically"
s3	"in this paper we instead focus on automatically"
s3	"in this paper we instead focus on automatically"	rdf:subject	"we"
s3	"in this paper we instead focus on automatically"	rdf:predicate	"focus"
s3	"in this paper we instead focus on automatically"	local:AM-DIS	"instead"
s3	"in this paper we instead focus on automatically"	local:AM-LOC	"paper"
s3	"in this paper we instead focus on automatically"	local:AM-MNR	"automatically"
s2.1	"finding plausible knowledge graph triples in particular"
s2.1	"finding plausible knowledge graph triples in particular"	rdf:subject	"plausible knowledge graph triples"
s2.1	"knowledge graph"	rdfs:member	"knowledge"
s2.1	"graph triples"	rdfs:member	"graph"
s2.1	"plausible knowledge"	rdfs:subClassOf	"knowledge"
s2.1	"plausible knowledge graph"	rdfs:subClassOf	"graph"
s2.1	"plausible knowledge"	rdfs:member	"plausible"
s2.1	"graph triples"	rdfs:subClassOf	"triples"
s2.1	"knowledge graph triples"	rdfs:subClassOf	"triples"
s2.1	"knowledge graph triples"	rdfs:member	"knowledge graph"
s2.1	"plausible knowledge graph triples"	rdfs:member	"plausible knowledge graph"
s2.1	"plausible knowledge graph"	rdfs:member	"plausible knowledge"
s2.1	"knowledge graph"	rdfs:subClassOf	"graph"
s2.1	"plausible knowledge graph triples"	rdfs:subClassOf	"triples"
s2.1	"knowledge graph triples"	rdfs:subClassOf	"graph triples"
s2.1	"plausible knowledge graph triples"	rdfs:subClassOf	"knowledge graph triples"
s2.1	"finding plausible knowledge graph triples in particular"	rdf:predicate	"find"
s2.1	"finding plausible knowledge graph triples in particular"	local:AM-LOC	"particular"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:subject	"vast majority of Many methods"
s2	"vast majority of many methods"	rdfs:member	"vast majority"
s2	"vast majority of many methods"	rdfs:member	"many methods"
s2	"vast majority"	rdfs:subClassOf	"majority"
s2	"many methods"	rdfs:member	"many"
s2	"vast majority"	rdfs:member	"vast"
s2	"many methods"	rdfs:subClassOf	"methods"
s2	"vast majority of many methods"	rdfs:member	"vast majority"
s2	"vast majority of many methods"	rdfs:member	"many methods"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:predicate	"focus"
s2	"the vast majority of many methods focus on finding plausible knowledge graph triples in particular"	rdf:object	"finding plausible knowledge graph triples in particular"
s1.1	"automatically extend knowledge bases"
s1.1	"automatically extend knowledge bases"	rdf:subject	"knowledge bases"
s1.1	"knowledge bases"	rdfs:subClassOf	"bases"
s1.1	"knowledge bases"	rdfs:member	"knowledge"
s1.1	"automatically extend knowledge bases"	rdf:predicate	"extend"
s1.1	"automatically extend knowledge bases"	local:AM-MNR	"automatically"
s1	"many methods proposed to automatically extend knowledge bases"
s1	"many methods proposed to automatically extend knowledge bases"	rdf:subject	"Many methods"
s1	"many methods"	rdfs:subClassOf	"methods"
s1	"many methods"	rdfs:member	"many"
s1	"many methods proposed to automatically extend knowledge bases"	rdf:predicate	"propose"
s1	"many methods proposed to automatically extend knowledge bases"	local:AM-PNC	"automatically extend knowledge bases"
s0.2	"missing facts"
s0.2	"missing facts"	rdf:subject	"facts"
s0.2	"missing facts"	rdf:predicate	"miss"
s0.1	"finding plausible missing facts graph triples in particular"
s0.1	"finding plausible missing facts graph triples in particular"	rdf:subject	"plausible missing facts graph triples in particular"
s0.1	"plausible missing facts graph triples in particular"	rdfs:member	"facts"
s0.1	"plausible missing facts graph triples in particular"	rdfs:member	"graph triples"
s0.1	"graph triples"	rdfs:subClassOf	"triples"
s0.1	"graph triples"	rdfs:member	"graph"
s0.1	"missing facts"	rdfs:subClassOf	"facts"
s0.1	"plausible missing facts"	rdfs:subClassOf	"missing facts"
s0.1	"graph triples in particular"	rdfs:member	"graph triples"
s0.1	"graph triples in particular"	rdfs:member	"particular"
s0.1	"finding plausible missing facts graph triples in particular"	rdf:predicate	"find"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:subject	"vast majority of Many methods"
s0	"vast majority of many methods"	rdfs:member	"vast majority"
s0	"vast majority of many methods"	rdfs:member	"many methods"
s0	"vast majority"	rdfs:subClassOf	"majority"
s0	"many methods"	rdfs:member	"many"
s0	"vast majority"	rdfs:member	"vast"
s0	"many methods"	rdfs:subClassOf	"methods"
s0	"vast majority of many methods"	rdfs:member	"vast majority"
s0	"vast majority of many methods"	rdfs:member	"many methods"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:predicate	"focus"
s0	"the vast majority of many methods focus on finding plausible missing facts graph triples in particular"	rdf:object	"finding plausible missing facts graph triples in particular"
