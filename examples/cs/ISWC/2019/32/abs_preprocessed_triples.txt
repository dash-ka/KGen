s9.2	"linked open data cloud"
s9.2	"linked open data cloud"	rdf:subject	"open data cloud"
s9.2	"open data"	rdfs:member	"open"
s9.2	"open data cloud"	rdfs:subClassOf	"cloud"
s9.2	"open data"	rdfs:subClassOf	"data"
s9.2	"data cloud"	rdfs:subClassOf	"cloud"
s9.2	"data cloud"	rdfs:member	"data"
s9.2	"open data cloud"	rdfs:member	"open data"
s9.2	"open data cloud"	rdfs:subClassOf	"data cloud"
s9.2	"linked open data cloud"	rdf:predicate	"link"
s9.1	"the approach can compute even complex indicators at the scale of the linked open data cloud"
s9.1	"the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:subject	"approach"
s9.1	"the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:predicate	"compute"
s9.1	"the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:object	"even complex indicator at the scale of the link open data cloud"
s9.1	"even complex indicator at the scale of the link open data cloud"	rdfs:member	"scale"
s9.1	"even complex indicator at the scale of the link open data cloud"	rdfs:member	"even complex indicator"
s9.1	"even complex indicator at the scale of the link open data cloud"	rdfs:member	"link"
s9.1	"even complex indicator at the scale of the link open data cloud"	rdfs:member	"open data cloud"
s9.1	"open data"	rdfs:member	"open"
s9.1	"even complex indicator"	rdfs:subClassOf	"indicator"
s9.1	"even complex"	rdfs:member	"even"
s9.1	"even complex indicator"	rdfs:member	"even complex"
s9.1	"complex indicator"	rdfs:subClassOf	"indicator"
s9.1	"open data cloud"	rdfs:subClassOf	"cloud"
s9.1	"complex indicator"	rdfs:member	"complex"
s9.1	"open data"	rdfs:subClassOf	"data"
s9.1	"data cloud"	rdfs:subClassOf	"cloud"
s9.1	"data cloud"	rdfs:member	"data"
s9.1	"even complex"	rdfs:subClassOf	"complex"
s9.1	"open data cloud"	rdfs:member	"open data"
s9.1	"open data cloud"	rdfs:subClassOf	"data cloud"
s9.1	"link open data cloud"	rdfs:subClassOf	"open data cloud"
s9.1	"even complex indicator"	rdfs:subClassOf	"complex indicator"
s9.1	"even complex indicator at scale"	rdfs:member	"even complex indicator"
s9.1	"even complex indicator at scale"	rdfs:member	"scale"
s9.1	"scale of link open data cloud"	rdfs:member	"scale"
s9.1	"scale of link open data cloud"	rdfs:member	"link open data cloud"
s9.1	"the approach can compute even complex indicators at the scale of the linked open data cloud"	local:AM-MOD	"can"
s9	"we experiments show that the approach can compute even complex indicators at the scale of the linked open data cloud"
s9	"we experiments show that the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:subject	"experiment"
s9	"we experiments show that the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:predicate	"show"
s9	"we experiments show that the approach can compute even complex indicators at the scale of the linked open data cloud"	rdf:object	"approach can compute even complex indicator at the scale of the link open data cloud"
s9	"approach can compute even complex indicator at the scale of the link open data cloud"	rdfs:member	"even complex indicator"
s9	"approach can compute even complex indicator at the scale of the link open data cloud"	rdfs:member	"approach"
s9	"approach can compute even complex indicator at the scale of the link open data cloud"	rdfs:member	"scale"
s9	"approach can compute even complex indicator at the scale of the link open data cloud"	rdfs:member	"link"
s9	"approach can compute even complex indicator at the scale of the link open data cloud"	rdfs:member	"open data cloud"
s9	"open data"	rdfs:member	"open"
s9	"even complex indicator"	rdfs:subClassOf	"indicator"
s9	"even complex"	rdfs:member	"even"
s9	"even complex indicator"	rdfs:member	"even complex"
s9	"complex indicator"	rdfs:subClassOf	"indicator"
s9	"open data cloud"	rdfs:subClassOf	"cloud"
s9	"complex indicator"	rdfs:member	"complex"
s9	"open data"	rdfs:subClassOf	"data"
s9	"data cloud"	rdfs:subClassOf	"cloud"
s9	"data cloud"	rdfs:member	"data"
s9	"even complex"	rdfs:subClassOf	"complex"
s9	"open data cloud"	rdfs:member	"open data"
s9	"open data cloud"	rdfs:subClassOf	"data cloud"
s9	"link open data cloud"	rdfs:subClassOf	"open data cloud"
s9	"can compute"	rdfs:subClassOf	"compute"
s9	"can compute at scale"	rdfs:member	"can compute"
s9	"can compute at scale"	rdfs:member	"scale"
s9	"scale of link open data cloud"	rdfs:member	"scale"
s9	"scale of link open data cloud"	rdfs:member	"link open data cloud"
s8.1	"the approach converges rapidly towards the exact solution"
s8.1	"the approach converges rapidly towards the exact solution"	rdf:subject	"approach"
s8.1	"the approach converges rapidly towards the exact solution"	rdf:predicate	"converge"
s8.1	"the approach converges rapidly towards the exact solution"	rdf:object	"towards the exact solution"
s8.1	"exact solution"	rdfs:member	"exact"
s8.1	"exact solution"	rdfs:subClassOf	"solution"
s8.1	"the approach converges rapidly towards the exact solution"	local:AM-MNR	"rapidly"
s8	"we experiments show that the approach converges rapidly towards the exact solution"
s8	"we experiments show that the approach converges rapidly towards the exact solution"	rdf:subject	"experiment"
s8	"we experiments show that the approach converges rapidly towards the exact solution"	rdf:predicate	"show"
s8	"we experiments show that the approach converges rapidly towards the exact solution"	rdf:object	"approach converge rapidly towards the exact solution"
s8	"approach converge rapidly towards the exact solution"	rdfs:member	"exact solution"
s8	"approach converge rapidly towards the exact solution"	rdfs:member	"approach converge"
s8	"exact solution"	rdfs:member	"exact"
s8	"exact solution"	rdfs:subClassOf	"solution"
s8	"approach converge"	rdfs:subClassOf	"converge"
s8	"approach converge"	rdfs:member	"approach"
s8	"rapidly converge"	rdfs:subClassOf	"converge"
s8	"rapidly converge towards exact solution"	rdfs:member	"rapidly converge"
s8	"rapidly converge towards exact solution"	rdfs:member	"exact solution"
s7.1	"our algorithm can give intermediate approximate results at any time point"
s7.1	"our algorithm can give intermediate approximate results at any time point"	rdf:subject	"algorithm"
s7.1	"our algorithm can give intermediate approximate results at any time point"	rdf:predicate	"give"
s7.1	"our algorithm can give intermediate approximate results at any time point"	rdf:object	"intermediate approximate result"
s7.1	"intermediate approximate result"	rdfs:subClassOf	"result"
s7.1	"approximate result"	rdfs:subClassOf	"result"
s7.1	"intermediate approximate"	rdfs:subClassOf	"approximate"
s7.1	"approximate result"	rdfs:member	"approximate"
s7.1	"intermediate approximate"	rdfs:member	"intermediate"
s7.1	"intermediate approximate result"	rdfs:member	"intermediate approximate"
s7.1	"intermediate approximate result"	rdfs:subClassOf	"approximate result"
s7.1	"our algorithm can give intermediate approximate results at any time point"	local:AM-MOD	"can"
s7.1	"our algorithm can give intermediate approximate results at any time point"	local:AM-TMP	"time point"
s7.1	"time point"	rdfs:subClassOf	"point"
s7.1	"time point"	rdfs:member	"time"
s7	"an anytime algorithm meaning that our algorithm can give intermediate approximate results at any time point"
s7	"an anytime algorithm meaning that our algorithm can give intermediate approximate results at any time point"	rdf:subject	"anytime algorithm"
s7	"anytime algorithm"	rdfs:subClassOf	"algorithm"
s7	"anytime algorithm"	rdfs:member	"anytime"
s7	"an anytime algorithm meaning that our algorithm can give intermediate approximate results at any time point"	rdf:predicate	"mean"
s7	"an anytime algorithm meaning that our algorithm can give intermediate approximate results at any time point"	rdf:object	"algorithm can give intermediate approximate result at any time point"
s7	"algorithm can give intermediate approximate result at any time point"	rdfs:member	"algorithm"
s7	"algorithm can give intermediate approximate result at any time point"	rdfs:member	"time point"
s7	"algorithm can give intermediate approximate result at any time point"	rdfs:member	"intermediate approximate result"
s7	"intermediate approximate result"	rdfs:subClassOf	"result"
s7	"intermediate approximate"	rdfs:subClassOf	"approximate"
s7	"approximate result"	rdfs:subClassOf	"result"
s7	"approximate result"	rdfs:member	"approximate"
s7	"intermediate approximate"	rdfs:member	"intermediate"
s7	"time point"	rdfs:member	"time"
s7	"time point"	rdfs:subClassOf	"point"
s7	"intermediate approximate result"	rdfs:member	"intermediate approximate"
s7	"intermediate approximate result"	rdfs:subClassOf	"approximate result"
s7	"can give"	rdfs:subClassOf	"give"
s7	"can give at time point"	rdfs:member	"can give"
s7	"can give at time point"	rdfs:member	"time point"
s5.2	"the result provably converges to the exact query answer"
s5.2	"the result provably converges to the exact query answer"	rdf:subject	"result"
s5.2	"the result provably converges to the exact query answer"	rdf:predicate	"converge"
s5.2	"the result provably converges to the exact query answer"	rdf:object	"exact query answer"
s5.2	"query answer"	rdfs:member	"query"
s5.2	"exact query"	rdfs:member	"exact"
s5.2	"query answer"	rdfs:subClassOf	"answer"
s5.2	"exact query answer"	rdfs:member	"exact query"
s5.2	"exact query answer"	rdfs:subClassOf	"answer"
s5.2	"exact query"	rdfs:subClassOf	"query"
s5.2	"exact query answer"	rdfs:subClassOf	"query answer"
s5.2	"the result provably converges to the exact query answer"	local:AM-MNR	"provably"
s5.1	"we execute these queries in such a way that the result provably converges to the exact query answer"
s5.1	"we execute these queries in such a way that the result provably converges to the exact query answer"	rdf:subject	"we"
s5.1	"we execute these queries in such a way that the result provably converges to the exact query answer"	rdf:predicate	"execute"
s5.1	"we execute these queries in such a way that the result provably converges to the exact query answer"	rdf:object	"query way that the result provably converge to the exact query answer"
s5.1	"query way that the result provably converge to the exact query answer"	rdfs:member	"exact query answer"
s5.1	"query way that the result provably converge to the exact query answer"	rdfs:member	"result"
s5.1	"query way that the result provably converge to the exact query answer"	rdfs:member	"provably converge"
s5.1	"query way that the result provably converge to the exact query answer"	rdfs:member	"way"
s5.1	"provably converge"	rdfs:subClassOf	"converge"
s5.1	"query answer"	rdfs:member	"query"
s5.1	"exact query"	rdfs:member	"exact"
s5.1	"query answer"	rdfs:subClassOf	"answer"
s5.1	"provably converge"	rdfs:member	"provably"
s5.1	"exact query answer"	rdfs:member	"exact query"
s5.1	"exact query answer"	rdfs:subClassOf	"answer"
s5.1	"exact query"	rdfs:subClassOf	"query"
s5.1	"exact query answer"	rdfs:subClassOf	"query answer"
s5.1	"query way"	rdfs:subClassOf	"way"
s5.1	"provably converge to exact query answer"	rdfs:member	"provably converge"
s5.1	"provably converge to exact query answer"	rdfs:member	"exact query answer"
s5	"we then show how to execute these queries in such a way that the result provably converges to the exact query answer"
s5	"we then show how to execute these queries in such a way that the result provably converges to the exact query answer"	rdf:subject	"we"
s5	"we then show how to execute these queries in such a way that the result provably converges to the exact query answer"	rdf:predicate	"show"
s5	"we then show how to execute these queries in such a way that the result provably converges to the exact query answer"	rdf:object	"execute these query in such a way that the result provably converge to the exact query answer"
s5	"execute these query in such a way that the result provably converge to the exact query answer"	rdfs:member	"exact query answer"
s5	"execute these query in such a way that the result provably converge to the exact query answer"	rdfs:member	"result"
s5	"execute these query in such a way that the result provably converge to the exact query answer"	rdfs:member	"provably converge"
s5	"execute these query in such a way that the result provably converge to the exact query answer"	rdfs:member	"query"
s5	"execute these query in such a way that the result provably converge to the exact query answer"	rdfs:member	"way"
s5	"provably converge"	rdfs:subClassOf	"converge"
s5	"query answer"	rdfs:member	"query"
s5	"exact query"	rdfs:member	"exact"
s5	"query answer"	rdfs:subClassOf	"answer"
s5	"provably converge"	rdfs:member	"provably"
s5	"exact query answer"	rdfs:member	"exact query"
s5	"exact query answer"	rdfs:subClassOf	"answer"
s5	"exact query"	rdfs:subClassOf	"query"
s5	"exact query answer"	rdfs:subClassOf	"query answer"
s5	"execute in way"	rdfs:member	"execute"
s5	"execute in way"	rdfs:member	"way"
s5	"provably converge to exact query answer"	rdfs:member	"provably converge"
s5	"provably converge to exact query answer"	rdfs:member	"exact query answer"
s5	"we then show how to execute these queries in such a way that the result provably converges to the exact query answer"	local:AM-TMP	"then"
s4.2	"queries that each satisfy the fair use policy"
s4.2	"queries that each satisfy the fair use policy"	rdf:subject	"query"
s4.2	"queries that each satisfy the fair use policy"	rdf:predicate	"satisfy"
s4.2	"queries that each satisfy the fair use policy"	rdf:object	"fair use policy"
s4.2	"use policy"	rdfs:subClassOf	"policy"
s4.2	"use policy"	rdfs:member	"use"
s4.2	"fair use"	rdfs:subClassOf	"use"
s4.2	"fair use policy"	rdfs:subClassOf	"policy"
s4.2	"fair use"	rdfs:member	"fair"
s4.2	"fair use policy"	rdfs:member	"fair use"
s4.2	"fair use policy"	rdfs:subClassOf	"use policy"
s4.2	"queries that each satisfy the fair use policy"	local:AM-TMP	"each"
s4.1	"rewrite such queries into a set of queries that each satisfy the fair use policy"
s4.1	"rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:subject	"query"
s4.1	"rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:predicate	"rewrite"
s4.1	"rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:object	"set of query that each satisfy the fair use policy"
s4.1	"set of query that each satisfy the fair use policy"	rdfs:member	"satisfy"
s4.1	"set of query that each satisfy the fair use policy"	rdfs:member	"set"
s4.1	"set of query that each satisfy the fair use policy"	rdfs:member	"query"
s4.1	"set of query that each satisfy the fair use policy"	rdfs:member	"fair use policy"
s4.1	"use policy"	rdfs:subClassOf	"policy"
s4.1	"use policy"	rdfs:member	"use"
s4.1	"fair use"	rdfs:subClassOf	"use"
s4.1	"fair use policy"	rdfs:subClassOf	"policy"
s4.1	"fair use"	rdfs:member	"fair"
s4.1	"fair use policy"	rdfs:member	"fair use"
s4.1	"fair use policy"	rdfs:subClassOf	"use policy"
s4.1	"set of query"	rdfs:member	"set"
s4.1	"set of query"	rdfs:member	"query"
s4	"in this paper we show how to rewrite such queries into a set of queries that each satisfy the fair use policy"
s4	"in this paper we show how to rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:subject	"we"
s4	"in this paper we show how to rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:predicate	"show"
s4	"in this paper we show how to rewrite such queries into a set of queries that each satisfy the fair use policy"	rdf:object	"rewrite such query into a set of query that each satisfy the fair use policy"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"satisfy"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"set"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"fair use policy"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"rewrite"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"such query"
s4	"rewrite such query into a set of query that each satisfy the fair use policy"	rdfs:member	"query"
s4	"use policy"	rdfs:subClassOf	"policy"
s4	"use policy"	rdfs:member	"use"
s4	"such query"	rdfs:subClassOf	"query"
s4	"fair use"	rdfs:subClassOf	"use"
s4	"fair use policy"	rdfs:subClassOf	"policy"
s4	"fair use"	rdfs:member	"fair"
s4	"such query"	rdfs:member	"such"
s4	"fair use policy"	rdfs:member	"fair use"
s4	"fair use policy"	rdfs:subClassOf	"use policy"
s4	"rewrite into set"	rdfs:member	"rewrite"
s4	"rewrite into set"	rdfs:member	"set"
s4	"set of query"	rdfs:member	"set"
s4	"set of query"	rdfs:member	"query"
s4	"in this paper we show how to rewrite such queries into a set of queries that each satisfy the fair use policy"	local:AM-LOC	"paper"
s3.1	"the fair use policy cuts off expensive queries"
s3.1	"the fair use policy cuts off expensive queries"	rdf:subject	"fair use policy"
s3.1	"use policy"	rdfs:subClassOf	"policy"
s3.1	"use policy"	rdfs:member	"use"
s3.1	"fair use"	rdfs:subClassOf	"use"
s3.1	"fair use policy"	rdfs:subClassOf	"policy"
s3.1	"fair use"	rdfs:member	"fair"
s3.1	"fair use policy"	rdfs:member	"fair use"
s3.1	"fair use policy"	rdfs:subClassOf	"use policy"
s3.1	"the fair use policy cuts off expensive queries"	rdf:predicate	"cut"
s3.1	"the fair use policy cuts off expensive queries"	rdf:object	"expensive query"
s3.1	"expensive query"	rdfs:member	"expensive"
s3.1	"expensive query"	rdfs:subClassOf	"query"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	rdf:subject	"many analytical query"
s3	"many analytical query"	rdfs:subClassOf	"query"
s3	"analytical query"	rdfs:subClassOf	"query"
s3	"many analytical"	rdfs:member	"many"
s3	"many analytical"	rdfs:subClassOf	"analytical"
s3	"analytical query"	rdfs:member	"analytical"
s3	"many analytical query"	rdfs:member	"many analytical"
s3	"many analytical query"	rdfs:subClassOf	"analytical query"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	rdf:predicate	"not execute"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	local:AM-CAU	"fair use policy cut off expensive query"
s3	"fair use policy cut off expensive query"	rdfs:member	"off expensive query"
s3	"fair use policy cut off expensive query"	rdfs:member	"fair use policy"
s3	"off expensive query"	rdfs:member	"off expensive"
s3	"use policy"	rdfs:subClassOf	"policy"
s3	"off expensive query"	rdfs:subClassOf	"query"
s3	"off expensive"	rdfs:member	"off"
s3	"off expensive"	rdfs:subClassOf	"expensive"
s3	"use policy"	rdfs:member	"use"
s3	"fair use"	rdfs:subClassOf	"use"
s3	"expensive query"	rdfs:subClassOf	"query"
s3	"fair use policy"	rdfs:subClassOf	"policy"
s3	"expensive query"	rdfs:member	"expensive"
s3	"fair use"	rdfs:member	"fair"
s3	"fair use policy"	rdfs:member	"fair use"
s3	"fair use policy"	rdfs:subClassOf	"use policy"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	local:AM-MNR	"directly"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	local:AM-MNR	"sparql endpoint"
s3	"sparql endpoint"	rdfs:member	"sparql"
s3	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s3	"many analytical queries can not executed directly on the sparql endpoints because the fair use policy cuts off expensive queries"	local:AM-MOD	"can"
s2	"such queries monitor the quality"
s2	"such queries monitor the quality"	rdf:subject	"query"
s2	"such queries monitor the quality"	rdf:predicate	"monitor"
s2	"such queries monitor the quality"	rdf:object	"quality"
s1.1	"linked open data cloud"
s1.1	"linked open data cloud"	rdf:subject	"open data cloud"
s1.1	"open data"	rdfs:member	"open"
s1.1	"open data cloud"	rdfs:subClassOf	"cloud"
s1.1	"open data"	rdfs:subClassOf	"data"
s1.1	"data cloud"	rdfs:subClassOf	"cloud"
s1.1	"data cloud"	rdfs:member	"data"
s1.1	"open data cloud"	rdfs:member	"open data"
s1.1	"open data cloud"	rdfs:subClassOf	"data cloud"
s1.1	"linked open data cloud"	rdf:predicate	"link"
s1	"monitor the content of the linked open data cloud"
s1	"monitor the content of the linked open data cloud"	rdf:subject	"content of the link open data cloud"
s1	"content of the link open data cloud"	rdfs:member	"link"
s1	"content of the link open data cloud"	rdfs:member	"open data cloud"
s1	"content of the link open data cloud"	rdfs:member	"content"
s1	"open data"	rdfs:member	"open"
s1	"open data cloud"	rdfs:subClassOf	"cloud"
s1	"open data"	rdfs:subClassOf	"data"
s1	"data cloud"	rdfs:subClassOf	"cloud"
s1	"data cloud"	rdfs:member	"data"
s1	"open data cloud"	rdfs:member	"open data"
s1	"open data cloud"	rdfs:subClassOf	"data cloud"
s1	"link open data cloud"	rdfs:subClassOf	"open data cloud"
s1	"content of link open data cloud"	rdfs:member	"content"
s1	"content of link open data cloud"	rdfs:member	"link open data cloud"
s1	"monitor the content of the linked open data cloud"	rdf:predicate	"monitor"
s0	"property identifying the most frequent subjects"
s0	"property identifying the most frequent subjects"	rdf:subject	"property"
s0	"property identifying the most frequent subjects"	rdf:predicate	"identify"
s0	"property identifying the most frequent subjects"	rdf:object	"frequent subject"
s0	"frequent subject"	rdfs:member	"frequent"
s0	"frequent subject"	rdfs:subClassOf	"subject"
