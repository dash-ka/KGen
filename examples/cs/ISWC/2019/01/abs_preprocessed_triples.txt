s12.1	"we algorithm scales well to very large rdf datasets"
s12.1	"we algorithm scales well to very large rdf datasets"	rdf:subject	"algorithm"
s12.1	"we algorithm scales well to very large rdf datasets"	rdf:predicate	"scale"
s12.1	"we algorithm scales well to very large rdf datasets"	rdf:object	"large rdf datasets"
s12.1	"large rdf datasets"	rdfs:subClassOf	"datasets"
s12.1	"large rdf"	rdfs:member	"large"
s12.1	"rdf datasets"	rdfs:subClassOf	"datasets"
s12.1	"large rdf datasets"	rdfs:member	"large rdf"
s12.1	"large rdf"	rdfs:subClassOf	"rdf"
s12.1	"rdf datasets"	rdfs:member	"rdf"
s12.1	"large rdf datasets"	rdfs:subClassOf	"rdf datasets"
s12.1	"we algorithm scales well to very large rdf datasets"	local:AM-MNR	"well"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"	rdf:subject	"we"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"	rdf:predicate	"show"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"	rdf:object	"algorithm scale well to very large rdf datasets"
s12	"algorithm scale well to very large rdf datasets"	rdfs:member	"algorithm scale well"
s12	"algorithm scale well to very large rdf datasets"	rdfs:member	"very large rdf datasets"
s12	"scale well"	rdfs:subClassOf	"well"
s12	"very large"	rdfs:subClassOf	"large"
s12	"algorithm scale well"	rdfs:subClassOf	"well"
s12	"very large"	rdfs:member	"very"
s12	"large rdf"	rdfs:member	"large"
s12	"large rdf"	rdfs:subClassOf	"rdf"
s12	"algorithm scale"	rdfs:subClassOf	"scale"
s12	"rdf datasets"	rdfs:subClassOf	"datasets"
s12	"large rdf datasets"	rdfs:subClassOf	"datasets"
s12	"large rdf datasets"	rdfs:member	"large rdf"
s12	"very large rdf datasets"	rdfs:subClassOf	"datasets"
s12	"very large rdf datasets"	rdfs:member	"very large rdf"
s12	"very large rdf"	rdfs:subClassOf	"rdf"
s12	"scale well"	rdfs:member	"scale"
s12	"algorithm scale well"	rdfs:member	"algorithm scale"
s12	"rdf datasets"	rdfs:member	"rdf"
s12	"very large rdf"	rdfs:member	"very large"
s12	"algorithm scale"	rdfs:member	"algorithm"
s12	"large rdf datasets"	rdfs:subClassOf	"rdf datasets"
s12	"well large rdf datasets"	rdfs:subClassOf	"large rdf datasets"
s12	"algorithm scale to well large rdf datasets"	rdfs:member	"algorithm scale"
s12	"algorithm scale to well large rdf datasets"	rdfs:member	"well large rdf datasets"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"	local:AM-DIS	"also"
s12	"we also show empirically that we algorithm scales well to very large rdf datasets"	local:AM-MNR	"empirically"
s11.1	"a reasoning algorithm that preserving important properties such as nonrepetition of inferences"
s11.1	"a reasoning algorithm that preserving important properties such as nonrepetition of inferences"	rdf:subject	"reason algorithm"
s11.1	"reason algorithm"	rdfs:member	"reason"
s11.1	"reason algorithm"	rdfs:subClassOf	"algorithm"
s11.1	"a reasoning algorithm that preserving important properties such as nonrepetition of inferences"	rdf:predicate	"preserve"
s11.1	"a reasoning algorithm that preserving important properties such as nonrepetition of inferences"	rdf:object	"important property such a nonrepetition of inference"
s11.1	"important property such a nonrepetition of inference"	rdfs:member	"inference"
s11.1	"important property such a nonrepetition of inference"	rdfs:member	"important property"
s11.1	"important property such a nonrepetition of inference"	rdfs:member	"nonrepetition"
s11.1	"important property"	rdfs:member	"important"
s11.1	"important property"	rdfs:subClassOf	"property"
s11.1	"such nonrepetition"	rdfs:subClassOf	"nonrepetition"
s11.1	"such nonrepetition of inference"	rdfs:member	"such nonrepetition"
s11.1	"such nonrepetition of inference"	rdfs:member	"inference"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"	rdf:subject	"reason algorithm"
s11	"reason algorithm"	rdfs:member	"reason"
s11	"reason algorithm"	rdfs:subClassOf	"algorithm"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"	rdf:predicate	"handle"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"	rdf:object	"arbitrary rule"
s11	"arbitrary rule"	rdfs:subClassOf	"rule"
s11	"arbitrary rule"	rdfs:member	"arbitrary"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"	local:AM-MOD	"can"
s11	"a reasoning algorithm that can handle arbitrary rules while preserving important properties such as nonrepetition of inferences"	local:AM-TMP	"preserve important property such a nonrepetition of inference"
s11	"preserve important property such a nonrepetition of inference"	rdfs:member	"inference"
s11	"preserve important property such a nonrepetition of inference"	rdfs:member	"nonrepetition"
s11	"preserve important property such a nonrepetition of inference"	rdfs:member	"important property"
s11	"preserve important property such a nonrepetition of inference"	rdfs:member	"preserve"
s11	"important property"	rdfs:member	"important"
s11	"important property"	rdfs:subClassOf	"property"
s11	"such nonrepetition"	rdfs:subClassOf	"nonrepetition"
s11	"such nonrepetition of inference"	rdfs:member	"such nonrepetition"
s11	"such nonrepetition of inference"	rdfs:member	"inference"
s10.1	"distributed query"
s10.1	"distributed query"	rdf:subject	"query"
s10.1	"distributed query"	rdf:predicate	"distribute"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"	rdf:subject	"we"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"	rdf:predicate	"extend"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"	rdf:object	"dynamic data exchange approach"
s10	"dynamic data"	rdfs:member	"dynamic"
s10	"data exchange"	rdfs:member	"data"
s10	"exchange approach"	rdfs:subClassOf	"approach"
s10	"dynamic data exchange"	rdfs:subClassOf	"exchange"
s10	"dynamic data exchange"	rdfs:member	"dynamic data"
s10	"exchange approach"	rdfs:member	"exchange"
s10	"dynamic data exchange approach"	rdfs:subClassOf	"approach"
s10	"data exchange"	rdfs:subClassOf	"exchange"
s10	"dynamic data exchange approach"	rdfs:member	"dynamic data exchange"
s10	"data exchange approach"	rdfs:subClassOf	"approach"
s10	"data exchange approach"	rdfs:member	"data exchange"
s10	"dynamic data"	rdfs:subClassOf	"data"
s10	"data exchange approach"	rdfs:subClassOf	"exchange approach"
s10	"dynamic data exchange approach"	rdfs:subClassOf	"data exchange approach"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"	local:AM-LOC	"paper"
s10	"in this paper we extend the dynamic data exchange approach for distributed query answering by potter et al"	local:AM-PNC	"distribute query answer by potter et al"
s10	"distribute query answer by potter et al"	rdfs:member	"potter et al"
s10	"distribute query answer by potter et al"	rdfs:member	"distribute query answer"
s10	"distribute query"	rdfs:subClassOf	"query"
s10	"query answer"	rdfs:member	"query"
s10	"distribute query"	rdfs:member	"distribute"
s10	"query answer"	rdfs:subClassOf	"answer"
s10	"et al"	rdfs:subClassOf	"al"
s10	"distribute query answer"	rdfs:member	"distribute query"
s10	"potter et"	rdfs:member	"potter"
s10	"et al"	rdfs:member	"et"
s10	"potter et al"	rdfs:subClassOf	"al"
s10	"distribute query answer"	rdfs:subClassOf	"answer"
s10	"potter et"	rdfs:subClassOf	"et"
s10	"potter et al"	rdfs:member	"potter et"
s10	"al distribute"	rdfs:subClassOf	"distribute"
s10	"al distribute by potter"	rdfs:member	"al distribute"
s10	"al distribute by potter"	rdfs:member	"potter"
s9	"most can handle only limited datalog fragments"
s9	"most can handle only limited datalog fragments"	rdf:subject	"limit datalog fragment"
s9	"limit datalog"	rdfs:member	"limit"
s9	"datalog fragment"	rdfs:member	"datalog"
s9	"limit datalog fragment"	rdfs:subClassOf	"fragment"
s9	"limit datalog"	rdfs:subClassOf	"datalog"
s9	"limit datalog fragment"	rdfs:member	"limit datalog"
s9	"datalog fragment"	rdfs:subClassOf	"fragment"
s9	"limit datalog fragment"	rdfs:subClassOf	"datalog fragment"
s9	"most can handle only limited datalog fragments"	rdf:predicate	"handle"
s9	"most can handle only limited datalog fragments"	local:AM-ADV	"most"
s9	"most can handle only limited datalog fragments"	local:AM-MOD	"can"
s8	"most distributed rdf stores"
s8	"most distributed rdf stores"	rdf:subject	"rdf store"
s8	"rdf store"	rdfs:subClassOf	"store"
s8	"rdf store"	rdfs:member	"rdf"
s8	"most distributed rdf stores"	rdf:predicate	"distribute"
s8	"most distributed rdf stores"	local:AM-ADV	"most"
s7	"most distributed support"
s7	"most distributed support"	rdf:subject	"support"
s7	"most distributed support"	rdf:predicate	"distribute"
s7	"most distributed support"	local:AM-ADV	"most"
s6.2	"numerous are known distributed seminaive evaluation of arbitrary datalog rules"
s6.2	"numerous are known distributed seminaive evaluation of arbitrary datalog rules"	rdf:subject	"numerous be know distribute seminaive evaluation of arbitrary datalog rule"
s6.2	"numerous be know distribute seminaive evaluation of arbitrary datalog rule"	rdfs:member	"distribute seminaive evaluation"
s6.2	"numerous be know distribute seminaive evaluation of arbitrary datalog rule"	rdfs:member	"arbitrary datalog rule"
s6.2	"datalog rule"	rdfs:member	"datalog"
s6.2	"arbitrary datalog rule"	rdfs:member	"arbitrary datalog"
s6.2	"distribute seminaive"	rdfs:member	"distribute"
s6.2	"arbitrary datalog"	rdfs:subClassOf	"datalog"
s6.2	"arbitrary datalog rule"	rdfs:subClassOf	"rule"
s6.2	"seminaive evaluation"	rdfs:member	"seminaive"
s6.2	"datalog rule"	rdfs:subClassOf	"rule"
s6.2	"distribute seminaive evaluation"	rdfs:subClassOf	"evaluation"
s6.2	"arbitrary datalog"	rdfs:member	"arbitrary"
s6.2	"distribute seminaive evaluation"	rdfs:member	"distribute seminaive"
s6.2	"distribute seminaive"	rdfs:subClassOf	"seminaive"
s6.2	"seminaive evaluation"	rdfs:subClassOf	"evaluation"
s6.2	"arbitrary datalog rule"	rdfs:subClassOf	"datalog rule"
s6.2	"be know"	rdfs:subClassOf	"know"
s6.2	"seminaive evaluation of arbitrary datalog rule"	rdfs:member	"seminaive evaluation"
s6.2	"seminaive evaluation of arbitrary datalog rule"	rdfs:member	"arbitrary datalog rule"
s6.2	"numerous are known distributed seminaive evaluation of arbitrary datalog rules"	rdf:predicate	"understand"
s6.1	"numerous distributed seminaive evaluation"
s6.1	"numerous distributed seminaive evaluation"	rdf:subject	"numerous"
s6.1	"numerous distributed seminaive evaluation"	rdf:predicate	"distribute"
s6.1	"numerous distributed seminaive evaluation"	rdf:object	"seminaive evaluation"
s6.1	"seminaive evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"seminaive evaluation"	rdfs:member	"seminaive"
s6	"numerous known distributed seminaive evaluation of arbitrary datalog rules"
s6	"numerous known distributed seminaive evaluation of arbitrary datalog rules"	rdf:subject	"numerous"
s6	"numerous known distributed seminaive evaluation of arbitrary datalog rules"	rdf:predicate	"know"
s6	"numerous known distributed seminaive evaluation of arbitrary datalog rules"	rdf:object	"distribute seminaive evaluation of arbitrary datalog rule"
s6	"distribute seminaive evaluation of arbitrary datalog rule"	rdfs:member	"arbitrary datalog rule"
s6	"distribute seminaive evaluation of arbitrary datalog rule"	rdfs:member	"seminaive evaluation"
s6	"distribute seminaive evaluation of arbitrary datalog rule"	rdfs:member	"distribute"
s6	"datalog rule"	rdfs:member	"datalog"
s6	"arbitrary datalog rule"	rdfs:member	"arbitrary datalog"
s6	"arbitrary datalog"	rdfs:subClassOf	"datalog"
s6	"seminaive evaluation"	rdfs:member	"seminaive"
s6	"datalog rule"	rdfs:subClassOf	"rule"
s6	"arbitrary datalog"	rdfs:member	"arbitrary"
s6	"arbitrary datalog rule"	rdfs:subClassOf	"rule"
s6	"seminaive evaluation"	rdfs:subClassOf	"evaluation"
s6	"arbitrary datalog rule"	rdfs:subClassOf	"datalog rule"
s6	"seminaive evaluation of arbitrary datalog rule"	rdfs:member	"seminaive evaluation"
s6	"seminaive evaluation of arbitrary datalog rule"	rdfs:member	"arbitrary datalog rule"
s5	"distributed query answering techniques"
s5	"distributed query answering techniques"	rdf:subject	"query answer technique"
s5	"query answer"	rdfs:member	"query"
s5	"query answer technique"	rdfs:member	"query answer"
s5	"answer technique"	rdfs:member	"answer"
s5	"query answer technique"	rdfs:subClassOf	"technique"
s5	"answer technique"	rdfs:subClassOf	"technique"
s5	"query answer"	rdfs:subClassOf	"answer"
s5	"query answer technique"	rdfs:subClassOf	"answer technique"
s5	"distributed query answering techniques"	rdf:predicate	"distribute"
s4	"large rdf datasets often exceed the capacity of centralised rdf systems"
s4	"large rdf datasets often exceed the capacity of centralised rdf systems"	rdf:subject	"large rdf datasets"
s4	"large rdf datasets"	rdfs:subClassOf	"datasets"
s4	"large rdf"	rdfs:member	"large"
s4	"rdf datasets"	rdfs:subClassOf	"datasets"
s4	"large rdf datasets"	rdfs:member	"large rdf"
s4	"large rdf"	rdfs:subClassOf	"rdf"
s4	"rdf datasets"	rdfs:member	"rdf"
s4	"large rdf datasets"	rdfs:subClassOf	"rdf datasets"
s4	"large rdf datasets often exceed the capacity of centralised rdf systems"	rdf:predicate	"exceed"
s4	"large rdf datasets often exceed the capacity of centralised rdf systems"	rdf:object	"capacity of centralise rdf system"
s4	"capacity of centralise rdf system"	rdfs:member	"centralise rdf system"
s4	"capacity of centralise rdf system"	rdfs:member	"capacity"
s4	"centralise rdf"	rdfs:member	"centralise"
s4	"rdf system"	rdfs:member	"rdf"
s4	"rdf system"	rdfs:subClassOf	"system"
s4	"centralise rdf system"	rdfs:subClassOf	"system"
s4	"centralise rdf system"	rdfs:member	"centralise rdf"
s4	"centralise rdf"	rdfs:subClassOf	"rdf"
s4	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s4	"capacity of centralise rdf system"	rdfs:member	"capacity"
s4	"capacity of centralise rdf system"	rdfs:member	"centralise rdf system"
s4	"large rdf datasets often exceed the capacity of centralised rdf systems"	local:AM-TMP	"often"
s3	"distribute large rdf datasets in a cluster of sharednothing servers"
s3	"distribute large rdf datasets in a cluster of sharednothing servers"	rdf:subject	"large rdf datasets"
s3	"large rdf datasets"	rdfs:subClassOf	"datasets"
s3	"large rdf"	rdfs:member	"large"
s3	"rdf datasets"	rdfs:subClassOf	"datasets"
s3	"large rdf datasets"	rdfs:member	"large rdf"
s3	"large rdf"	rdfs:subClassOf	"rdf"
s3	"rdf datasets"	rdfs:member	"rdf"
s3	"large rdf datasets"	rdfs:subClassOf	"rdf datasets"
s3	"distribute large rdf datasets in a cluster of sharednothing servers"	rdf:predicate	"distribute"
s3	"distribute large rdf datasets in a cluster of sharednothing servers"	local:AM-LOC	"cluster of sharednothing server"
s3	"cluster of sharednothing server"	rdfs:member	"server"
s3	"cluster of sharednothing server"	rdfs:member	"cluster"
s3	"sharednothing server"	rdfs:subClassOf	"server"
s3	"cluster of sharednothing server"	rdfs:member	"cluster"
s3	"cluster of sharednothing server"	rdfs:member	"sharednothing server"
s2.2	"several centralised rdf systems storing all logically implied triples"
s2.2	"several centralised rdf systems storing all logically implied triples"	rdf:subject	"several centralise rdf system"
s2.2	"several centralise rdf"	rdfs:subClassOf	"rdf"
s2.2	"several centralise"	rdfs:subClassOf	"centralise"
s2.2	"several centralise rdf system"	rdfs:subClassOf	"system"
s2.2	"centralise rdf"	rdfs:member	"centralise"
s2.2	"rdf system"	rdfs:subClassOf	"system"
s2.2	"rdf system"	rdfs:member	"rdf"
s2.2	"centralise rdf system"	rdfs:subClassOf	"system"
s2.2	"several centralise rdf system"	rdfs:member	"several centralise rdf"
s2.2	"several centralise rdf"	rdfs:member	"several centralise"
s2.2	"centralise rdf system"	rdfs:member	"centralise rdf"
s2.2	"centralise rdf"	rdfs:subClassOf	"rdf"
s2.2	"several centralise"	rdfs:member	"several"
s2.2	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s2.2	"several centralise rdf system"	rdfs:subClassOf	"centralise rdf system"
s2.2	"several centralised rdf systems storing all logically implied triples"	rdf:predicate	"imply"
s2.2	"several centralised rdf systems storing all logically implied triples"	rdf:object	"triple"
s2.2	"several centralised rdf systems storing all logically implied triples"	local:AM-ADV	"store all"
s2.2	"store all"	rdfs:subClassOf	"all"
s2.2	"several centralised rdf systems storing all logically implied triples"	local:AM-MNR	"logically"
s2.1	"storing all"
s2.1	"storing all"	rdf:subject	"all"
s2.1	"storing all"	rdf:predicate	"store"
s2	"several centralised rdf systems support datalog reasoning by storing all logically implied triples"
s2	"several centralised rdf systems support datalog reasoning by storing all logically implied triples"	rdf:subject	"several centralise rdf system"
s2	"several centralise rdf"	rdfs:subClassOf	"rdf"
s2	"several centralise"	rdfs:subClassOf	"centralise"
s2	"several centralise rdf system"	rdfs:subClassOf	"system"
s2	"centralise rdf"	rdfs:member	"centralise"
s2	"rdf system"	rdfs:subClassOf	"system"
s2	"rdf system"	rdfs:member	"rdf"
s2	"centralise rdf system"	rdfs:subClassOf	"system"
s2	"several centralise rdf system"	rdfs:member	"several centralise rdf"
s2	"several centralise rdf"	rdfs:member	"several centralise"
s2	"centralise rdf system"	rdfs:member	"centralise rdf"
s2	"centralise rdf"	rdfs:subClassOf	"rdf"
s2	"several centralise"	rdfs:member	"several"
s2	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s2	"several centralise rdf system"	rdfs:subClassOf	"centralise rdf system"
s2	"several centralised rdf systems support datalog reasoning by storing all logically implied triples"	rdf:predicate	"support"
s2	"several centralised rdf systems support datalog reasoning by storing all logically implied triples"	rdf:object	"datalog reason"
s2	"datalog reason"	rdfs:member	"datalog"
s2	"datalog reason"	rdfs:subClassOf	"reason"
s2	"several centralised rdf systems support datalog reasoning by storing all logically implied triples"	local:AM-MNR	"store all logically imply triple"
s2	"store all logically imply triple"	rdfs:member	"store"
s2	"store all logically imply triple"	rdfs:member	"logically imply triple"
s2	"logically imply triple"	rdfs:subClassOf	"triple"
s2	"logically imply"	rdfs:subClassOf	"imply"
s2	"logically imply triple"	rdfs:member	"logically imply"
s2	"logically imply"	rdfs:member	"logically"
s2	"imply triple"	rdfs:subClassOf	"triple"
s2	"imply triple"	rdfs:member	"imply"
s1.1	"triples using the wellknown seminaive algorithm"
s1.1	"triples using the wellknown seminaive algorithm"	rdf:subject	"triple"
s1.1	"triples using the wellknown seminaive algorithm"	rdf:predicate	"use"
s1.1	"triples using the wellknown seminaive algorithm"	rdf:object	"wellknown seminaive algorithm"
s1.1	"wellknown seminaive"	rdfs:subClassOf	"seminaive"
s1.1	"wellknown seminaive algorithm"	rdfs:subClassOf	"algorithm"
s1.1	"seminaive algorithm"	rdfs:subClassOf	"algorithm"
s1.1	"wellknown seminaive algorithm"	rdfs:member	"wellknown seminaive"
s1.1	"seminaive algorithm"	rdfs:member	"seminaive"
s1.1	"wellknown seminaive"	rdfs:member	"wellknown"
s1.1	"wellknown seminaive algorithm"	rdfs:subClassOf	"seminaive algorithm"
s1	"all logically implied triples using the wellknown seminaive algorithm"
s1	"all logically implied triples using the wellknown seminaive algorithm"	rdf:subject	"all"
s1	"all logically implied triples using the wellknown seminaive algorithm"	rdf:predicate	"imply"
s1	"all logically implied triples using the wellknown seminaive algorithm"	rdf:object	"triple use the wellknown seminaive algorithm"
s1	"triple use the wellknown seminaive algorithm"	rdfs:member	"triple"
s1	"triple use the wellknown seminaive algorithm"	rdfs:member	"wellknown seminaive algorithm"
s1	"wellknown seminaive"	rdfs:subClassOf	"seminaive"
s1	"wellknown seminaive algorithm"	rdfs:subClassOf	"algorithm"
s1	"seminaive algorithm"	rdfs:subClassOf	"algorithm"
s1	"wellknown seminaive algorithm"	rdfs:member	"wellknown seminaive"
s1	"seminaive algorithm"	rdfs:member	"seminaive"
s1	"wellknown seminaive"	rdfs:member	"wellknown"
s1	"wellknown seminaive algorithm"	rdfs:subClassOf	"seminaive algorithm"
s1	"triple use"	rdfs:subClassOf	"use"
s1	"all logically implied triples using the wellknown seminaive algorithm"	local:AM-MNR	"logically"
s0.2	"several centralised rdf systems all logically implied triples"
s0.2	"several centralised rdf systems all logically implied triples"	rdf:subject	"several centralise rdf system"
s0.2	"several centralise rdf"	rdfs:subClassOf	"rdf"
s0.2	"several centralise"	rdfs:subClassOf	"centralise"
s0.2	"several centralise rdf system"	rdfs:subClassOf	"system"
s0.2	"centralise rdf"	rdfs:member	"centralise"
s0.2	"rdf system"	rdfs:subClassOf	"system"
s0.2	"rdf system"	rdfs:member	"rdf"
s0.2	"centralise rdf system"	rdfs:subClassOf	"system"
s0.2	"several centralise rdf system"	rdfs:member	"several centralise rdf"
s0.2	"several centralise rdf"	rdfs:member	"several centralise"
s0.2	"centralise rdf system"	rdfs:member	"centralise rdf"
s0.2	"centralise rdf"	rdfs:subClassOf	"rdf"
s0.2	"several centralise"	rdfs:member	"several"
s0.2	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s0.2	"several centralise rdf system"	rdfs:subClassOf	"centralise rdf system"
s0.2	"several centralised rdf systems all logically implied triples"	rdf:predicate	"imply"
s0.2	"several centralised rdf systems all logically implied triples"	rdf:object	"triple"
s0.2	"several centralised rdf systems all logically implied triples"	local:AM-MNR	"logically"
s0.1	"several centralised rdf systems precomputing all logically implied triples"
s0.1	"several centralised rdf systems precomputing all logically implied triples"	rdf:subject	"several centralise rdf system"
s0.1	"several centralise rdf"	rdfs:subClassOf	"rdf"
s0.1	"several centralise"	rdfs:subClassOf	"centralise"
s0.1	"several centralise rdf system"	rdfs:subClassOf	"system"
s0.1	"centralise rdf"	rdfs:member	"centralise"
s0.1	"rdf system"	rdfs:subClassOf	"system"
s0.1	"rdf system"	rdfs:member	"rdf"
s0.1	"centralise rdf system"	rdfs:subClassOf	"system"
s0.1	"several centralise rdf system"	rdfs:member	"several centralise rdf"
s0.1	"several centralise rdf"	rdfs:member	"several centralise"
s0.1	"centralise rdf system"	rdfs:member	"centralise rdf"
s0.1	"centralise rdf"	rdfs:subClassOf	"rdf"
s0.1	"several centralise"	rdfs:member	"several"
s0.1	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s0.1	"several centralise rdf system"	rdfs:subClassOf	"centralise rdf system"
s0.1	"several centralised rdf systems precomputing all logically implied triples"	rdf:predicate	"precomputing"
s0.1	"several centralised rdf systems precomputing all logically implied triples"	local:AM-MNR	"logically imply triple"
s0.1	"logically imply triple"	rdfs:subClassOf	"triple"
s0.1	"logically imply"	rdfs:subClassOf	"imply"
s0.1	"logically imply triple"	rdfs:member	"logically imply"
s0.1	"logically imply"	rdfs:member	"logically"
s0.1	"imply triple"	rdfs:subClassOf	"triple"
s0.1	"imply triple"	rdfs:member	"imply"
s0	"several centralised rdf systems support datalog reasoning by precomputing all logically implied triples"
s0	"several centralised rdf systems support datalog reasoning by precomputing all logically implied triples"	rdf:subject	"several centralise rdf system"
s0	"several centralise rdf"	rdfs:subClassOf	"rdf"
s0	"several centralise"	rdfs:subClassOf	"centralise"
s0	"several centralise rdf system"	rdfs:subClassOf	"system"
s0	"centralise rdf"	rdfs:member	"centralise"
s0	"rdf system"	rdfs:subClassOf	"system"
s0	"rdf system"	rdfs:member	"rdf"
s0	"centralise rdf system"	rdfs:subClassOf	"system"
s0	"several centralise rdf system"	rdfs:member	"several centralise rdf"
s0	"several centralise rdf"	rdfs:member	"several centralise"
s0	"centralise rdf system"	rdfs:member	"centralise rdf"
s0	"centralise rdf"	rdfs:subClassOf	"rdf"
s0	"several centralise"	rdfs:member	"several"
s0	"centralise rdf system"	rdfs:subClassOf	"rdf system"
s0	"several centralise rdf system"	rdfs:subClassOf	"centralise rdf system"
s0	"several centralised rdf systems support datalog reasoning by precomputing all logically implied triples"	rdf:predicate	"support"
s0	"several centralised rdf systems support datalog reasoning by precomputing all logically implied triples"	rdf:object	"datalog reason"
s0	"datalog reason"	rdfs:member	"datalog"
s0	"datalog reason"	rdfs:subClassOf	"reason"
s0	"several centralised rdf systems support datalog reasoning by precomputing all logically implied triples"	local:AM-MNR	"precomputing all logically imply triple"
s0	"logically imply triple"	rdfs:subClassOf	"triple"
s0	"logically imply"	rdfs:subClassOf	"imply"
s0	"logically imply triple"	rdfs:member	"logically imply"
s0	"logically imply"	rdfs:member	"logically"
s0	"imply triple"	rdfs:subClassOf	"triple"
s0	"imply triple"	rdfs:member	"imply"
