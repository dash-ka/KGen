the language is a specification for validating rdf graphs
the language is a specification for describing rdf graphs
rdf graphs that has recently become a w3c recommendation
while the language is gaining traction in the industry algorithms for shacl constraint validation are still at an early stage
a first challenge comes from the fact that rdf graphs are often therefore only accessible via queries
a first challenge comes from the fact that rdf graphs are often exposed as sparql endpoints
another difficulty is the absence of guidelines about the way recursive constraints should be handled
a shacl schema which can be executed over a sparql endpoint
in this paper we provide algorithms for validating a graph against a shacl schema
we first investigate the possibility of validating a graph through a single query for nonrecursive constraints
a strategy that consists in evaluating a small number of sparql queries over the endpoint
propositional formulas that are passed to a sat solver
a strategy that consists in using the answers to build a set of propositional formulas
then for the recursive case since the problem has been shown to be nphard we propose a strategy
finally we show that the process can be optimized when dealing with recursive fragments of shacl without the need for an external solver
finally we show that the process can be optimized when dealing with tractable fragments of shacl without the need for an external solver
we also present a proofofconcept evaluation of this last approach