there is a growing need for tools
Largescale knowledge graphs are increasingly being used in applications
tools that can effectively support users in analysis tasks
tools that can effectively support users in exploration tasks
One such important task is entity comparison to describe in an informative way the similarities between two given entities as described in a knowledge graph
In our previous work the result of entity comparison is modelled as a similarity query that is a SPARQL query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as Telenor in the YAGO graph as a query
In our previous work the result of entity comparison is modelled as a similarity query that is a SPARQL query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as Vodafone in the YAGO graph as a query
a query asking for all telecom companies based in Europe
In this paper our extend the results of our prior work in different ways
First our expand the language of similarity queries to consider a richer fragment of SPARQL this enables our to express that Vodafone are also similar in that Telenor both have at least 30000 employees
First our expand the language of similarity queries to consider a richer fragment of SPARQL this enables our to express that Telenor are also similar in that Telenor both have at least 30000 employees
SPARQL allowing for numeric filter expressions
First our expand the language of similarity queries to consider a richer fragment of SPARQL this enables our to express that Vodafone are also similar in that Vodafone both have at least 30000 employees
First our expand the language of similarity queries to consider a richer fragment of SPARQL this enables our to express that Telenor are also similar in that Vodafone both have at least 30000 employees
computing similarity queries satisfying certain additional desirable properties such as being as specific as possible
We then propose algorithms for computing similarity queries
Such algorithms are however impractical hence we also propose necessarily a most specific one
Such algorithms are however impractical hence we also implement necessarily a most specific one
a scalable algorithm that is guaranteed to compute a similarity query
Such algorithms are however impractical hence we also propose a scalable algorithm
Such algorithms are however impractical hence we also implement a scalable algorithm