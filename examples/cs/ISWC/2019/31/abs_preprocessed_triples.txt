s20	"we also propose a scalable algorithm"
s20	"we also propose a scalable algorithm"	rdf:subject	"we"
s20	"we also propose a scalable algorithm"	rdf:predicate	"propose"
s20	"we also propose a scalable algorithm"	rdf:object	"scalable algorithm"
s20	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s20	"scalable algorithm"	rdfs:member	"scalable"
s20	"we also propose a scalable algorithm"	local:AM-DIS	"also"
s19	"we also implement a scalable algorithm"
s19	"we also implement a scalable algorithm"	rdf:subject	"we"
s19	"we also implement a scalable algorithm"	rdf:predicate	"implement"
s19	"we also implement a scalable algorithm"	rdf:object	"scalable algorithm"
s19	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s19	"scalable algorithm"	rdfs:member	"scalable"
s19	"we also implement a scalable algorithm"	local:AM-DIS	"also"
s18	"we also propose necessarily a most specific one"
s18	"we also propose necessarily a most specific one"	rdf:subject	"we"
s18	"we also propose necessarily a most specific one"	rdf:predicate	"propose"
s18	"we also propose necessarily a most specific one"	rdf:object	"necessarily a most specific one"
s18	"specific one"	rdfs:subClassOf	"one"
s18	"most specific"	rdfs:subClassOf	"specific"
s18	"necessarily specific one"	rdfs:subClassOf	"specific one"
s18	"we also propose necessarily a most specific one"	local:AM-DIS	"also"
s17.1	"a scalable algorithm that compute a similarity query"
s17.1	"a scalable algorithm that compute a similarity query"	rdf:subject	"scalable algorithm"
s17.1	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s17.1	"scalable algorithm"	rdfs:member	"scalable"
s17.1	"a scalable algorithm that compute a similarity query"	rdf:predicate	"compute"
s17.1	"a scalable algorithm that compute a similarity query"	rdf:object	"similarity query"
s17.1	"similarity query"	rdfs:subClassOf	"query"
s17.1	"similarity query"	rdfs:member	"similarity"
s17	"a scalable algorithm that guaranteed to compute a similarity query"
s17	"a scalable algorithm that guaranteed to compute a similarity query"	rdf:subject	"scalable algorithm"
s17	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s17	"scalable algorithm"	rdfs:member	"scalable"
s17	"a scalable algorithm that guaranteed to compute a similarity query"	rdf:predicate	"guarantee"
s17	"a scalable algorithm that guaranteed to compute a similarity query"	local:AM-PNC	"compute a similarity query"
s17	"compute a similarity query"	rdfs:member	"compute"
s17	"compute a similarity query"	rdfs:member	"similarity query"
s17	"similarity query"	rdfs:subClassOf	"query"
s17	"similarity query"	rdfs:member	"similarity"
s16	"impractical hence we also implement necessarily a most specific one"
s16	"impractical hence we also implement necessarily a most specific one"	rdf:subject	"we"
s16	"impractical hence we also implement necessarily a most specific one"	rdf:predicate	"implement"
s16	"impractical hence we also implement necessarily a most specific one"	rdf:object	"necessarily a most specific one"
s16	"specific one"	rdfs:subClassOf	"one"
s16	"most specific"	rdfs:subClassOf	"specific"
s16	"necessarily specific one"	rdfs:subClassOf	"specific one"
s16	"impractical hence we also implement necessarily a most specific one"	local:AM-DIS	"also"
s16	"impractical hence we also implement necessarily a most specific one"	local:AM-MNR	"impractical hence"
s16	"impractical hence"	rdfs:member	"impractical"
s16	"impractical hence"	rdfs:subClassOf	"hence"
s16	"hence impractical"	rdfs:subClassOf	"impractical"
s15.1	"algorithms computing similarity queries"
s15.1	"algorithms computing similarity queries"	rdf:subject	"algorithm"
s15.1	"algorithms computing similarity queries"	rdf:predicate	"compute"
s15.1	"algorithms computing similarity queries"	rdf:object	"similarity query"
s15.1	"similarity query"	rdfs:subClassOf	"query"
s15.1	"similarity query"	rdfs:member	"similarity"
s15	"we then propose algorithms for computing similarity queries"
s15	"we then propose algorithms for computing similarity queries"	rdf:subject	"we"
s15	"we then propose algorithms for computing similarity queries"	rdf:predicate	"propose"
s15	"we then propose algorithms for computing similarity queries"	rdf:object	"algorithm for compute similarity query"
s15	"algorithm for compute similarity query"	rdfs:member	"algorithm"
s15	"algorithm for compute similarity query"	rdfs:member	"compute similarity query"
s15	"similarity query"	rdfs:subClassOf	"query"
s15	"compute similarity query"	rdfs:member	"compute similarity"
s15	"similarity query"	rdfs:member	"similarity"
s15	"compute similarity"	rdfs:subClassOf	"similarity"
s15	"compute similarity"	rdfs:member	"compute"
s15	"compute similarity query"	rdfs:subClassOf	"query"
s15	"we then propose algorithms for computing similarity queries"	local:AM-TMP	"then"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity query"
s14.2	"similarity query"	rdfs:subClassOf	"query"
s14.2	"similarity query"	rdfs:member	"similarity"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"satisfy"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:object	"certain additional desirable property such a be a specific a possible"
s14.2	"certain additional desirable property such a be a specific a possible"	rdfs:member	"specific"
s14.2	"certain additional desirable property such a be a specific a possible"	rdfs:member	"certain additional desirable property"
s14.2	"additional desirable"	rdfs:subClassOf	"desirable"
s14.2	"certain additional desirable property"	rdfs:subClassOf	"property"
s14.2	"additional desirable property"	rdfs:member	"additional desirable"
s14.2	"certain additional desirable property"	rdfs:member	"certain additional desirable"
s14.2	"desirable property"	rdfs:member	"desirable"
s14.2	"certain additional desirable"	rdfs:subClassOf	"desirable"
s14.2	"additional desirable"	rdfs:member	"additional"
s14.2	"certain additional"	rdfs:member	"certain"
s14.2	"additional desirable property"	rdfs:subClassOf	"property"
s14.2	"certain additional"	rdfs:subClassOf	"additional"
s14.2	"desirable property"	rdfs:subClassOf	"property"
s14.2	"certain additional desirable"	rdfs:member	"certain additional"
s14.2	"specific possible"	rdfs:subClassOf	"possible"
s14.2	"such specific possible"	rdfs:subClassOf	"specific possible"
s14.2	"additional desirable property"	rdfs:subClassOf	"desirable property"
s14.2	"certain additional desirable property"	rdfs:subClassOf	"additional desirable property"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"query"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:object	"satisfy certain additional desirable property such a be a specific a possible"
s14.1	"satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"satisfy"
s14.1	"satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"specific"
s14.1	"satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"certain additional desirable property"
s14.1	"additional desirable"	rdfs:subClassOf	"desirable"
s14.1	"certain additional desirable property"	rdfs:subClassOf	"property"
s14.1	"additional desirable property"	rdfs:member	"additional desirable"
s14.1	"certain additional desirable property"	rdfs:member	"certain additional desirable"
s14.1	"desirable property"	rdfs:member	"desirable"
s14.1	"certain additional desirable"	rdfs:subClassOf	"desirable"
s14.1	"additional desirable"	rdfs:member	"additional"
s14.1	"certain additional"	rdfs:member	"certain"
s14.1	"additional desirable property"	rdfs:subClassOf	"property"
s14.1	"certain additional"	rdfs:subClassOf	"additional"
s14.1	"desirable property"	rdfs:subClassOf	"property"
s14.1	"certain additional desirable"	rdfs:member	"certain additional"
s14.1	"specific possible"	rdfs:subClassOf	"possible"
s14.1	"such specific possible"	rdfs:subClassOf	"specific possible"
s14.1	"additional desirable property"	rdfs:subClassOf	"desirable property"
s14.1	"certain additional desirable property"	rdfs:subClassOf	"additional desirable property"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity query satisfy certain additional desirable property such a be a specific a possible"
s14	"similarity query satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"specific"
s14	"similarity query satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"similarity query satisfy"
s14	"similarity query satisfy certain additional desirable property such a be a specific a possible"	rdfs:member	"certain additional desirable property"
s14	"additional desirable"	rdfs:subClassOf	"desirable"
s14	"query satisfy"	rdfs:subClassOf	"satisfy"
s14	"similarity query"	rdfs:subClassOf	"query"
s14	"similarity query satisfy"	rdfs:member	"similarity query"
s14	"certain additional desirable property"	rdfs:subClassOf	"property"
s14	"similarity query satisfy"	rdfs:subClassOf	"satisfy"
s14	"additional desirable property"	rdfs:member	"additional desirable"
s14	"certain additional desirable property"	rdfs:member	"certain additional desirable"
s14	"desirable property"	rdfs:member	"desirable"
s14	"certain additional desirable"	rdfs:subClassOf	"desirable"
s14	"query satisfy"	rdfs:member	"query"
s14	"certain additional"	rdfs:member	"certain"
s14	"additional desirable"	rdfs:member	"additional"
s14	"additional desirable property"	rdfs:subClassOf	"property"
s14	"similarity query"	rdfs:member	"similarity"
s14	"certain additional"	rdfs:subClassOf	"additional"
s14	"desirable property"	rdfs:subClassOf	"property"
s14	"certain additional desirable"	rdfs:member	"certain additional"
s14	"specific possible"	rdfs:subClassOf	"possible"
s14	"such specific possible"	rdfs:subClassOf	"specific possible"
s14	"additional desirable property"	rdfs:subClassOf	"desirable property"
s14	"certain additional desirable property"	rdfs:subClassOf	"additional desirable property"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"compute"
s13.4	"similar in that telenor both have at least 30000 employees"
s13.4	"similar in that telenor both have at least 30000 employees"	rdf:subject	"similar in that telenor"
s13.4	"similar in telenor"	rdfs:member	"similar"
s13.4	"similar in telenor"	rdfs:member	"telenor"
s13.4	"similar in that telenor both have at least 30000 employees"	rdf:predicate	"have"
s13.4	"similar in that telenor both have at least 30000 employees"	rdf:object	"least 30000 employee"
s13.4	"30000 employee"	rdfs:subClassOf	"employee"
s13.4	"least 30000"	rdfs:subClassOf	"30000"
s13.4	"similar in that telenor both have at least 30000 employees"	local:AM-ADV	"both"
s13.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"
s13.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"our"
s13.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"express"
s13.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"telenor be also similar in that telenor both have at least 30000 employee"
s13.3	"telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s13.3	"telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s13.3	"30000 employee"	rdfs:subClassOf	"employee"
s13.3	"least 30000"	rdfs:subClassOf	"30000"
s13.3	"also similar"	rdfs:subClassOf	"similar"
s13.3	"also similar in telenor"	rdfs:member	"also similar"
s13.3	"also similar in telenor"	rdfs:member	"telenor"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"richer fragment of sparql this"
s13.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s13.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s13.2	"richer fragment"	rdfs:subClassOf	"fragment"
s13.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13.2	"richer fragment of sparql"	rdfs:member	"sparql"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"enable"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"express that telenor be also similar in that telenor both have at least 30000 employee"
s13.2	"express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s13.2	"express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s13.2	"express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"express"
s13.2	"30000 employee"	rdfs:subClassOf	"employee"
s13.2	"least 30000"	rdfs:subClassOf	"30000"
s13.2	"also similar"	rdfs:subClassOf	"similar"
s13.2	"also similar in telenor"	rdfs:member	"also similar"
s13.2	"also similar in telenor"	rdfs:member	"telenor"
s13.1	"consider a richer fragment of sparql"
s13.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of sparql"
s13.1	"richer fragment of sparql"	rdfs:member	"fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"sparql"
s13.1	"richer fragment"	rdfs:subClassOf	"fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"sparql"
s13.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"first our"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"expand"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"richer fragment"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"sparql"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"similarity query"
s13	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that telenor both have at least 30000 employee"	rdfs:member	"language"
s13	"richer fragment"	rdfs:subClassOf	"fragment"
s13	"richer fragment"	rdfs:member	"richer"
s13	"similarity query"	rdfs:member	"similarity"
s13	"similarity query"	rdfs:subClassOf	"query"
s13	"30000 employee"	rdfs:subClassOf	"employee"
s13	"least 30000"	rdfs:subClassOf	"30000"
s13	"also similar"	rdfs:subClassOf	"similar"
s13	"language of similarity query"	rdfs:member	"language"
s13	"language of similarity query"	rdfs:member	"similarity query"
s13	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13	"richer fragment of sparql"	rdfs:member	"sparql"
s13	"also similar in telenor"	rdfs:member	"also similar"
s13	"also similar in telenor"	rdfs:member	"telenor"
s12	"sparql allowing for numeric filter expressions"
s12	"sparql allowing for numeric filter expressions"	rdf:subject	"sparql"
s12	"sparql allowing for numeric filter expressions"	rdf:predicate	"allow"
s12	"sparql allowing for numeric filter expressions"	rdf:object	"numeric filter expression"
s12	"filter expression"	rdfs:member	"filter"
s12	"numeric filter"	rdfs:subClassOf	"filter"
s12	"numeric filter expression"	rdfs:subClassOf	"expression"
s12	"numeric filter"	rdfs:member	"numeric"
s12	"numeric filter expression"	rdfs:member	"numeric filter"
s12	"filter expression"	rdfs:subClassOf	"expression"
s12	"numeric filter expression"	rdfs:subClassOf	"filter expression"
s11.4	"similar in that vodafone both have at least 30000 employees"
s11.4	"similar in that vodafone both have at least 30000 employees"	rdf:subject	"similar in that vodafone"
s11.4	"similar in vodafone"	rdfs:member	"similar"
s11.4	"similar in vodafone"	rdfs:member	"vodafone"
s11.4	"similar in that vodafone both have at least 30000 employees"	rdf:predicate	"have"
s11.4	"similar in that vodafone both have at least 30000 employees"	rdf:object	"least 30000 employee"
s11.4	"30000 employee"	rdfs:subClassOf	"employee"
s11.4	"least 30000"	rdfs:subClassOf	"30000"
s11.4	"similar in that vodafone both have at least 30000 employees"	local:AM-ADV	"both"
s11.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"
s11.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"our"
s11.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"express"
s11.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"vodafone be also similar in that vodafone both have at least 30000 employee"
s11.3	"vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s11.3	"vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s11.3	"30000 employee"	rdfs:subClassOf	"employee"
s11.3	"least 30000"	rdfs:subClassOf	"30000"
s11.3	"also similar"	rdfs:subClassOf	"similar"
s11.3	"also similar in vodafone"	rdfs:member	"also similar"
s11.3	"also similar in vodafone"	rdfs:member	"vodafone"
s11.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"
s11.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"richer fragment of sparql this"
s11.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s11.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s11.2	"richer fragment"	rdfs:subClassOf	"fragment"
s11.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s11.2	"richer fragment of sparql"	rdfs:member	"sparql"
s11.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"enable"
s11.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"express that vodafone be also similar in that vodafone both have at least 30000 employee"
s11.2	"express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s11.2	"express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s11.2	"express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"express"
s11.2	"30000 employee"	rdfs:subClassOf	"employee"
s11.2	"least 30000"	rdfs:subClassOf	"30000"
s11.2	"also similar"	rdfs:subClassOf	"similar"
s11.2	"also similar in vodafone"	rdfs:member	"also similar"
s11.2	"also similar in vodafone"	rdfs:member	"vodafone"
s11.1	"consider a richer fragment of sparql"
s11.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of sparql"
s11.1	"richer fragment of sparql"	rdfs:member	"fragment"
s11.1	"richer fragment of sparql"	rdfs:member	"sparql"
s11.1	"richer fragment"	rdfs:subClassOf	"fragment"
s11.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s11.1	"richer fragment of sparql"	rdfs:member	"sparql"
s11.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s11	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"
s11	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"first our"
s11	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"expand"
s11	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"richer fragment"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"sparql"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"similarity query"
s11	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"language"
s11	"richer fragment"	rdfs:subClassOf	"fragment"
s11	"richer fragment"	rdfs:member	"richer"
s11	"similarity query"	rdfs:member	"similarity"
s11	"similarity query"	rdfs:subClassOf	"query"
s11	"30000 employee"	rdfs:subClassOf	"employee"
s11	"least 30000"	rdfs:subClassOf	"30000"
s11	"also similar"	rdfs:subClassOf	"similar"
s11	"language of similarity query"	rdfs:member	"language"
s11	"language of similarity query"	rdfs:member	"similarity query"
s11	"richer fragment of sparql"	rdfs:member	"richer fragment"
s11	"richer fragment of sparql"	rdfs:member	"sparql"
s11	"also similar in vodafone"	rdfs:member	"also similar"
s11	"also similar in vodafone"	rdfs:member	"vodafone"
s10.4	"similar in that vodafone both have at least 30000 employees"
s10.4	"similar in that vodafone both have at least 30000 employees"	rdf:subject	"similar in that vodafone"
s10.4	"similar in vodafone"	rdfs:member	"similar"
s10.4	"similar in vodafone"	rdfs:member	"vodafone"
s10.4	"similar in that vodafone both have at least 30000 employees"	rdf:predicate	"have"
s10.4	"similar in that vodafone both have at least 30000 employees"	rdf:object	"least 30000 employee"
s10.4	"30000 employee"	rdfs:subClassOf	"employee"
s10.4	"least 30000"	rdfs:subClassOf	"30000"
s10.4	"similar in that vodafone both have at least 30000 employees"	local:AM-ADV	"both"
s10.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"
s10.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"our"
s10.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"express"
s10.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"telenor be also similar in that vodafone both have at least 30000 employee"
s10.3	"telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s10.3	"telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"telenor"
s10.3	"telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s10.3	"30000 employee"	rdfs:subClassOf	"employee"
s10.3	"least 30000"	rdfs:subClassOf	"30000"
s10.3	"also similar"	rdfs:subClassOf	"similar"
s10.3	"also similar in vodafone"	rdfs:member	"also similar"
s10.3	"also similar in vodafone"	rdfs:member	"vodafone"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"richer fragment of sparql this"
s10.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s10.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s10.2	"richer fragment"	rdfs:subClassOf	"fragment"
s10.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10.2	"richer fragment of sparql"	rdfs:member	"sparql"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"enable"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"express that telenor be also similar in that vodafone both have at least 30000 employee"
s10.2	"express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s10.2	"express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"telenor"
s10.2	"express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"express"
s10.2	"express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s10.2	"30000 employee"	rdfs:subClassOf	"employee"
s10.2	"least 30000"	rdfs:subClassOf	"30000"
s10.2	"also similar"	rdfs:subClassOf	"similar"
s10.2	"also similar in vodafone"	rdfs:member	"also similar"
s10.2	"also similar in vodafone"	rdfs:member	"vodafone"
s10.1	"consider a richer fragment of sparql"
s10.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of sparql"
s10.1	"richer fragment of sparql"	rdfs:member	"fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"sparql"
s10.1	"richer fragment"	rdfs:subClassOf	"fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"sparql"
s10.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"first our"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"expand"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"richer fragment"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"vodafone"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"employee"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"sparql"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"telenor"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"similarity query"
s10	"language of similarity query consider a richer fragment of sparql this enable our to express that telenor be also similar in that vodafone both have at least 30000 employee"	rdfs:member	"language"
s10	"richer fragment"	rdfs:subClassOf	"fragment"
s10	"richer fragment"	rdfs:member	"richer"
s10	"similarity query"	rdfs:member	"similarity"
s10	"similarity query"	rdfs:subClassOf	"query"
s10	"30000 employee"	rdfs:subClassOf	"employee"
s10	"least 30000"	rdfs:subClassOf	"30000"
s10	"also similar"	rdfs:subClassOf	"similar"
s10	"language of similarity query"	rdfs:member	"language"
s10	"language of similarity query"	rdfs:member	"similarity query"
s10	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10	"richer fragment of sparql"	rdfs:member	"sparql"
s10	"also similar in vodafone"	rdfs:member	"also similar"
s10	"also similar in vodafone"	rdfs:member	"vodafone"
s9.4	"vodafone are also similar in that telenor both have at least 30000 employees"
s9.4	"vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"vodafone be also similar in that telenor"
s9.4	"vodafone be also similar in that telenor"	rdfs:member	"telenor"
s9.4	"vodafone be also similar in that telenor"	rdfs:member	"vodafone"
s9.4	"also similar"	rdfs:subClassOf	"similar"
s9.4	"also similar in telenor"	rdfs:member	"also similar"
s9.4	"also similar in telenor"	rdfs:member	"telenor"
s9.4	"vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"have"
s9.4	"vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"least 30000 employee"
s9.4	"30000 employee"	rdfs:subClassOf	"employee"
s9.4	"least 30000"	rdfs:subClassOf	"30000"
s9.4	"vodafone are also similar in that telenor both have at least 30000 employees"	local:AM-ADV	"both"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"our"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"express"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"vodafone be also similar in that telenor both have at least 30000 employee"
s9.3	"vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s9.3	"vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s9.3	"vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"vodafone"
s9.3	"30000 employee"	rdfs:subClassOf	"employee"
s9.3	"least 30000"	rdfs:subClassOf	"30000"
s9.3	"also similar"	rdfs:subClassOf	"similar"
s9.3	"also similar in telenor"	rdfs:member	"also similar"
s9.3	"also similar in telenor"	rdfs:member	"telenor"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"richer fragment of sparql this"
s9.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s9.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s9.2	"richer fragment"	rdfs:subClassOf	"fragment"
s9.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9.2	"richer fragment of sparql"	rdfs:member	"sparql"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"enable"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"express that vodafone be also similar in that telenor both have at least 30000 employee"
s9.2	"express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s9.2	"express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s9.2	"express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"vodafone"
s9.2	"express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"express"
s9.2	"30000 employee"	rdfs:subClassOf	"employee"
s9.2	"least 30000"	rdfs:subClassOf	"30000"
s9.2	"also similar"	rdfs:subClassOf	"similar"
s9.2	"also similar in telenor"	rdfs:member	"also similar"
s9.2	"also similar in telenor"	rdfs:member	"telenor"
s9.1	"consider a richer fragment of sparql"
s9.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of sparql"
s9.1	"richer fragment of sparql"	rdfs:member	"fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"sparql"
s9.1	"richer fragment"	rdfs:subClassOf	"fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"sparql"
s9.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"first our"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"expand"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"richer fragment"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"vodafone"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"employee"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"sparql"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"telenor"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"similarity query"
s9	"language of similarity query consider a richer fragment of sparql this enable our to express that vodafone be also similar in that telenor both have at least 30000 employee"	rdfs:member	"language"
s9	"richer fragment"	rdfs:subClassOf	"fragment"
s9	"richer fragment"	rdfs:member	"richer"
s9	"similarity query"	rdfs:member	"similarity"
s9	"similarity query"	rdfs:subClassOf	"query"
s9	"30000 employee"	rdfs:subClassOf	"employee"
s9	"least 30000"	rdfs:subClassOf	"30000"
s9	"also similar"	rdfs:subClassOf	"similar"
s9	"language of similarity query"	rdfs:member	"language"
s9	"language of similarity query"	rdfs:member	"similarity query"
s9	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9	"richer fragment of sparql"	rdfs:member	"sparql"
s9	"also similar in telenor"	rdfs:member	"also similar"
s9	"also similar in telenor"	rdfs:member	"telenor"
s8	"in this paper extend the results of our prior work in different ways"
s8	"in this paper extend the results of our prior work in different ways"	rdf:subject	"result of our prior work"
s8	"result of our prior work"	rdfs:member	"prior work"
s8	"result of our prior work"	rdfs:member	"result"
s8	"prior work"	rdfs:member	"prior"
s8	"prior work"	rdfs:subClassOf	"work"
s8	"our prior work"	rdfs:subClassOf	"prior work"
s8	"result of our prior work"	rdfs:member	"result"
s8	"result of our prior work"	rdfs:member	"our prior work"
s8	"in this paper extend the results of our prior work in different ways"	rdf:predicate	"extend"
s8	"in this paper extend the results of our prior work in different ways"	local:AM-LOC	"paper"
s8	"in this paper extend the results of our prior work in different ways"	local:AM-MNR	"different way"
s8	"different way"	rdfs:subClassOf	"way"
s8	"different way"	rdfs:member	"different"
s7.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"
s7.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:subject	"input graph for instance one"
s7.2	"input graph for instance one"	rdfs:member	"input graph"
s7.2	"input graph for instance one"	rdfs:member	"instance"
s7.2	"input graph"	rdfs:member	"input"
s7.2	"input graph"	rdfs:subClassOf	"graph"
s7.2	"one instance"	rdfs:subClassOf	"instance"
s7.2	"input graph for one instance"	rdfs:member	"input graph"
s7.2	"input graph for one instance"	rdfs:member	"one instance"
s7.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:predicate	"describe"
s7.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:object	"similarity between two company such a vodafone in the yago graph query"
s7.2	"similarity between two company such a vodafone in the yago graph query"	rdfs:member	"similarity"
s7.2	"similarity between two company such a vodafone in the yago graph query"	rdfs:member	"company"
s7.2	"similarity between two company such a vodafone in the yago graph query"	rdfs:member	"vodafone"
s7.2	"similarity between two company such a vodafone in the yago graph query"	rdfs:member	"yago graph query"
s7.2	"yago graph query"	rdfs:member	"yago graph"
s7.2	"graph query"	rdfs:subClassOf	"query"
s7.2	"yago graph query"	rdfs:subClassOf	"query"
s7.2	"yago graph"	rdfs:subClassOf	"graph"
s7.2	"yago graph"	rdfs:member	"yago"
s7.2	"graph query"	rdfs:member	"graph"
s7.2	"yago graph query"	rdfs:subClassOf	"graph query"
s7.2	"two company"	rdfs:subClassOf	"company"
s7.2	"similarity between two company"	rdfs:member	"similarity"
s7.2	"similarity between two company"	rdfs:member	"two company"
s7.2	"vodafone in yago graph query"	rdfs:member	"vodafone"
s7.2	"vodafone in yago graph query"	rdfs:member	"yago graph query"
s7.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-MOD	"can"
s7.1	"a sparql query having the input entities"
s7.1	"a sparql query having the input entities"	rdf:subject	"sparql query"
s7.1	"sparql query"	rdfs:member	"sparql"
s7.1	"sparql query"	rdfs:subClassOf	"query"
s7.1	"a sparql query having the input entities"	rdf:predicate	"have"
s7.1	"a sparql query having the input entities"	rdf:object	"input entity"
s7.1	"input entity"	rdfs:member	"input"
s7.1	"input entity"	rdfs:subClassOf	"entity"
s7	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"
s7	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:subject	"comparison"
s7	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:predicate	"model"
s7	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-LOC	"previous work the result of entity"
s7	"previous work the result of entity"	rdfs:member	"entity"
s7	"previous work the result of entity"	rdfs:member	"previous work"
s7	"previous work the result of entity"	rdfs:member	"result"
s7	"previous work"	rdfs:subClassOf	"work"
s7	"previous work"	rdfs:member	"previous"
s7	"result of entity"	rdfs:member	"result"
s7	"result of entity"	rdfs:member	"entity"
s7	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-PNC	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"vodafone"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"input entity"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"query"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"sparql query"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"input graph"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"part"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"similarity"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"similarity query"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"answer"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"company"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"yago"
s7	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a vodafone in the yago graph a a query"	rdfs:member	"instance"
s7	"sparql query"	rdfs:member	"sparql"
s7	"similarity query"	rdfs:subClassOf	"query"
s7	"input entity"	rdfs:member	"input"
s7	"input graph"	rdfs:member	"input"
s7	"input graph"	rdfs:subClassOf	"graph"
s7	"input entity"	rdfs:subClassOf	"entity"
s7	"similarity query"	rdfs:member	"similarity"
s7	"sparql query"	rdfs:subClassOf	"query"
s7	"yago graph"	rdfs:subClassOf	"graph"
s7	"two company"	rdfs:subClassOf	"company"
s7	"can describe"	rdfs:subClassOf	"describe"
s7	"one instance"	rdfs:subClassOf	"instance"
s7	"similarity sparql query"	rdfs:subClassOf	"sparql query"
s7	"part of answer"	rdfs:member	"part"
s7	"part of answer"	rdfs:member	"answer"
s7	"answer over input graph"	rdfs:member	"answer"
s7	"answer over input graph"	rdfs:member	"input graph"
s7	"answer over input graph for one instance"	rdfs:member	"answer over input graph"
s7	"answer over input graph for one instance"	rdfs:member	"one instance"
s7	"similarity between two company"	rdfs:member	"similarity"
s7	"similarity between two company"	rdfs:member	"two company"
s7	"vodafone in yago graph"	rdfs:member	"vodafone"
s7	"vodafone in yago graph"	rdfs:member	"yago graph"
s6.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"
s6.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:subject	"input graph for instance one"
s6.2	"input graph for instance one"	rdfs:member	"input graph"
s6.2	"input graph for instance one"	rdfs:member	"instance"
s6.2	"input graph"	rdfs:member	"input"
s6.2	"input graph"	rdfs:subClassOf	"graph"
s6.2	"one instance"	rdfs:subClassOf	"instance"
s6.2	"input graph for one instance"	rdfs:member	"input graph"
s6.2	"input graph for one instance"	rdfs:member	"one instance"
s6.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:predicate	"describe"
s6.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:object	"similarity between two company such a telenor in the yago graph query"
s6.2	"similarity between two company such a telenor in the yago graph query"	rdfs:member	"similarity"
s6.2	"similarity between two company such a telenor in the yago graph query"	rdfs:member	"company"
s6.2	"similarity between two company such a telenor in the yago graph query"	rdfs:member	"telenor"
s6.2	"similarity between two company such a telenor in the yago graph query"	rdfs:member	"yago graph query"
s6.2	"yago graph query"	rdfs:member	"yago graph"
s6.2	"graph query"	rdfs:subClassOf	"query"
s6.2	"yago graph query"	rdfs:subClassOf	"query"
s6.2	"yago graph"	rdfs:subClassOf	"graph"
s6.2	"yago graph"	rdfs:member	"yago"
s6.2	"graph query"	rdfs:member	"graph"
s6.2	"yago graph query"	rdfs:subClassOf	"graph query"
s6.2	"two company"	rdfs:subClassOf	"company"
s6.2	"similarity between two company"	rdfs:member	"similarity"
s6.2	"similarity between two company"	rdfs:member	"two company"
s6.2	"telenor in yago graph query"	rdfs:member	"telenor"
s6.2	"telenor in yago graph query"	rdfs:member	"yago graph query"
s6.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-MOD	"can"
s6.1	"a sparql query having the input entities"
s6.1	"a sparql query having the input entities"	rdf:subject	"sparql query"
s6.1	"sparql query"	rdfs:member	"sparql"
s6.1	"sparql query"	rdfs:subClassOf	"query"
s6.1	"a sparql query having the input entities"	rdf:predicate	"have"
s6.1	"a sparql query having the input entities"	rdf:object	"input entity"
s6.1	"input entity"	rdfs:member	"input"
s6.1	"input entity"	rdfs:subClassOf	"entity"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:subject	"comparison"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:predicate	"model"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-LOC	"previous work the result of entity"
s6	"previous work the result of entity"	rdfs:member	"entity"
s6	"previous work the result of entity"	rdfs:member	"previous work"
s6	"previous work the result of entity"	rdfs:member	"result"
s6	"previous work"	rdfs:subClassOf	"work"
s6	"previous work"	rdfs:member	"previous"
s6	"result of entity"	rdfs:member	"result"
s6	"result of entity"	rdfs:member	"entity"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-PNC	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"input entity"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"query"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"sparql query"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"input graph"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"part"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"similarity"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"telenor"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"similarity query"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"answer"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"company"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"yago"
s6	"similarity query that be a sparql query have the input entity a part of the answer over the input graph for instance one can describe the similarity between two company such a telenor in the yago graph a a query"	rdfs:member	"instance"
s6	"sparql query"	rdfs:member	"sparql"
s6	"similarity query"	rdfs:subClassOf	"query"
s6	"input entity"	rdfs:member	"input"
s6	"input graph"	rdfs:member	"input"
s6	"input graph"	rdfs:subClassOf	"graph"
s6	"input entity"	rdfs:subClassOf	"entity"
s6	"similarity query"	rdfs:member	"similarity"
s6	"sparql query"	rdfs:subClassOf	"query"
s6	"yago graph"	rdfs:subClassOf	"graph"
s6	"two company"	rdfs:subClassOf	"company"
s6	"can describe"	rdfs:subClassOf	"describe"
s6	"one instance"	rdfs:subClassOf	"instance"
s6	"similarity sparql query"	rdfs:subClassOf	"sparql query"
s6	"part of answer"	rdfs:member	"part"
s6	"part of answer"	rdfs:member	"answer"
s6	"answer over input graph"	rdfs:member	"answer"
s6	"answer over input graph"	rdfs:member	"input graph"
s6	"answer over input graph for one instance"	rdfs:member	"answer over input graph"
s6	"answer over input graph for one instance"	rdfs:member	"one instance"
s6	"similarity between two company"	rdfs:member	"similarity"
s6	"similarity between two company"	rdfs:member	"two company"
s6	"telenor in yago graph"	rdfs:member	"telenor"
s6	"telenor in yago graph"	rdfs:member	"yago graph"
s5.1	"all telecom companies based in europe"
s5.1	"all telecom companies based in europe"	rdf:subject	"telecom company"
s5.1	"telecom company"	rdfs:subClassOf	"company"
s5.1	"telecom company"	rdfs:member	"telecom"
s5.1	"all telecom companies based in europe"	rdf:predicate	"base"
s5.1	"all telecom companies based in europe"	local:AM-LOC	"europe"
s5	"a query asking for all telecom companies based in europe"
s5	"a query asking for all telecom companies based in europe"	rdf:subject	"query"
s5	"a query asking for all telecom companies based in europe"	rdf:predicate	"ask"
s5	"a query asking for all telecom companies based in europe"	rdf:object	"telecom company base in europe"
s5	"telecom company base in europe"	rdfs:member	"telecom company base"
s5	"telecom company base in europe"	rdfs:member	"europe"
s5	"telecom company base"	rdfs:subClassOf	"base"
s5	"telecom company"	rdfs:subClassOf	"company"
s5	"company base"	rdfs:subClassOf	"base"
s5	"company base"	rdfs:member	"company"
s5	"telecom company base"	rdfs:member	"telecom company"
s5	"telecom company"	rdfs:member	"telecom"
s5	"telecom company base"	rdfs:subClassOf	"company base"
s5	"telecom company base in europe"	rdfs:member	"telecom company base"
s5	"telecom company base in europe"	rdfs:member	"europe"
s4.2	"described in a knowledge graph"
s4.2	"described in a knowledge graph"	rdf:predicate	"describe"
s4.2	"described in a knowledge graph"	local:AM-LOC	"knowledge graph"
s4.2	"knowledge graph"	rdfs:subClassOf	"graph"
s4.2	"knowledge graph"	rdfs:member	"knowledge"
s4.1	"given entities"
s4.1	"given entities"	rdf:subject	"entity"
s4.1	"given entities"	rdf:predicate	"give"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	rdf:subject	"similarity between two give entity a describe in a knowledge graph"
s4	"similarity between two give entity a describe in a knowledge graph"	rdfs:member	"similarity"
s4	"similarity between two give entity a describe in a knowledge graph"	rdfs:member	"entity"
s4	"similarity between two give entity a describe in a knowledge graph"	rdfs:member	"knowledge graph"
s4	"similarity between two give entity a describe in a knowledge graph"	rdfs:member	"describe"
s4	"knowledge graph"	rdfs:subClassOf	"graph"
s4	"knowledge graph"	rdfs:member	"knowledge"
s4	"similarity between two"	rdfs:member	"similarity"
s4	"similarity between two"	rdfs:member	"two"
s4	"describe in knowledge graph"	rdfs:member	"describe"
s4	"describe in knowledge graph"	rdfs:member	"knowledge graph"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	rdf:predicate	"describe"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	local:AM-MNR	"informative way"
s4	"informative way"	rdfs:subClassOf	"way"
s4	"informative way"	rdfs:member	"informative"
s3	"growing need for tools"
s3	"growing need for tools"	rdf:subject	"need"
s3	"growing need for tools"	rdf:predicate	"grow"
s3	"growing need for tools"	local:AM-PNC	"tool"
s2	"largescale knowledge graphs increasingly used in applications"
s2	"largescale knowledge graphs increasingly used in applications"	rdf:subject	"largescale knowledge graph"
s2	"knowledge graph"	rdfs:subClassOf	"graph"
s2	"largescale knowledge graph"	rdfs:subClassOf	"graph"
s2	"knowledge graph"	rdfs:member	"knowledge"
s2	"largescale knowledge graph"	rdfs:member	"largescale knowledge"
s2	"largescale knowledge"	rdfs:member	"largescale"
s2	"largescale knowledge"	rdfs:subClassOf	"knowledge"
s2	"largescale knowledge graph"	rdfs:subClassOf	"knowledge graph"
s2	"largescale knowledge graphs increasingly used in applications"	rdf:predicate	"use"
s2	"largescale knowledge graphs increasingly used in applications"	local:AM-ADV	"increasingly"
s2	"largescale knowledge graphs increasingly used in applications"	local:AM-LOC	"application"
s1	"tools that can effectively support users in exploration tasks"
s1	"tools that can effectively support users in exploration tasks"	rdf:subject	"tool"
s1	"tools that can effectively support users in exploration tasks"	rdf:predicate	"support"
s1	"tools that can effectively support users in exploration tasks"	rdf:object	"user"
s1	"tools that can effectively support users in exploration tasks"	local:AM-LOC	"exploration task"
s1	"exploration task"	rdfs:subClassOf	"task"
s1	"exploration task"	rdfs:member	"exploration"
s1	"tools that can effectively support users in exploration tasks"	local:AM-MNR	"effectively"
s1	"tools that can effectively support users in exploration tasks"	local:AM-MOD	"can"
s0	"tools that can effectively support users in analysis tasks"
s0	"tools that can effectively support users in analysis tasks"	rdf:subject	"tool"
s0	"tools that can effectively support users in analysis tasks"	rdf:predicate	"support"
s0	"tools that can effectively support users in analysis tasks"	rdf:object	"user"
s0	"tools that can effectively support users in analysis tasks"	local:AM-LOC	"analysis task"
s0	"analysis task"	rdfs:subClassOf	"task"
s0	"analysis task"	rdfs:member	"analysis"
s0	"tools that can effectively support users in analysis tasks"	local:AM-MNR	"effectively"
s0	"tools that can effectively support users in analysis tasks"	local:AM-MOD	"can"
