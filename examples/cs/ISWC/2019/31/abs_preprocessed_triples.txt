s20	"we also implement a scalable algorithm"
s20	"we also implement a scalable algorithm"	rdf:subject	"we"
s20	"we also implement a scalable algorithm"	rdf:predicate	"implement"
s20	"we also implement a scalable algorithm"	rdf:object	"scalable algorithm"
s20	"scalable algorithm"	rdfs:member	"scalable"
s20	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s20	"we also implement a scalable algorithm"	local:AM-DIS	"also"
s19	"we also propose a scalable algorithm"
s19	"we also propose a scalable algorithm"	rdf:subject	"we"
s19	"we also propose a scalable algorithm"	rdf:predicate	"propose"
s19	"we also propose a scalable algorithm"	rdf:object	"scalable algorithm"
s19	"scalable algorithm"	rdfs:member	"scalable"
s19	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s19	"we also propose a scalable algorithm"	local:AM-DIS	"also"
s18.1	"a scalable algorithm that compute a similarity query"
s18.1	"a scalable algorithm that compute a similarity query"	rdf:subject	"scalable algorithm"
s18.1	"scalable algorithm"	rdfs:member	"scalable"
s18.1	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s18.1	"a scalable algorithm that compute a similarity query"	rdf:predicate	"compute"
s18.1	"a scalable algorithm that compute a similarity query"	rdf:object	"similarity query"
s18.1	"similarity query"	rdfs:member	"similarity"
s18.1	"similarity query"	rdfs:subClassOf	"query"
s18	"a scalable algorithm that guaranteed to compute a similarity query"
s18	"a scalable algorithm that guaranteed to compute a similarity query"	rdf:subject	"scalable algorithm"
s18	"scalable algorithm"	rdfs:member	"scalable"
s18	"scalable algorithm"	rdfs:subClassOf	"algorithm"
s18	"a scalable algorithm that guaranteed to compute a similarity query"	rdf:predicate	"guarantee"
s18	"a scalable algorithm that guaranteed to compute a similarity query"	local:AM-PNC	"compute a similarity query"
s18	"compute a similarity query"	rdfs:member	"compute"
s18	"compute a similarity query"	rdfs:member	"similarity query"
s18	"similarity query"	rdfs:member	"similarity"
s18	"similarity query"	rdfs:subClassOf	"query"
s17	"impractical hence we also implement necessarily a most specific one"
s17	"impractical hence we also implement necessarily a most specific one"	rdf:subject	"we"
s17	"impractical hence we also implement necessarily a most specific one"	rdf:predicate	"implement"
s17	"impractical hence we also implement necessarily a most specific one"	rdf:object	"necessarily a most specific one"
s17	"specific one"	rdfs:subClassOf	"one"
s17	"most specific"	rdfs:subClassOf	"specific"
s17	"necessarily specific one"	rdfs:subClassOf	"specific one"
s17	"impractical hence we also implement necessarily a most specific one"	local:AM-DIS	"also"
s17	"impractical hence we also implement necessarily a most specific one"	local:AM-MNR	"impractical hence"
s17	"impractical hence"	rdfs:member	"impractical"
s17	"impractical hence"	rdfs:subClassOf	"hence"
s17	"hence impractical"	rdfs:subClassOf	"impractical"
s16	"we also propose necessarily a most specific one"
s16	"we also propose necessarily a most specific one"	rdf:subject	"we"
s16	"we also propose necessarily a most specific one"	rdf:predicate	"propose"
s16	"we also propose necessarily a most specific one"	rdf:object	"necessarily a most specific one"
s16	"specific one"	rdfs:subClassOf	"one"
s16	"most specific"	rdfs:subClassOf	"specific"
s16	"necessarily specific one"	rdfs:subClassOf	"specific one"
s16	"we also propose necessarily a most specific one"	local:AM-DIS	"also"
s15.1	"algorithms computing similarity queries"
s15.1	"algorithms computing similarity queries"	rdf:subject	"algorithms"
s15.1	"algorithms computing similarity queries"	rdf:predicate	"compute"
s15.1	"algorithms computing similarity queries"	rdf:object	"similarity queries"
s15.1	"similarity queries"	rdfs:member	"similarity"
s15.1	"similarity queries"	rdfs:subClassOf	"queries"
s15	"we then propose algorithms for computing similarity queries"
s15	"we then propose algorithms for computing similarity queries"	rdf:subject	"We"
s15	"we then propose algorithms for computing similarity queries"	rdf:predicate	"propose"
s15	"we then propose algorithms for computing similarity queries"	rdf:object	"algorithms for computing similarity queries"
s15	"algorithms for computing similarity queries"	rdfs:member	"algorithms"
s15	"algorithms for computing similarity queries"	rdfs:member	"similarity queries"
s15	"similarity queries"	rdfs:member	"similarity"
s15	"similarity queries"	rdfs:subClassOf	"queries"
s15	"computing similarity queries"	rdfs:subClassOf	"similarity queries"
s15	"algorithms for computing similarity queries"	rdfs:member	"algorithms"
s15	"algorithms for computing similarity queries"	rdfs:member	"computing similarity queries"
s15	"we then propose algorithms for computing similarity queries"	local:AM-TMP	"then"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity queries"
s14.2	"similarity queries"	rdfs:member	"similarity"
s14.2	"similarity queries"	rdfs:subClassOf	"queries"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"satisfy"
s14.2	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:object	"certain additional desirable properties such as being as specific as possible"
s14.2	"desirable properties"	rdfs:subClassOf	"properties"
s14.2	"additional desirable properties"	rdfs:member	"additional desirable"
s14.2	"additional desirable"	rdfs:member	"additional"
s14.2	"certain additional"	rdfs:member	"certain"
s14.2	"certain additional desirable"	rdfs:subClassOf	"desirable"
s14.2	"certain additional desirable"	rdfs:member	"certain additional"
s14.2	"certain additional desirable properties"	rdfs:member	"certain additional desirable"
s14.2	"certain additional desirable properties"	rdfs:subClassOf	"properties"
s14.2	"additional desirable"	rdfs:subClassOf	"desirable"
s14.2	"additional desirable properties"	rdfs:subClassOf	"properties"
s14.2	"desirable properties"	rdfs:member	"desirable"
s14.2	"certain additional"	rdfs:subClassOf	"additional"
s14.2	"as specific"	rdfs:subClassOf	"specific"
s14.2	"additional desirable properties"	rdfs:subClassOf	"desirable properties"
s14.2	"certain additional desirable properties"	rdfs:subClassOf	"additional desirable properties"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"query"
s14.1	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:object	"satisfying certain additional desirable properties such as being as specific as possible"
s14.1	"desirable properties"	rdfs:subClassOf	"properties"
s14.1	"additional desirable properties"	rdfs:member	"additional desirable"
s14.1	"additional desirable"	rdfs:member	"additional"
s14.1	"certain additional"	rdfs:member	"certain"
s14.1	"certain additional desirable"	rdfs:subClassOf	"desirable"
s14.1	"certain additional desirable"	rdfs:member	"certain additional"
s14.1	"certain additional desirable properties"	rdfs:member	"certain additional desirable"
s14.1	"certain additional desirable properties"	rdfs:subClassOf	"properties"
s14.1	"additional desirable"	rdfs:subClassOf	"desirable"
s14.1	"additional desirable properties"	rdfs:subClassOf	"properties"
s14.1	"desirable properties"	rdfs:member	"desirable"
s14.1	"certain additional"	rdfs:subClassOf	"additional"
s14.1	"as specific"	rdfs:subClassOf	"specific"
s14.1	"additional desirable properties"	rdfs:subClassOf	"desirable properties"
s14.1	"certain additional desirable properties"	rdfs:subClassOf	"additional desirable properties"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:subject	"similarity queries satisfying certain additional desirable properties such as being as specific as possible"
s14	"computing similarity queries satisfying certain additional desirable properties such as being as specific as possible"	rdf:predicate	"compute"
s13.4	"vodafone both have at least 30000 employees"
s13.4	"vodafone both have at least 30000 employees"	rdf:subject	"Vodafone"
s13.4	"vodafone both have at least 30000 employees"	rdf:predicate	"have"
s13.4	"vodafone both have at least 30000 employees"	rdf:object	"least 30000 employees"
s13.4	"30000 employees"	rdfs:subClassOf	"employees"
s13.4	"least 30000"	rdfs:subClassOf	"30000"
s13.4	"vodafone both have at least 30000 employees"	local:AM-ADV	"both"
s13.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"
s13.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"our"
s13.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"express"
s13.3	"our express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"Telenor are also similar in that Vodafone both have at least 30000 employees"
s13.3	"telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s13.3	"telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s13.3	"telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"telenor"
s13.3	"30000 employees"	rdfs:subClassOf	"employees"
s13.3	"least 30000"	rdfs:subClassOf	"30000"
s13.3	"also similar"	rdfs:subClassOf	"similar"
s13.3	"also similar in vodafone"	rdfs:member	"also similar"
s13.3	"also similar in vodafone"	rdfs:member	"vodafone"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"richer fragment of SPARQL this"
s13.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s13.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s13.2	"richer fragment"	rdfs:subClassOf	"fragment"
s13.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13.2	"richer fragment of sparql"	rdfs:member	"sparql"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"enable"
s13.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"express that Telenor are also similar in that Vodafone both have at least 30000 employees"
s13.2	"express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s13.2	"express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s13.2	"express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"telenor"
s13.2	"express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"express"
s13.2	"30000 employees"	rdfs:subClassOf	"employees"
s13.2	"least 30000"	rdfs:subClassOf	"30000"
s13.2	"also similar"	rdfs:subClassOf	"similar"
s13.2	"also similar in vodafone"	rdfs:member	"also similar"
s13.2	"also similar in vodafone"	rdfs:member	"vodafone"
s13.1	"consider a richer fragment of sparql"
s13.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of SPARQL"
s13.1	"richer fragment of sparql"	rdfs:member	"fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"sparql"
s13.1	"richer fragment"	rdfs:subClassOf	"fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13.1	"richer fragment of sparql"	rdfs:member	"sparql"
s13.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"First our"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"expand"
s13	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdf:object	"language of similarity queries consider a richer fragment of SPARQL this enables our to express that Telenor are also similar in that Vodafone both have at least 30000 employees"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"sparql"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"language"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"similarity queries"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"telenor"
s13	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"richer fragment"
s13	"richer fragment"	rdfs:subClassOf	"fragment"
s13	"similarity queries"	rdfs:member	"similarity"
s13	"similarity queries"	rdfs:subClassOf	"queries"
s13	"richer fragment"	rdfs:member	"richer"
s13	"30000 employees"	rdfs:subClassOf	"employees"
s13	"least 30000"	rdfs:subClassOf	"30000"
s13	"also similar"	rdfs:subClassOf	"similar"
s13	"language of similarity queries"	rdfs:member	"language"
s13	"language of similarity queries"	rdfs:member	"similarity queries"
s13	"richer fragment of sparql"	rdfs:member	"richer fragment"
s13	"richer fragment of sparql"	rdfs:member	"sparql"
s13	"also similar in vodafone"	rdfs:member	"also similar"
s13	"also similar in vodafone"	rdfs:member	"vodafone"
s12.4	"vodafone both have at least 30000 employees"
s12.4	"vodafone both have at least 30000 employees"	rdf:subject	"Vodafone"
s12.4	"vodafone both have at least 30000 employees"	rdf:predicate	"have"
s12.4	"vodafone both have at least 30000 employees"	rdf:object	"least 30000 employees"
s12.4	"30000 employees"	rdfs:subClassOf	"employees"
s12.4	"least 30000"	rdfs:subClassOf	"30000"
s12.4	"vodafone both have at least 30000 employees"	local:AM-ADV	"both"
s12.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"
s12.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"our"
s12.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"express"
s12.3	"our express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"Vodafone are also similar in that Vodafone both have at least 30000 employees"
s12.3	"vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s12.3	"vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s12.3	"30000 employees"	rdfs:subClassOf	"employees"
s12.3	"least 30000"	rdfs:subClassOf	"30000"
s12.3	"also similar"	rdfs:subClassOf	"similar"
s12.3	"also similar in vodafone"	rdfs:member	"also similar"
s12.3	"also similar in vodafone"	rdfs:member	"vodafone"
s12.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"
s12.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"richer fragment of SPARQL this"
s12.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s12.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s12.2	"richer fragment"	rdfs:subClassOf	"fragment"
s12.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s12.2	"richer fragment of sparql"	rdfs:member	"sparql"
s12.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"enable"
s12.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"express that Vodafone are also similar in that Vodafone both have at least 30000 employees"
s12.2	"express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s12.2	"express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s12.2	"express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"express"
s12.2	"30000 employees"	rdfs:subClassOf	"employees"
s12.2	"least 30000"	rdfs:subClassOf	"30000"
s12.2	"also similar"	rdfs:subClassOf	"similar"
s12.2	"also similar in vodafone"	rdfs:member	"also similar"
s12.2	"also similar in vodafone"	rdfs:member	"vodafone"
s12.1	"consider a richer fragment of sparql"
s12.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of SPARQL"
s12.1	"richer fragment of sparql"	rdfs:member	"fragment"
s12.1	"richer fragment of sparql"	rdfs:member	"sparql"
s12.1	"richer fragment"	rdfs:subClassOf	"fragment"
s12.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s12.1	"richer fragment of sparql"	rdfs:member	"sparql"
s12.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s12	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"
s12	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:subject	"First our"
s12	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:predicate	"expand"
s12	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdf:object	"language of similarity queries consider a richer fragment of SPARQL this enables our to express that Vodafone are also similar in that Vodafone both have at least 30000 employees"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"sparql"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"language"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"vodafone"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"similarity queries"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"employees"
s12	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that vodafone both have at least 30000 employees"	rdfs:member	"richer fragment"
s12	"richer fragment"	rdfs:subClassOf	"fragment"
s12	"similarity queries"	rdfs:member	"similarity"
s12	"similarity queries"	rdfs:subClassOf	"queries"
s12	"richer fragment"	rdfs:member	"richer"
s12	"30000 employees"	rdfs:subClassOf	"employees"
s12	"least 30000"	rdfs:subClassOf	"30000"
s12	"also similar"	rdfs:subClassOf	"similar"
s12	"language of similarity queries"	rdfs:member	"language"
s12	"language of similarity queries"	rdfs:member	"similarity queries"
s12	"richer fragment of sparql"	rdfs:member	"richer fragment"
s12	"richer fragment of sparql"	rdfs:member	"sparql"
s12	"also similar in vodafone"	rdfs:member	"also similar"
s12	"also similar in vodafone"	rdfs:member	"vodafone"
s11	"sparql allowing for numeric filter expressions"
s11	"sparql allowing for numeric filter expressions"	rdf:subject	"SPARQL"
s11	"sparql allowing for numeric filter expressions"	rdf:predicate	"allow"
s11	"sparql allowing for numeric filter expressions"	rdf:object	"numeric filter expressions"
s11	"numeric filter expressions"	rdfs:subClassOf	"expressions"
s11	"filter expressions"	rdfs:subClassOf	"expressions"
s11	"numeric filter expressions"	rdfs:member	"numeric filter"
s11	"numeric filter"	rdfs:member	"numeric"
s11	"filter expressions"	rdfs:member	"filter"
s11	"numeric filter"	rdfs:subClassOf	"filter"
s11	"numeric filter expressions"	rdfs:subClassOf	"filter expressions"
s10.4	"telenor both have at least 30000 employees"
s10.4	"telenor both have at least 30000 employees"	rdf:subject	"Telenor"
s10.4	"telenor both have at least 30000 employees"	rdf:predicate	"have"
s10.4	"telenor both have at least 30000 employees"	rdf:object	"least 30000 employees"
s10.4	"30000 employees"	rdfs:subClassOf	"employees"
s10.4	"least 30000"	rdfs:subClassOf	"30000"
s10.4	"telenor both have at least 30000 employees"	local:AM-ADV	"both"
s10.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"
s10.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"our"
s10.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"express"
s10.3	"our express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"Telenor are also similar in that Telenor both have at least 30000 employees"
s10.3	"telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s10.3	"telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s10.3	"30000 employees"	rdfs:subClassOf	"employees"
s10.3	"least 30000"	rdfs:subClassOf	"30000"
s10.3	"also similar"	rdfs:subClassOf	"similar"
s10.3	"also similar in telenor"	rdfs:member	"also similar"
s10.3	"also similar in telenor"	rdfs:member	"telenor"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"richer fragment of SPARQL this"
s10.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s10.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s10.2	"richer fragment"	rdfs:subClassOf	"fragment"
s10.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10.2	"richer fragment of sparql"	rdfs:member	"sparql"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"enable"
s10.2	"a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"express that Telenor are also similar in that Telenor both have at least 30000 employees"
s10.2	"express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s10.2	"express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s10.2	"express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"express"
s10.2	"30000 employees"	rdfs:subClassOf	"employees"
s10.2	"least 30000"	rdfs:subClassOf	"30000"
s10.2	"also similar"	rdfs:subClassOf	"similar"
s10.2	"also similar in telenor"	rdfs:member	"also similar"
s10.2	"also similar in telenor"	rdfs:member	"telenor"
s10.1	"consider a richer fragment of sparql"
s10.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of SPARQL"
s10.1	"richer fragment of sparql"	rdfs:member	"fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"sparql"
s10.1	"richer fragment"	rdfs:subClassOf	"fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10.1	"richer fragment of sparql"	rdfs:member	"sparql"
s10.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:subject	"First our"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"expand"
s10	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdf:object	"language of similarity queries consider a richer fragment of SPARQL this enables our to express that Telenor are also similar in that Telenor both have at least 30000 employees"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"sparql"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"language"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"similarity queries"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s10	"language of similarity queries consider a richer fragment of sparql this enables our to express that telenor are also similar in that telenor both have at least 30000 employees"	rdfs:member	"richer fragment"
s10	"richer fragment"	rdfs:subClassOf	"fragment"
s10	"similarity queries"	rdfs:member	"similarity"
s10	"similarity queries"	rdfs:subClassOf	"queries"
s10	"richer fragment"	rdfs:member	"richer"
s10	"30000 employees"	rdfs:subClassOf	"employees"
s10	"least 30000"	rdfs:subClassOf	"30000"
s10	"also similar"	rdfs:subClassOf	"similar"
s10	"language of similarity queries"	rdfs:member	"language"
s10	"language of similarity queries"	rdfs:member	"similarity queries"
s10	"richer fragment of sparql"	rdfs:member	"richer fragment"
s10	"richer fragment of sparql"	rdfs:member	"sparql"
s10	"also similar in telenor"	rdfs:member	"also similar"
s10	"also similar in telenor"	rdfs:member	"telenor"
s9.4	"telenor both have at least 30000 employees"
s9.4	"telenor both have at least 30000 employees"	rdf:subject	"Telenor"
s9.4	"telenor both have at least 30000 employees"	rdf:predicate	"have"
s9.4	"telenor both have at least 30000 employees"	rdf:object	"least 30000 employees"
s9.4	"30000 employees"	rdfs:subClassOf	"employees"
s9.4	"least 30000"	rdfs:subClassOf	"30000"
s9.4	"telenor both have at least 30000 employees"	local:AM-ADV	"both"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"our"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"express"
s9.3	"our express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"Vodafone are also similar in that Telenor both have at least 30000 employees"
s9.3	"vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s9.3	"vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"vodafone"
s9.3	"vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s9.3	"30000 employees"	rdfs:subClassOf	"employees"
s9.3	"least 30000"	rdfs:subClassOf	"30000"
s9.3	"also similar"	rdfs:subClassOf	"similar"
s9.3	"also similar in telenor"	rdfs:member	"also similar"
s9.3	"also similar in telenor"	rdfs:member	"telenor"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"richer fragment of SPARQL this"
s9.2	"richer fragment of sparql this"	rdfs:member	"fragment"
s9.2	"richer fragment of sparql this"	rdfs:member	"sparql"
s9.2	"richer fragment"	rdfs:subClassOf	"fragment"
s9.2	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9.2	"richer fragment of sparql"	rdfs:member	"sparql"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"enable"
s9.2	"a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"express that Vodafone are also similar in that Telenor both have at least 30000 employees"
s9.2	"express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s9.2	"express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"vodafone"
s9.2	"express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s9.2	"express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"express"
s9.2	"30000 employees"	rdfs:subClassOf	"employees"
s9.2	"least 30000"	rdfs:subClassOf	"30000"
s9.2	"also similar"	rdfs:subClassOf	"similar"
s9.2	"also similar in telenor"	rdfs:member	"also similar"
s9.2	"also similar in telenor"	rdfs:member	"telenor"
s9.1	"consider a richer fragment of sparql"
s9.1	"consider a richer fragment of sparql"	rdf:subject	"richer fragment of SPARQL"
s9.1	"richer fragment of sparql"	rdfs:member	"fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"sparql"
s9.1	"richer fragment"	rdfs:subClassOf	"fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9.1	"richer fragment of sparql"	rdfs:member	"sparql"
s9.1	"consider a richer fragment of sparql"	rdf:predicate	"consider"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:subject	"First our"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:predicate	"expand"
s9	"first our expand the language of similarity queries to consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdf:object	"language of similarity queries consider a richer fragment of SPARQL this enables our to express that Vodafone are also similar in that Telenor both have at least 30000 employees"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"sparql"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"language"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"vodafone"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"similarity queries"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"employees"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"telenor"
s9	"language of similarity queries consider a richer fragment of sparql this enables our to express that vodafone are also similar in that telenor both have at least 30000 employees"	rdfs:member	"richer fragment"
s9	"richer fragment"	rdfs:subClassOf	"fragment"
s9	"similarity queries"	rdfs:member	"similarity"
s9	"similarity queries"	rdfs:subClassOf	"queries"
s9	"richer fragment"	rdfs:member	"richer"
s9	"30000 employees"	rdfs:subClassOf	"employees"
s9	"least 30000"	rdfs:subClassOf	"30000"
s9	"also similar"	rdfs:subClassOf	"similar"
s9	"language of similarity queries"	rdfs:member	"language"
s9	"language of similarity queries"	rdfs:member	"similarity queries"
s9	"richer fragment of sparql"	rdfs:member	"richer fragment"
s9	"richer fragment of sparql"	rdfs:member	"sparql"
s9	"also similar in telenor"	rdfs:member	"also similar"
s9	"also similar in telenor"	rdfs:member	"telenor"
s8	"in this paper extend the results of our prior work in different ways"
s8	"in this paper extend the results of our prior work in different ways"	rdf:subject	"results of our prior work"
s8	"results of our prior work"	rdfs:member	"prior work"
s8	"results of our prior work"	rdfs:member	"results"
s8	"prior work"	rdfs:subClassOf	"work"
s8	"prior work"	rdfs:member	"prior"
s8	"our prior work"	rdfs:subClassOf	"prior work"
s8	"results of our prior work"	rdfs:member	"results"
s8	"results of our prior work"	rdfs:member	"our prior work"
s8	"in this paper extend the results of our prior work in different ways"	rdf:predicate	"extend"
s8	"in this paper extend the results of our prior work in different ways"	local:AM-LOC	"paper"
s8	"in this paper extend the results of our prior work in different ways"	local:AM-MNR	"different ways"
s8	"different ways"	rdfs:subClassOf	"ways"
s8	"different ways"	rdfs:member	"different"
s7.1	"all telecom companies based in europe"
s7.1	"all telecom companies based in europe"	rdf:subject	"telecom companies"
s7.1	"telecom companies"	rdfs:subClassOf	"companies"
s7.1	"telecom companies"	rdfs:member	"telecom"
s7.1	"all telecom companies based in europe"	rdf:predicate	"base"
s7.1	"all telecom companies based in europe"	local:AM-LOC	"Europe"
s7	"a query asking for all telecom companies based in europe"
s7	"a query asking for all telecom companies based in europe"	rdf:subject	"query"
s7	"a query asking for all telecom companies based in europe"	rdf:predicate	"ask"
s7	"a query asking for all telecom companies based in europe"	rdf:object	"telecom companies based in Europe"
s7	"telecom companies based in europe"	rdfs:member	"telecom companies"
s7	"telecom companies based in europe"	rdfs:member	"europe"
s7	"telecom companies"	rdfs:subClassOf	"companies"
s7	"telecom companies"	rdfs:member	"telecom"
s7	"telecom companies based"	rdfs:member	"telecom companies"
s7	"telecom companies based"	rdfs:member	"based"
s7	"based in europe"	rdfs:member	"based"
s7	"based in europe"	rdfs:member	"europe"
s6.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"
s6.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:subject	"input graph for instance one"
s6.2	"input graph for instance one"	rdfs:member	"instance"
s6.2	"input graph for instance one"	rdfs:member	"input graph"
s6.2	"input graph"	rdfs:subClassOf	"graph"
s6.2	"input graph"	rdfs:member	"input"
s6.2	"one instance"	rdfs:subClassOf	"instance"
s6.2	"input graph for one instance"	rdfs:member	"input graph"
s6.2	"input graph for one instance"	rdfs:member	"one instance"
s6.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:predicate	"describe"
s6.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:object	"similarity between two companies such as Vodafone in the YAGO graph query"
s6.2	"similarity between two companies such as vodafone in the yago graph query"	rdfs:member	"yago graph query"
s6.2	"similarity between two companies such as vodafone in the yago graph query"	rdfs:member	"vodafone"
s6.2	"similarity between two companies such as vodafone in the yago graph query"	rdfs:member	"similarity"
s6.2	"similarity between two companies such as vodafone in the yago graph query"	rdfs:member	"companies"
s6.2	"yago graph"	rdfs:member	"yago"
s6.2	"yago graph"	rdfs:subClassOf	"graph"
s6.2	"yago graph query"	rdfs:member	"yago graph"
s6.2	"yago graph query"	rdfs:subClassOf	"query"
s6.2	"graph query"	rdfs:subClassOf	"query"
s6.2	"graph query"	rdfs:member	"graph"
s6.2	"yago graph query"	rdfs:subClassOf	"graph query"
s6.2	"two companies"	rdfs:subClassOf	"companies"
s6.2	"similarity between two companies"	rdfs:member	"similarity"
s6.2	"similarity between two companies"	rdfs:member	"two companies"
s6.2	"two companies such_as vodafone"	rdfs:member	"two companies"
s6.2	"two companies such_as vodafone"	rdfs:member	"vodafone"
s6.2	"vodafone in yago graph query"	rdfs:member	"vodafone"
s6.2	"vodafone in yago graph query"	rdfs:member	"yago graph query"
s6.2	"the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-MOD	"can"
s6.1	"a sparql query having the input entities"
s6.1	"a sparql query having the input entities"	rdf:subject	"SPARQL query"
s6.1	"sparql query"	rdfs:subClassOf	"query"
s6.1	"sparql query"	rdfs:member	"sparql"
s6.1	"a sparql query having the input entities"	rdf:predicate	"have"
s6.1	"a sparql query having the input entities"	rdf:object	"input entities"
s6.1	"input entities"	rdfs:member	"input"
s6.1	"input entities"	rdfs:subClassOf	"entities"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:subject	"result of entity comparison"
s6	"result of entity comparison"	rdfs:member	"result"
s6	"result of entity comparison"	rdfs:member	"entity comparison"
s6	"entity comparison"	rdfs:subClassOf	"comparison"
s6	"entity comparison"	rdfs:member	"entity"
s6	"result of entity comparison"	rdfs:member	"result"
s6	"result of entity comparison"	rdfs:member	"entity comparison"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdf:predicate	"model"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-LOC	"previous work"
s6	"previous work"	rdfs:member	"previous"
s6	"previous work"	rdfs:subClassOf	"work"
s6	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	local:AM-PNC	"similarity query that is a SPARQL query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as Vodafone in the YAGO graph as a query"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"answer"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"input entities"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"instance"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"query"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"vodafone"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"yago graph"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"sparql query"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"part"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"similarity"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"input graph"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"similarity query"
s6	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as vodafone in the yago graph as a query"	rdfs:member	"companies"
s6	"yago graph"	rdfs:member	"yago"
s6	"input entities"	rdfs:member	"input"
s6	"similarity query"	rdfs:member	"similarity"
s6	"input entities"	rdfs:subClassOf	"entities"
s6	"yago graph"	rdfs:subClassOf	"graph"
s6	"sparql query"	rdfs:member	"sparql"
s6	"similarity query"	rdfs:subClassOf	"query"
s6	"input graph"	rdfs:subClassOf	"graph"
s6	"input graph"	rdfs:member	"input"
s6	"sparql query"	rdfs:subClassOf	"query"
s6	"two companies"	rdfs:subClassOf	"companies"
s6	"can describe"	rdfs:subClassOf	"describe"
s6	"one instance"	rdfs:subClassOf	"instance"
s6	"similarity sparql query"	rdfs:subClassOf	"sparql query"
s6	"sparql query having"	rdfs:member	"sparql query"
s6	"sparql query having"	rdfs:member	"having"
s6	"having as part"	rdfs:member	"having"
s6	"having as part"	rdfs:member	"part"
s6	"part of answer"	rdfs:member	"part"
s6	"part of answer"	rdfs:member	"answer"
s6	"answer over input graph"	rdfs:member	"answer"
s6	"answer over input graph"	rdfs:member	"input graph"
s6	"answer over input graph for one instance"	rdfs:member	"answer over input graph"
s6	"answer over input graph for one instance"	rdfs:member	"one instance"
s6	"similarity between two companies"	rdfs:member	"similarity"
s6	"similarity between two companies"	rdfs:member	"two companies"
s6	"two companies such_as vodafone"	rdfs:member	"two companies"
s6	"two companies such_as vodafone"	rdfs:member	"vodafone"
s6	"vodafone in yago graph"	rdfs:member	"vodafone"
s6	"vodafone in yago graph"	rdfs:member	"yago graph"
s6	"can describe as query"	rdfs:member	"can describe"
s6	"can describe as query"	rdfs:member	"query"
s5.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"
s5.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:subject	"input graph for instance one"
s5.2	"input graph for instance one"	rdfs:member	"instance"
s5.2	"input graph for instance one"	rdfs:member	"input graph"
s5.2	"input graph"	rdfs:subClassOf	"graph"
s5.2	"input graph"	rdfs:member	"input"
s5.2	"one instance"	rdfs:subClassOf	"instance"
s5.2	"input graph for one instance"	rdfs:member	"input graph"
s5.2	"input graph for one instance"	rdfs:member	"one instance"
s5.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:predicate	"describe"
s5.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:object	"similarity between two companies such as Telenor in the YAGO graph query"
s5.2	"similarity between two companies such as telenor in the yago graph query"	rdfs:member	"telenor"
s5.2	"similarity between two companies such as telenor in the yago graph query"	rdfs:member	"yago graph query"
s5.2	"similarity between two companies such as telenor in the yago graph query"	rdfs:member	"similarity"
s5.2	"similarity between two companies such as telenor in the yago graph query"	rdfs:member	"companies"
s5.2	"yago graph"	rdfs:member	"yago"
s5.2	"yago graph"	rdfs:subClassOf	"graph"
s5.2	"yago graph query"	rdfs:member	"yago graph"
s5.2	"yago graph query"	rdfs:subClassOf	"query"
s5.2	"graph query"	rdfs:subClassOf	"query"
s5.2	"graph query"	rdfs:member	"graph"
s5.2	"yago graph query"	rdfs:subClassOf	"graph query"
s5.2	"two companies"	rdfs:subClassOf	"companies"
s5.2	"similarity between two companies"	rdfs:member	"similarity"
s5.2	"similarity between two companies"	rdfs:member	"two companies"
s5.2	"two companies such_as telenor"	rdfs:member	"two companies"
s5.2	"two companies such_as telenor"	rdfs:member	"telenor"
s5.2	"telenor in yago graph query"	rdfs:member	"telenor"
s5.2	"telenor in yago graph query"	rdfs:member	"yago graph query"
s5.2	"the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-MOD	"can"
s5.1	"a sparql query having the input entities"
s5.1	"a sparql query having the input entities"	rdf:subject	"SPARQL query"
s5.1	"sparql query"	rdfs:subClassOf	"query"
s5.1	"sparql query"	rdfs:member	"sparql"
s5.1	"a sparql query having the input entities"	rdf:predicate	"have"
s5.1	"a sparql query having the input entities"	rdf:object	"input entities"
s5.1	"input entities"	rdfs:member	"input"
s5.1	"input entities"	rdfs:subClassOf	"entities"
s5	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"
s5	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:subject	"result of entity comparison"
s5	"result of entity comparison"	rdfs:member	"result"
s5	"result of entity comparison"	rdfs:member	"entity comparison"
s5	"entity comparison"	rdfs:subClassOf	"comparison"
s5	"entity comparison"	rdfs:member	"entity"
s5	"result of entity comparison"	rdfs:member	"result"
s5	"result of entity comparison"	rdfs:member	"entity comparison"
s5	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdf:predicate	"model"
s5	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-LOC	"previous work"
s5	"previous work"	rdfs:member	"previous"
s5	"previous work"	rdfs:subClassOf	"work"
s5	"in our previous work the result of entity comparison modelled as a similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	local:AM-PNC	"similarity query that is a SPARQL query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as Telenor in the YAGO graph as a query"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"answer"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"input entities"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"instance"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"query"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"yago graph"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"sparql query"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"part"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"similarity"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"telenor"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"input graph"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"similarity query"
s5	"similarity query that is a sparql query having the input entities as part of the answer over the input graph for instance one can describe the similarity between two companies such as telenor in the yago graph as a query"	rdfs:member	"companies"
s5	"yago graph"	rdfs:member	"yago"
s5	"input entities"	rdfs:member	"input"
s5	"similarity query"	rdfs:member	"similarity"
s5	"input entities"	rdfs:subClassOf	"entities"
s5	"yago graph"	rdfs:subClassOf	"graph"
s5	"sparql query"	rdfs:member	"sparql"
s5	"similarity query"	rdfs:subClassOf	"query"
s5	"input graph"	rdfs:subClassOf	"graph"
s5	"input graph"	rdfs:member	"input"
s5	"sparql query"	rdfs:subClassOf	"query"
s5	"two companies"	rdfs:subClassOf	"companies"
s5	"can describe"	rdfs:subClassOf	"describe"
s5	"one instance"	rdfs:subClassOf	"instance"
s5	"similarity sparql query"	rdfs:subClassOf	"sparql query"
s5	"sparql query having"	rdfs:member	"sparql query"
s5	"sparql query having"	rdfs:member	"having"
s5	"having as part"	rdfs:member	"having"
s5	"having as part"	rdfs:member	"part"
s5	"part of answer"	rdfs:member	"part"
s5	"part of answer"	rdfs:member	"answer"
s5	"answer over input graph"	rdfs:member	"answer"
s5	"answer over input graph"	rdfs:member	"input graph"
s5	"answer over input graph for one instance"	rdfs:member	"answer over input graph"
s5	"answer over input graph for one instance"	rdfs:member	"one instance"
s5	"similarity between two companies"	rdfs:member	"similarity"
s5	"similarity between two companies"	rdfs:member	"two companies"
s5	"two companies such_as telenor"	rdfs:member	"two companies"
s5	"two companies such_as telenor"	rdfs:member	"telenor"
s5	"telenor in yago graph"	rdfs:member	"telenor"
s5	"telenor in yago graph"	rdfs:member	"yago graph"
s5	"can describe as query"	rdfs:member	"can describe"
s5	"can describe as query"	rdfs:member	"query"
s4.2	"described in a knowledge graph"
s4.2	"described in a knowledge graph"	rdf:predicate	"describe"
s4.2	"described in a knowledge graph"	local:AM-LOC	"knowledge graph"
s4.2	"knowledge graph"	rdfs:member	"knowledge"
s4.2	"knowledge graph"	rdfs:subClassOf	"graph"
s4.1	"given entities"
s4.1	"given entities"	rdf:subject	"entities"
s4.1	"given entities"	rdf:predicate	"give"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	rdf:subject	"similarities between two given entities as described in a knowledge graph"
s4	"similarities between two given entities as described in a knowledge graph"	rdfs:member	"similarities"
s4	"similarities between two given entities as described in a knowledge graph"	rdfs:member	"entities"
s4	"similarities between two given entities as described in a knowledge graph"	rdfs:member	"knowledge graph"
s4	"knowledge graph"	rdfs:member	"knowledge"
s4	"knowledge graph"	rdfs:subClassOf	"graph"
s4	"given entities"	rdfs:subClassOf	"entities"
s4	"two given entities"	rdfs:subClassOf	"given entities"
s4	"similarities between two given entities"	rdfs:member	"similarities"
s4	"similarities between two given entities"	rdfs:member	"two given entities"
s4	"described in knowledge graph"	rdfs:member	"described"
s4	"described in knowledge graph"	rdfs:member	"knowledge graph"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	rdf:predicate	"describe"
s4	"describe in an informative way the similarities between two given entities as described in a knowledge graph"	local:AM-MNR	"informative way"
s4	"informative way"	rdfs:member	"informative"
s4	"informative way"	rdfs:subClassOf	"way"
s3	"tools that can effectively support users in exploration tasks"
s3	"tools that can effectively support users in exploration tasks"	rdf:subject	"tools"
s3	"tools that can effectively support users in exploration tasks"	rdf:predicate	"support"
s3	"tools that can effectively support users in exploration tasks"	rdf:object	"users"
s3	"tools that can effectively support users in exploration tasks"	local:AM-LOC	"exploration tasks"
s3	"exploration tasks"	rdfs:member	"exploration"
s3	"exploration tasks"	rdfs:subClassOf	"tasks"
s3	"tools that can effectively support users in exploration tasks"	local:AM-MNR	"effectively"
s3	"tools that can effectively support users in exploration tasks"	local:AM-MOD	"can"
s2	"tools that can effectively support users in analysis tasks"
s2	"tools that can effectively support users in analysis tasks"	rdf:subject	"tools"
s2	"tools that can effectively support users in analysis tasks"	rdf:predicate	"support"
s2	"tools that can effectively support users in analysis tasks"	rdf:object	"users"
s2	"tools that can effectively support users in analysis tasks"	local:AM-LOC	"analysis tasks"
s2	"analysis tasks"	rdfs:subClassOf	"tasks"
s2	"analysis tasks"	rdfs:member	"analysis"
s2	"tools that can effectively support users in analysis tasks"	local:AM-MNR	"effectively"
s2	"tools that can effectively support users in analysis tasks"	local:AM-MOD	"can"
s1	"largescale knowledge graphs increasingly used in applications"
s1	"largescale knowledge graphs increasingly used in applications"	rdf:subject	"Largescale knowledge graphs"
s1	"knowledge graphs"	rdfs:subClassOf	"graphs"
s1	"largescale knowledge"	rdfs:member	"largescale"
s1	"largescale knowledge graphs"	rdfs:member	"largescale knowledge"
s1	"largescale knowledge graphs"	rdfs:subClassOf	"graphs"
s1	"knowledge graphs"	rdfs:member	"knowledge"
s1	"largescale knowledge"	rdfs:subClassOf	"knowledge"
s1	"largescale knowledge graphs"	rdfs:subClassOf	"knowledge graphs"
s1	"largescale knowledge graphs increasingly used in applications"	rdf:predicate	"use"
s1	"largescale knowledge graphs increasingly used in applications"	local:AM-ADV	"increasingly"
s1	"largescale knowledge graphs increasingly used in applications"	local:AM-LOC	"applications"
s0	"growing need for tools"
s0	"growing need for tools"	rdf:subject	"need"
s0	"growing need for tools"	rdf:predicate	"grow"
s0	"growing need for tools"	local:AM-PNC	"tools"
