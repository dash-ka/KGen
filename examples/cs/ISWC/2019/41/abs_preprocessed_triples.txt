s15.1	"a firstprice payment rule proving tight bounds on the price of anarchy"
s15.1	"a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:subject	"firstprice payment rule"
s15.1	"payment rule"	rdfs:member	"payment"
s15.1	"payment rule"	rdfs:subClassOf	"rule"
s15.1	"firstprice payment"	rdfs:member	"firstprice"
s15.1	"firstprice payment rule"	rdfs:subClassOf	"rule"
s15.1	"firstprice payment rule"	rdfs:member	"firstprice payment"
s15.1	"firstprice payment"	rdfs:subClassOf	"payment"
s15.1	"firstprice payment rule"	rdfs:subClassOf	"payment rule"
s15.1	"a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:predicate	"prove"
s15.1	"a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:object	"tight bounds on the Price of Anarchy"
s15.1	"tight bounds on the price of anarchy"	rdfs:member	"tight bounds"
s15.1	"tight bounds on the price of anarchy"	rdfs:member	"anarchy"
s15.1	"tight bounds on the price of anarchy"	rdfs:member	"price"
s15.1	"tight bounds"	rdfs:subClassOf	"bounds"
s15.1	"tight bounds"	rdfs:member	"tight"
s15.1	"tight bounds on price"	rdfs:member	"tight bounds"
s15.1	"tight bounds on price"	rdfs:member	"price"
s15.1	"price of anarchy"	rdfs:member	"price"
s15.1	"price of anarchy"	rdfs:member	"anarchy"
s15	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of anarchy"
s15	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:subject	"decentralised version of the greedy allocation algorithm"
s15	"decentralised version of the greedy allocation algorithm"	rdfs:member	"greedy allocation algorithm"
s15	"decentralised version of the greedy allocation algorithm"	rdfs:member	"decentralised version"
s15	"allocation algorithm"	rdfs:member	"allocation"
s15	"greedy allocation algorithm"	rdfs:member	"greedy allocation"
s15	"greedy allocation algorithm"	rdfs:subClassOf	"algorithm"
s15	"decentralised version"	rdfs:member	"decentralised"
s15	"greedy allocation"	rdfs:subClassOf	"allocation"
s15	"decentralised version"	rdfs:subClassOf	"version"
s15	"greedy allocation"	rdfs:member	"greedy"
s15	"allocation algorithm"	rdfs:subClassOf	"algorithm"
s15	"greedy allocation algorithm"	rdfs:subClassOf	"allocation algorithm"
s15	"decentralised version of greedy allocation algorithm"	rdfs:member	"decentralised version"
s15	"decentralised version of greedy allocation algorithm"	rdfs:member	"greedy allocation algorithm"
s15	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:predicate	"study"
s15	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of anarchy"	rdf:object	"firstprice payment rule proving tight bounds on the Price of Anarchy"
s15	"firstprice payment rule proving tight bounds on the price of anarchy"	rdfs:member	"tight bounds"
s15	"firstprice payment rule proving tight bounds on the price of anarchy"	rdfs:member	"firstprice payment rule"
s15	"firstprice payment rule proving tight bounds on the price of anarchy"	rdfs:member	"price"
s15	"firstprice payment rule proving tight bounds on the price of anarchy"	rdfs:member	"anarchy"
s15	"tight bounds"	rdfs:subClassOf	"bounds"
s15	"tight bounds"	rdfs:member	"tight"
s15	"payment rule"	rdfs:subClassOf	"rule"
s15	"firstprice payment"	rdfs:member	"firstprice"
s15	"payment rule"	rdfs:member	"payment"
s15	"firstprice payment rule"	rdfs:subClassOf	"rule"
s15	"firstprice payment rule"	rdfs:member	"firstprice payment"
s15	"firstprice payment"	rdfs:subClassOf	"payment"
s15	"firstprice payment rule"	rdfs:subClassOf	"payment rule"
s15	"firstprice payment rule proving"	rdfs:member	"firstprice payment rule"
s15	"firstprice payment rule proving"	rdfs:member	"proving"
s15	"tight bounds on price"	rdfs:member	"tight bounds"
s15	"tight bounds on price"	rdfs:member	"price"
s15	"price of anarchy"	rdfs:member	"price"
s15	"price of anarchy"	rdfs:member	"anarchy"
s15	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of anarchy"	local:AM-TMP	"then"
s14.1	"a firstprice payment rule proving tight bounds on the price of stability"
s14.1	"a firstprice payment rule proving tight bounds on the price of stability"	rdf:subject	"firstprice payment rule"
s14.1	"payment rule"	rdfs:member	"payment"
s14.1	"payment rule"	rdfs:subClassOf	"rule"
s14.1	"firstprice payment"	rdfs:member	"firstprice"
s14.1	"firstprice payment rule"	rdfs:subClassOf	"rule"
s14.1	"firstprice payment rule"	rdfs:member	"firstprice payment"
s14.1	"firstprice payment"	rdfs:subClassOf	"payment"
s14.1	"firstprice payment rule"	rdfs:subClassOf	"payment rule"
s14.1	"a firstprice payment rule proving tight bounds on the price of stability"	rdf:predicate	"prove"
s14.1	"a firstprice payment rule proving tight bounds on the price of stability"	rdf:object	"tight bounds on the Price of Stability"
s14.1	"tight bounds on the price of stability"	rdfs:member	"tight bounds"
s14.1	"tight bounds on the price of stability"	rdfs:member	"stability"
s14.1	"tight bounds on the price of stability"	rdfs:member	"price"
s14.1	"tight bounds"	rdfs:subClassOf	"bounds"
s14.1	"tight bounds"	rdfs:member	"tight"
s14.1	"tight bounds on price"	rdfs:member	"tight bounds"
s14.1	"tight bounds on price"	rdfs:member	"price"
s14.1	"price of stability"	rdfs:member	"price"
s14.1	"price of stability"	rdfs:member	"stability"
s14	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of stability"
s14	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of stability"	rdf:subject	"decentralised version of the greedy allocation algorithm"
s14	"decentralised version of the greedy allocation algorithm"	rdfs:member	"greedy allocation algorithm"
s14	"decentralised version of the greedy allocation algorithm"	rdfs:member	"decentralised version"
s14	"allocation algorithm"	rdfs:member	"allocation"
s14	"greedy allocation algorithm"	rdfs:member	"greedy allocation"
s14	"greedy allocation algorithm"	rdfs:subClassOf	"algorithm"
s14	"decentralised version"	rdfs:member	"decentralised"
s14	"greedy allocation"	rdfs:subClassOf	"allocation"
s14	"decentralised version"	rdfs:subClassOf	"version"
s14	"greedy allocation"	rdfs:member	"greedy"
s14	"allocation algorithm"	rdfs:subClassOf	"algorithm"
s14	"greedy allocation algorithm"	rdfs:subClassOf	"allocation algorithm"
s14	"decentralised version of greedy allocation algorithm"	rdfs:member	"decentralised version"
s14	"decentralised version of greedy allocation algorithm"	rdfs:member	"greedy allocation algorithm"
s14	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of stability"	rdf:predicate	"study"
s14	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of stability"	local:AM-MNR	"firstprice payment rule proving tight bounds on the Price of Stability"
s14	"firstprice payment rule proving tight bounds on the price of stability"	rdfs:member	"tight bounds"
s14	"firstprice payment rule proving tight bounds on the price of stability"	rdfs:member	"firstprice payment rule"
s14	"firstprice payment rule proving tight bounds on the price of stability"	rdfs:member	"stability"
s14	"firstprice payment rule proving tight bounds on the price of stability"	rdfs:member	"price"
s14	"tight bounds"	rdfs:subClassOf	"bounds"
s14	"tight bounds"	rdfs:member	"tight"
s14	"payment rule"	rdfs:subClassOf	"rule"
s14	"firstprice payment"	rdfs:member	"firstprice"
s14	"payment rule"	rdfs:member	"payment"
s14	"firstprice payment rule"	rdfs:subClassOf	"rule"
s14	"firstprice payment rule"	rdfs:member	"firstprice payment"
s14	"firstprice payment"	rdfs:subClassOf	"payment"
s14	"firstprice payment rule"	rdfs:subClassOf	"payment rule"
s14	"firstprice payment rule proving"	rdfs:member	"firstprice payment rule"
s14	"firstprice payment rule proving"	rdfs:member	"proving"
s14	"tight bounds on price"	rdfs:member	"tight bounds"
s14	"tight bounds on price"	rdfs:member	"price"
s14	"price of stability"	rdfs:member	"price"
s14	"price of stability"	rdfs:member	"stability"
s14	"a decentralised version of the greedy allocation algorithm then studied with a firstprice payment rule proving tight bounds on the price of stability"	local:AM-TMP	"then"
s13.2	"truthful mechanisms"
s13.2	"truthful mechanisms"	rdf:subject	"truthful mechanisms"
s13.2	"truthful mechanisms"	rdf:predicate	"require"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"	rdf:subject	"implementations in dominant strategies"
s13.1	"implementations in dominant strategies"	rdfs:member	"dominant strategies"
s13.1	"implementations in dominant strategies"	rdfs:member	"implementations"
s13.1	"dominant strategies"	rdfs:subClassOf	"strategies"
s13.1	"dominant strategies"	rdfs:member	"dominant"
s13.1	"implementations in dominant strategies"	rdfs:member	"implementations"
s13.1	"implementations in dominant strategies"	rdfs:member	"dominant strategies"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"	rdf:predicate	"solve"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"	local:AM-ADV	"truthful mechanisms are required"
s13.1	"truthful mechanisms"	rdfs:member	"truthful"
s13.1	"truthful mechanisms"	rdfs:subClassOf	"mechanisms"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"	local:AM-MNR	"optimally"
s13.1	"implementations in dominant strategies should solved optimally if truthful mechanisms are required"	local:AM-MOD	"should"
s13	"we show that implementations in dominant strategies should be solved optimally if truthful mechanisms are required"
s13	"we show that implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdf:subject	"We"
s13	"we show that implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdf:predicate	"show"
s13	"we show that implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdf:object	"implementations in dominant strategies should be solved optimally if truthful mechanisms are required"
s13	"implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdfs:member	"dominant strategies"
s13	"implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdfs:member	"implementations"
s13	"implementations in dominant strategies should be solved optimally if truthful mechanisms are required"	rdfs:member	"truthful mechanisms"
s13	"dominant strategies"	rdfs:subClassOf	"strategies"
s13	"truthful mechanisms"	rdfs:member	"truthful"
s13	"dominant strategies"	rdfs:member	"dominant"
s13	"truthful mechanisms"	rdfs:subClassOf	"mechanisms"
s13	"optimally solved"	rdfs:subClassOf	"solved"
s13	"should optimally solved"	rdfs:subClassOf	"optimally solved"
s13	"implementations in dominant strategies"	rdfs:member	"implementations"
s13	"implementations in dominant strategies"	rdfs:member	"dominant strategies"
s12	"we study implementations in dominant strategies"
s12	"we study implementations in dominant strategies"	rdf:subject	"We"
s12	"we study implementations in dominant strategies"	rdf:predicate	"study"
s12	"we study implementations in dominant strategies"	rdf:object	"implementations in dominant strategies"
s12	"implementations in dominant strategies"	rdfs:member	"dominant strategies"
s12	"implementations in dominant strategies"	rdfs:member	"implementations"
s12	"dominant strategies"	rdfs:subClassOf	"strategies"
s12	"dominant strategies"	rdfs:member	"dominant"
s12	"implementations in dominant strategies"	rdfs:member	"implementations"
s12	"implementations in dominant strategies"	rdfs:member	"dominant strategies"
s11	"the objective find a matching"
s11	"the objective find a matching"	rdf:subject	"objective"
s11	"the objective find a matching"	rdf:predicate	"find"
s11	"the objective find a matching"	rdf:object	"matching"
s10	"a matching that maximises the agents social welfare"
s10	"a matching that maximises the agents social welfare"	rdf:subject	"matching"
s10	"a matching that maximises the agents social welfare"	rdf:predicate	"maximise"
s10	"a matching that maximises the agents social welfare"	rdf:object	"agents social welfare"
s10	"agents social welfare"	rdfs:member	"agents"
s10	"agents social welfare"	rdfs:member	"social welfare"
s10	"social welfare"	rdfs:member	"social"
s10	"social welfare"	rdfs:subClassOf	"welfare"
s10	"agents social welfare"	rdfs:subClassOf	"social welfare"
s9.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s9.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:subject	"side of the graph"
s9.1	"side of the graph"	rdfs:member	"side"
s9.1	"side of the graph"	rdfs:member	"graph"
s9.1	"side of graph"	rdfs:member	"side"
s9.1	"side of graph"	rdfs:member	"graph"
s9.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:predicate	"represent"
s9.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:object	"agents private entities"
s9.1	"agents private entities"	rdfs:member	"agents"
s9.1	"agents private entities"	rdfs:member	"private entities"
s9.1	"private entities"	rdfs:member	"private"
s9.1	"private entities"	rdfs:subClassOf	"entities"
s9.1	"agents private entities"	rdfs:subClassOf	"private entities"
s9.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	local:AM-LOC	"edgeweighted bipartite graph"
s9.1	"bipartite graph"	rdfs:subClassOf	"graph"
s9.1	"bipartite graph"	rdfs:member	"bipartite"
s9.1	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s9	"we examine this problem and model this problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s9	"we examine this problem and model this problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:subject	"We"
s9	"we examine this problem and model this problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:predicate	"examine"
s9	"we examine this problem and model this problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:object	"problem and model this problem"
s9	"problem and model this problem"	rdfs:member	"problem"
s9	"problem and model this problem"	rdfs:member	"model"
s9	"we examine this problem and model this problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	local:AM-LOC	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s9	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"private entities"
s9	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"agents"
s9	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"graph"
s9	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"bipartite graph"
s9	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"side"
s9	"private entities"	rdfs:member	"private"
s9	"bipartite graph"	rdfs:subClassOf	"graph"
s9	"private entities"	rdfs:subClassOf	"entities"
s9	"bipartite graph"	rdfs:member	"bipartite"
s9	"where represents"	rdfs:subClassOf	"represents"
s9	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s9	"side of graph"	rdfs:member	"side"
s9	"side of graph"	rdfs:member	"graph"
s8.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"
s8.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:subject	"agent"
s8.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:predicate	"maintain"
s8.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:object	"private set of valuations"
s8.1	"private set of valuations"	rdfs:member	"valuations"
s8.1	"private set of valuations"	rdfs:member	"private set"
s8.1	"private set"	rdfs:subClassOf	"set"
s8.1	"private set"	rdfs:member	"private"
s8.1	"private set of valuations"	rdfs:member	"private set"
s8.1	"private set of valuations"	rdfs:member	"valuations"
s8.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	local:AM-LOC	"edgeweighted bipartite graph"
s8.1	"bipartite graph"	rdfs:subClassOf	"graph"
s8.1	"bipartite graph"	rdfs:member	"bipartite"
s8.1	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s8	"we examine this problem and model this problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"
s8	"we examine this problem and model this problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:subject	"We"
s8	"we examine this problem and model this problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:predicate	"examine"
s8	"we examine this problem and model this problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:object	"problem and model this problem"
s8	"problem and model this problem"	rdfs:member	"problem"
s8	"problem and model this problem"	rdfs:member	"model"
s8	"we examine this problem and model this problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	local:AM-LOC	"edgeweighted bipartite graph where each agent maintains a private set of valuations"
s8	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"valuations"
s8	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"bipartite graph"
s8	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"private set"
s8	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"agent"
s8	"private set"	rdfs:subClassOf	"set"
s8	"bipartite graph"	rdfs:subClassOf	"graph"
s8	"private set"	rdfs:member	"private"
s8	"bipartite graph"	rdfs:member	"bipartite"
s8	"where maintains"	rdfs:subClassOf	"maintains"
s8	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s8	"private set of valuations"	rdfs:member	"private set"
s8	"private set of valuations"	rdfs:member	"valuations"
s7.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"
s7.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:subject	"agent"
s7.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:predicate	"maintain"
s7.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:object	"private set of valuations"
s7.1	"private set of valuations"	rdfs:member	"valuations"
s7.1	"private set of valuations"	rdfs:member	"private set"
s7.1	"private set"	rdfs:subClassOf	"set"
s7.1	"private set"	rdfs:member	"private"
s7.1	"private set of valuations"	rdfs:member	"private set"
s7.1	"private set of valuations"	rdfs:member	"valuations"
s7.1	"an edgeweighted bipartite graph where each agent maintains a private set of valuations"	local:AM-LOC	"edgeweighted bipartite graph"
s7.1	"bipartite graph"	rdfs:subClassOf	"graph"
s7.1	"bipartite graph"	rdfs:member	"bipartite"
s7.1	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:subject	"We"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:predicate	"examine"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdf:object	"model"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	local:AM-LOC	"edgeweighted bipartite graph where each agent maintains a private set of valuations"
s7	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"valuations"
s7	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"bipartite graph"
s7	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"private set"
s7	"edgeweighted bipartite graph where each agent maintains a private set of valuations"	rdfs:member	"agent"
s7	"private set"	rdfs:subClassOf	"set"
s7	"bipartite graph"	rdfs:subClassOf	"graph"
s7	"private set"	rdfs:member	"private"
s7	"bipartite graph"	rdfs:member	"bipartite"
s7	"where maintains"	rdfs:subClassOf	"maintains"
s7	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s7	"private set of valuations"	rdfs:member	"private set"
s7	"private set of valuations"	rdfs:member	"valuations"
s7	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each agent maintains a private set of valuations"	local:AM-MNR	"novel mechanism design problem"
s7	"mechanism design problem"	rdfs:subClassOf	"problem"
s7	"novel mechanism design"	rdfs:member	"novel mechanism"
s7	"novel mechanism design problem"	rdfs:subClassOf	"problem"
s7	"novel mechanism design"	rdfs:subClassOf	"design"
s7	"novel mechanism"	rdfs:member	"novel"
s7	"mechanism design"	rdfs:member	"mechanism"
s7	"mechanism design problem"	rdfs:member	"mechanism design"
s7	"novel mechanism design problem"	rdfs:member	"novel mechanism design"
s7	"design problem"	rdfs:member	"design"
s7	"design problem"	rdfs:subClassOf	"problem"
s7	"novel mechanism"	rdfs:subClassOf	"mechanism"
s7	"mechanism design"	rdfs:subClassOf	"design"
s7	"mechanism design problem"	rdfs:subClassOf	"design problem"
s7	"novel mechanism design problem"	rdfs:subClassOf	"mechanism design problem"
s6	"valuations associated with this problem"
s6	"valuations associated with this problem"	rdf:subject	"valuations"
s6	"valuations associated with this problem"	rdf:predicate	"associate"
s6	"valuations associated with this problem"	rdf:object	"problem"
s5	"valuations associated with model candidate correspondences"
s5	"valuations associated with model candidate correspondences"	rdf:subject	"valuations"
s5	"valuations associated with model candidate correspondences"	rdf:predicate	"associate"
s5	"valuations associated with model candidate correspondences"	rdf:object	"model candidate correspondences"
s5	"model candidate correspondences"	rdfs:subClassOf	"correspondences"
s5	"model candidate"	rdfs:subClassOf	"candidate"
s5	"model candidate correspondences"	rdfs:member	"model candidate"
s5	"candidate correspondences"	rdfs:member	"candidate"
s5	"candidate correspondences"	rdfs:subClassOf	"correspondences"
s5	"model candidate"	rdfs:member	"model"
s5	"model candidate correspondences"	rdfs:subClassOf	"candidate correspondences"
s4.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s4.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:subject	"side of the graph"
s4.1	"side of the graph"	rdfs:member	"side"
s4.1	"side of the graph"	rdfs:member	"graph"
s4.1	"side of graph"	rdfs:member	"side"
s4.1	"side of graph"	rdfs:member	"graph"
s4.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:predicate	"represent"
s4.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:object	"agents private entities"
s4.1	"agents private entities"	rdfs:member	"agents"
s4.1	"agents private entities"	rdfs:member	"private entities"
s4.1	"private entities"	rdfs:member	"private"
s4.1	"private entities"	rdfs:subClassOf	"entities"
s4.1	"agents private entities"	rdfs:subClassOf	"private entities"
s4.1	"an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	local:AM-LOC	"edgeweighted bipartite graph"
s4.1	"bipartite graph"	rdfs:subClassOf	"graph"
s4.1	"bipartite graph"	rdfs:member	"bipartite"
s4.1	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:subject	"We"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:predicate	"examine"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdf:object	"model"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	local:AM-LOC	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"
s4	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"private entities"
s4	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"agents"
s4	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"graph"
s4	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"bipartite graph"
s4	"edgeweighted bipartite graph where each side of the graph represents each agents private entities"	rdfs:member	"side"
s4	"private entities"	rdfs:member	"private"
s4	"bipartite graph"	rdfs:subClassOf	"graph"
s4	"private entities"	rdfs:subClassOf	"entities"
s4	"bipartite graph"	rdfs:member	"bipartite"
s4	"where represents"	rdfs:subClassOf	"represents"
s4	"edgeweighted bipartite graph"	rdfs:subClassOf	"bipartite graph"
s4	"side of graph"	rdfs:member	"side"
s4	"side of graph"	rdfs:member	"graph"
s4	"we examine model as a novel mechanism design problem on an edgeweighted bipartite graph where each side of the graph represents each agents private entities"	local:AM-MNR	"novel mechanism design problem"
s4	"mechanism design problem"	rdfs:subClassOf	"problem"
s4	"novel mechanism design"	rdfs:member	"novel mechanism"
s4	"novel mechanism design problem"	rdfs:subClassOf	"problem"
s4	"novel mechanism design"	rdfs:subClassOf	"design"
s4	"novel mechanism"	rdfs:member	"novel"
s4	"mechanism design"	rdfs:member	"mechanism"
s4	"mechanism design problem"	rdfs:member	"mechanism design"
s4	"novel mechanism design problem"	rdfs:member	"novel mechanism design"
s4	"design problem"	rdfs:member	"design"
s4	"design problem"	rdfs:subClassOf	"problem"
s4	"novel mechanism"	rdfs:subClassOf	"mechanism"
s4	"mechanism design"	rdfs:subClassOf	"design"
s4	"mechanism design problem"	rdfs:subClassOf	"design problem"
s4	"novel mechanism design problem"	rdfs:subClassOf	"mechanism design problem"
s3	"the agents revealing information"
s3	"the agents revealing information"	rdf:subject	"agents"
s3	"the agents revealing information"	rdf:predicate	"reveal"
s3	"the agents revealing information"	rdf:object	"information"
s2.3	"exchanged correspondences"
s2.3	"exchanged correspondences"	rdf:subject	"correspondences"
s2.3	"exchanged correspondences"	rdf:predicate	"exchange"
s2.2	"an agent misrepresenting the weight or confidence of the exchanged correspondences"
s2.2	"an agent misrepresenting the weight or confidence of the exchanged correspondences"	rdf:subject	"agent"
s2.2	"an agent misrepresenting the weight or confidence of the exchanged correspondences"	rdf:predicate	"misrepresent"
s2.2	"an agent misrepresenting the weight or confidence of the exchanged correspondences"	rdf:object	"weight or confidence of the exchanged correspondences"
s2.2	"weight or confidence of the exchanged correspondences"	rdfs:member	"weight"
s2.2	"weight or confidence of the exchanged correspondences"	rdfs:member	"confidence"
s2.2	"weight or confidence of the exchanged correspondences"	rdfs:member	"exchanged correspondences"
s2.2	"exchanged correspondences"	rdfs:member	"exchanged"
s2.2	"exchanged correspondences"	rdfs:subClassOf	"correspondences"
s2.2	"weight of exchanged correspondences"	rdfs:member	"weight"
s2.2	"weight of exchanged correspondences"	rdfs:member	"exchanged correspondences"
s2.1	"an agent manipulate the negotiation"
s2.1	"an agent manipulate the negotiation"	rdf:subject	"agent"
s2.1	"an agent manipulate the negotiation"	rdf:predicate	"manipulate"
s2.1	"an agent manipulate the negotiation"	rdf:object	"negotiation"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdf:subject	"agent"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdf:predicate	"tempt"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	local:AM-DIS	"However"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	local:AM-MOD	"may"
s2	"however an agent may tempted to manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	local:AM-PNC	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"favour"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"negotiation"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"weight"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"confidence"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"exchanged correspondences"
s2	"manipulate the negotiation in favour of a preferred alignment by misrepresenting the weight or confidence of the exchanged correspondences"	rdfs:member	"preferred alignment"
s2	"preferred alignment"	rdfs:subClassOf	"alignment"
s2	"exchanged correspondences"	rdfs:member	"exchanged"
s2	"exchanged correspondences"	rdfs:subClassOf	"correspondences"
s2	"preferred alignment"	rdfs:member	"preferred"
s2	"manipulate in favour"	rdfs:member	"manipulate"
s2	"manipulate in favour"	rdfs:member	"favour"
s2	"favour of preferred alignment"	rdfs:member	"favour"
s2	"favour of preferred alignment"	rdfs:member	"preferred alignment"
s2	"weight of exchanged correspondences"	rdfs:member	"weight"
s2	"weight of exchanged correspondences"	rdfs:member	"exchanged correspondences"
s0.1	"in the distributed ontology alignment construction problem two agents agree upon a meaningful subset of correspondences"
s0.1	"in the distributed ontology alignment construction problem two agents agree upon a meaningful subset of correspondences"	rdf:subject	"two agents"
s0.1	"two agents"	rdfs:subClassOf	"agents"
s0.1	"in the distributed ontology alignment construction problem two agents agree upon a meaningful subset of correspondences"	rdf:predicate	"agree"
s0.1	"in the distributed ontology alignment construction problem two agents agree upon a meaningful subset of correspondences"	local:AM-LOC	"distributed ontology alignment construction problem"
s0.1	"ontology alignment construction problem"	rdfs:subClassOf	"problem"
s0.1	"alignment construction problem"	rdfs:subClassOf	"problem"
s0.1	"ontology alignment"	rdfs:subClassOf	"alignment"
s0.1	"alignment construction"	rdfs:subClassOf	"construction"
s0.1	"alignment construction problem"	rdfs:member	"alignment construction"
s0.1	"construction problem"	rdfs:member	"construction"
s0.1	"construction problem"	rdfs:subClassOf	"problem"
s0.1	"alignment construction"	rdfs:member	"alignment"
s0.1	"ontology alignment"	rdfs:member	"ontology"
s0.1	"ontology alignment construction"	rdfs:subClassOf	"construction"
s0.1	"ontology alignment construction problem"	rdfs:member	"ontology alignment construction"
s0.1	"ontology alignment construction"	rdfs:member	"ontology alignment"
s0.1	"alignment construction problem"	rdfs:subClassOf	"construction problem"
s0.1	"ontology alignment construction problem"	rdfs:subClassOf	"alignment construction problem"
s0.1	"distributed ontology alignment construction problem"	rdfs:subClassOf	"ontology alignment construction problem"
s0.1	"in the distributed ontology alignment construction problem two agents agree upon a meaningful subset of correspondences"	local:AM-TMP	"upon a meaningful subset of correspondences"
s0.1	"upon a meaningful subset of correspondences"	rdfs:member	"correspondences"
s0.1	"upon a meaningful subset of correspondences"	rdfs:member	"meaningful subset"
s0.1	"meaningful subset"	rdfs:subClassOf	"subset"
s0.1	"meaningful subset"	rdfs:member	"meaningful"
s0.1	"meaningful subset of correspondences"	rdfs:member	"meaningful subset"
s0.1	"meaningful subset of correspondences"	rdfs:member	"correspondences"
s0	"distributed ontology alignment construction problem"
s0	"distributed ontology alignment construction problem"	rdf:subject	"ontology alignment construction problem"
s0	"ontology alignment construction problem"	rdfs:member	"alignment construction problem"
s0	"ontology alignment construction problem"	rdfs:member	"ontology"
s0	"alignment construction problem"	rdfs:subClassOf	"problem"
s0	"alignment construction"	rdfs:subClassOf	"construction"
s0	"alignment construction problem"	rdfs:member	"alignment construction"
s0	"construction problem"	rdfs:member	"construction"
s0	"construction problem"	rdfs:subClassOf	"problem"
s0	"alignment construction"	rdfs:member	"alignment"
s0	"alignment construction problem"	rdfs:subClassOf	"construction problem"
s0	"ontology alignment construction problem"	rdfs:subClassOf	"alignment construction problem"
s0	"distributed ontology alignment construction problem"	rdf:predicate	"distribute"
