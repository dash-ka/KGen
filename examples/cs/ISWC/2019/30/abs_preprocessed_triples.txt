s13.1	"we"
s13.1	"we"	rdf:subject	"We"
s13.1	"we"	rdf:predicate	"approach"
s13	"we provide experimental results of the various components of we approach"
s13	"we provide experimental results of the various components of we approach"	rdf:subject	"We"
s13	"we provide experimental results of the various components of we approach"	rdf:predicate	"provide"
s13	"we provide experimental results of the various components of we approach"	rdf:object	"experimental results of the various components of We approach"
s13	"experimental results of the various components of we approach"	rdfs:member	"experimental results"
s13	"experimental results of the various components of we approach"	rdfs:member	"various components"
s13	"experimental results"	rdfs:subClassOf	"results"
s13	"experimental results"	rdfs:member	"experimental"
s13	"various components"	rdfs:member	"various"
s13	"various components"	rdfs:subClassOf	"components"
s13	"experimental results of various components"	rdfs:member	"experimental results"
s13	"experimental results of various components"	rdfs:member	"various components"
s13	"various components of we"	rdfs:member	"various components"
s13	"various components of we"	rdfs:member	"we"
s12.1	"we"
s12.1	"we"	rdf:subject	"We"
s12.1	"we"	rdf:predicate	"approach"
s12	"we provide theoretical results of the various components of we approach"
s12	"we provide theoretical results of the various components of we approach"	rdf:subject	"We"
s12	"we provide theoretical results of the various components of we approach"	rdf:predicate	"provide"
s12	"we provide theoretical results of the various components of we approach"	rdf:object	"theoretical results of the various components of We approach"
s12	"theoretical results of the various components of we approach"	rdfs:member	"theoretical results"
s12	"theoretical results of the various components of we approach"	rdfs:member	"various components"
s12	"various components"	rdfs:subClassOf	"components"
s12	"theoretical results"	rdfs:member	"theoretical"
s12	"theoretical results"	rdfs:subClassOf	"results"
s12	"various components"	rdfs:member	"various"
s12	"theoretical results of various components"	rdfs:member	"theoretical results"
s12	"theoretical results of various components"	rdfs:member	"various components"
s12	"various components of we"	rdfs:member	"various components"
s12	"various components of we"	rdfs:member	"we"
s11.5	"capture the new facts"
s11.5	"capture the new facts"	rdf:subject	"new facts"
s11.5	"new facts"	rdfs:member	"new"
s11.5	"new facts"	rdfs:subClassOf	"facts"
s11.5	"capture the new facts"	rdf:predicate	"capture"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:subject	"constraints"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:predicate	"update"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:object	"original schema ie the set of SHACL constraints"
s11.4	"original schema ie the set of shacl constraints"	rdfs:member	"shacl constraints"
s11.4	"original schema ie the set of shacl constraints"	rdfs:member	"set"
s11.4	"original schema ie the set of shacl constraints"	rdfs:member	"original schema"
s11.4	"original schema"	rdfs:member	"original"
s11.4	"shacl constraints"	rdfs:member	"shacl"
s11.4	"shacl constraints"	rdfs:subClassOf	"constraints"
s11.4	"original schema"	rdfs:subClassOf	"schema"
s11.4	"ie set"	rdfs:subClassOf	"set"
s11.4	"ie set of shacl constraints"	rdfs:member	"ie set"
s11.4	"ie set of shacl constraints"	rdfs:member	"shacl constraints"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	local:AM-MOD	"could"
s11.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	local:AM-PNC	"order to capture the new facts"
s11.4	"order to capture the new facts"	rdfs:member	"order"
s11.4	"order to capture the new facts"	rdfs:member	"new facts"
s11.4	"new facts"	rdfs:member	"new"
s11.4	"new facts"	rdfs:subClassOf	"facts"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"	rdf:subject	"application of the inference rules on some graph instance of the original schema"
s11.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"original schema"
s11.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"application"
s11.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"graph instance"
s11.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"inference rules"
s11.3	"inference rules"	rdfs:member	"inference"
s11.3	"graph instance"	rdfs:member	"graph"
s11.3	"graph instance"	rdfs:subClassOf	"instance"
s11.3	"inference rules"	rdfs:subClassOf	"rules"
s11.3	"original schema"	rdfs:subClassOf	"schema"
s11.3	"original schema"	rdfs:member	"original"
s11.3	"application of inference rules"	rdfs:member	"application"
s11.3	"application of inference rules"	rdfs:member	"inference rules"
s11.3	"inference rules on graph instance"	rdfs:member	"inference rules"
s11.3	"inference rules on graph instance"	rdfs:member	"graph instance"
s11.3	"graph instance of original schema"	rdfs:member	"graph instance"
s11.3	"graph instance of original schema"	rdfs:member	"original schema"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"	rdf:predicate	"violate"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"	rdf:object	"constraints"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"	local:AM-MOD	"could"
s11.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema in order to capture the new facts"	local:AM-PNC	"order to capture the new facts"
s11.3	"order to capture the new facts"	rdfs:member	"order"
s11.3	"order to capture the new facts"	rdfs:member	"new facts"
s11.3	"new facts"	rdfs:member	"new"
s11.3	"new facts"	rdfs:subClassOf	"facts"
s11.2	"detect which constraints could be violated"
s11.2	"detect which constraints could be violated"	rdf:subject	"constraints could be violated"
s11.2	"could violated"	rdfs:subClassOf	"violated"
s11.2	"detect which constraints could be violated"	rdf:predicate	"detect"
s11.1	"we present a method to detect which constraints could be violated"
s11.1	"we present a method to detect which constraints could be violated"	rdf:subject	"we"
s11.1	"we present a method to detect which constraints could be violated"	rdf:predicate	"present"
s11.1	"we present a method to detect which constraints could be violated"	rdf:object	"method to detect which constraints could be violated"
s11.1	"method to detect which constraints could be violated"	rdfs:member	"constraints"
s11.1	"method to detect which constraints could be violated"	rdfs:member	"method"
s11.1	"could violated"	rdfs:subClassOf	"violated"
s11	"given a set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"
s11	"given a set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdf:subject	"set of SHACL constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"constraints"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"application"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"method"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"set"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"graph instance"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"shacl constraints"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"original schema"
s11	"set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"inference rules"
s11	"shacl constraints"	rdfs:subClassOf	"constraints"
s11	"inference rules"	rdfs:subClassOf	"rules"
s11	"inference rules"	rdfs:member	"inference"
s11	"graph instance"	rdfs:member	"graph"
s11	"shacl constraints"	rdfs:member	"shacl"
s11	"original schema"	rdfs:subClassOf	"schema"
s11	"graph instance"	rdfs:subClassOf	"instance"
s11	"original schema"	rdfs:member	"original"
s11	"could violated"	rdfs:subClassOf	"violated"
s11	"set of shacl constraints"	rdfs:member	"set"
s11	"set of shacl constraints"	rdfs:member	"shacl constraints"
s11	"could violated agent application"	rdfs:member	"could violated"
s11	"could violated agent application"	rdfs:member	"application"
s11	"application of inference rules"	rdfs:member	"application"
s11	"application of inference rules"	rdfs:member	"inference rules"
s11	"inference rules on graph instance"	rdfs:member	"inference rules"
s11	"inference rules on graph instance"	rdfs:member	"graph instance"
s11	"graph instance of original schema"	rdfs:member	"graph instance"
s11	"graph instance of original schema"	rdfs:member	"original schema"
s11	"given a set of shacl constraints we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdf:predicate	"Given"
s10	"the new facts that can"
s10	"the new facts that can"	rdf:subject	"new facts"
s10	"new facts"	rdfs:member	"new"
s10	"new facts"	rdfs:subClassOf	"facts"
s10	"the new facts that can"	rdf:predicate	"infer"
s10	"the new facts that can"	local:AM-MOD	"can"
s9.5	"capture the new facts"
s9.5	"capture the new facts"	rdf:subject	"new facts"
s9.5	"new facts"	rdfs:member	"new"
s9.5	"new facts"	rdfs:subClassOf	"facts"
s9.5	"capture the new facts"	rdf:predicate	"capture"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:subject	"constraints"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:predicate	"update"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	rdf:object	"original schema ie the set of SHACL constraints"
s9.4	"original schema ie the set of shacl constraints"	rdfs:member	"shacl constraints"
s9.4	"original schema ie the set of shacl constraints"	rdfs:member	"set"
s9.4	"original schema ie the set of shacl constraints"	rdfs:member	"original schema"
s9.4	"original schema"	rdfs:member	"original"
s9.4	"shacl constraints"	rdfs:member	"shacl"
s9.4	"shacl constraints"	rdfs:subClassOf	"constraints"
s9.4	"original schema"	rdfs:subClassOf	"schema"
s9.4	"ie set"	rdfs:subClassOf	"set"
s9.4	"ie set of shacl constraints"	rdfs:member	"ie set"
s9.4	"ie set of shacl constraints"	rdfs:member	"shacl constraints"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	local:AM-MOD	"could"
s9.4	"constraints could update the original schema ie the set of shacl constraints in order to capture the new facts"	local:AM-PNC	"order to capture the new facts"
s9.4	"order to capture the new facts"	rdfs:member	"order"
s9.4	"order to capture the new facts"	rdfs:member	"new facts"
s9.4	"new facts"	rdfs:member	"new"
s9.4	"new facts"	rdfs:subClassOf	"facts"
s9.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema"
s9.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema"	rdf:subject	"application of the inference rules on some graph instance of the original schema"
s9.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"original schema"
s9.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"application"
s9.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"graph instance"
s9.3	"application of the inference rules on some graph instance of the original schema"	rdfs:member	"inference rules"
s9.3	"inference rules"	rdfs:member	"inference"
s9.3	"graph instance"	rdfs:member	"graph"
s9.3	"graph instance"	rdfs:subClassOf	"instance"
s9.3	"inference rules"	rdfs:subClassOf	"rules"
s9.3	"original schema"	rdfs:subClassOf	"schema"
s9.3	"original schema"	rdfs:member	"original"
s9.3	"application of inference rules"	rdfs:member	"application"
s9.3	"application of inference rules"	rdfs:member	"inference rules"
s9.3	"inference rules on graph instance"	rdfs:member	"inference rules"
s9.3	"inference rules on graph instance"	rdfs:member	"graph instance"
s9.3	"graph instance of original schema"	rdfs:member	"graph instance"
s9.3	"graph instance of original schema"	rdfs:member	"original schema"
s9.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema"	rdf:predicate	"violate"
s9.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema"	rdf:object	"constraints"
s9.3	"which constraints could violated by the application of the inference rules on some graph instance of the original schema"	local:AM-MOD	"could"
s9.2	"we detect which constraints could be violated"
s9.2	"we detect which constraints could be violated"	rdf:subject	"we"
s9.2	"we detect which constraints could be violated"	rdf:predicate	"detect"
s9.2	"we detect which constraints could be violated"	rdf:object	"constraints could be violated"
s9.2	"could violated"	rdfs:subClassOf	"violated"
s9.1	"given a set of datalog rules we present a method to detect which constraints could be violated"
s9.1	"given a set of datalog rules we present a method to detect which constraints could be violated"	rdf:subject	"we"
s9.1	"given a set of datalog rules we present a method to detect which constraints could be violated"	rdf:predicate	"present"
s9.1	"given a set of datalog rules we present a method to detect which constraints could be violated"	rdf:object	"method to detect which constraints could be violated"
s9.1	"method to detect which constraints could be violated"	rdfs:member	"constraints"
s9.1	"method to detect which constraints could be violated"	rdfs:member	"method"
s9.1	"could violated"	rdfs:subClassOf	"violated"
s9.1	"given a set of datalog rules we present a method to detect which constraints could be violated"	local:AM-ADV	"Given a set of datalog rules"
s9.1	"given a set of datalog rules"	rdfs:member	"set"
s9.1	"given a set of datalog rules"	rdfs:member	"datalog rules"
s9.1	"datalog rules"	rdfs:member	"datalog"
s9.1	"datalog rules"	rdfs:subClassOf	"rules"
s9.1	"set of datalog rules"	rdfs:member	"set"
s9.1	"set of datalog rules"	rdfs:member	"datalog rules"
s9	"given a set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"
s9	"given a set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdf:subject	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"constraints"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"application"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"method"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"set"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"graph instance"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"original schema"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"datalog rules"
s9	"set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdfs:member	"inference rules"
s9	"inference rules"	rdfs:subClassOf	"rules"
s9	"inference rules"	rdfs:member	"inference"
s9	"graph instance"	rdfs:member	"graph"
s9	"original schema"	rdfs:subClassOf	"schema"
s9	"graph instance"	rdfs:subClassOf	"instance"
s9	"datalog rules"	rdfs:member	"datalog"
s9	"datalog rules"	rdfs:subClassOf	"rules"
s9	"original schema"	rdfs:member	"original"
s9	"could violated"	rdfs:subClassOf	"violated"
s9	"set of datalog rules"	rdfs:member	"set"
s9	"set of datalog rules"	rdfs:member	"datalog rules"
s9	"could violated agent application"	rdfs:member	"could violated"
s9	"could violated agent application"	rdfs:member	"application"
s9	"application of inference rules"	rdfs:member	"application"
s9	"application of inference rules"	rdfs:member	"inference rules"
s9	"inference rules on graph instance"	rdfs:member	"inference rules"
s9	"inference rules on graph instance"	rdfs:member	"graph instance"
s9	"graph instance of original schema"	rdfs:member	"graph instance"
s9	"graph instance of original schema"	rdfs:member	"original schema"
s9	"given a set of datalog rules we present a method to detect which constraints could be violated by the application of the inference rules on some graph instance of the original schema"	rdf:predicate	"Given"
s8	"new facts that not match the original schema"
s8	"new facts that not match the original schema"	rdf:subject	"new facts"
s8	"new facts"	rdfs:member	"new"
s8	"new facts"	rdfs:subClassOf	"facts"
s8	"new facts that not match the original schema"	rdf:predicate	"not match"
s8	"new facts that not match the original schema"	rdf:object	"original schema"
s8	"original schema"	rdfs:member	"original"
s8	"original schema"	rdfs:subClassOf	"schema"
s7	"on the other hand inference rules can lead to the discovery of new facts"
s7	"on the other hand inference rules can lead to the discovery of new facts"	rdf:subject	"inference rules"
s7	"inference rules"	rdfs:member	"inference"
s7	"inference rules"	rdfs:subClassOf	"rules"
s7	"on the other hand inference rules can lead to the discovery of new facts"	rdf:predicate	"lead"
s7	"on the other hand inference rules can lead to the discovery of new facts"	rdf:object	"discovery of new facts"
s7	"discovery of new facts"	rdfs:member	"new facts"
s7	"discovery of new facts"	rdfs:member	"discovery"
s7	"new facts"	rdfs:member	"new"
s7	"new facts"	rdfs:subClassOf	"facts"
s7	"discovery of new facts"	rdfs:member	"discovery"
s7	"discovery of new facts"	rdfs:member	"new facts"
s7	"on the other hand inference rules can lead to the discovery of new facts"	local:AM-DIS	"hand"
s7	"on the other hand inference rules can lead to the discovery of new facts"	local:AM-MOD	"can"
s6.1	"define a schema for graph datasets"
s6.1	"define a schema for graph datasets"	rdf:subject	"schema for graph datasets"
s6.1	"schema for graph datasets"	rdfs:member	"schema"
s6.1	"schema for graph datasets"	rdfs:member	"graph datasets"
s6.1	"graph datasets"	rdfs:member	"graph"
s6.1	"graph datasets"	rdfs:subClassOf	"datasets"
s6.1	"schema for graph datasets"	rdfs:member	"schema"
s6.1	"schema for graph datasets"	rdfs:member	"graph datasets"
s6.1	"define a schema for graph datasets"	rdf:predicate	"define"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"	rdf:subject	"SHACL constraints"
s6	"shacl constraints"	rdfs:member	"shacl"
s6	"shacl constraints"	rdfs:subClassOf	"constraints"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"	rdf:predicate	"use"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"	rdf:object	"define a schema for graph datasets"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"	local:AM-DIS	"one hand"
s6	"one hand"	rdfs:subClassOf	"hand"
s6	"on the one hand shacl constraints can used to define a schema for graph datasets"	local:AM-MOD	"can"
s5	"inference rules expressed in datalog"
s5	"inference rules expressed in datalog"	rdf:subject	"inference rules"
s5	"inference rules"	rdfs:member	"inference"
s5	"inference rules"	rdfs:subClassOf	"rules"
s5	"inference rules expressed in datalog"	rdf:predicate	"express"
s5	"inference rules expressed in datalog"	local:AM-LOC	"datalog"
s4	"in this paper we study the interaction of a subset of shacl with inference rules"
s4	"in this paper we study the interaction of a subset of shacl with inference rules"	rdf:subject	"we"
s4	"in this paper we study the interaction of a subset of shacl with inference rules"	rdf:predicate	"study"
s4	"in this paper we study the interaction of a subset of shacl with inference rules"	rdf:object	"interaction of a subset of SHACL with inference rules"
s4	"interaction of a subset of shacl with inference rules"	rdfs:member	"interaction"
s4	"interaction of a subset of shacl with inference rules"	rdfs:member	"subset"
s4	"interaction of a subset of shacl with inference rules"	rdfs:member	"shacl"
s4	"interaction of a subset of shacl with inference rules"	rdfs:member	"inference rules"
s4	"inference rules"	rdfs:member	"inference"
s4	"inference rules"	rdfs:subClassOf	"rules"
s4	"interaction of subset"	rdfs:member	"interaction"
s4	"interaction of subset"	rdfs:member	"subset"
s4	"subset of shacl"	rdfs:member	"subset"
s4	"subset of shacl"	rdfs:member	"shacl"
s4	"interaction of subset with inference rules"	rdfs:member	"interaction of subset"
s4	"interaction of subset with inference rules"	rdfs:member	"inference rules"
s4	"in this paper we study the interaction of a subset of shacl with inference rules"	local:AM-LOC	"paper"
s1.1	"rdf define constraints"
s1.1	"rdf define constraints"	rdf:subject	"RDF"
s1.1	"rdf define constraints"	rdf:predicate	"define"
s1.1	"rdf define constraints"	rdf:object	"constraints"
s1	"rdf recently introduced as a w3c recommendation"
s1	"rdf recently introduced as a w3c recommendation"	rdf:subject	"RDF"
s1	"rdf recently introduced as a w3c recommendation"	rdf:predicate	"introduce"
s1	"rdf recently introduced as a w3c recommendation"	local:AM-MNR	"W3C recommendation"
s1	"w3c recommendation"	rdfs:member	"w3c"
s1	"w3c recommendation"	rdfs:subClassOf	"recommendation"
s1	"rdf recently introduced as a w3c recommendation"	local:AM-TMP	"recently"
s0	"constraints that can validated against rdf graphs"
s0	"constraints that can validated against rdf graphs"	rdf:subject	"constraints"
s0	"constraints that can validated against rdf graphs"	rdf:predicate	"validate"
s0	"constraints that can validated against rdf graphs"	local:AM-MNR	"RDF graphs"
s0	"rdf graphs"	rdfs:member	"rdf"
s0	"rdf graphs"	rdfs:subClassOf	"graphs"
s0	"constraints that can validated against rdf graphs"	local:AM-MOD	"can"
