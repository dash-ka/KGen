it is a strength of graphbased data formats like rdf that rdf that they are very flexible with representing data are very flexible with representing data
to avoid runtime errors program code might be setvalued
program code that processes highlyflexible data representations exhibits the difficulty that it must always include the most general case in which attributes
to avoid runtime errors program code might be possibly not available
the shapes constraint language has been devised to enforce constraints on otherwise random data structures
type checking using the shapes constraint language 
type checking using shacl 
we present we approach type checking for type checking code
type checking code that queries rdf data graphs validated by a the shapes constraint language shape graph
to this end we derive the shapes constraint language integrate calculus
to this end we derive the shapes constraint language integrate query shapes as types into a  lambda 
to this end we derive the shapes constraint language integrate data shapes as types into a  lambda 
to this end we derive the shapes constraint language shapes from queries
we provide the formal underpinnings
we provide a proof of type safety for shacl
code that will not encounter runtime errors  with usual exceptions as type checking can not prevent accessing empty lists 
a programmer can use we method in order to process rdf data with simplified type checked code