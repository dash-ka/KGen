s8.3	"published approach"
s8.3	"published approach"	rdf:subject	"approach"
s8.3	"published approach"	rdf:predicate	"publish"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"	rdf:subject	"web"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"	rdf:predicate	"produce"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"	rdf:object	"30b triple"
s8.2	"30b triple"	rdfs:subClassOf	"triple"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"	local:AM-MNR	"faster than any other publish approach"
s8.2	"publish approach"	rdfs:subClassOf	"approach"
s8.2	"other publish"	rdfs:subClassOf	"publish"
s8.2	"other publish approach"	rdfs:subClassOf	"approach"
s8.2	"publish approach"	rdfs:member	"publish"
s8.2	"other publish"	rdfs:member	"other"
s8.2	"other publish approach"	rdfs:member	"other publish"
s8.2	"other publish approach"	rdfs:subClassOf	"publish approach"
s8.2	"faster than other publish approach"	rdfs:member	"faster"
s8.2	"faster than other publish approach"	rdfs:member	"other publish approach"
s8.2	"us the web producing 30b triples in less than two hours faster than any other published approach"	local:AM-TMP	"le than two hour"
s8.2	"le than two hour"	rdfs:member	"hour"
s8.2	"le than two hour"	rdfs:member	"le"
s8.2	"two hour"	rdfs:subClassOf	"hour"
s8.2	"le than two hour"	rdfs:member	"le"
s8.2	"le than two hour"	rdfs:member	"two hour"
s8.1	"us compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"
s8.1	"us compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:subject	"u"
s8.1	"us compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:predicate	"compute"
s8.1	"us compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:object	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"web"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"le"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"rdfs closure"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"other publish approach"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"hour"
s8.1	"rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"triple"
s8.1	"publish approach"	rdfs:subClassOf	"approach"
s8.1	"rdfs closure"	rdfs:subClassOf	"closure"
s8.1	"other publish"	rdfs:subClassOf	"publish"
s8.1	"other publish approach"	rdfs:subClassOf	"approach"
s8.1	"publish approach"	rdfs:member	"publish"
s8.1	"other publish"	rdfs:member	"other"
s8.1	"other publish approach"	rdfs:member	"other publish"
s8.1	"rdfs closure"	rdfs:member	"rdfs"
s8.1	"other publish approach"	rdfs:subClassOf	"publish approach"
s8.1	"faster hour"	rdfs:subClassOf	"hour"
s8.1	"two faster hour"	rdfs:subClassOf	"faster hour"
s8.1	"30b triple"	rdfs:subClassOf	"triple"
s8.1	"triple produce"	rdfs:subClassOf	"produce"
s8.1	"rdfs closure of 865m"	rdfs:member	"rdfs closure"
s8.1	"rdfs closure of 865m"	rdfs:member	"865m"
s8.1	"triple from web"	rdfs:member	"triple"
s8.1	"triple from web"	rdfs:member	"web"
s8.1	"30b triple in le"	rdfs:member	"30b triple"
s8.1	"30b triple in le"	rdfs:member	"le"
s8.1	"30b triple in le than two faster hour"	rdfs:member	"30b triple in le"
s8.1	"30b triple in le than two faster hour"	rdfs:member	"two faster hour"
s8.1	"faster than other publish approach"	rdfs:member	"faster"
s8.1	"faster than other publish approach"	rdfs:member	"other publish approach"
s8	"we algorithm allows us to compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"
s8	"we algorithm allows us to compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:subject	"algorithm"
s8	"we algorithm allows us to compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:predicate	"allow"
s8	"we algorithm allows us to compute the rdfs closure of 865m triples from the web producing 30b triples in less than two hours faster than any other published approach"	rdf:object	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"web"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"le"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"u"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"rdfs closure"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"other publish approach"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"hour"
s8	"u to compute the rdfs closure of 865m triple from the web produce 30b triple in le than two hour faster than any other publish approach"	rdfs:member	"triple"
s8	"publish approach"	rdfs:subClassOf	"approach"
s8	"rdfs closure"	rdfs:subClassOf	"closure"
s8	"other publish"	rdfs:subClassOf	"publish"
s8	"other publish approach"	rdfs:subClassOf	"approach"
s8	"publish approach"	rdfs:member	"publish"
s8	"other publish"	rdfs:member	"other"
s8	"other publish approach"	rdfs:member	"other publish"
s8	"rdfs closure"	rdfs:member	"rdfs"
s8	"other publish approach"	rdfs:subClassOf	"publish approach"
s8	"faster hour"	rdfs:subClassOf	"hour"
s8	"two faster hour"	rdfs:subClassOf	"faster hour"
s8	"30b triple"	rdfs:subClassOf	"triple"
s8	"triple compute"	rdfs:subClassOf	"compute"
s8	"rdfs closure of 865m"	rdfs:member	"rdfs closure"
s8	"rdfs closure of 865m"	rdfs:member	"865m"
s8	"triple from web"	rdfs:member	"triple"
s8	"triple from web"	rdfs:member	"web"
s8	"30b triple in le"	rdfs:member	"30b triple"
s8	"30b triple in le"	rdfs:member	"le"
s8	"30b triple in le than two faster hour"	rdfs:member	"30b triple in le"
s8	"30b triple in le than two faster hour"	rdfs:member	"two faster hour"
s8	"faster than other publish approach"	rdfs:member	"faster"
s8	"faster than other publish approach"	rdfs:member	"other publish approach"
s6.1	"a naive implementation on top of mapreduce performs badly"
s6.1	"a naive implementation on top of mapreduce performs badly"	rdf:subject	"naive implementation on top of mapreduce"
s6.1	"naive implementation on top of mapreduce"	rdfs:member	"naive implementation"
s6.1	"naive implementation on top of mapreduce"	rdfs:member	"mapreduce"
s6.1	"naive implementation on top of mapreduce"	rdfs:member	"top"
s6.1	"naive implementation"	rdfs:member	"naive"
s6.1	"naive implementation"	rdfs:subClassOf	"implementation"
s6.1	"naive implementation on_top_of mapreduce"	rdfs:member	"naive implementation"
s6.1	"naive implementation on_top_of mapreduce"	rdfs:member	"mapreduce"
s6.1	"a naive implementation on top of mapreduce performs badly"	rdf:predicate	"perform"
s6.1	"a naive implementation on top of mapreduce performs badly"	local:AM-MNR	"badly"
s6	"we show that a naive implementation on top of mapreduce performs badly"
s6	"we show that a naive implementation on top of mapreduce performs badly"	rdf:subject	"we"
s6	"we show that a naive implementation on top of mapreduce performs badly"	rdf:predicate	"show"
s6	"we show that a naive implementation on top of mapreduce performs badly"	rdf:object	"naive implementation on top of mapreduce perform badly"
s6	"naive implementation on top of mapreduce perform badly"	rdfs:member	"naive implementation"
s6	"naive implementation on top of mapreduce perform badly"	rdfs:member	"top"
s6	"naive implementation on top of mapreduce perform badly"	rdfs:member	"mapreduce perform"
s6	"mapreduce perform"	rdfs:subClassOf	"perform"
s6	"naive implementation"	rdfs:member	"naive"
s6	"mapreduce perform"	rdfs:member	"mapreduce"
s6	"naive implementation"	rdfs:subClassOf	"implementation"
s6	"badly perform"	rdfs:subClassOf	"perform"
s6	"naive implementation on_top_of mapreduce"	rdfs:member	"naive implementation"
s6	"naive implementation on_top_of mapreduce"	rdfs:member	"mapreduce"
s5	"we show that a naive implementation on top of mapreduce is straightforward"
s5	"we show that a naive implementation on top of mapreduce is straightforward"	rdf:subject	"we"
s5	"we show that a naive implementation on top of mapreduce is straightforward"	rdf:predicate	"show"
s5	"we show that a naive implementation on top of mapreduce is straightforward"	rdf:object	"naive implementation on top of mapreduce be straightforward"
s5	"naive implementation on top of mapreduce be straightforward"	rdfs:member	"naive implementation"
s5	"naive implementation on top of mapreduce be straightforward"	rdfs:member	"mapreduce"
s5	"naive implementation on top of mapreduce be straightforward"	rdfs:member	"top"
s5	"naive implementation"	rdfs:member	"naive"
s5	"naive implementation"	rdfs:subClassOf	"implementation"
s5	"naive implementation on_top_of mapreduce"	rdfs:member	"naive implementation"
s5	"naive implementation on_top_of mapreduce"	rdfs:member	"mapreduce"
s4.1	"we present several nontrivial optimisations"
s4.1	"we present several nontrivial optimisations"	rdf:subject	"we"
s4.1	"we present several nontrivial optimisations"	rdf:predicate	"present"
s4.1	"we present several nontrivial optimisations"	rdf:object	"several nontrivial optimisation"
s4.1	"several nontrivial optimisation"	rdfs:subClassOf	"optimisation"
s4.1	"nontrivial optimisation"	rdfs:member	"nontrivial"
s4.1	"several nontrivial optimisation"	rdfs:member	"several nontrivial"
s4.1	"nontrivial optimisation"	rdfs:subClassOf	"optimisation"
s4.1	"several nontrivial"	rdfs:member	"several"
s4.1	"several nontrivial"	rdfs:subClassOf	"nontrivial"
s4.1	"several nontrivial optimisation"	rdfs:subClassOf	"nontrivial optimisation"
s4	"we show that we present several nontrivial optimisations"
s4	"we show that we present several nontrivial optimisations"	rdf:subject	"we"
s4	"we show that we present several nontrivial optimisations"	rdf:predicate	"show"
s4	"we show that we present several nontrivial optimisations"	rdf:object	"present several nontrivial optimisation"
s4	"several nontrivial optimisation"	rdfs:subClassOf	"optimisation"
s4	"nontrivial optimisation"	rdfs:member	"nontrivial"
s4	"several nontrivial optimisation"	rdfs:member	"several nontrivial"
s4	"present several nontrivial optimisation"	rdfs:subClassOf	"optimisation"
s4	"nontrivial optimisation"	rdfs:subClassOf	"optimisation"
s4	"present several nontrivial"	rdfs:member	"present several"
s4	"several nontrivial"	rdfs:member	"several"
s4	"present several"	rdfs:subClassOf	"several"
s4	"present several"	rdfs:member	"present"
s4	"present several nontrivial optimisation"	rdfs:member	"present several nontrivial"
s4	"several nontrivial"	rdfs:subClassOf	"nontrivial"
s4	"present several nontrivial"	rdfs:subClassOf	"nontrivial"
s4	"several nontrivial optimisation"	rdfs:subClassOf	"nontrivial optimisation"
s4	"present several nontrivial optimisation"	rdfs:subClassOf	"several nontrivial optimisation"
s3	"we deployed hadoop on a compute cluster of up to 64 commodity machines"
s3	"we deployed hadoop on a compute cluster of up to 64 commodity machines"	rdf:subject	"we"
s3	"we deployed hadoop on a compute cluster of up to 64 commodity machines"	rdf:predicate	"deploy"
s3	"we deployed hadoop on a compute cluster of up to 64 commodity machines"	rdf:object	"hadoop compute cluster of up to 64 commodity machine"
s3	"hadoop compute cluster of up to 64 commodity machine"	rdfs:member	"commodity machine"
s3	"hadoop compute cluster of up to 64 commodity machine"	rdfs:member	"hadoop compute cluster"
s3	"hadoop compute cluster"	rdfs:member	"hadoop compute"
s3	"hadoop compute cluster"	rdfs:subClassOf	"cluster"
s3	"hadoop compute"	rdfs:subClassOf	"compute"
s3	"compute cluster"	rdfs:subClassOf	"cluster"
s3	"hadoop compute"	rdfs:member	"hadoop"
s3	"compute cluster"	rdfs:member	"compute"
s3	"commodity machine"	rdfs:member	"commodity"
s3	"commodity machine"	rdfs:subClassOf	"machine"
s3	"64 commodity machine"	rdfs:subClassOf	"commodity machine"
s3	"cluster of 64 commodity machine"	rdfs:member	"cluster"
s3	"cluster of 64 commodity machine"	rdfs:member	"64 commodity machine"
s2.1	"we approach on top of hadoop"
s2.1	"we approach on top of hadoop"	rdf:subject	"we"
s2.1	"we approach on top of hadoop"	rdf:predicate	"approach"
s2.1	"we approach on top of hadoop"	rdf:object	"top of hadoop"
s2.1	"top of hadoop"	rdfs:member	"top"
s2.1	"top of hadoop"	rdfs:member	"hadoop"
s2.1	"top of hadoop"	rdfs:member	"top"
s2.1	"top of hadoop"	rdfs:member	"hadoop"
s2	"we implemented we approach on top of hadoop"
s2	"we implemented we approach on top of hadoop"	rdf:subject	"we"
s2	"we implemented we approach on top of hadoop"	rdf:predicate	"implement"
s2	"we implemented we approach on top of hadoop"	rdf:object	"approach on top of hadoop"
s2	"approach on top of hadoop"	rdfs:member	"top"
s2	"approach on top of hadoop"	rdfs:member	"hadoop"
s2	"approach on top of hadoop"	rdfs:member	"approach"
s2	"approach on_top_of hadoop"	rdfs:member	"approach"
s2	"approach on_top_of hadoop"	rdfs:member	"hadoop"
s1.1	"scalable distributed reasoning"
s1.1	"scalable distributed reasoning"	rdf:subject	"reason"
s1.1	"scalable distributed reasoning"	rdf:predicate	"distribute"
s1.1	"scalable distributed reasoning"	local:AM-MNR	"scalable"
s1	"we address the problem of scalable distributed reasoning"
s1	"we address the problem of scalable distributed reasoning"	rdf:subject	"we"
s1	"we address the problem of scalable distributed reasoning"	rdf:predicate	"address"
s1	"we address the problem of scalable distributed reasoning"	rdf:object	"problem of scalable distribute reason"
s1	"problem of scalable distribute reason"	rdfs:member	"problem"
s1	"problem of scalable distribute reason"	rdfs:member	"scalable distribute reason"
s1	"scalable distribute"	rdfs:subClassOf	"distribute"
s1	"scalable distribute"	rdfs:member	"scalable"
s1	"scalable distribute reason"	rdfs:member	"scalable distribute"
s1	"scalable distribute reason"	rdfs:subClassOf	"reason"
s1	"distribute reason"	rdfs:member	"distribute"
s1	"distribute reason"	rdfs:subClassOf	"reason"
s1	"scalable distribute reason"	rdfs:subClassOf	"distribute reason"
s1	"problem of scalable distribute reason"	rdfs:member	"problem"
s1	"problem of scalable distribute reason"	rdfs:member	"scalable distribute reason"
s0.3	"based on mapreduce"
s0.3	"based on mapreduce"	rdf:predicate	"base"
s0.3	"based on mapreduce"	local:AM-LOC	"mapreduce"
s0.2	"materialising the closure of an rdf graph based on mapreduce"
s0.2	"materialising the closure of an rdf graph based on mapreduce"	rdf:subject	"closure of an rdf graph base on mapreduce"
s0.2	"closure of an rdf graph base on mapreduce"	rdfs:member	"mapreduce"
s0.2	"closure of an rdf graph base on mapreduce"	rdfs:member	"closure"
s0.2	"closure of an rdf graph base on mapreduce"	rdfs:member	"rdf graph base"
s0.2	"rdf graph base"	rdfs:subClassOf	"base"
s0.2	"graph base"	rdfs:member	"graph"
s0.2	"rdf graph"	rdfs:subClassOf	"graph"
s0.2	"rdf graph base"	rdfs:member	"rdf graph"
s0.2	"graph base"	rdfs:subClassOf	"base"
s0.2	"rdf graph"	rdfs:member	"rdf"
s0.2	"rdf graph base"	rdfs:subClassOf	"graph base"
s0.2	"closure of rdf graph base"	rdfs:member	"closure"
s0.2	"closure of rdf graph base"	rdfs:member	"rdf graph base"
s0.2	"rdf graph base on mapreduce"	rdfs:member	"rdf graph base"
s0.2	"rdf graph base on mapreduce"	rdfs:member	"mapreduce"
s0.2	"materialising the closure of an rdf graph based on mapreduce"	rdf:predicate	"materialise"
s0.1	"scalable distributed reasoning proposing a technique for materialising the closure of an rdf graph based on mapreduce"
s0.1	"scalable distributed reasoning proposing a technique for materialising the closure of an rdf graph based on mapreduce"	rdf:subject	"scalable distribute reason"
s0.1	"scalable distribute"	rdfs:subClassOf	"distribute"
s0.1	"scalable distribute"	rdfs:member	"scalable"
s0.1	"scalable distribute reason"	rdfs:member	"scalable distribute"
s0.1	"scalable distribute reason"	rdfs:subClassOf	"reason"
s0.1	"distribute reason"	rdfs:member	"distribute"
s0.1	"distribute reason"	rdfs:subClassOf	"reason"
s0.1	"scalable distributed reasoning proposing a technique for materialising the closure of an rdf graph based on mapreduce"	rdf:predicate	"propose"
s0.1	"scalable distributed reasoning proposing a technique for materialising the closure of an rdf graph based on mapreduce"	rdf:object	"technique for materialise the closure of an rdf graph base on mapreduce"
s0.1	"technique for materialise the closure of an rdf graph base on mapreduce"	rdfs:member	"technique"
s0.1	"technique for materialise the closure of an rdf graph base on mapreduce"	rdfs:member	"closure"
s0.1	"technique for materialise the closure of an rdf graph base on mapreduce"	rdfs:member	"mapreduce"
s0.1	"technique for materialise the closure of an rdf graph base on mapreduce"	rdfs:member	"materialise"
s0.1	"technique for materialise the closure of an rdf graph base on mapreduce"	rdfs:member	"rdf graph base"
s0.1	"rdf graph base"	rdfs:subClassOf	"base"
s0.1	"graph base"	rdfs:member	"graph"
s0.1	"rdf graph"	rdfs:subClassOf	"graph"
s0.1	"rdf graph base"	rdfs:member	"rdf graph"
s0.1	"graph base"	rdfs:subClassOf	"base"
s0.1	"rdf graph"	rdfs:member	"rdf"
s0.1	"rdf graph base"	rdfs:subClassOf	"graph base"
s0.1	"closure of rdf graph base"	rdfs:member	"closure"
s0.1	"closure of rdf graph base"	rdfs:member	"rdf graph base"
s0.1	"rdf graph base on mapreduce"	rdfs:member	"rdf graph base"
s0.1	"rdf graph base on mapreduce"	rdfs:member	"mapreduce"
s0	"distributed reasoning"
s0	"distributed reasoning"	rdf:subject	"reason"
s0	"distributed reasoning"	rdf:predicate	"distribute"
