this paper describes how to generate compositions of semantic web services using social trust information from user ratings of the services
we present a taxonomy of features such as availability
we present a taxonomy of features such as privacy
we present a taxonomy of features such as interoperability
we present a taxonomy of features such as security
we present a taxonomy of features such as others
we describe a way to compute social trust in owls style semantic web services
we formalism exploits the users ratings of execution characteristics of owls style semantic web services
we formalism exploits the users ratings of the services of owls style semantic web services
servicecomposition algorithm called trusty
we describe we servicecomposition algorithm that is based on our formalism
we discuss the formal properties of we implementation of our servicecomposition algorithm called trusty that is based on this formalism
we discuss the formal properties of trusty implementation of our servicecomposition algorithm called trusty that is based on this formalism
we present we experiments
experiments in which we compared trusty with a wellknown ai planning algorithm
experiments in which we compared trusty with shop2
a wellknown ai planning algorithm that has been successfully used for owls style service composition
we results demonstrate that trusty generates more trustworthy compositions than shop2