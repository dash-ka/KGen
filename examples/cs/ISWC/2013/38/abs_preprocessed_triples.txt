s10	"the mapping methods detailed for the stateoftheart relational data integration"
s10	"the mapping methods detailed for the stateoftheart relational data integration"	rdf:subject	"map method"
s10	"map method"	rdfs:subClassOf	"method"
s10	"map method"	rdfs:member	"map"
s10	"the mapping methods detailed for the stateoftheart relational data integration"	rdf:predicate	"detail"
s10	"the mapping methods detailed for the stateoftheart relational data integration"	local:AM-PNC	"stateoftheart relational data integration"
s10	"stateoftheart relational data"	rdfs:member	"stateoftheart relational"
s10	"relational data"	rdfs:subClassOf	"data"
s10	"stateoftheart relational"	rdfs:member	"stateoftheart"
s10	"stateoftheart relational data"	rdfs:subClassOf	"data"
s10	"stateoftheart relational data integration"	rdfs:subClassOf	"integration"
s10	"data integration"	rdfs:subClassOf	"integration"
s10	"relational data integration"	rdfs:subClassOf	"integration"
s10	"stateoftheart relational"	rdfs:subClassOf	"relational"
s10	"stateoftheart relational data integration"	rdfs:member	"stateoftheart relational data"
s10	"relational data"	rdfs:member	"relational"
s10	"data integration"	rdfs:member	"data"
s10	"relational data integration"	rdfs:member	"relational data"
s10	"relational data integration"	rdfs:subClassOf	"data integration"
s10	"stateoftheart relational data integration"	rdfs:subClassOf	"relational data integration"
s9	"the mapping methods detailed for clio"
s9	"the mapping methods detailed for clio"	rdf:subject	"map method"
s9	"map method"	rdfs:subClassOf	"method"
s9	"map method"	rdfs:member	"map"
s9	"the mapping methods detailed for clio"	rdf:predicate	"detail"
s9	"the mapping methods detailed for clio"	local:AM-PNC	"clio"
s8	"the mapping methods detailed for data exchange system"
s8	"the mapping methods detailed for data exchange system"	rdf:subject	"map method"
s8	"map method"	rdfs:subClassOf	"method"
s8	"map method"	rdfs:member	"map"
s8	"the mapping methods detailed for data exchange system"	rdf:predicate	"detail"
s8	"the mapping methods detailed for data exchange system"	rdf:object	"data exchange system"
s8	"data exchange"	rdfs:member	"data"
s8	"data exchange system"	rdfs:subClassOf	"system"
s8	"data exchange system"	rdfs:member	"data exchange"
s8	"data exchange"	rdfs:subClassOf	"exchange"
s8	"exchange system"	rdfs:subClassOf	"system"
s8	"exchange system"	rdfs:member	"exchange"
s8	"data exchange system"	rdfs:subClassOf	"exchange system"
s7.1	"using test sets from three real world applications qodi achieves favorable results compared with agreementmaker"
s7.1	"using test sets from three real world applications qodi achieves favorable results compared with agreementmaker"	rdf:subject	"qodi"
s7.1	"using test sets from three real world applications qodi achieves favorable results compared with agreementmaker"	rdf:predicate	"achieve"
s7.1	"using test sets from three real world applications qodi achieves favorable results compared with agreementmaker"	rdf:object	"favorable result compare with agreementmaker"
s7.1	"favorable result compare with agreementmaker"	rdfs:member	"agreementmaker"
s7.1	"favorable result compare with agreementmaker"	rdfs:member	"favorable result compare"
s7.1	"result compare"	rdfs:subClassOf	"compare"
s7.1	"favorable result compare"	rdfs:member	"favorable result"
s7.1	"favorable result"	rdfs:subClassOf	"result"
s7.1	"favorable result compare"	rdfs:subClassOf	"compare"
s7.1	"favorable result"	rdfs:member	"favorable"
s7.1	"result compare"	rdfs:member	"result"
s7.1	"compare with agreementmaker"	rdfs:member	"compare"
s7.1	"compare with agreementmaker"	rdfs:member	"agreementmaker"
s7.1	"using test sets from three real world applications qodi achieves favorable results compared with agreementmaker"	local:AM-ADV	"use test set from three real world application"
s7.1	"use test set from three real world application"	rdfs:member	"real world application"
s7.1	"use test set from three real world application"	rdfs:member	"use test set"
s7.1	"real world application"	rdfs:member	"real world"
s7.1	"world application"	rdfs:subClassOf	"application"
s7.1	"use test set"	rdfs:subClassOf	"set"
s7.1	"real world"	rdfs:member	"real"
s7.1	"use test set"	rdfs:member	"use test"
s7.1	"world application"	rdfs:member	"world"
s7.1	"real world"	rdfs:subClassOf	"world"
s7.1	"use test"	rdfs:member	"use"
s7.1	"test set"	rdfs:subClassOf	"set"
s7.1	"use test"	rdfs:subClassOf	"test"
s7.1	"real world application"	rdfs:subClassOf	"application"
s7.1	"test set"	rdfs:member	"test"
s7.1	"real world application"	rdfs:subClassOf	"world application"
s7.1	"three real world application"	rdfs:subClassOf	"real world application"
s7.1	"test set"	rdfs:member	"test"
s7.1	"test set"	rdfs:member	"set"
s7.1	"set from three real world application"	rdfs:member	"set"
s7.1	"set from three real world application"	rdfs:member	"three real world application"
s7	"using test sets from three real world applications qodi"
s7	"using test sets from three real world applications qodi"	rdf:subject	"qodi"
s7	"using test sets from three real world applications qodi"	rdf:predicate	"use"
s7	"using test sets from three real world applications qodi"	rdf:object	"test set three real world application"
s7	"test set three real world application"	rdfs:member	"real world application"
s7	"test set three real world application"	rdfs:member	"test"
s7	"real world application"	rdfs:member	"real world"
s7	"world application"	rdfs:subClassOf	"application"
s7	"real world"	rdfs:member	"real"
s7	"world application"	rdfs:member	"world"
s7	"real world"	rdfs:subClassOf	"world"
s7	"real world application"	rdfs:subClassOf	"application"
s7	"real world application"	rdfs:subClassOf	"world application"
s7	"three real world application"	rdfs:subClassOf	"real world application"
s6.1	"using test sets from three real world applications qodi achieves favorable results compared with an ontologybased implementation of the mapping methods"
s6.1	"using test sets from three real world applications qodi achieves favorable results compared with an ontologybased implementation of the mapping methods"	rdf:subject	"qodi"
s6.1	"using test sets from three real world applications qodi achieves favorable results compared with an ontologybased implementation of the mapping methods"	rdf:predicate	"achieve"
s6.1	"using test sets from three real world applications qodi achieves favorable results compared with an ontologybased implementation of the mapping methods"	rdf:object	"favorable result compare with an ontologybased implementation of the map method"
s6.1	"favorable result compare with an ontologybased implementation of the map method"	rdfs:member	"ontologybased implementation"
s6.1	"favorable result compare with an ontologybased implementation of the map method"	rdfs:member	"map method"
s6.1	"favorable result compare with an ontologybased implementation of the map method"	rdfs:member	"favorable result compare"
s6.1	"result compare"	rdfs:subClassOf	"compare"
s6.1	"favorable result compare"	rdfs:member	"favorable result"
s6.1	"favorable result"	rdfs:subClassOf	"result"
s6.1	"favorable result compare"	rdfs:subClassOf	"compare"
s6.1	"favorable result"	rdfs:member	"favorable"
s6.1	"result compare"	rdfs:member	"result"
s6.1	"map method"	rdfs:subClassOf	"method"
s6.1	"ontologybased implementation"	rdfs:subClassOf	"implementation"
s6.1	"ontologybased implementation"	rdfs:member	"ontologybased"
s6.1	"map method"	rdfs:member	"map"
s6.1	"compare with ontologybased implementation"	rdfs:member	"compare"
s6.1	"compare with ontologybased implementation"	rdfs:member	"ontologybased implementation"
s6.1	"ontologybased implementation of map method"	rdfs:member	"ontologybased implementation"
s6.1	"ontologybased implementation of map method"	rdfs:member	"map method"
s6.1	"using test sets from three real world applications qodi achieves favorable results compared with an ontologybased implementation of the mapping methods"	local:AM-ADV	"use test set from three real world application"
s6.1	"use test set from three real world application"	rdfs:member	"real world application"
s6.1	"use test set from three real world application"	rdfs:member	"use test set"
s6.1	"real world application"	rdfs:member	"real world"
s6.1	"world application"	rdfs:subClassOf	"application"
s6.1	"use test set"	rdfs:subClassOf	"set"
s6.1	"real world"	rdfs:member	"real"
s6.1	"use test set"	rdfs:member	"use test"
s6.1	"world application"	rdfs:member	"world"
s6.1	"real world"	rdfs:subClassOf	"world"
s6.1	"use test"	rdfs:member	"use"
s6.1	"test set"	rdfs:subClassOf	"set"
s6.1	"use test"	rdfs:subClassOf	"test"
s6.1	"real world application"	rdfs:subClassOf	"application"
s6.1	"test set"	rdfs:member	"test"
s6.1	"real world application"	rdfs:subClassOf	"world application"
s6.1	"three real world application"	rdfs:subClassOf	"real world application"
s6.1	"test set"	rdfs:member	"test"
s6.1	"test set"	rdfs:member	"set"
s6.1	"set from three real world application"	rdfs:member	"set"
s6.1	"set from three real world application"	rdfs:member	"three real world application"
s6	"using test sets from three real world applications qodi with an ontologybased implementation of the mapping methods"
s6	"using test sets from three real world applications qodi with an ontologybased implementation of the mapping methods"	rdf:subject	"ontologybased implementation of the map method"
s6	"ontologybased implementation of the map method"	rdfs:member	"ontologybased implementation"
s6	"ontologybased implementation of the map method"	rdfs:member	"map method"
s6	"map method"	rdfs:subClassOf	"method"
s6	"ontologybased implementation"	rdfs:subClassOf	"implementation"
s6	"ontologybased implementation"	rdfs:member	"ontologybased"
s6	"map method"	rdfs:member	"map"
s6	"ontologybased implementation of map method"	rdfs:member	"ontologybased implementation"
s6	"ontologybased implementation of map method"	rdfs:member	"map method"
s6	"using test sets from three real world applications qodi with an ontologybased implementation of the mapping methods"	rdf:predicate	"use"
s6	"using test sets from three real world applications qodi with an ontologybased implementation of the mapping methods"	rdf:object	"test set three real world application"
s6	"test set three real world application"	rdfs:member	"real world application"
s6	"test set three real world application"	rdfs:member	"test"
s6	"real world application"	rdfs:member	"real world"
s6	"world application"	rdfs:subClassOf	"application"
s6	"real world"	rdfs:member	"real"
s6	"world application"	rdfs:member	"world"
s6	"real world"	rdfs:subClassOf	"world"
s6	"real world application"	rdfs:subClassOf	"application"
s6	"real world application"	rdfs:subClassOf	"world application"
s6	"three real world application"	rdfs:subClassOf	"real world application"
s5.2	"leading ontology"
s5.2	"leading ontology"	rdf:subject	"ontology"
s5.2	"leading ontology"	rdf:predicate	"lead"
s5.1	"using test sets from three real world applications qodi achieves favorable results compared with a leading ontology matcher"
s5.1	"using test sets from three real world applications qodi achieves favorable results compared with a leading ontology matcher"	rdf:subject	"qodi"
s5.1	"using test sets from three real world applications qodi achieves favorable results compared with a leading ontology matcher"	rdf:predicate	"achieve"
s5.1	"using test sets from three real world applications qodi achieves favorable results compared with a leading ontology matcher"	rdf:object	"favorable result compare with a lead ontology matcher"
s5.1	"favorable result compare with a lead ontology matcher"	rdfs:member	"lead ontology matcher"
s5.1	"favorable result compare with a lead ontology matcher"	rdfs:member	"favorable result compare"
s5.1	"result compare"	rdfs:subClassOf	"compare"
s5.1	"favorable result compare"	rdfs:member	"favorable result"
s5.1	"favorable result"	rdfs:subClassOf	"result"
s5.1	"favorable result compare"	rdfs:subClassOf	"compare"
s5.1	"ontology matcher"	rdfs:member	"ontology"
s5.1	"lead ontology matcher"	rdfs:subClassOf	"matcher"
s5.1	"ontology matcher"	rdfs:subClassOf	"matcher"
s5.1	"favorable result"	rdfs:member	"favorable"
s5.1	"result compare"	rdfs:member	"result"
s5.1	"lead ontology matcher"	rdfs:member	"lead ontology"
s5.1	"lead ontology"	rdfs:subClassOf	"ontology"
s5.1	"lead ontology"	rdfs:member	"lead"
s5.1	"lead ontology matcher"	rdfs:subClassOf	"ontology matcher"
s5.1	"compare with lead ontology matcher"	rdfs:member	"compare"
s5.1	"compare with lead ontology matcher"	rdfs:member	"lead ontology matcher"
s5.1	"using test sets from three real world applications qodi achieves favorable results compared with a leading ontology matcher"	local:AM-ADV	"use test set from three real world application"
s5.1	"use test set from three real world application"	rdfs:member	"real world application"
s5.1	"use test set from three real world application"	rdfs:member	"use test set"
s5.1	"real world application"	rdfs:member	"real world"
s5.1	"world application"	rdfs:subClassOf	"application"
s5.1	"use test set"	rdfs:subClassOf	"set"
s5.1	"real world"	rdfs:member	"real"
s5.1	"use test set"	rdfs:member	"use test"
s5.1	"world application"	rdfs:member	"world"
s5.1	"real world"	rdfs:subClassOf	"world"
s5.1	"use test"	rdfs:member	"use"
s5.1	"test set"	rdfs:subClassOf	"set"
s5.1	"use test"	rdfs:subClassOf	"test"
s5.1	"real world application"	rdfs:subClassOf	"application"
s5.1	"test set"	rdfs:member	"test"
s5.1	"real world application"	rdfs:subClassOf	"world application"
s5.1	"three real world application"	rdfs:subClassOf	"real world application"
s5.1	"test set"	rdfs:member	"test"
s5.1	"test set"	rdfs:member	"set"
s5.1	"set from three real world application"	rdfs:member	"set"
s5.1	"set from three real world application"	rdfs:member	"three real world application"
s5	"using test sets from three real world applications qodi with a leading ontology matcher"
s5	"using test sets from three real world applications qodi with a leading ontology matcher"	rdf:subject	"lead ontology matcher"
s5	"ontology matcher"	rdfs:member	"ontology"
s5	"lead ontology matcher"	rdfs:subClassOf	"matcher"
s5	"ontology matcher"	rdfs:subClassOf	"matcher"
s5	"lead ontology matcher"	rdfs:member	"lead ontology"
s5	"lead ontology"	rdfs:subClassOf	"ontology"
s5	"lead ontology"	rdfs:member	"lead"
s5	"lead ontology matcher"	rdfs:subClassOf	"ontology matcher"
s5	"using test sets from three real world applications qodi with a leading ontology matcher"	rdf:predicate	"use"
s5	"using test sets from three real world applications qodi with a leading ontology matcher"	rdf:object	"test set three real world application"
s5	"test set three real world application"	rdfs:member	"real world application"
s5	"test set three real world application"	rdfs:member	"test"
s5	"real world application"	rdfs:member	"real world"
s5	"world application"	rdfs:subClassOf	"application"
s5	"real world"	rdfs:member	"real"
s5	"world application"	rdfs:member	"world"
s5	"real world"	rdfs:subClassOf	"world"
s5	"real world application"	rdfs:subClassOf	"application"
s5	"real world application"	rdfs:subClassOf	"world application"
s5	"three real world application"	rdfs:subClassOf	"real world application"
s4	"the ontology mapping algorithm decomposes each query into a set of paths"
s4	"the ontology mapping algorithm decomposes each query into a set of paths"	rdf:subject	"ontology map algorithm"
s4	"ontology map"	rdfs:member	"ontology"
s4	"ontology map"	rdfs:subClassOf	"map"
s4	"map algorithm"	rdfs:subClassOf	"algorithm"
s4	"ontology map algorithm"	rdfs:subClassOf	"map algorithm"
s4	"the ontology mapping algorithm decomposes each query into a set of paths"	rdf:predicate	"decompose"
s4	"the ontology mapping algorithm decomposes each query into a set of paths"	rdf:object	"query set of path"
s4	"query set of path"	rdfs:member	"query set"
s4	"query set of path"	rdfs:member	"path"
s4	"query set"	rdfs:subClassOf	"set"
s4	"query set"	rdfs:member	"query"
s4	"query set of path"	rdfs:member	"query set"
s4	"query set of path"	rdfs:member	"path"
s3	"the ontology mapping algorithm compares the set of paths with a similar decomposition of a source ontology"
s3	"the ontology mapping algorithm compares the set of paths with a similar decomposition of a source ontology"	rdf:subject	"ontology map algorithm"
s3	"ontology map"	rdfs:member	"ontology"
s3	"ontology map"	rdfs:subClassOf	"map"
s3	"map algorithm"	rdfs:subClassOf	"algorithm"
s3	"ontology map algorithm"	rdfs:subClassOf	"map algorithm"
s3	"the ontology mapping algorithm compares the set of paths with a similar decomposition of a source ontology"	rdf:predicate	"compare"
s3	"the ontology mapping algorithm compares the set of paths with a similar decomposition of a source ontology"	rdf:object	"set of path with a similar decomposition of a source ontology"
s3	"set of path with a similar decomposition of a source ontology"	rdfs:member	"similar decomposition"
s3	"set of path with a similar decomposition of a source ontology"	rdfs:member	"source ontology"
s3	"set of path with a similar decomposition of a source ontology"	rdfs:member	"set"
s3	"set of path with a similar decomposition of a source ontology"	rdfs:member	"path"
s3	"similar decomposition"	rdfs:subClassOf	"decomposition"
s3	"source ontology"	rdfs:subClassOf	"ontology"
s3	"similar decomposition"	rdfs:member	"similar"
s3	"source ontology"	rdfs:member	"source"
s3	"set of path"	rdfs:member	"set"
s3	"set of path"	rdfs:member	"path"
s3	"set of path with similar decomposition"	rdfs:member	"set of path"
s3	"set of path with similar decomposition"	rdfs:member	"similar decomposition"
s3	"similar decomposition of source ontology"	rdfs:member	"similar decomposition"
s3	"similar decomposition of source ontology"	rdfs:member	"source ontology"
s2.1	"the system disambiguate mappings for different queries"
s2.1	"the system disambiguate mappings for different queries"	rdf:subject	"system"
s2.1	"the system disambiguate mappings for different queries"	rdf:predicate	"disambiguate"
s2.1	"the system disambiguate mappings for different queries"	rdf:object	"mapping for different query"
s2.1	"different query"	rdfs:subClassOf	"query"
s2.1	"different query"	rdfs:member	"different"
s2.1	"mapping for different query"	rdfs:member	"mapping"
s2.1	"mapping for different query"	rdfs:member	"different query"
s2	"each query provides application context not available in the ontologies alone thereby the system is able to disambiguate mappings for different queries"
s2	"each query provides application context not available in the ontologies alone thereby the system is able to disambiguate mappings for different queries"	rdf:subject	"query"
s2	"each query provides application context not available in the ontologies alone thereby the system is able to disambiguate mappings for different queries"	rdf:predicate	"provide"
s2	"each query provides application context not available in the ontologies alone thereby the system is able to disambiguate mappings for different queries"	rdf:object	"application context not available in the ontology alone"
s2	"application context not available in the ontology alone"	rdfs:member	"ontology"
s2	"application context not available in the ontology alone"	rdfs:member	"application context"
s2	"application context"	rdfs:subClassOf	"context"
s2	"application context"	rdfs:member	"application"
s2	"alone ontology"	rdfs:subClassOf	"ontology"
s2	"available context"	rdfs:subClassOf	"context"
s2	"not available"	rdfs:subClassOf	"available"
s2	"application available context"	rdfs:subClassOf	"available context"
s2	"not available in alone ontology"	rdfs:member	"not available"
s2	"not available in alone ontology"	rdfs:member	"alone ontology"
s2	"each query provides application context not available in the ontologies alone thereby the system is able to disambiguate mappings for different queries"	local:AM-ADV	"thereby the system be able to disambiguate mapping for different query"
s2	"thereby the system be able to disambiguate mapping for different query"	rdfs:member	"different query"
s2	"thereby the system be able to disambiguate mapping for different query"	rdfs:member	"mapping"
s2	"thereby the system be able to disambiguate mapping for different query"	rdfs:member	"system"
s2	"different query"	rdfs:subClassOf	"query"
s2	"different query"	rdfs:member	"different"
s2	"thereby able"	rdfs:subClassOf	"able"
s2	"mapping for different query"	rdfs:member	"mapping"
s2	"mapping for different query"	rdfs:member	"different query"
s1.1	"the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"
s1.1	"the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:subject	"ontology map algorithm"
s1.1	"ontology map"	rdfs:member	"ontology"
s1.1	"ontology map"	rdfs:subClassOf	"map"
s1.1	"map algorithm"	rdfs:subClassOf	"algorithm"
s1.1	"ontology map algorithm"	rdfs:subClassOf	"map algorithm"
s1.1	"the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:predicate	"determine"
s1.1	"the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:object	"partial map specific to the reformulation of each query"
s1.1	"partial map specific to the reformulation of each query"	rdfs:member	"partial map specific"
s1.1	"partial map specific to the reformulation of each query"	rdfs:member	"reformulation"
s1.1	"partial map specific to the reformulation of each query"	rdfs:member	"query"
s1.1	"map specific"	rdfs:member	"map"
s1.1	"partial map specific"	rdfs:subClassOf	"specific"
s1.1	"partial map"	rdfs:subClassOf	"map"
s1.1	"partial map"	rdfs:member	"partial"
s1.1	"map specific"	rdfs:subClassOf	"specific"
s1.1	"partial map specific"	rdfs:member	"partial map"
s1.1	"specific map"	rdfs:subClassOf	"map"
s1.1	"partial specific map"	rdfs:subClassOf	"specific map"
s1.1	"specific to reformulation"	rdfs:member	"specific"
s1.1	"specific to reformulation"	rdfs:member	"reformulation"
s1.1	"reformulation of query"	rdfs:member	"reformulation"
s1.1	"reformulation of query"	rdfs:member	"query"
s1.1	"the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	local:AM-MNR	"dynamically"
s1	"qodi distinguished in that the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"
s1	"qodi distinguished in that the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:subject	"qodi"
s1	"qodi distinguished in that the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:predicate	"distinguish"
s1	"qodi distinguished in that the ontology mapping algorithm dynamically determines a partial mapping specific to the reformulation of each query"	rdf:object	"ontology map algorithm dynamically determine a partial map specific to the reformulation of each query"
s1	"ontology map algorithm dynamically determine a partial map specific to the reformulation of each query"	rdfs:member	"partial map specific"
s1	"ontology map algorithm dynamically determine a partial map specific to the reformulation of each query"	rdfs:member	"ontology map"
s1	"ontology map algorithm dynamically determine a partial map specific to the reformulation of each query"	rdfs:member	"reformulation"
s1	"ontology map algorithm dynamically determine a partial map specific to the reformulation of each query"	rdfs:member	"query"
s1	"map specific"	rdfs:member	"map"
s1	"partial map specific"	rdfs:subClassOf	"specific"
s1	"partial map"	rdfs:subClassOf	"map"
s1	"ontology map"	rdfs:member	"ontology"
s1	"ontology map"	rdfs:subClassOf	"map"
s1	"partial map"	rdfs:member	"partial"
s1	"map specific"	rdfs:subClassOf	"specific"
s1	"partial map specific"	rdfs:member	"partial map"
s1	"specific map"	rdfs:subClassOf	"map"
s1	"partial specific map"	rdfs:subClassOf	"specific map"
s1	"dynamically determine"	rdfs:subClassOf	"determine"
s1	"map algorithm"	rdfs:subClassOf	"algorithm"
s1	"ontology map algorithm"	rdfs:subClassOf	"map algorithm"
s1	"specific to reformulation"	rdfs:member	"specific"
s1	"specific to reformulation"	rdfs:member	"reformulation"
s1	"reformulation of query"	rdfs:member	"reformulation"
s1	"reformulation of query"	rdfs:member	"query"
