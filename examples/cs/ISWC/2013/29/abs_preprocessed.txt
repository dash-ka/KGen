Though subgraph matching has been extensively studied as a query paradigm in semantic web a user can get a large number of answers in response to a query
Though subgraph matching has been extensively studied as a query paradigm in social network data environments a user can get a large number of answers in response to a query
Just like Google does these answers can be shown to the user in accordance with an importance ranking
SPARQLqueries denoted as importance queries
In this paper we present scalable algorithms to find the topK answers to a practically important subset of SPARQLqueries via a suite of pruning techniques
algorithms on multiple realworld graph data sets showing that We algorithms are efficient even on networks with up to 15M edges than popular triple stores
algorithms on multiple realworld graph data sets showing that We algorithms are far more efficient than popular triple stores
algorithms on multiple realworld graph data sets showing that We algorithms are efficient even on networks with up to 6M vertices than popular triple stores
We test We algorithms on multiple realworld graph data sets