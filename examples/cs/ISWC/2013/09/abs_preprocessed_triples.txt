s10.5	"the data her"
s10.5	"the data her"	rdf:subject	"her"
s10.5	"the data her"	rdf:predicate	"publish"
s10.5	"the data her"	rdf:object	"data"
s10.4	"her needs wrt the data her"
s10.4	"her needs wrt the data her"	rdf:subject	"need"
s10.4	"her needs wrt the data her"	rdf:predicate	"wrt"
s10.4	"her needs wrt the data her"	rdf:object	"data her"
s10.3	"the licenses composition strategy which better suits her needs wrt the data her"
s10.3	"the licenses composition strategy which better suits her needs wrt the data her"	rdf:subject	"need"
s10.3	"the licenses composition strategy which better suits her needs wrt the data her"	rdf:predicate	"suit"
s10.3	"the licenses composition strategy which better suits her needs wrt the data her"	rdf:object	"license composition strategy wrt the data her"
s10.3	"license composition strategy wrt the data her"	rdfs:member	"data her"
s10.3	"license composition strategy wrt the data her"	rdfs:member	"license composition strategy"
s10.3	"license composition"	rdfs:subClassOf	"composition"
s10.3	"data her"	rdfs:member	"data"
s10.3	"data her"	rdfs:subClassOf	"her"
s10.3	"composition strategy"	rdfs:subClassOf	"strategy"
s10.3	"license composition strategy"	rdfs:member	"license composition"
s10.3	"license composition"	rdfs:member	"license"
s10.3	"license composition strategy"	rdfs:subClassOf	"strategy"
s10.3	"composition strategy"	rdfs:member	"composition"
s10.3	"license composition strategy"	rdfs:subClassOf	"composition strategy"
s10.3	"the licenses composition strategy which better suits her needs wrt the data her"	local:AM-MNR	"better"
s10.2	"choosing the licenses composition strategy which better suits her needs wrt the data her"
s10.2	"choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:subject	"license composition strategy which better suit her need wrt the data her"
s10.2	"license composition strategy which better suit her need wrt the data her"	rdfs:member	"data her"
s10.2	"license composition strategy which better suit her need wrt the data her"	rdfs:member	"better suit"
s10.2	"license composition strategy which better suit her need wrt the data her"	rdfs:member	"need"
s10.2	"license composition strategy which better suit her need wrt the data her"	rdfs:member	"license composition strategy"
s10.2	"license composition"	rdfs:subClassOf	"composition"
s10.2	"data her"	rdfs:member	"data"
s10.2	"data her"	rdfs:subClassOf	"her"
s10.2	"composition strategy"	rdfs:subClassOf	"strategy"
s10.2	"license composition strategy"	rdfs:member	"license composition"
s10.2	"better suit"	rdfs:member	"better"
s10.2	"better suit"	rdfs:subClassOf	"suit"
s10.2	"license composition"	rdfs:member	"license"
s10.2	"license composition strategy"	rdfs:subClassOf	"strategy"
s10.2	"composition strategy"	rdfs:member	"composition"
s10.2	"her need"	rdfs:subClassOf	"need"
s10.2	"license composition strategy"	rdfs:subClassOf	"composition strategy"
s10.2	"choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:predicate	"choose"
s10.1	"some heuristics support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"
s10.1	"some heuristics support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:subject	"heuristic"
s10.1	"some heuristics support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:predicate	"support"
s10.1	"some heuristics support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:object	"data publisher"
s10.1	"data publisher"	rdfs:member	"data"
s10.1	"data publisher"	rdfs:subClassOf	"publisher"
s10.1	"some heuristics support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	local:AM-MNR	"choose the license composition strategy which better suit her need wrt the data her"
s10.1	"choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"data her"
s10.1	"choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"better suit"
s10.1	"choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"need"
s10.1	"choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"license composition strategy"
s10.1	"license composition"	rdfs:subClassOf	"composition"
s10.1	"data her"	rdfs:member	"data"
s10.1	"data her"	rdfs:subClassOf	"her"
s10.1	"composition strategy"	rdfs:subClassOf	"strategy"
s10.1	"license composition strategy"	rdfs:member	"license composition"
s10.1	"better suit"	rdfs:member	"better"
s10.1	"better suit"	rdfs:subClassOf	"suit"
s10.1	"license composition"	rdfs:member	"license"
s10.1	"license composition strategy"	rdfs:subClassOf	"strategy"
s10.1	"composition strategy"	rdfs:member	"composition"
s10.1	"her need"	rdfs:subClassOf	"need"
s10.1	"license composition strategy"	rdfs:subClassOf	"composition strategy"
s10	"some heuristics proposed to support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"
s10	"some heuristics proposed to support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:subject	"heuristic"
s10	"some heuristics proposed to support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	rdf:predicate	"propose"
s10	"some heuristics proposed to support the data publisher in choosing the licenses composition strategy which better suits her needs wrt the data her"	local:AM-PNC	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"need"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"license composition strategy"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"data publisher"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"data her"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"choose"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"better suit"
s10	"support the data publisher in choose the license composition strategy which better suit her need wrt the data her"	rdfs:member	"support"
s10	"license composition"	rdfs:subClassOf	"composition"
s10	"data publisher"	rdfs:member	"data"
s10	"data her"	rdfs:member	"data"
s10	"data her"	rdfs:subClassOf	"her"
s10	"composition strategy"	rdfs:subClassOf	"strategy"
s10	"license composition strategy"	rdfs:member	"license composition"
s10	"better suit"	rdfs:member	"better"
s10	"license composition"	rdfs:member	"license"
s10	"license composition strategy"	rdfs:subClassOf	"strategy"
s10	"better suit"	rdfs:subClassOf	"suit"
s10	"composition strategy"	rdfs:member	"composition"
s10	"data publisher"	rdfs:subClassOf	"publisher"
s10	"her need"	rdfs:subClassOf	"need"
s10	"license composition strategy"	rdfs:subClassOf	"composition strategy"
s9.1	"us define the deontic components of prohibitions"
s9.1	"us define the deontic components of prohibitions"	rdf:subject	"u"
s9.1	"us define the deontic components of prohibitions"	rdf:predicate	"define"
s9.1	"us define the deontic components of prohibitions"	rdf:object	"deontic component of prohibition"
s9.1	"deontic component of prohibition"	rdfs:member	"deontic component"
s9.1	"deontic component of prohibition"	rdfs:member	"prohibition"
s9.1	"deontic component"	rdfs:member	"deontic"
s9.1	"deontic component"	rdfs:subClassOf	"component"
s9.1	"deontic component of prohibition"	rdfs:member	"deontic component"
s9.1	"deontic component of prohibition"	rdfs:member	"prohibition"
s9	"a deontic logic semantics which allows us to define the deontic components of prohibitions"
s9	"a deontic logic semantics which allows us to define the deontic components of prohibitions"	rdf:subject	"deontic logic semantics"
s9	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s9	"deontic logic semantics"	rdfs:member	"deontic logic"
s9	"logic semantics"	rdfs:subClassOf	"semantics"
s9	"logic semantics"	rdfs:member	"logic"
s9	"deontic logic"	rdfs:subClassOf	"logic"
s9	"deontic logic"	rdfs:member	"deontic"
s9	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s9	"a deontic logic semantics which allows us to define the deontic components of prohibitions"	rdf:predicate	"allow"
s9	"a deontic logic semantics which allows us to define the deontic components of prohibitions"	rdf:object	"u to define the deontic component of prohibition"
s9	"u to define the deontic component of prohibition"	rdfs:member	"u"
s9	"u to define the deontic component of prohibition"	rdfs:member	"deontic component"
s9	"u to define the deontic component of prohibition"	rdfs:member	"prohibition"
s9	"deontic component"	rdfs:member	"deontic"
s9	"deontic component"	rdfs:subClassOf	"component"
s9	"deontic component of prohibition"	rdfs:member	"deontic component"
s9	"deontic component of prohibition"	rdfs:member	"prohibition"
s8.1	"us define the deontic components of permissions"
s8.1	"us define the deontic components of permissions"	rdf:subject	"u"
s8.1	"us define the deontic components of permissions"	rdf:predicate	"define"
s8.1	"us define the deontic components of permissions"	rdf:object	"deontic component of permission"
s8.1	"deontic component of permission"	rdfs:member	"permission"
s8.1	"deontic component of permission"	rdfs:member	"deontic component"
s8.1	"deontic component"	rdfs:member	"deontic"
s8.1	"deontic component"	rdfs:subClassOf	"component"
s8.1	"deontic component of permission"	rdfs:member	"deontic component"
s8.1	"deontic component of permission"	rdfs:member	"permission"
s8	"a deontic logic semantics which allows us to define the deontic components of permissions"
s8	"a deontic logic semantics which allows us to define the deontic components of permissions"	rdf:subject	"deontic logic semantics"
s8	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s8	"deontic logic semantics"	rdfs:member	"deontic logic"
s8	"logic semantics"	rdfs:subClassOf	"semantics"
s8	"logic semantics"	rdfs:member	"logic"
s8	"deontic logic"	rdfs:subClassOf	"logic"
s8	"deontic logic"	rdfs:member	"deontic"
s8	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s8	"a deontic logic semantics which allows us to define the deontic components of permissions"	rdf:predicate	"allow"
s8	"a deontic logic semantics which allows us to define the deontic components of permissions"	rdf:object	"u to define the deontic component of permission"
s8	"u to define the deontic component of permission"	rdfs:member	"permission"
s8	"u to define the deontic component of permission"	rdfs:member	"u"
s8	"u to define the deontic component of permission"	rdfs:member	"deontic component"
s8	"deontic component"	rdfs:member	"deontic"
s8	"deontic component"	rdfs:subClassOf	"component"
s8	"deontic component of permission"	rdfs:member	"deontic component"
s8	"deontic component of permission"	rdfs:member	"permission"
s7.1	"us define the deontic components of the licenses"
s7.1	"us define the deontic components of the licenses"	rdf:subject	"u"
s7.1	"us define the deontic components of the licenses"	rdf:predicate	"define"
s7.1	"us define the deontic components of the licenses"	rdf:object	"deontic component of the license"
s7.1	"deontic component of the license"	rdfs:member	"deontic component"
s7.1	"deontic component of the license"	rdfs:member	"license"
s7.1	"deontic component"	rdfs:member	"deontic"
s7.1	"deontic component"	rdfs:subClassOf	"component"
s7.1	"deontic component of license"	rdfs:member	"deontic component"
s7.1	"deontic component of license"	rdfs:member	"license"
s7	"a deontic logic semantics which allows us to define the deontic components of the licenses"
s7	"a deontic logic semantics which allows us to define the deontic components of the licenses"	rdf:subject	"deontic logic semantics"
s7	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s7	"deontic logic semantics"	rdfs:member	"deontic logic"
s7	"logic semantics"	rdfs:subClassOf	"semantics"
s7	"logic semantics"	rdfs:member	"logic"
s7	"deontic logic"	rdfs:subClassOf	"logic"
s7	"deontic logic"	rdfs:member	"deontic"
s7	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s7	"a deontic logic semantics which allows us to define the deontic components of the licenses"	rdf:predicate	"allow"
s7	"a deontic logic semantics which allows us to define the deontic components of the licenses"	rdf:object	"u to define the deontic component of the license"
s7	"u to define the deontic component of the license"	rdfs:member	"u"
s7	"u to define the deontic component of the license"	rdfs:member	"deontic component"
s7	"u to define the deontic component of the license"	rdfs:member	"license"
s7	"deontic component"	rdfs:member	"deontic"
s7	"deontic component"	rdfs:subClassOf	"component"
s7	"deontic component of license"	rdfs:member	"deontic component"
s7	"deontic component of license"	rdfs:member	"license"
s6.2	"composed different licenses"
s6.2	"composed different licenses"	rdf:subject	"different license"
s6.2	"different license"	rdfs:subClassOf	"license"
s6.2	"different license"	rdfs:member	"different"
s6.2	"composed different licenses"	rdf:predicate	"compose"
s6.1	"us generate a composite license compliant with the licensing items of the composed different licenses"
s6.1	"us generate a composite license compliant with the licensing items of the composed different licenses"	rdf:subject	"u"
s6.1	"us generate a composite license compliant with the licensing items of the composed different licenses"	rdf:predicate	"generate"
s6.1	"us generate a composite license compliant with the licensing items of the composed different licenses"	rdf:object	"composite license compliant with the license item of the compose different license"
s6.1	"composite license compliant with the license item of the compose different license"	rdfs:member	"license item"
s6.1	"composite license compliant with the license item of the compose different license"	rdfs:member	"compose different license"
s6.1	"composite license compliant with the license item of the compose different license"	rdfs:member	"composite license compliant"
s6.1	"composite license"	rdfs:member	"composite"
s6.1	"composite license compliant"	rdfs:member	"composite license"
s6.1	"composite license compliant"	rdfs:subClassOf	"compliant"
s6.1	"license item"	rdfs:member	"license"
s6.1	"license item"	rdfs:subClassOf	"item"
s6.1	"different license"	rdfs:subClassOf	"license"
s6.1	"compose different license"	rdfs:member	"compose different"
s6.1	"license compliant"	rdfs:member	"license"
s6.1	"compose different"	rdfs:member	"compose"
s6.1	"different license"	rdfs:member	"different"
s6.1	"composite license"	rdfs:subClassOf	"license"
s6.1	"compose different license"	rdfs:subClassOf	"license"
s6.1	"license compliant"	rdfs:subClassOf	"compliant"
s6.1	"compose different"	rdfs:subClassOf	"different"
s6.1	"compliant license"	rdfs:subClassOf	"license"
s6.1	"composite compliant license"	rdfs:subClassOf	"compliant license"
s6.1	"compliant with license item"	rdfs:member	"compliant"
s6.1	"compliant with license item"	rdfs:member	"license item"
s6.1	"license item of the"	rdfs:member	"license item"
s6.1	"license item of the"	rdfs:member	"the"
s6	"a deontic logic semantics which allows us to generate a composite license compliant with the licensing items of the composed different licenses"
s6	"a deontic logic semantics which allows us to generate a composite license compliant with the licensing items of the composed different licenses"	rdf:subject	"deontic logic semantics"
s6	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s6	"deontic logic semantics"	rdfs:member	"deontic logic"
s6	"logic semantics"	rdfs:subClassOf	"semantics"
s6	"logic semantics"	rdfs:member	"logic"
s6	"deontic logic"	rdfs:subClassOf	"logic"
s6	"deontic logic"	rdfs:member	"deontic"
s6	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s6	"a deontic logic semantics which allows us to generate a composite license compliant with the licensing items of the composed different licenses"	rdf:predicate	"allow"
s6	"a deontic logic semantics which allows us to generate a composite license compliant with the licensing items of the composed different licenses"	rdf:object	"u to generate a composite license compliant with the license item of the compose different license"
s6	"u to generate a composite license compliant with the license item of the compose different license"	rdfs:member	"license item"
s6	"u to generate a composite license compliant with the license item of the compose different license"	rdfs:member	"u"
s6	"u to generate a composite license compliant with the license item of the compose different license"	rdfs:member	"compose different license"
s6	"u to generate a composite license compliant with the license item of the compose different license"	rdfs:member	"composite license compliant"
s6	"composite license"	rdfs:member	"composite"
s6	"composite license compliant"	rdfs:member	"composite license"
s6	"composite license compliant"	rdfs:subClassOf	"compliant"
s6	"license item"	rdfs:member	"license"
s6	"license item"	rdfs:subClassOf	"item"
s6	"different license"	rdfs:subClassOf	"license"
s6	"compose different license"	rdfs:member	"compose different"
s6	"license compliant"	rdfs:member	"license"
s6	"compose different"	rdfs:member	"compose"
s6	"different license"	rdfs:member	"different"
s6	"composite license"	rdfs:subClassOf	"license"
s6	"compose different license"	rdfs:subClassOf	"license"
s6	"license compliant"	rdfs:subClassOf	"compliant"
s6	"compose different"	rdfs:subClassOf	"different"
s6	"compliant license"	rdfs:subClassOf	"license"
s6	"composite compliant license"	rdfs:subClassOf	"compliant license"
s6	"compliant with license item"	rdfs:member	"compliant"
s6	"compliant with license item"	rdfs:member	"license item"
s6	"license item of the"	rdfs:member	"license item"
s6	"license item of the"	rdfs:member	"the"
s5.1	"us define the deontic components of obligations"
s5.1	"us define the deontic components of obligations"	rdf:subject	"u"
s5.1	"us define the deontic components of obligations"	rdf:predicate	"define"
s5.1	"us define the deontic components of obligations"	rdf:object	"deontic component of obligation"
s5.1	"deontic component of obligation"	rdfs:member	"deontic component"
s5.1	"deontic component of obligation"	rdfs:member	"obligation"
s5.1	"deontic component"	rdfs:member	"deontic"
s5.1	"deontic component"	rdfs:subClassOf	"component"
s5.1	"deontic component of obligation"	rdfs:member	"deontic component"
s5.1	"deontic component of obligation"	rdfs:member	"obligation"
s5	"a deontic logic semantics which allows us to define the deontic components of obligations"
s5	"a deontic logic semantics which allows us to define the deontic components of obligations"	rdf:subject	"deontic logic semantics"
s5	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s5	"deontic logic semantics"	rdfs:member	"deontic logic"
s5	"logic semantics"	rdfs:subClassOf	"semantics"
s5	"logic semantics"	rdfs:member	"logic"
s5	"deontic logic"	rdfs:subClassOf	"logic"
s5	"deontic logic"	rdfs:member	"deontic"
s5	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s5	"a deontic logic semantics which allows us to define the deontic components of obligations"	rdf:predicate	"allow"
s5	"a deontic logic semantics which allows us to define the deontic components of obligations"	rdf:object	"u to define the deontic component of obligation"
s5	"u to define the deontic component of obligation"	rdfs:member	"u"
s5	"u to define the deontic component of obligation"	rdfs:member	"deontic component"
s5	"u to define the deontic component of obligation"	rdfs:member	"obligation"
s5	"deontic component"	rdfs:member	"deontic"
s5	"deontic component"	rdfs:subClassOf	"component"
s5	"deontic component of obligation"	rdfs:member	"deontic component"
s5	"deontic component of obligation"	rdfs:member	"obligation"
s4	"this paper evaluates a deontic logic semantics"
s4	"this paper evaluates a deontic logic semantics"	rdf:subject	"paper"
s4	"this paper evaluates a deontic logic semantics"	rdf:predicate	"evaluate"
s4	"this paper evaluates a deontic logic semantics"	rdf:object	"deontic logic semantics"
s4	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s4	"deontic logic semantics"	rdfs:member	"deontic logic"
s4	"logic semantics"	rdfs:subClassOf	"semantics"
s4	"logic semantics"	rdfs:member	"logic"
s4	"deontic logic"	rdfs:subClassOf	"logic"
s4	"deontic logic"	rdfs:member	"deontic"
s4	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s3	"this paper proposes a deontic logic semantics"
s3	"this paper proposes a deontic logic semantics"	rdf:subject	"paper"
s3	"this paper proposes a deontic logic semantics"	rdf:predicate	"propose"
s3	"this paper proposes a deontic logic semantics"	rdf:object	"deontic logic semantics"
s3	"deontic logic semantics"	rdfs:subClassOf	"semantics"
s3	"deontic logic semantics"	rdfs:member	"deontic logic"
s3	"logic semantics"	rdfs:subClassOf	"semantics"
s3	"logic semantics"	rdfs:member	"logic"
s3	"deontic logic"	rdfs:subClassOf	"logic"
s3	"deontic logic"	rdfs:member	"deontic"
s3	"deontic logic semantics"	rdfs:subClassOf	"logic semantics"
s2	"the licensing terms associated to data"
s2	"the licensing terms associated to data"	rdf:subject	"license term"
s2	"license term"	rdfs:member	"license"
s2	"license term"	rdfs:subClassOf	"term"
s2	"the licensing terms associated to data"	rdf:predicate	"associate"
s2	"the licensing terms associated to data"	rdf:object	"data"
s1.3	"automated frameworks generate the licensing terms"
s1.3	"automated frameworks generate the licensing terms"	rdf:subject	"automate framework"
s1.3	"automate framework"	rdfs:subClassOf	"framework"
s1.3	"automate framework"	rdfs:member	"automate"
s1.3	"automated frameworks generate the licensing terms"	rdf:predicate	"generate"
s1.3	"automated frameworks generate the licensing terms"	rdf:object	"license term"
s1.3	"license term"	rdfs:member	"license"
s1.3	"license term"	rdfs:subClassOf	"term"
s1.2	"developing automated frameworks able to generate the licensing terms"
s1.2	"developing automated frameworks able to generate the licensing terms"	rdf:subject	"automate framework able to generate the license term"
s1.2	"automate framework able to generate the license term"	rdfs:member	"automate framework"
s1.2	"automate framework able to generate the license term"	rdfs:member	"license term"
s1.2	"automate framework"	rdfs:subClassOf	"framework"
s1.2	"license term"	rdfs:member	"license"
s1.2	"automate framework"	rdfs:member	"automate"
s1.2	"license term"	rdfs:subClassOf	"term"
s1.2	"able framework"	rdfs:subClassOf	"framework"
s1.2	"developing automated frameworks able to generate the licensing terms"	rdf:predicate	"develop"
s1.1	"in the domain of linked open data a need emerging for developing automated frameworks able to generate the licensing terms"
s1.1	"in the domain of linked open data a need emerging for developing automated frameworks able to generate the licensing terms"	rdf:subject	"develop automate framework able to generate the license term"
s1.1	"develop automate framework able to generate the license term"	rdfs:member	"automate framework"
s1.1	"develop automate framework able to generate the license term"	rdfs:member	"license term"
s1.1	"automate framework"	rdfs:subClassOf	"framework"
s1.1	"license term"	rdfs:member	"license"
s1.1	"automate framework"	rdfs:member	"automate"
s1.1	"license term"	rdfs:subClassOf	"term"
s1.1	"able framework"	rdfs:subClassOf	"framework"
s1.1	"in the domain of linked open data a need emerging for developing automated frameworks able to generate the licensing terms"	rdf:predicate	"emerge"
s1.1	"in the domain of linked open data a need emerging for developing automated frameworks able to generate the licensing terms"	local:AM-LOC	"domain of link open data"
s1.1	"domain of link open data"	rdfs:member	"domain"
s1.1	"domain of link open data"	rdfs:member	"open data"
s1.1	"domain of link open data"	rdfs:member	"link"
s1.1	"open data"	rdfs:member	"open"
s1.1	"open data"	rdfs:subClassOf	"data"
s1.1	"link open data"	rdfs:subClassOf	"open data"
s1.1	"domain of link open data"	rdfs:member	"domain"
s1.1	"domain of link open data"	rdfs:member	"link open data"
s1	"linked open data"
s1	"linked open data"	rdf:subject	"open data"
s1	"open data"	rdfs:member	"open"
s1	"open data"	rdfs:subClassOf	"data"
s1	"linked open data"	rdf:predicate	"link"
s0.1	"heterogeneous distributed sources"
s0.1	"heterogeneous distributed sources"	rdf:subject	"source"
s0.1	"heterogeneous distributed sources"	rdf:predicate	"distribute"
s0.1	"heterogeneous distributed sources"	local:AM-MNR	"heterogeneous"
s0	"data coming from heterogeneous distributed sources"
s0	"data coming from heterogeneous distributed sources"	rdf:subject	"data"
s0	"data coming from heterogeneous distributed sources"	rdf:predicate	"come"
s0	"data coming from heterogeneous distributed sources"	rdf:object	"heterogeneous distribute source"
s0	"distribute source"	rdfs:subClassOf	"source"
s0	"distribute source"	rdfs:member	"distribute"
s0	"heterogeneous distribute"	rdfs:member	"heterogeneous"
s0	"heterogeneous distribute source"	rdfs:member	"heterogeneous distribute"
s0	"heterogeneous distribute"	rdfs:subClassOf	"distribute"
s0	"heterogeneous distribute source"	rdfs:subClassOf	"source"
