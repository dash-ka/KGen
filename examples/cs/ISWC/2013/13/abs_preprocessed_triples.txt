s14	"we system deal with possible inconsistencies between the nonmonotonic rules"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:subject	"system"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:predicate	"deal"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:object	"possible inconsistency between the nonmonotonic rule"
s14	"possible inconsistency between the nonmonotonic rule"	rdfs:member	"possible inconsistency"
s14	"possible inconsistency between the nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s14	"possible inconsistency"	rdfs:member	"possible"
s14	"possible inconsistency"	rdfs:subClassOf	"inconsistency"
s14	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s14	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s14	"possible inconsistency between nonmonotonic rule"	rdfs:member	"possible inconsistency"
s14	"possible inconsistency between nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s13	"we system deal with an ontology"
s13	"we system deal with an ontology"	rdf:subject	"system"
s13	"we system deal with an ontology"	rdf:predicate	"deal"
s13	"we system deal with an ontology"	rdf:object	"ontology"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	rdf:subject	"large ontology such a snomed ct augment with a large number of rule"
s12.3	"large ontology such a snomed ct augment with a large number of rule"	rdfs:member	"large number"
s12.3	"large ontology such a snomed ct augment with a large number of rule"	rdfs:member	"large ontology"
s12.3	"large ontology such a snomed ct augment with a large number of rule"	rdfs:member	"rule"
s12.3	"large ontology such a snomed ct augment with a large number of rule"	rdfs:member	"snomed ct augment"
s12.3	"ct augment"	rdfs:subClassOf	"augment"
s12.3	"snomed ct"	rdfs:subClassOf	"ct"
s12.3	"large number"	rdfs:member	"large"
s12.3	"large ontology"	rdfs:member	"large"
s12.3	"ct augment"	rdfs:member	"ct"
s12.3	"snomed ct"	rdfs:member	"snomed"
s12.3	"snomed ct augment"	rdfs:subClassOf	"augment"
s12.3	"large number"	rdfs:subClassOf	"number"
s12.3	"large ontology"	rdfs:subClassOf	"ontology"
s12.3	"snomed ct augment"	rdfs:member	"snomed ct"
s12.3	"such snomed ct"	rdfs:subClassOf	"snomed ct"
s12.3	"augment with large number"	rdfs:member	"augment"
s12.3	"augment with large number"	rdfs:member	"large number"
s12.3	"large number of rule"	rdfs:member	"large number"
s12.3	"large number of rule"	rdfs:member	"rule"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	rdf:predicate	"process"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	local:AM-MOD	"can"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	local:AM-TMP	"interactive response time after one initial brief preprocessing period"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"preprocessing period"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"initial brief"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.3	"preprocessing period"	rdfs:subClassOf	"period"
s12.3	"initial brief"	rdfs:member	"initial"
s12.3	"preprocessing period"	rdfs:member	"preprocessing"
s12.3	"response time"	rdfs:subClassOf	"time"
s12.3	"interactive response time"	rdfs:member	"interactive response"
s12.3	"interactive response"	rdfs:member	"interactive"
s12.3	"initial brief"	rdfs:subClassOf	"brief"
s12.3	"response time"	rdfs:member	"response"
s12.3	"interactive response"	rdfs:subClassOf	"response"
s12.3	"interactive response time"	rdfs:subClassOf	"time"
s12.3	"brief preprocessing period"	rdfs:subClassOf	"preprocessing period"
s12.3	"initial brief preprocessing period"	rdfs:subClassOf	"brief preprocessing period"
s12.3	"one initial brief preprocessing period"	rdfs:subClassOf	"initial brief preprocessing period"
s12.3	"interactive response time"	rdfs:subClassOf	"response time"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"one initial brief preprocessing period"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:subject	"large ontology such a snomed ct"
s12.2	"large ontology such a snomed ct"	rdfs:member	"large ontology"
s12.2	"large ontology such a snomed ct"	rdfs:member	"snomed ct"
s12.2	"large ontology"	rdfs:member	"large"
s12.2	"snomed ct"	rdfs:subClassOf	"ct"
s12.2	"large ontology"	rdfs:subClassOf	"ontology"
s12.2	"snomed ct"	rdfs:member	"snomed"
s12.2	"such snomed ct"	rdfs:subClassOf	"snomed ct"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:predicate	"augment"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:object	"large number of rule"
s12.2	"large number of rule"	rdfs:member	"large number"
s12.2	"large number of rule"	rdfs:member	"rule"
s12.2	"large number"	rdfs:subClassOf	"number"
s12.2	"large number"	rdfs:member	"large"
s12.2	"large number of rule"	rdfs:member	"large number"
s12.2	"large number of rule"	rdfs:member	"rule"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:subject	"result plugin"
s12.1	"result plugin"	rdfs:subClassOf	"plugin"
s12.1	"result plugin"	rdfs:member	"result"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:predicate	"query"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:object	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"large ontology"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"rule"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"process"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"initial brief"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"preprocessing period"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"snomed ct augment"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"large number"
s12.1	"large ontology such a snomed ct augment with a large number of rule can be process at an interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.1	"preprocessing period"	rdfs:subClassOf	"period"
s12.1	"interactive response time"	rdfs:member	"interactive response"
s12.1	"interactive response"	rdfs:member	"interactive"
s12.1	"large ontology"	rdfs:subClassOf	"ontology"
s12.1	"ct augment"	rdfs:subClassOf	"augment"
s12.1	"initial brief"	rdfs:member	"initial"
s12.1	"snomed ct"	rdfs:subClassOf	"ct"
s12.1	"large ontology"	rdfs:member	"large"
s12.1	"response time"	rdfs:member	"response"
s12.1	"snomed ct augment"	rdfs:subClassOf	"augment"
s12.1	"interactive response"	rdfs:subClassOf	"response"
s12.1	"interactive response time"	rdfs:subClassOf	"time"
s12.1	"preprocessing period"	rdfs:member	"preprocessing"
s12.1	"large number"	rdfs:member	"large"
s12.1	"ct augment"	rdfs:member	"ct"
s12.1	"initial brief"	rdfs:subClassOf	"brief"
s12.1	"large number"	rdfs:subClassOf	"number"
s12.1	"snomed ct augment"	rdfs:member	"snomed ct"
s12.1	"response time"	rdfs:subClassOf	"time"
s12.1	"snomed ct"	rdfs:member	"snomed"
s12.1	"brief preprocessing period"	rdfs:subClassOf	"preprocessing period"
s12.1	"initial brief preprocessing period"	rdfs:subClassOf	"brief preprocessing period"
s12.1	"one initial brief preprocessing period"	rdfs:subClassOf	"initial brief preprocessing period"
s12.1	"interactive response time"	rdfs:subClassOf	"response time"
s12.1	"can process"	rdfs:subClassOf	"process"
s12.1	"such snomed ct"	rdfs:subClassOf	"snomed ct"
s12.1	"augment with large number"	rdfs:member	"augment"
s12.1	"augment with large number"	rdfs:member	"large number"
s12.1	"large number of rule"	rdfs:member	"large number"
s12.1	"large number of rule"	rdfs:member	"rule"
s12.1	"can process at interactive response time"	rdfs:member	"can process"
s12.1	"can process at interactive response time"	rdfs:member	"interactive response time"
s12.1	"interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.1	"interactive response time after one initial brief preprocessing period"	rdfs:member	"one initial brief preprocessing period"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	local:AM-ADV	"even"
s12	"resulting plugin"
s12	"resulting plugin"	rdf:subject	"plugin"
s12	"resulting plugin"	rdf:predicate	"result"
s11	"the tool the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"
s11	"the tool the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:subject	"tool the tool with the help of owl 2 el reasoner elk"
s11	"tool the tool with the help of owl 2 el reasoner elk"	rdfs:member	"tool"
s11	"tool the tool with the help of owl 2 el reasoner elk"	rdfs:member	"help"
s11	"tool the tool with the help of owl 2 el reasoner elk"	rdfs:member	"el reasoner elk"
s11	"el reasoner elk"	rdfs:member	"el reasoner"
s11	"reasoner elk"	rdfs:subClassOf	"elk"
s11	"el reasoner"	rdfs:member	"el"
s11	"reasoner elk"	rdfs:member	"reasoner"
s11	"el reasoner"	rdfs:subClassOf	"reasoner"
s11	"el reasoner elk"	rdfs:subClassOf	"elk"
s11	"el reasoner elk"	rdfs:subClassOf	"reasoner elk"
s11	"2 el reasoner elk"	rdfs:subClassOf	"el reasoner elk"
s11	"owl 2 el reasoner elk"	rdfs:subClassOf	"2 el reasoner elk"
s11	"tool with help"	rdfs:member	"tool"
s11	"tool with help"	rdfs:member	"help"
s11	"help of owl 2 el reasoner elk"	rdfs:member	"help"
s11	"help of owl 2 el reasoner elk"	rdfs:member	"owl 2 el reasoner elk"
s11	"the tool the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:predicate	"preprocesses"
s11	"the tool the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:object	"ontology rule"
s11	"ontology rule"	rdfs:member	"ontology"
s11	"ontology rule"	rdfs:subClassOf	"rule"
s10.1	"the topdown querying engine xsb prolog"
s10.1	"the topdown querying engine xsb prolog"	rdf:subject	"topdown"
s10.1	"the topdown querying engine xsb prolog"	rdf:predicate	"query"
s10.1	"the topdown querying engine xsb prolog"	rdf:object	"engine xsb prolog"
s10.1	"engine xsb prolog"	rdfs:member	"prolog"
s10.1	"engine xsb prolog"	rdfs:member	"engine"
s10.1	"xsb prolog"	rdfs:subClassOf	"prolog"
s10.1	"engine xsb prolog"	rdfs:subClassOf	"xsb prolog"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:subject	"rule whose result together with the nonmonotonic rule"
s10	"rule whose result together with the nonmonotonic rule"	rdfs:member	"result"
s10	"rule whose result together with the nonmonotonic rule"	rdfs:member	"rule"
s10	"rule whose result together with the nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s10	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s10	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s10	"together result"	rdfs:subClassOf	"result"
s10	"together result with nonmonotonic rule"	rdfs:member	"together result"
s10	"together result with nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:predicate	"serve"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:object	"input for the topdown query engine xsb prolog"
s10	"input for the topdown query engine xsb prolog"	rdfs:member	"input"
s10	"input for the topdown query engine xsb prolog"	rdfs:member	"topdown query engine xsb prolog"
s10	"engine xsb"	rdfs:subClassOf	"xsb"
s10	"query engine"	rdfs:member	"query"
s10	"topdown query"	rdfs:subClassOf	"query"
s10	"query engine xsb"	rdfs:member	"query engine"
s10	"engine xsb"	rdfs:member	"engine"
s10	"engine xsb prolog"	rdfs:member	"engine xsb"
s10	"engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"query engine xsb prolog"	rdfs:member	"query engine xsb"
s10	"query engine xsb"	rdfs:subClassOf	"xsb"
s10	"topdown query"	rdfs:member	"topdown"
s10	"query engine"	rdfs:subClassOf	"engine"
s10	"topdown query engine xsb"	rdfs:subClassOf	"xsb"
s10	"query engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"topdown query engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"topdown query engine xsb"	rdfs:member	"topdown query engine"
s10	"xsb prolog"	rdfs:member	"xsb"
s10	"topdown query engine"	rdfs:subClassOf	"engine"
s10	"xsb prolog"	rdfs:subClassOf	"prolog"
s10	"topdown query engine xsb prolog"	rdfs:member	"topdown query engine xsb"
s10	"topdown query engine"	rdfs:member	"topdown query"
s10	"engine xsb prolog"	rdfs:subClassOf	"xsb prolog"
s10	"query engine xsb prolog"	rdfs:subClassOf	"engine xsb prolog"
s10	"topdown query engine xsb prolog"	rdfs:subClassOf	"query engine xsb prolog"
s10	"input for topdown query engine xsb prolog"	rdfs:member	"input"
s10	"input for topdown query engine xsb prolog"	rdfs:member	"topdown query engine xsb prolog"
s9	"the tool the tool builds on the procedure slg"
s9	"the tool the tool builds on the procedure slg"	rdf:subject	"tool the tool"
s9	"the tool the tool builds on the procedure slg"	rdf:predicate	"build"
s9	"the tool the tool builds on the procedure slg"	local:AM-LOC	"procedure slg"
s9	"procedure slg"	rdfs:member	"procedure"
s9	"procedure slg"	rdfs:subClassOf	"slg"
s8	"the rules that can"
s8	"the rules that can"	rdf:subject	"rule"
s8	"the rules that can"	rdf:predicate	"write"
s8	"the rules that can"	local:AM-MOD	"can"
s7.2	"no restriction other than dlsafety imposed on the rules"
s7.2	"no restriction other than dlsafety imposed on the rules"	rdf:subject	"restriction other than dlsafety"
s7.2	"restriction other than dlsafety"	rdfs:member	"dlsafety"
s7.2	"restriction other than dlsafety"	rdfs:member	"restriction"
s7.2	"other restriction"	rdfs:subClassOf	"restriction"
s7.2	"other than dlsafety"	rdfs:member	"other"
s7.2	"other than dlsafety"	rdfs:member	"dlsafety"
s7.2	"no restriction other than dlsafety imposed on the rules"	rdf:predicate	"impose"
s7.2	"no restriction other than dlsafety imposed on the rules"	rdf:object	"rule"
s7.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"
s7.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:subject	"we"
s7.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:predicate	"use"
s7.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:object	"wellfounded semantics"
s7.1	"wellfounded semantics"	rdfs:subClassOf	"semantics"
s7.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	local:AM-PNC	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"
s7.1	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"rule"
s7.1	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"mknf knowledge base"
s7.1	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"dlsafety"
s7.1	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"underlie formalism"
s7.1	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"restriction"
s7.1	"mknf knowledge base"	rdfs:member	"mknf knowledge"
s7.1	"mknf knowledge base"	rdfs:subClassOf	"base"
s7.1	"underlie formalism"	rdfs:subClassOf	"formalism"
s7.1	"knowledge base"	rdfs:member	"knowledge"
s7.1	"mknf knowledge"	rdfs:member	"mknf"
s7.1	"knowledge base"	rdfs:subClassOf	"base"
s7.1	"underlie formalism"	rdfs:member	"underlie"
s7.1	"mknf knowledge"	rdfs:subClassOf	"knowledge"
s7.1	"be impose"	rdfs:subClassOf	"impose"
s7.1	"other restriction"	rdfs:subClassOf	"restriction"
s7.1	"no other restriction"	rdfs:subClassOf	"other restriction"
s7.1	"mknf knowledge base"	rdfs:subClassOf	"knowledge base"
s7.1	"other than dlsafety"	rdfs:member	"other"
s7.1	"other than dlsafety"	rdfs:member	"dlsafety"
s7.1	"be impose on rule"	rdfs:member	"be impose"
s7.1	"be impose on rule"	rdfs:member	"rule"
s7	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"
s7	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:subject	"we"
s7	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:predicate	"approach"
s7	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:object	"use the wellfounded semantics"
s7	"wellfounded semantics"	rdfs:subClassOf	"semantics"
s7	"wellfounded semantics"	rdfs:member	"wellfounded"
s7	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	local:AM-PNC	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"
s7	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"rule"
s7	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"mknf knowledge base"
s7	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"dlsafety"
s7	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"underlie formalism"
s7	"mknf knowledge base a underlie formalism so no restriction other than dlsafety be impose on the rule"	rdfs:member	"restriction"
s7	"mknf knowledge base"	rdfs:member	"mknf knowledge"
s7	"mknf knowledge base"	rdfs:subClassOf	"base"
s7	"underlie formalism"	rdfs:subClassOf	"formalism"
s7	"knowledge base"	rdfs:member	"knowledge"
s7	"mknf knowledge"	rdfs:member	"mknf"
s7	"knowledge base"	rdfs:subClassOf	"base"
s7	"underlie formalism"	rdfs:member	"underlie"
s7	"mknf knowledge"	rdfs:subClassOf	"knowledge"
s7	"be impose"	rdfs:subClassOf	"impose"
s7	"other restriction"	rdfs:subClassOf	"restriction"
s7	"no other restriction"	rdfs:subClassOf	"other restriction"
s7	"mknf knowledge base"	rdfs:subClassOf	"knowledge base"
s7	"other than dlsafety"	rdfs:member	"other"
s7	"other than dlsafety"	rdfs:member	"dlsafety"
s7	"be impose on rule"	rdfs:member	"be impose"
s7	"be impose on rule"	rdfs:member	"rule"
s6.2	"the user a set of nonmonotonic rules suitable eg express exceptions"
s6.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:subject	"set of nonmonotonic rule suitable eg"
s6.2	"set of nonmonotonic rule suitable eg"	rdfs:member	"suitable eg"
s6.2	"set of nonmonotonic rule suitable eg"	rdfs:member	"nonmonotonic rule"
s6.2	"set of nonmonotonic rule suitable eg"	rdfs:member	"set"
s6.2	"suitable eg"	rdfs:member	"suitable"
s6.2	"suitable eg"	rdfs:subClassOf	"eg"
s6.2	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s6.2	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s6.2	"set of nonmonotonic rule"	rdfs:member	"set"
s6.2	"set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s6.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:predicate	"express"
s6.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:object	"exception"
s6.1	"the user add a set of nonmonotonic rules suitable eg to express exceptions"
s6.1	"the user add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:subject	"user"
s6.1	"the user add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:predicate	"add"
s6.1	"the user add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:object	"set of nonmonotonic rule suitable eg"
s6.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"suitable eg"
s6.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"nonmonotonic rule"
s6.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"set"
s6.1	"suitable eg"	rdfs:member	"suitable"
s6.1	"suitable eg"	rdfs:subClassOf	"eg"
s6.1	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s6.1	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s6.1	"set of nonmonotonic rule"	rdfs:member	"set"
s6.1	"set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s6.1	"the user add a set of nonmonotonic rules suitable eg to express exceptions"	local:AM-PNC	"express exception"
s6.1	"express exception"	rdfs:member	"express"
s6.1	"express exception"	rdfs:subClassOf	"exception"
s6	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"
s6	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:subject	"protege plugin nohr"
s6	"protege plugin"	rdfs:member	"protege"
s6	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s6	"plugin nohr"	rdfs:member	"plugin"
s6	"plugin nohr"	rdfs:subClassOf	"nohr"
s6	"protege plugin nohr"	rdfs:member	"protege plugin"
s6	"protege plugin"	rdfs:subClassOf	"plugin"
s6	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s6	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:predicate	"allow"
s6	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:object	"user to add a set of nonmonotonic rule suitable eg to express exception"
s6	"user to add a set of nonmonotonic rule suitable eg to express exception"	rdfs:member	"user"
s6	"user to add a set of nonmonotonic rule suitable eg to express exception"	rdfs:member	"nonmonotonic rule"
s6	"user to add a set of nonmonotonic rule suitable eg to express exception"	rdfs:member	"suitable eg"
s6	"user to add a set of nonmonotonic rule suitable eg to express exception"	rdfs:member	"exception"
s6	"user to add a set of nonmonotonic rule suitable eg to express exception"	rdfs:member	"set"
s6	"suitable eg"	rdfs:member	"suitable"
s6	"suitable eg"	rdfs:subClassOf	"eg"
s6	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s6	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s6	"set of nonmonotonic rule"	rdfs:member	"set"
s6	"set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s5.1	"the user take an el op ontology"
s5.1	"the user take an el op ontology"	rdf:subject	"user"
s5.1	"the user take an el op ontology"	rdf:predicate	"take"
s5.1	"the user take an el op ontology"	rdf:object	"el op ontology"
s5.1	"op ontology"	rdfs:member	"op"
s5.1	"el op"	rdfs:subClassOf	"op"
s5.1	"el op ontology"	rdfs:subClassOf	"ontology"
s5.1	"el op"	rdfs:member	"el"
s5.1	"op ontology"	rdfs:subClassOf	"ontology"
s5.1	"el op ontology"	rdfs:member	"el op"
s5.1	"el op ontology"	rdfs:subClassOf	"op ontology"
s5	"the protege plugin nohr that allows the user to take an el op ontology"
s5	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:subject	"protege plugin nohr"
s5	"protege plugin"	rdfs:member	"protege"
s5	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s5	"plugin nohr"	rdfs:member	"plugin"
s5	"plugin nohr"	rdfs:subClassOf	"nohr"
s5	"protege plugin nohr"	rdfs:member	"protege plugin"
s5	"protege plugin"	rdfs:subClassOf	"plugin"
s5	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s5	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:predicate	"allow"
s5	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:object	"user to take an el op ontology"
s5	"user to take an el op ontology"	rdfs:member	"user"
s5	"user to take an el op ontology"	rdfs:member	"el op ontology"
s5	"op ontology"	rdfs:member	"op"
s5	"el op"	rdfs:subClassOf	"op"
s5	"el op ontology"	rdfs:subClassOf	"ontology"
s5	"el op"	rdfs:member	"el"
s5	"op ontology"	rdfs:subClassOf	"ontology"
s5	"el op ontology"	rdfs:member	"el op"
s5	"el op ontology"	rdfs:subClassOf	"op ontology"
s4	"we present the protege plugin nohr"
s4	"we present the protege plugin nohr"	rdf:subject	"we"
s4	"we present the protege plugin nohr"	rdf:predicate	"present"
s4	"we present the protege plugin nohr"	rdf:object	"protege plugin nohr"
s4	"protege plugin"	rdfs:member	"protege"
s4	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s4	"plugin nohr"	rdfs:member	"plugin"
s4	"plugin nohr"	rdfs:subClassOf	"nohr"
s4	"protege plugin nohr"	rdfs:member	"protege plugin"
s4	"protege plugin"	rdfs:subClassOf	"plugin"
s4	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s3.2	"combined knowledge base"
s3.2	"combined knowledge base"	rdf:subject	"knowledge base"
s3.2	"knowledge base"	rdfs:member	"knowledge"
s3.2	"knowledge base"	rdfs:subClassOf	"base"
s3.2	"combined knowledge base"	rdf:predicate	"combine"
s3.1	"the user query the combined knowledge base"
s3.1	"the user query the combined knowledge base"	rdf:subject	"user"
s3.1	"the user query the combined knowledge base"	rdf:predicate	"query"
s3.1	"the user query the combined knowledge base"	rdf:object	"combine knowledge base"
s3.1	"knowledge base"	rdfs:member	"knowledge"
s3.1	"combine knowledge"	rdfs:subClassOf	"knowledge"
s3.1	"combine knowledge base"	rdfs:member	"combine knowledge"
s3.1	"knowledge base"	rdfs:subClassOf	"base"
s3.1	"combine knowledge base"	rdfs:subClassOf	"base"
s3.1	"combine knowledge"	rdfs:member	"combine"
s3	"the protege plugin nohr that allows the user to query the combined knowledge base"
s3	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:subject	"protege plugin nohr"
s3	"protege plugin"	rdfs:member	"protege"
s3	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s3	"plugin nohr"	rdfs:member	"plugin"
s3	"plugin nohr"	rdfs:subClassOf	"nohr"
s3	"protege plugin nohr"	rdfs:member	"protege plugin"
s3	"protege plugin"	rdfs:subClassOf	"plugin"
s3	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s3	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:predicate	"allow"
s3	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:object	"user to query the combine knowledge base"
s3	"user to query the combine knowledge base"	rdfs:member	"user"
s3	"user to query the combine knowledge base"	rdfs:member	"combine knowledge base"
s3	"knowledge base"	rdfs:member	"knowledge"
s3	"combine knowledge"	rdfs:subClassOf	"knowledge"
s3	"combine knowledge base"	rdfs:member	"combine knowledge"
s3	"knowledge base"	rdfs:subClassOf	"base"
s3	"combine knowledge base"	rdfs:subClassOf	"base"
s3	"combine knowledge"	rdfs:member	"combine"
s3	"combine knowledge base"	rdfs:subClassOf	"knowledge base"
s2.2	"the user logic programming rules suitable eg express defaults"
s2.2	"the user logic programming rules suitable eg express defaults"	rdf:subject	"logic program rule suitable eg"
s2.2	"logic program rule suitable eg"	rdfs:member	"logic program rule"
s2.2	"logic program rule suitable eg"	rdfs:member	"suitable eg"
s2.2	"logic program rule"	rdfs:subClassOf	"rule"
s2.2	"logic program rule"	rdfs:member	"logic program"
s2.2	"suitable eg"	rdfs:member	"suitable"
s2.2	"logic program"	rdfs:subClassOf	"program"
s2.2	"program rule"	rdfs:member	"program"
s2.2	"logic program"	rdfs:member	"logic"
s2.2	"program rule"	rdfs:subClassOf	"rule"
s2.2	"suitable eg"	rdfs:subClassOf	"eg"
s2.2	"suitable rule"	rdfs:subClassOf	"rule"
s2.2	"program suitable rule"	rdfs:subClassOf	"suitable rule"
s2.2	"logic program suitable rule"	rdfs:subClassOf	"program suitable rule"
s2.2	"the user logic programming rules suitable eg express defaults"	rdf:predicate	"express"
s2.2	"the user logic programming rules suitable eg express defaults"	rdf:object	"default"
s2.1	"the user add a set of logic programming rules suitable eg to express defaults"
s2.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:subject	"user"
s2.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:predicate	"add"
s2.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:object	"set of logic program rule suitable eg"
s2.1	"set of logic program rule suitable eg"	rdfs:member	"suitable eg"
s2.1	"set of logic program rule suitable eg"	rdfs:member	"logic program rule"
s2.1	"set of logic program rule suitable eg"	rdfs:member	"set"
s2.1	"logic program rule"	rdfs:subClassOf	"rule"
s2.1	"suitable eg"	rdfs:member	"suitable"
s2.1	"logic program rule"	rdfs:member	"logic program"
s2.1	"logic program"	rdfs:subClassOf	"program"
s2.1	"program rule"	rdfs:member	"program"
s2.1	"logic program"	rdfs:member	"logic"
s2.1	"program rule"	rdfs:subClassOf	"rule"
s2.1	"suitable eg"	rdfs:subClassOf	"eg"
s2.1	"logic program rule"	rdfs:subClassOf	"program rule"
s2.1	"set of logic program rule"	rdfs:member	"set"
s2.1	"set of logic program rule"	rdfs:member	"logic program rule"
s2.1	"the user add a set of logic programming rules suitable eg to express defaults"	local:AM-PNC	"express default"
s2.1	"express default"	rdfs:subClassOf	"default"
s2.1	"express default"	rdfs:member	"express"
s2	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"
s2	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:subject	"protege plugin nohr"
s2	"protege plugin"	rdfs:member	"protege"
s2	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s2	"plugin nohr"	rdfs:member	"plugin"
s2	"plugin nohr"	rdfs:subClassOf	"nohr"
s2	"protege plugin nohr"	rdfs:member	"protege plugin"
s2	"protege plugin"	rdfs:subClassOf	"plugin"
s2	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s2	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:predicate	"allow"
s2	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:object	"user to add a set of logic program rule suitable eg to express default"
s2	"user to add a set of logic program rule suitable eg to express default"	rdfs:member	"default"
s2	"user to add a set of logic program rule suitable eg to express default"	rdfs:member	"user"
s2	"user to add a set of logic program rule suitable eg to express default"	rdfs:member	"suitable eg"
s2	"user to add a set of logic program rule suitable eg to express default"	rdfs:member	"set"
s2	"user to add a set of logic program rule suitable eg to express default"	rdfs:member	"logic program rule"
s2	"logic program rule"	rdfs:subClassOf	"rule"
s2	"suitable eg"	rdfs:member	"suitable"
s2	"logic program rule"	rdfs:member	"logic program"
s2	"logic program"	rdfs:subClassOf	"program"
s2	"program rule"	rdfs:member	"program"
s2	"logic program"	rdfs:member	"logic"
s2	"program rule"	rdfs:subClassOf	"rule"
s2	"suitable eg"	rdfs:subClassOf	"eg"
s2	"logic program rule"	rdfs:subClassOf	"program rule"
s2	"set of logic program rule"	rdfs:member	"set"
s2	"set of logic program rule"	rdfs:member	"logic program rule"
s1.2	"the user nonmonotonic rules suitable eg express defaults"
s1.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:subject	"nonmonotonic rule suitable eg"
s1.2	"nonmonotonic rule suitable eg"	rdfs:member	"suitable eg"
s1.2	"nonmonotonic rule suitable eg"	rdfs:member	"nonmonotonic rule"
s1.2	"suitable eg"	rdfs:member	"suitable"
s1.2	"suitable eg"	rdfs:subClassOf	"eg"
s1.2	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s1.2	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s1.2	"suitable rule"	rdfs:subClassOf	"rule"
s1.2	"nonmonotonic suitable rule"	rdfs:subClassOf	"suitable rule"
s1.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:predicate	"express"
s1.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:object	"default"
s1.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"
s1.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:subject	"user"
s1.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:predicate	"add"
s1.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:object	"set of nonmonotonic rule suitable eg"
s1.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"suitable eg"
s1.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"nonmonotonic rule"
s1.1	"set of nonmonotonic rule suitable eg"	rdfs:member	"set"
s1.1	"suitable eg"	rdfs:member	"suitable"
s1.1	"suitable eg"	rdfs:subClassOf	"eg"
s1.1	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s1.1	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s1.1	"set of nonmonotonic rule"	rdfs:member	"set"
s1.1	"set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s1.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	local:AM-PNC	"express default"
s1.1	"express default"	rdfs:subClassOf	"default"
s1.1	"express default"	rdfs:member	"express"
s1	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"
s1	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:subject	"protege plugin nohr"
s1	"protege plugin"	rdfs:member	"protege"
s1	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s1	"plugin nohr"	rdfs:member	"plugin"
s1	"plugin nohr"	rdfs:subClassOf	"nohr"
s1	"protege plugin nohr"	rdfs:member	"protege plugin"
s1	"protege plugin"	rdfs:subClassOf	"plugin"
s1	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s1	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:predicate	"allow"
s1	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:object	"user to add a set of nonmonotonic rule suitable eg to express default"
s1	"user to add a set of nonmonotonic rule suitable eg to express default"	rdfs:member	"default"
s1	"user to add a set of nonmonotonic rule suitable eg to express default"	rdfs:member	"user"
s1	"user to add a set of nonmonotonic rule suitable eg to express default"	rdfs:member	"nonmonotonic rule"
s1	"user to add a set of nonmonotonic rule suitable eg to express default"	rdfs:member	"suitable eg"
s1	"user to add a set of nonmonotonic rule suitable eg to express default"	rdfs:member	"set"
s1	"suitable eg"	rdfs:member	"suitable"
s1	"suitable eg"	rdfs:subClassOf	"eg"
s1	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s1	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s1	"set of nonmonotonic rule"	rdfs:member	"set"
s1	"set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s0.2	"the user logic programming rules suitable eg express exceptions"
s0.2	"the user logic programming rules suitable eg express exceptions"	rdf:subject	"logic program rule suitable eg"
s0.2	"logic program rule suitable eg"	rdfs:member	"logic program rule"
s0.2	"logic program rule suitable eg"	rdfs:member	"suitable eg"
s0.2	"logic program rule"	rdfs:subClassOf	"rule"
s0.2	"logic program rule"	rdfs:member	"logic program"
s0.2	"suitable eg"	rdfs:member	"suitable"
s0.2	"logic program"	rdfs:subClassOf	"program"
s0.2	"program rule"	rdfs:member	"program"
s0.2	"logic program"	rdfs:member	"logic"
s0.2	"program rule"	rdfs:subClassOf	"rule"
s0.2	"suitable eg"	rdfs:subClassOf	"eg"
s0.2	"suitable rule"	rdfs:subClassOf	"rule"
s0.2	"program suitable rule"	rdfs:subClassOf	"suitable rule"
s0.2	"logic program suitable rule"	rdfs:subClassOf	"program suitable rule"
s0.2	"the user logic programming rules suitable eg express exceptions"	rdf:predicate	"express"
s0.2	"the user logic programming rules suitable eg express exceptions"	rdf:object	"exception"
s0.1	"the user add a set of logic programming rules suitable eg to express exceptions"
s0.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:subject	"user"
s0.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:predicate	"add"
s0.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:object	"set of logic program rule suitable eg"
s0.1	"set of logic program rule suitable eg"	rdfs:member	"suitable eg"
s0.1	"set of logic program rule suitable eg"	rdfs:member	"logic program rule"
s0.1	"set of logic program rule suitable eg"	rdfs:member	"set"
s0.1	"logic program rule"	rdfs:subClassOf	"rule"
s0.1	"suitable eg"	rdfs:member	"suitable"
s0.1	"logic program rule"	rdfs:member	"logic program"
s0.1	"logic program"	rdfs:subClassOf	"program"
s0.1	"program rule"	rdfs:member	"program"
s0.1	"logic program"	rdfs:member	"logic"
s0.1	"program rule"	rdfs:subClassOf	"rule"
s0.1	"suitable eg"	rdfs:subClassOf	"eg"
s0.1	"logic program rule"	rdfs:subClassOf	"program rule"
s0.1	"set of logic program rule"	rdfs:member	"set"
s0.1	"set of logic program rule"	rdfs:member	"logic program rule"
s0.1	"the user add a set of logic programming rules suitable eg to express exceptions"	local:AM-PNC	"express exception"
s0.1	"express exception"	rdfs:member	"express"
s0.1	"express exception"	rdfs:subClassOf	"exception"
s0	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"
s0	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:subject	"protege plugin nohr"
s0	"protege plugin"	rdfs:member	"protege"
s0	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s0	"plugin nohr"	rdfs:member	"plugin"
s0	"plugin nohr"	rdfs:subClassOf	"nohr"
s0	"protege plugin nohr"	rdfs:member	"protege plugin"
s0	"protege plugin"	rdfs:subClassOf	"plugin"
s0	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s0	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:predicate	"allow"
s0	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:object	"user to add a set of logic program rule suitable eg to express exception"
s0	"user to add a set of logic program rule suitable eg to express exception"	rdfs:member	"user"
s0	"user to add a set of logic program rule suitable eg to express exception"	rdfs:member	"suitable eg"
s0	"user to add a set of logic program rule suitable eg to express exception"	rdfs:member	"exception"
s0	"user to add a set of logic program rule suitable eg to express exception"	rdfs:member	"set"
s0	"user to add a set of logic program rule suitable eg to express exception"	rdfs:member	"logic program rule"
s0	"logic program rule"	rdfs:subClassOf	"rule"
s0	"suitable eg"	rdfs:member	"suitable"
s0	"logic program rule"	rdfs:member	"logic program"
s0	"logic program"	rdfs:subClassOf	"program"
s0	"program rule"	rdfs:member	"program"
s0	"logic program"	rdfs:member	"logic"
s0	"program rule"	rdfs:subClassOf	"rule"
s0	"suitable eg"	rdfs:subClassOf	"eg"
s0	"logic program rule"	rdfs:subClassOf	"program rule"
s0	"set of logic program rule"	rdfs:member	"set"
s0	"set of logic program rule"	rdfs:member	"logic program rule"
