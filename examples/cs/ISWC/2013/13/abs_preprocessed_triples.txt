s14	"we system deal with possible inconsistencies between the nonmonotonic rules"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:subject	"system"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:predicate	"deal"
s14	"we system deal with possible inconsistencies between the nonmonotonic rules"	rdf:object	"possible inconsistencies between the nonmonotonic rules"
s14	"possible inconsistencies between the nonmonotonic rules"	rdfs:member	"possible inconsistencies"
s14	"possible inconsistencies between the nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s14	"possible inconsistencies"	rdfs:member	"possible"
s14	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s14	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s14	"possible inconsistencies"	rdfs:subClassOf	"inconsistencies"
s14	"possible inconsistencies between nonmonotonic rules"	rdfs:member	"possible inconsistencies"
s14	"possible inconsistencies between nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s13	"we system deal with an ontology"
s13	"we system deal with an ontology"	rdf:subject	"system"
s13	"we system deal with an ontology"	rdf:predicate	"deal"
s13	"we system deal with an ontology"	rdf:object	"ontology"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	rdf:subject	"large ontologies such as SNOMED CT augmented with a large number of rules"
s12.3	"large ontologies such as snomed ct augmented with a large number of rules"	rdfs:member	"snomed ct"
s12.3	"large ontologies such as snomed ct augmented with a large number of rules"	rdfs:member	"rules"
s12.3	"large ontologies such as snomed ct augmented with a large number of rules"	rdfs:member	"large number"
s12.3	"large ontologies such as snomed ct augmented with a large number of rules"	rdfs:member	"large ontologies"
s12.3	"large ontologies"	rdfs:member	"large"
s12.3	"large number"	rdfs:member	"large"
s12.3	"large ontologies"	rdfs:subClassOf	"ontologies"
s12.3	"large number"	rdfs:subClassOf	"number"
s12.3	"snomed ct"	rdfs:member	"snomed"
s12.3	"snomed ct"	rdfs:subClassOf	"ct"
s12.3	"large ontologies such_as snomed ct"	rdfs:member	"large ontologies"
s12.3	"large ontologies such_as snomed ct"	rdfs:member	"snomed ct"
s12.3	"augmented with large number"	rdfs:member	"augmented"
s12.3	"augmented with large number"	rdfs:member	"large number"
s12.3	"large number of rules"	rdfs:member	"large number"
s12.3	"large number of rules"	rdfs:member	"rules"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	rdf:predicate	"process"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	local:AM-MOD	"can"
s12.3	"very large ontologies such as snomed ct augmented with a large number of rules can processed at an interactive response time after one initial brief preprocessing period"	local:AM-TMP	"interactive response time after one initial brief preprocessing period"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"initial brief"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"preprocessing period"
s12.3	"interactive response time"	rdfs:member	"interactive response"
s12.3	"interactive response time"	rdfs:subClassOf	"time"
s12.3	"response time"	rdfs:member	"response"
s12.3	"response time"	rdfs:subClassOf	"time"
s12.3	"initial brief"	rdfs:subClassOf	"brief"
s12.3	"preprocessing period"	rdfs:subClassOf	"period"
s12.3	"interactive response"	rdfs:subClassOf	"response"
s12.3	"preprocessing period"	rdfs:member	"preprocessing"
s12.3	"initial brief"	rdfs:member	"initial"
s12.3	"interactive response"	rdfs:member	"interactive"
s12.3	"brief preprocessing period"	rdfs:subClassOf	"preprocessing period"
s12.3	"initial brief preprocessing period"	rdfs:subClassOf	"brief preprocessing period"
s12.3	"one initial brief preprocessing period"	rdfs:subClassOf	"initial brief preprocessing period"
s12.3	"interactive response time"	rdfs:subClassOf	"response time"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.3	"interactive response time after one initial brief preprocessing period"	rdfs:member	"one initial brief preprocessing period"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:subject	"large ontologies such as SNOMED CT"
s12.2	"large ontologies such as snomed ct"	rdfs:member	"snomed ct"
s12.2	"large ontologies such as snomed ct"	rdfs:member	"large ontologies"
s12.2	"large ontologies"	rdfs:subClassOf	"ontologies"
s12.2	"large ontologies"	rdfs:member	"large"
s12.2	"snomed ct"	rdfs:member	"snomed"
s12.2	"snomed ct"	rdfs:subClassOf	"ct"
s12.2	"large ontologies such_as snomed ct"	rdfs:member	"large ontologies"
s12.2	"large ontologies such_as snomed ct"	rdfs:member	"snomed ct"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:predicate	"augment"
s12.2	"very large ontologies such as snomed ct augmented with a large number of rules"	rdf:object	"large number of rules"
s12.2	"large number of rules"	rdfs:member	"rules"
s12.2	"large number of rules"	rdfs:member	"large number"
s12.2	"large number"	rdfs:subClassOf	"number"
s12.2	"large number"	rdfs:member	"large"
s12.2	"large number of rules"	rdfs:member	"large number"
s12.2	"large number of rules"	rdfs:member	"rules"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:subject	"resulting plugin"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:predicate	"query"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdf:object	"large ontologies such as SNOMED CT augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"large ontologies"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"snomed ct"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"rules"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"interactive response time"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"initial brief"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"preprocessing period"
s12.1	"large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	rdfs:member	"large number"
s12.1	"interactive response time"	rdfs:member	"interactive response"
s12.1	"large ontologies"	rdfs:member	"large"
s12.1	"interactive response time"	rdfs:subClassOf	"time"
s12.1	"response time"	rdfs:subClassOf	"time"
s12.1	"response time"	rdfs:member	"response"
s12.1	"initial brief"	rdfs:subClassOf	"brief"
s12.1	"preprocessing period"	rdfs:subClassOf	"period"
s12.1	"large number"	rdfs:member	"large"
s12.1	"interactive response"	rdfs:subClassOf	"response"
s12.1	"large ontologies"	rdfs:subClassOf	"ontologies"
s12.1	"initial brief"	rdfs:member	"initial"
s12.1	"preprocessing period"	rdfs:member	"preprocessing"
s12.1	"large number"	rdfs:subClassOf	"number"
s12.1	"snomed ct"	rdfs:member	"snomed"
s12.1	"interactive response"	rdfs:member	"interactive"
s12.1	"snomed ct"	rdfs:subClassOf	"ct"
s12.1	"brief preprocessing period"	rdfs:subClassOf	"preprocessing period"
s12.1	"initial brief preprocessing period"	rdfs:subClassOf	"brief preprocessing period"
s12.1	"one initial brief preprocessing period"	rdfs:subClassOf	"initial brief preprocessing period"
s12.1	"interactive response time"	rdfs:subClassOf	"response time"
s12.1	"can processed"	rdfs:subClassOf	"processed"
s12.1	"large ontologies such_as snomed ct"	rdfs:member	"large ontologies"
s12.1	"large ontologies such_as snomed ct"	rdfs:member	"snomed ct"
s12.1	"augmented with large number"	rdfs:member	"augmented"
s12.1	"augmented with large number"	rdfs:member	"large number"
s12.1	"large number of rules"	rdfs:member	"large number"
s12.1	"large number of rules"	rdfs:member	"rules"
s12.1	"can processed at interactive response time"	rdfs:member	"can processed"
s12.1	"can processed at interactive response time"	rdfs:member	"interactive response time"
s12.1	"can processed at interactive response time after one initial brief preprocessing period"	rdfs:member	"can processed at interactive response time"
s12.1	"can processed at interactive response time after one initial brief preprocessing period"	rdfs:member	"one initial brief preprocessing period"
s12.1	"the resulting plugin even queries to very large ontologies such as snomed ct augmented with a large number of rules can be processed at an interactive response time after one initial brief preprocessing period"	local:AM-ADV	"even"
s12	"resulting plugin"
s12	"resulting plugin"	rdf:subject	"plugin"
s12	"resulting plugin"	rdf:predicate	"result"
s11	"the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"
s11	"the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:subject	"tool with the help of OWL 2 EL reasoner ELK"
s11	"tool with the help of owl 2 el reasoner elk"	rdfs:member	"help"
s11	"tool with the help of owl 2 el reasoner elk"	rdfs:member	"el reasoner elk"
s11	"tool with the help of owl 2 el reasoner elk"	rdfs:member	"tool"
s11	"tool with the help of owl 2 el reasoner elk"	rdfs:member	"owl"
s11	"el reasoner elk"	rdfs:member	"el reasoner"
s11	"el reasoner"	rdfs:member	"el"
s11	"reasoner elk"	rdfs:subClassOf	"elk"
s11	"el reasoner"	rdfs:subClassOf	"reasoner"
s11	"el reasoner elk"	rdfs:subClassOf	"elk"
s11	"reasoner elk"	rdfs:member	"reasoner"
s11	"el reasoner elk"	rdfs:subClassOf	"reasoner elk"
s11	"2 el reasoner elk"	rdfs:subClassOf	"el reasoner elk"
s11	"owl 2 el reasoner elk"	rdfs:subClassOf	"2 el reasoner elk"
s11	"tool with help"	rdfs:member	"tool"
s11	"tool with help"	rdfs:member	"help"
s11	"help of owl 2 el reasoner elk"	rdfs:member	"help"
s11	"help of owl 2 el reasoner elk"	rdfs:member	"owl 2 el reasoner elk"
s11	"the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:predicate	"preprocesses"
s11	"the tool with the help of owl 2 el reasoner elk preprocesses the ontology into rules"	rdf:object	"ontology rules"
s11	"ontology rules"	rdfs:member	"ontology"
s11	"ontology rules"	rdfs:subClassOf	"rules"
s10.1	"the topdown querying engine xsb prolog"
s10.1	"the topdown querying engine xsb prolog"	rdf:subject	"topdown"
s10.1	"the topdown querying engine xsb prolog"	rdf:predicate	"query"
s10.1	"the topdown querying engine xsb prolog"	rdf:object	"engine XSB Prolog"
s10.1	"engine xsb"	rdfs:member	"engine"
s10.1	"engine xsb prolog"	rdfs:member	"engine xsb"
s10.1	"engine xsb"	rdfs:subClassOf	"xsb"
s10.1	"xsb prolog"	rdfs:member	"xsb"
s10.1	"xsb prolog"	rdfs:subClassOf	"prolog"
s10.1	"engine xsb prolog"	rdfs:subClassOf	"prolog"
s10.1	"engine xsb prolog"	rdfs:subClassOf	"xsb prolog"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:subject	"rules whose result together with the nonmonotonic rules"
s10	"rules whose result together with the nonmonotonic rules"	rdfs:member	"rules"
s10	"rules whose result together with the nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s10	"rules whose result together with the nonmonotonic rules"	rdfs:member	"result"
s10	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s10	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s10	"together result"	rdfs:subClassOf	"result"
s10	"together result with nonmonotonic rules"	rdfs:member	"together result"
s10	"together result with nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:predicate	"serve"
s10	"rules whose result together with the nonmonotonic rules serve as input for the topdown querying engine xsb prolog"	rdf:object	"input for the topdown querying engine XSB Prolog"
s10	"input for the topdown querying engine xsb prolog"	rdfs:member	"input"
s10	"input for the topdown querying engine xsb prolog"	rdfs:member	"topdown querying engine xsb prolog"
s10	"engine xsb"	rdfs:member	"engine"
s10	"topdown querying engine"	rdfs:subClassOf	"engine"
s10	"engine xsb prolog"	rdfs:member	"engine xsb"
s10	"engine xsb"	rdfs:subClassOf	"xsb"
s10	"querying engine xsb"	rdfs:member	"querying engine"
s10	"querying engine"	rdfs:subClassOf	"engine"
s10	"querying engine xsb prolog"	rdfs:member	"querying engine xsb"
s10	"querying engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"xsb prolog"	rdfs:member	"xsb"
s10	"topdown querying engine xsb prolog"	rdfs:member	"topdown querying engine xsb"
s10	"xsb prolog"	rdfs:subClassOf	"prolog"
s10	"querying engine xsb"	rdfs:subClassOf	"xsb"
s10	"topdown querying engine xsb"	rdfs:member	"topdown querying engine"
s10	"querying engine"	rdfs:member	"querying"
s10	"topdown querying engine xsb"	rdfs:subClassOf	"xsb"
s10	"topdown querying"	rdfs:subClassOf	"querying"
s10	"topdown querying engine"	rdfs:member	"topdown querying"
s10	"topdown querying engine xsb prolog"	rdfs:subClassOf	"prolog"
s10	"topdown querying"	rdfs:member	"topdown"
s10	"engine xsb prolog"	rdfs:subClassOf	"xsb prolog"
s9	"the tool the tool builds on the procedure slg"
s9	"the tool the tool builds on the procedure slg"	rdf:subject	"tool The tool"
s9	"the tool the tool builds on the procedure slg"	rdf:predicate	"build"
s9	"the tool the tool builds on the procedure slg"	local:AM-LOC	"procedure SLG"
s9	"procedure slg"	rdfs:member	"procedure"
s9	"procedure slg"	rdfs:subClassOf	"slg"
s8.2	"no restriction other than dlsafety imposed on the rules"
s8.2	"no restriction other than dlsafety imposed on the rules"	rdf:subject	"restriction other than DLsafety"
s8.2	"restriction other than dlsafety"	rdfs:member	"dlsafety"
s8.2	"restriction other than dlsafety"	rdfs:member	"restriction"
s8.2	"other restriction"	rdfs:subClassOf	"restriction"
s8.2	"other than dlsafety"	rdfs:member	"other"
s8.2	"other than dlsafety"	rdfs:member	"dlsafety"
s8.2	"no restriction other than dlsafety imposed on the rules"	rdf:predicate	"impose"
s8.2	"no restriction other than dlsafety imposed on the rules"	rdf:object	"rules"
s8.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"
s8.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:subject	"We"
s8.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:predicate	"use"
s8.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:object	"wellfounded semantics"
s8.1	"wellfounded semantics"	rdfs:subClassOf	"semantics"
s8.1	"we uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	local:AM-PNC	"MKNF knowledge bases as underlying formalism so no restriction other than DLsafety is imposed on the rules"
s8.1	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"underlying formalism"
s8.1	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"rules"
s8.1	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"dlsafety"
s8.1	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"restriction"
s8.1	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"mknf knowledge bases"
s8.1	"knowledge bases"	rdfs:subClassOf	"bases"
s8.1	"mknf knowledge"	rdfs:member	"mknf"
s8.1	"knowledge bases"	rdfs:member	"knowledge"
s8.1	"underlying formalism"	rdfs:subClassOf	"formalism"
s8.1	"mknf knowledge bases"	rdfs:subClassOf	"bases"
s8.1	"underlying formalism"	rdfs:member	"underlying"
s8.1	"mknf knowledge bases"	rdfs:member	"mknf knowledge"
s8.1	"mknf knowledge"	rdfs:subClassOf	"knowledge"
s8.1	"other restriction"	rdfs:subClassOf	"restriction"
s8.1	"no other restriction"	rdfs:subClassOf	"other restriction"
s8.1	"mknf knowledge bases"	rdfs:subClassOf	"knowledge bases"
s8.1	"mknf knowledge bases as underlying formalism"	rdfs:member	"mknf knowledge bases"
s8.1	"mknf knowledge bases as underlying formalism"	rdfs:member	"underlying formalism"
s8.1	"other than dlsafety"	rdfs:member	"other"
s8.1	"other than dlsafety"	rdfs:member	"dlsafety"
s8.1	"imposed on rules"	rdfs:member	"imposed"
s8.1	"imposed on rules"	rdfs:member	"rules"
s8	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"
s8	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:subject	"We"
s8	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:predicate	"approach"
s8	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdf:object	"uses the wellfounded semantics"
s8	"wellfounded semantics"	rdfs:subClassOf	"semantics"
s8	"wellfounded semantics"	rdfs:member	"wellfounded"
s8	"we approach uses the wellfounded semantics for mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	local:AM-PNC	"MKNF knowledge bases as underlying formalism so no restriction other than DLsafety is imposed on the rules"
s8	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"underlying formalism"
s8	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"rules"
s8	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"dlsafety"
s8	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"restriction"
s8	"mknf knowledge bases as underlying formalism so no restriction other than dlsafety is imposed on the rules"	rdfs:member	"mknf knowledge bases"
s8	"knowledge bases"	rdfs:subClassOf	"bases"
s8	"mknf knowledge"	rdfs:member	"mknf"
s8	"knowledge bases"	rdfs:member	"knowledge"
s8	"underlying formalism"	rdfs:subClassOf	"formalism"
s8	"mknf knowledge bases"	rdfs:subClassOf	"bases"
s8	"underlying formalism"	rdfs:member	"underlying"
s8	"mknf knowledge bases"	rdfs:member	"mknf knowledge"
s8	"mknf knowledge"	rdfs:subClassOf	"knowledge"
s8	"other restriction"	rdfs:subClassOf	"restriction"
s8	"no other restriction"	rdfs:subClassOf	"other restriction"
s8	"mknf knowledge bases"	rdfs:subClassOf	"knowledge bases"
s8	"mknf knowledge bases as underlying formalism"	rdfs:member	"mknf knowledge bases"
s8	"mknf knowledge bases as underlying formalism"	rdfs:member	"underlying formalism"
s8	"other than dlsafety"	rdfs:member	"other"
s8	"other than dlsafety"	rdfs:member	"dlsafety"
s8	"imposed on rules"	rdfs:member	"imposed"
s8	"imposed on rules"	rdfs:member	"rules"
s7	"the rules that can"
s7	"the rules that can"	rdf:subject	"rules"
s7	"the rules that can"	rdf:predicate	"write"
s7	"the rules that can"	local:AM-MOD	"can"
s6.2	"the user logic programming rules suitable eg express defaults"
s6.2	"the user logic programming rules suitable eg express defaults"	rdf:subject	"logic programming rules suitable eg"
s6.2	"logic programming rules suitable eg"	rdfs:member	"logic programming rules"
s6.2	"logic programming rules suitable eg"	rdfs:member	"suitable eg"
s6.2	"suitable eg"	rdfs:subClassOf	"eg"
s6.2	"programming rules"	rdfs:member	"programming"
s6.2	"programming rules"	rdfs:subClassOf	"rules"
s6.2	"logic programming rules"	rdfs:member	"logic programming"
s6.2	"suitable eg"	rdfs:member	"suitable"
s6.2	"logic programming rules"	rdfs:subClassOf	"rules"
s6.2	"logic programming"	rdfs:subClassOf	"programming"
s6.2	"logic programming"	rdfs:member	"logic"
s6.2	"suitable rules"	rdfs:subClassOf	"rules"
s6.2	"programming suitable rules"	rdfs:subClassOf	"suitable rules"
s6.2	"logic programming suitable rules"	rdfs:subClassOf	"programming suitable rules"
s6.2	"the user logic programming rules suitable eg express defaults"	rdf:predicate	"express"
s6.2	"the user logic programming rules suitable eg express defaults"	rdf:object	"defaults"
s6.1	"the user add a set of logic programming rules suitable eg to express defaults"
s6.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:subject	"user"
s6.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:predicate	"add"
s6.1	"the user add a set of logic programming rules suitable eg to express defaults"	rdf:object	"set of logic programming rules suitable eg"
s6.1	"set of logic programming rules suitable eg"	rdfs:member	"logic programming rules"
s6.1	"set of logic programming rules suitable eg"	rdfs:member	"suitable eg"
s6.1	"set of logic programming rules suitable eg"	rdfs:member	"set"
s6.1	"suitable eg"	rdfs:subClassOf	"eg"
s6.1	"programming rules"	rdfs:member	"programming"
s6.1	"programming rules"	rdfs:subClassOf	"rules"
s6.1	"logic programming rules"	rdfs:member	"logic programming"
s6.1	"suitable eg"	rdfs:member	"suitable"
s6.1	"logic programming rules"	rdfs:subClassOf	"rules"
s6.1	"logic programming"	rdfs:subClassOf	"programming"
s6.1	"logic programming"	rdfs:member	"logic"
s6.1	"suitable rules"	rdfs:subClassOf	"rules"
s6.1	"programming suitable rules"	rdfs:subClassOf	"suitable rules"
s6.1	"logic programming suitable rules"	rdfs:subClassOf	"programming suitable rules"
s6.1	"set of logic programming suitable rules"	rdfs:member	"set"
s6.1	"set of logic programming suitable rules"	rdfs:member	"logic programming suitable rules"
s6.1	"the user add a set of logic programming rules suitable eg to express defaults"	local:AM-PNC	"express defaults"
s6.1	"express defaults"	rdfs:member	"express"
s6.1	"express defaults"	rdfs:subClassOf	"defaults"
s6	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"
s6	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:subject	"Protege plugin NoHR"
s6	"protege plugin nohr"	rdfs:member	"protege plugin"
s6	"plugin nohr"	rdfs:member	"plugin"
s6	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s6	"protege plugin"	rdfs:subClassOf	"plugin"
s6	"protege plugin"	rdfs:member	"protege"
s6	"plugin nohr"	rdfs:subClassOf	"nohr"
s6	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s6	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:predicate	"allow"
s6	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express defaults"	rdf:object	"user to add a set of logic programming rules suitable eg to express defaults"
s6	"user to add a set of logic programming rules suitable eg to express defaults"	rdfs:member	"logic programming rules"
s6	"user to add a set of logic programming rules suitable eg to express defaults"	rdfs:member	"set"
s6	"user to add a set of logic programming rules suitable eg to express defaults"	rdfs:member	"defaults"
s6	"user to add a set of logic programming rules suitable eg to express defaults"	rdfs:member	"suitable eg"
s6	"user to add a set of logic programming rules suitable eg to express defaults"	rdfs:member	"user"
s6	"suitable eg"	rdfs:subClassOf	"eg"
s6	"programming rules"	rdfs:member	"programming"
s6	"programming rules"	rdfs:subClassOf	"rules"
s6	"logic programming rules"	rdfs:member	"logic programming"
s6	"suitable eg"	rdfs:member	"suitable"
s6	"logic programming rules"	rdfs:subClassOf	"rules"
s6	"logic programming"	rdfs:subClassOf	"programming"
s6	"logic programming"	rdfs:member	"logic"
s6	"logic programming rules"	rdfs:subClassOf	"programming rules"
s6	"set of logic programming rules"	rdfs:member	"set"
s6	"set of logic programming rules"	rdfs:member	"logic programming rules"
s5.2	"the user logic programming rules suitable eg express exceptions"
s5.2	"the user logic programming rules suitable eg express exceptions"	rdf:subject	"logic programming rules suitable eg"
s5.2	"logic programming rules suitable eg"	rdfs:member	"logic programming rules"
s5.2	"logic programming rules suitable eg"	rdfs:member	"suitable eg"
s5.2	"suitable eg"	rdfs:subClassOf	"eg"
s5.2	"programming rules"	rdfs:member	"programming"
s5.2	"programming rules"	rdfs:subClassOf	"rules"
s5.2	"logic programming rules"	rdfs:member	"logic programming"
s5.2	"suitable eg"	rdfs:member	"suitable"
s5.2	"logic programming rules"	rdfs:subClassOf	"rules"
s5.2	"logic programming"	rdfs:subClassOf	"programming"
s5.2	"logic programming"	rdfs:member	"logic"
s5.2	"suitable rules"	rdfs:subClassOf	"rules"
s5.2	"programming suitable rules"	rdfs:subClassOf	"suitable rules"
s5.2	"logic programming suitable rules"	rdfs:subClassOf	"programming suitable rules"
s5.2	"the user logic programming rules suitable eg express exceptions"	rdf:predicate	"express"
s5.2	"the user logic programming rules suitable eg express exceptions"	rdf:object	"exceptions"
s5.1	"the user add a set of logic programming rules suitable eg to express exceptions"
s5.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:subject	"user"
s5.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:predicate	"add"
s5.1	"the user add a set of logic programming rules suitable eg to express exceptions"	rdf:object	"set of logic programming rules suitable eg"
s5.1	"set of logic programming rules suitable eg"	rdfs:member	"logic programming rules"
s5.1	"set of logic programming rules suitable eg"	rdfs:member	"suitable eg"
s5.1	"set of logic programming rules suitable eg"	rdfs:member	"set"
s5.1	"suitable eg"	rdfs:subClassOf	"eg"
s5.1	"programming rules"	rdfs:member	"programming"
s5.1	"programming rules"	rdfs:subClassOf	"rules"
s5.1	"logic programming rules"	rdfs:member	"logic programming"
s5.1	"suitable eg"	rdfs:member	"suitable"
s5.1	"logic programming rules"	rdfs:subClassOf	"rules"
s5.1	"logic programming"	rdfs:subClassOf	"programming"
s5.1	"logic programming"	rdfs:member	"logic"
s5.1	"suitable rules"	rdfs:subClassOf	"rules"
s5.1	"programming suitable rules"	rdfs:subClassOf	"suitable rules"
s5.1	"logic programming suitable rules"	rdfs:subClassOf	"programming suitable rules"
s5.1	"set of logic programming suitable rules"	rdfs:member	"set"
s5.1	"set of logic programming suitable rules"	rdfs:member	"logic programming suitable rules"
s5.1	"the user add a set of logic programming rules suitable eg to express exceptions"	local:AM-PNC	"express exceptions"
s5.1	"express exceptions"	rdfs:subClassOf	"exceptions"
s5.1	"express exceptions"	rdfs:member	"express"
s5	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"
s5	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:subject	"Protege plugin NoHR"
s5	"protege plugin nohr"	rdfs:member	"protege plugin"
s5	"plugin nohr"	rdfs:member	"plugin"
s5	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s5	"protege plugin"	rdfs:subClassOf	"plugin"
s5	"protege plugin"	rdfs:member	"protege"
s5	"plugin nohr"	rdfs:subClassOf	"nohr"
s5	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s5	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:predicate	"allow"
s5	"the protege plugin nohr that allows the user to add a set of logic programming rules suitable eg to express exceptions"	rdf:object	"user to add a set of logic programming rules suitable eg to express exceptions"
s5	"user to add a set of logic programming rules suitable eg to express exceptions"	rdfs:member	"logic programming rules"
s5	"user to add a set of logic programming rules suitable eg to express exceptions"	rdfs:member	"set"
s5	"user to add a set of logic programming rules suitable eg to express exceptions"	rdfs:member	"suitable eg"
s5	"user to add a set of logic programming rules suitable eg to express exceptions"	rdfs:member	"user"
s5	"user to add a set of logic programming rules suitable eg to express exceptions"	rdfs:member	"exceptions"
s5	"suitable eg"	rdfs:subClassOf	"eg"
s5	"programming rules"	rdfs:member	"programming"
s5	"programming rules"	rdfs:subClassOf	"rules"
s5	"logic programming rules"	rdfs:member	"logic programming"
s5	"suitable eg"	rdfs:member	"suitable"
s5	"logic programming rules"	rdfs:subClassOf	"rules"
s5	"logic programming"	rdfs:subClassOf	"programming"
s5	"logic programming"	rdfs:member	"logic"
s5	"logic programming rules"	rdfs:subClassOf	"programming rules"
s5	"set of logic programming rules"	rdfs:member	"set"
s5	"set of logic programming rules"	rdfs:member	"logic programming rules"
s4.2	"the user a set of nonmonotonic rules suitable eg express exceptions"
s4.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:subject	"set of nonmonotonic rules suitable eg"
s4.2	"set of nonmonotonic rules suitable eg"	rdfs:member	"suitable eg"
s4.2	"set of nonmonotonic rules suitable eg"	rdfs:member	"nonmonotonic rules"
s4.2	"set of nonmonotonic rules suitable eg"	rdfs:member	"set"
s4.2	"suitable eg"	rdfs:subClassOf	"eg"
s4.2	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s4.2	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s4.2	"suitable eg"	rdfs:member	"suitable"
s4.2	"suitable rules"	rdfs:subClassOf	"rules"
s4.2	"nonmonotonic suitable rules"	rdfs:subClassOf	"suitable rules"
s4.2	"set of nonmonotonic suitable rules"	rdfs:member	"set"
s4.2	"set of nonmonotonic suitable rules"	rdfs:member	"nonmonotonic suitable rules"
s4.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:predicate	"express"
s4.2	"the user a set of nonmonotonic rules suitable eg express exceptions"	rdf:object	"exceptions"
s4.1	"the user add a set of nonmonotonic rules suitable eg"
s4.1	"the user add a set of nonmonotonic rules suitable eg"	rdf:subject	"user"
s4.1	"the user add a set of nonmonotonic rules suitable eg"	rdf:predicate	"add"
s4.1	"the user add a set of nonmonotonic rules suitable eg"	rdf:object	"set of nonmonotonic rules suitable eg"
s4.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"suitable eg"
s4.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"nonmonotonic rules"
s4.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"set"
s4.1	"suitable eg"	rdfs:subClassOf	"eg"
s4.1	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s4.1	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s4.1	"suitable eg"	rdfs:member	"suitable"
s4.1	"suitable rules"	rdfs:subClassOf	"rules"
s4.1	"nonmonotonic suitable rules"	rdfs:subClassOf	"suitable rules"
s4.1	"set of nonmonotonic suitable rules"	rdfs:member	"set"
s4.1	"set of nonmonotonic suitable rules"	rdfs:member	"nonmonotonic suitable rules"
s4	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"
s4	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:subject	"Protege plugin NoHR"
s4	"protege plugin nohr"	rdfs:member	"protege plugin"
s4	"plugin nohr"	rdfs:member	"plugin"
s4	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s4	"protege plugin"	rdfs:subClassOf	"plugin"
s4	"protege plugin"	rdfs:member	"protege"
s4	"plugin nohr"	rdfs:subClassOf	"nohr"
s4	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s4	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:predicate	"allow"
s4	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdf:object	"user to add a set of nonmonotonic rules suitable eg to express exceptions"
s4	"user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdfs:member	"set"
s4	"user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdfs:member	"suitable eg"
s4	"user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdfs:member	"user"
s4	"user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdfs:member	"nonmonotonic rules"
s4	"user to add a set of nonmonotonic rules suitable eg to express exceptions"	rdfs:member	"exceptions"
s4	"suitable eg"	rdfs:subClassOf	"eg"
s4	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s4	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s4	"suitable eg"	rdfs:member	"suitable"
s4	"set of nonmonotonic rules"	rdfs:member	"set"
s4	"set of nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s3	"we present the protege plugin nohr"
s3	"we present the protege plugin nohr"	rdf:subject	"We"
s3	"we present the protege plugin nohr"	rdf:predicate	"present"
s3	"we present the protege plugin nohr"	rdf:object	"Protege plugin NoHR"
s3	"protege plugin nohr"	rdfs:member	"protege plugin"
s3	"plugin nohr"	rdfs:member	"plugin"
s3	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s3	"protege plugin"	rdfs:subClassOf	"plugin"
s3	"protege plugin"	rdfs:member	"protege"
s3	"plugin nohr"	rdfs:subClassOf	"nohr"
s3	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s2.2	"the user nonmonotonic rules suitable eg express defaults"
s2.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:subject	"nonmonotonic rules suitable eg"
s2.2	"nonmonotonic rules suitable eg"	rdfs:member	"suitable eg"
s2.2	"nonmonotonic rules suitable eg"	rdfs:member	"nonmonotonic rules"
s2.2	"suitable eg"	rdfs:subClassOf	"eg"
s2.2	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s2.2	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s2.2	"suitable eg"	rdfs:member	"suitable"
s2.2	"suitable rules"	rdfs:subClassOf	"rules"
s2.2	"nonmonotonic suitable rules"	rdfs:subClassOf	"suitable rules"
s2.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:predicate	"express"
s2.2	"the user nonmonotonic rules suitable eg express defaults"	rdf:object	"defaults"
s2.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"
s2.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:subject	"user"
s2.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:predicate	"add"
s2.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	rdf:object	"set of nonmonotonic rules suitable eg"
s2.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"suitable eg"
s2.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"nonmonotonic rules"
s2.1	"set of nonmonotonic rules suitable eg"	rdfs:member	"set"
s2.1	"suitable eg"	rdfs:subClassOf	"eg"
s2.1	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s2.1	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s2.1	"suitable eg"	rdfs:member	"suitable"
s2.1	"suitable rules"	rdfs:subClassOf	"rules"
s2.1	"nonmonotonic suitable rules"	rdfs:subClassOf	"suitable rules"
s2.1	"set of nonmonotonic suitable rules"	rdfs:member	"set"
s2.1	"set of nonmonotonic suitable rules"	rdfs:member	"nonmonotonic suitable rules"
s2.1	"the user add a set of nonmonotonic rules suitable eg to express defaults"	local:AM-PNC	"express defaults"
s2.1	"express defaults"	rdfs:member	"express"
s2.1	"express defaults"	rdfs:subClassOf	"defaults"
s2	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"
s2	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:subject	"Protege plugin NoHR"
s2	"protege plugin nohr"	rdfs:member	"protege plugin"
s2	"plugin nohr"	rdfs:member	"plugin"
s2	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s2	"protege plugin"	rdfs:subClassOf	"plugin"
s2	"protege plugin"	rdfs:member	"protege"
s2	"plugin nohr"	rdfs:subClassOf	"nohr"
s2	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s2	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:predicate	"allow"
s2	"the protege plugin nohr that allows the user to add a set of nonmonotonic rules suitable eg to express defaults"	rdf:object	"user to add a set of nonmonotonic rules suitable eg to express defaults"
s2	"user to add a set of nonmonotonic rules suitable eg to express defaults"	rdfs:member	"set"
s2	"user to add a set of nonmonotonic rules suitable eg to express defaults"	rdfs:member	"defaults"
s2	"user to add a set of nonmonotonic rules suitable eg to express defaults"	rdfs:member	"suitable eg"
s2	"user to add a set of nonmonotonic rules suitable eg to express defaults"	rdfs:member	"user"
s2	"user to add a set of nonmonotonic rules suitable eg to express defaults"	rdfs:member	"nonmonotonic rules"
s2	"suitable eg"	rdfs:subClassOf	"eg"
s2	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s2	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s2	"suitable eg"	rdfs:member	"suitable"
s2	"set of nonmonotonic rules"	rdfs:member	"set"
s2	"set of nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s1.1	"the user take an el op ontology"
s1.1	"the user take an el op ontology"	rdf:subject	"user"
s1.1	"the user take an el op ontology"	rdf:predicate	"take"
s1.1	"the user take an el op ontology"	rdf:object	"EL op ontology"
s1.1	"el op ontology"	rdfs:member	"el"
s1.1	"el op ontology"	rdfs:member	"ontology"
s1.1	"op ontology"	rdfs:subClassOf	"ontology"
s1.1	"el op ontology"	rdfs:subClassOf	"op ontology"
s1	"the protege plugin nohr that allows the user to take an el op ontology"
s1	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:subject	"Protege plugin NoHR"
s1	"protege plugin nohr"	rdfs:member	"protege plugin"
s1	"plugin nohr"	rdfs:member	"plugin"
s1	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s1	"protege plugin"	rdfs:subClassOf	"plugin"
s1	"protege plugin"	rdfs:member	"protege"
s1	"plugin nohr"	rdfs:subClassOf	"nohr"
s1	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s1	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:predicate	"allow"
s1	"the protege plugin nohr that allows the user to take an el op ontology"	rdf:object	"user to take an EL op ontology"
s1	"user to take an el op ontology"	rdfs:member	"el op ontology"
s1	"user to take an el op ontology"	rdfs:member	"user"
s1	"el op ontology"	rdfs:subClassOf	"ontology"
s1	"op ontology"	rdfs:member	"op"
s1	"el op"	rdfs:member	"el"
s1	"el op ontology"	rdfs:member	"el op"
s1	"op ontology"	rdfs:subClassOf	"ontology"
s1	"el op"	rdfs:subClassOf	"op"
s1	"el op ontology"	rdfs:subClassOf	"op ontology"
s0.2	"combined knowledge base"
s0.2	"combined knowledge base"	rdf:subject	"knowledge base"
s0.2	"knowledge base"	rdfs:member	"knowledge"
s0.2	"knowledge base"	rdfs:subClassOf	"base"
s0.2	"combined knowledge base"	rdf:predicate	"combine"
s0.1	"the user query the combined knowledge base"
s0.1	"the user query the combined knowledge base"	rdf:subject	"user"
s0.1	"the user query the combined knowledge base"	rdf:predicate	"query"
s0.1	"the user query the combined knowledge base"	rdf:object	"combined knowledge base"
s0	"the protege plugin nohr that allows the user to query the combined knowledge base"
s0	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:subject	"Protege plugin NoHR"
s0	"protege plugin nohr"	rdfs:member	"protege plugin"
s0	"plugin nohr"	rdfs:member	"plugin"
s0	"protege plugin nohr"	rdfs:subClassOf	"nohr"
s0	"protege plugin"	rdfs:subClassOf	"plugin"
s0	"protege plugin"	rdfs:member	"protege"
s0	"plugin nohr"	rdfs:subClassOf	"nohr"
s0	"protege plugin nohr"	rdfs:subClassOf	"plugin nohr"
s0	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:predicate	"allow"
s0	"the protege plugin nohr that allows the user to query the combined knowledge base"	rdf:object	"user to query the combined knowledge base"
s0	"user to query the combined knowledge base"	rdfs:member	"user"
s0	"user to query the combined knowledge base"	rdfs:member	"knowledge base"
s0	"knowledge base"	rdfs:member	"knowledge"
s0	"knowledge base"	rdfs:subClassOf	"base"
s0	"combined knowledge base"	rdfs:subClassOf	"knowledge base"
