s13	"the solution allows for great engineering flexibility"
s13	"the solution allows for great engineering flexibility"	rdf:subject	"solution"
s13	"the solution allows for great engineering flexibility"	rdf:predicate	"allow"
s13	"the solution allows for great engineering flexibility"	rdf:object	"great engineer flexibility"
s13	"great engineer flexibility"	rdfs:subClassOf	"flexibility"
s13	"great engineer"	rdfs:subClassOf	"engineer"
s13	"engineer flexibility"	rdfs:subClassOf	"flexibility"
s13	"great engineer flexibility"	rdfs:member	"great engineer"
s13	"great engineer"	rdfs:member	"great"
s13	"engineer flexibility"	rdfs:member	"engineer"
s13	"great engineer flexibility"	rdfs:subClassOf	"engineer flexibility"
s12.2	"code moved across the web"
s12.2	"code moved across the web"	rdf:subject	"code"
s12.2	"code moved across the web"	rdf:predicate	"move"
s12.2	"code moved across the web"	local:AM-LOC	"across the web"
s12.1	"javaenabled"
s12.1	"javaenabled"	rdf:predicate	"javaenabled"
s12	"this requires hosts to be javaenabled"
s12	"this requires hosts to be javaenabled"	rdf:subject	"this"
s12	"this requires hosts to be javaenabled"	rdf:predicate	"require"
s12	"this requires hosts to be javaenabled"	rdf:object	"host to be javaenabled"
s11.2	"rules moved across the web"
s11.2	"rules moved across the web"	rdf:subject	"rule"
s11.2	"rules moved across the web"	rdf:predicate	"move"
s11.2	"rules moved across the web"	local:AM-LOC	"across the web"
s11.1	"javaenabled"
s11.1	"javaenabled"	rdf:predicate	"javaenabled"
s11	"this requires hosts to be javaenabled"
s11	"this requires hosts to be javaenabled"	rdf:subject	"this"
s11	"this requires hosts to be javaenabled"	rdf:predicate	"require"
s11	"this requires hosts to be javaenabled"	rdf:object	"host to be javaenabled"
s10.3	""
s10.3	""	rdf:predicate	"fire"
s10.2	"javaenabled reaction rules where calls to java libraries can performed upon a rule firing"
s10.2	"javaenabled reaction rules where calls to java libraries can performed upon a rule firing"	rdf:subject	"javaenabled reaction rule where call to java library"
s10.2	"javaenabled reaction rule where call to java library"	rdfs:member	"call"
s10.2	"javaenabled reaction rule where call to java library"	rdfs:member	"reaction rule"
s10.2	"reaction rule"	rdfs:subClassOf	"rule"
s10.2	"reaction rule"	rdfs:member	"reaction"
s10.2	"java library"	rdfs:subClassOf	"library"
s10.2	"javaenabled reaction rule"	rdfs:subClassOf	"reaction rule"
s10.2	"javaenabled reaction rule where"	rdfs:member	"javaenabled reaction rule"
s10.2	"javaenabled reaction rule where"	rdfs:member	"where"
s10.2	"call to java library"	rdfs:member	"call"
s10.2	"call to java library"	rdfs:member	"java library"
s10.2	"javaenabled reaction rules where calls to java libraries can performed upon a rule firing"	rdf:predicate	"perform"
s10.2	"javaenabled reaction rules where calls to java libraries can performed upon a rule firing"	local:AM-MOD	"can"
s10.2	"javaenabled reaction rules where calls to java libraries can performed upon a rule firing"	local:AM-TMP	"upon a rule fire"
s10.2	"rule fire"	rdfs:member	"rule"
s10.2	"rule fire"	rdfs:subClassOf	"fire"
s10.1	"that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"
s10.1	"that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"	rdf:subject	"javaenabled reaction rule where call to java library can be perform upon a rule fire"
s10.1	"javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"rule fire"
s10.1	"javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"call"
s10.1	"javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"reaction rule"
s10.1	"rule fire"	rdfs:member	"rule"
s10.1	"reaction rule"	rdfs:subClassOf	"rule"
s10.1	"rule fire"	rdfs:subClassOf	"fire"
s10.1	"reaction rule"	rdfs:member	"reaction"
s10.1	"be perform"	rdfs:subClassOf	"perform"
s10.1	"can be perform"	rdfs:subClassOf	"be perform"
s10.1	"java library"	rdfs:subClassOf	"library"
s10.1	"where can be perform"	rdfs:subClassOf	"can be perform"
s10.1	"javaenabled reaction rule"	rdfs:subClassOf	"reaction rule"
s10.1	"call to java library"	rdfs:member	"call"
s10.1	"call to java library"	rdfs:member	"java library"
s10.1	"where can be perform upon rule fire"	rdfs:member	"where can be perform"
s10.1	"where can be perform upon rule fire"	rdfs:member	"rule fire"
s10.1	"that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"	rdf:predicate	"allow"
s10	"an extension to ruleml proposed that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"
s10	"an extension to ruleml proposed that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"	rdf:subject	"extension to ruleml"
s10	"extension to ruleml"	rdfs:member	"extension"
s10	"extension to ruleml"	rdfs:member	"ruleml"
s10	"an extension to ruleml proposed that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"	rdf:predicate	"propose"
s10	"an extension to ruleml proposed that allows javaenabled reaction rules where calls to java libraries can be performed upon a rule firing"	rdf:object	"allow javaenabled reaction rule where call to java library can be perform upon a rule fire"
s10	"allow javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"javaenabled reaction rule"
s10	"allow javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"rule fire"
s10	"allow javaenabled reaction rule where call to java library can be perform upon a rule fire"	rdfs:member	"call"
s10	"rule fire"	rdfs:member	"rule"
s10	"javaenabled reaction"	rdfs:member	"javaenabled"
s10	"javaenabled reaction rule"	rdfs:member	"javaenabled reaction"
s10	"javaenabled reaction rule"	rdfs:subClassOf	"rule"
s10	"reaction rule"	rdfs:subClassOf	"rule"
s10	"rule fire"	rdfs:subClassOf	"fire"
s10	"javaenabled reaction"	rdfs:subClassOf	"reaction"
s10	"reaction rule"	rdfs:member	"reaction"
s10	"be perform"	rdfs:subClassOf	"perform"
s10	"can be perform"	rdfs:subClassOf	"be perform"
s10	"java library"	rdfs:subClassOf	"library"
s10	"where can be perform"	rdfs:subClassOf	"can be perform"
s10	"javaenabled reaction rule"	rdfs:subClassOf	"reaction rule"
s10	"call to java library"	rdfs:member	"call"
s10	"call to java library"	rdfs:member	"java library"
s10	"where can be perform upon rule fire"	rdfs:member	"where can be perform"
s10	"where can be perform upon rule fire"	rdfs:member	"rule fire"
s9	"we present the conversion tools"
s9	"we present the conversion tools"	rdf:subject	"we"
s9	"we present the conversion tools"	rdf:predicate	"present"
s9	"we present the conversion tools"	rdf:object	"conversion tool"
s9	"conversion tool"	rdfs:subClassOf	"tool"
s9	"conversion tool"	rdfs:member	"conversion"
s8	"we present the conversion tools limitations"
s8	"we present the conversion tools limitations"	rdf:subject	"we"
s8	"we present the conversion tools limitations"	rdf:predicate	"present"
s8	"we present the conversion tools limitations"	rdf:object	"conversion tool limitation"
s8	"tool limitation"	rdfs:member	"tool"
s8	"conversion tool limitation"	rdfs:subClassOf	"limitation"
s8	"conversion tool limitation"	rdfs:member	"conversion tool"
s8	"conversion tool"	rdfs:subClassOf	"tool"
s8	"tool limitation"	rdfs:subClassOf	"limitation"
s8	"conversion tool"	rdfs:member	"conversion"
s8	"conversion tool limitation"	rdfs:subClassOf	"tool limitation"
s7.1	"existing this landscape"
s7.1	"existing this landscape"	rdf:subject	"landscape"
s7.1	"existing this landscape"	rdf:predicate	"exist"
s7	"this necessarily imposes some restrictions the ease of integration into an existing this landscape"
s7	"this necessarily imposes some restrictions the ease of integration into an existing this landscape"	rdf:subject	"this"
s7	"this necessarily imposes some restrictions the ease of integration into an existing this landscape"	rdf:predicate	"impose"
s7	"this necessarily imposes some restrictions the ease of integration into an existing this landscape"	rdf:object	"ease of integration restriction exist this landscape"
s7	"ease of integration restriction exist this landscape"	rdfs:member	"ease"
s7	"ease of integration restriction exist this landscape"	rdfs:member	"landscape"
s7	"ease of integration restriction exist this landscape"	rdfs:member	"integration restriction"
s7	"integration restriction"	rdfs:member	"integration"
s7	"integration restriction"	rdfs:subClassOf	"restriction"
s7	"ease of integration restriction"	rdfs:member	"ease"
s7	"ease of integration restriction"	rdfs:member	"integration restriction"
s7	"this necessarily imposes some restrictions the ease of integration into an existing this landscape"	local:AM-ADV	"necessarily"
s6	"using our solution bases on mainstream technologies like java"
s6	"using our solution bases on mainstream technologies like java"	rdf:subject	"solution base on mainstream technology"
s6	"solution base on mainstream technology"	rdfs:member	"mainstream technology"
s6	"solution base on mainstream technology"	rdfs:member	"solution base"
s6	"mainstream technology"	rdfs:subClassOf	"technology"
s6	"solution base"	rdfs:subClassOf	"base"
s6	"mainstream technology"	rdfs:member	"mainstream"
s6	"solution base"	rdfs:member	"solution"
s6	"solution base on mainstream technology"	rdfs:member	"solution base"
s6	"solution base on mainstream technology"	rdfs:member	"mainstream technology"
s6	"using our solution bases on mainstream technologies like java"	rdf:predicate	"use"
s6	"using our solution bases on mainstream technologies like java"	rdf:object	"like java"
s5	"using relational database systems"
s5	"using relational database systems"	rdf:subject	"relational database system"
s5	"database system"	rdfs:subClassOf	"system"
s5	"relational database system"	rdfs:member	"relational database"
s5	"relational database system"	rdfs:subClassOf	"system"
s5	"relational database"	rdfs:member	"relational"
s5	"relational database"	rdfs:subClassOf	"database"
s5	"database system"	rdfs:member	"database"
s5	"relational database system"	rdfs:subClassOf	"database system"
s5	"using relational database systems"	rdf:predicate	"use"
s4	"using traditional inference systems"
s4	"using traditional inference systems"	rdf:subject	"traditional inference system"
s4	"traditional inference"	rdfs:member	"traditional"
s4	"inference system"	rdfs:member	"inference"
s4	"inference system"	rdfs:subClassOf	"system"
s4	"traditional inference system"	rdfs:member	"traditional inference"
s4	"traditional inference"	rdfs:subClassOf	"inference"
s4	"traditional inference system"	rdfs:subClassOf	"system"
s4	"traditional inference system"	rdfs:subClassOf	"inference system"
s4	"using traditional inference systems"	rdf:predicate	"use"
s3.1	"automatically converting ruleml sources into storage repository"
s3.1	"automatically converting ruleml sources into storage repository"	rdf:subject	"ruleml source"
s3.1	"ruleml source"	rdfs:subClassOf	"source"
s3.1	"ruleml source"	rdfs:member	"ruleml"
s3.1	"automatically converting ruleml sources into storage repository"	rdf:predicate	"convert"
s3.1	"automatically converting ruleml sources into storage repository"	rdf:object	"storage repository"
s3.1	"storage repository"	rdfs:subClassOf	"repository"
s3.1	"storage repository"	rdfs:member	"storage"
s3.1	"automatically converting ruleml sources into storage repository"	local:AM-MNR	"automatically"
s3	"this paper describes two approaches for automatically converting ruleml sources into storage repository"
s3	"this paper describes two approaches for automatically converting ruleml sources into storage repository"	rdf:subject	"paper"
s3	"this paper describes two approaches for automatically converting ruleml sources into storage repository"	rdf:predicate	"describe"
s3	"this paper describes two approaches for automatically converting ruleml sources into storage repository"	rdf:object	"two approach for automatically convert ruleml source into storage repository"
s3	"two approach for automatically convert ruleml source into storage repository"	rdfs:member	"approach"
s3	"two approach for automatically convert ruleml source into storage repository"	rdfs:member	"storage repository"
s3	"two approach for automatically convert ruleml source into storage repository"	rdfs:member	"automatically convert ruleml source"
s3	"convert ruleml"	rdfs:subClassOf	"ruleml"
s3	"ruleml source"	rdfs:member	"ruleml"
s3	"convert ruleml source"	rdfs:member	"convert ruleml"
s3	"automatically convert"	rdfs:member	"automatically"
s3	"storage repository"	rdfs:member	"storage"
s3	"ruleml source"	rdfs:subClassOf	"source"
s3	"convert ruleml source"	rdfs:subClassOf	"source"
s3	"automatically convert ruleml source"	rdfs:member	"automatically convert ruleml"
s3	"automatically convert ruleml source"	rdfs:subClassOf	"source"
s3	"automatically convert ruleml"	rdfs:member	"automatically convert"
s3	"storage repository"	rdfs:subClassOf	"repository"
s3	"automatically convert ruleml"	rdfs:subClassOf	"ruleml"
s3	"convert ruleml"	rdfs:member	"convert"
s3	"automatically convert"	rdfs:subClassOf	"convert"
s3	"two approach"	rdfs:subClassOf	"approach"
s3	"automatically convert into storage repository"	rdfs:member	"automatically convert"
s3	"automatically convert into storage repository"	rdfs:member	"storage repository"
s2.1	"automatically converting ruleml sources into an inference engine"
s2.1	"automatically converting ruleml sources into an inference engine"	rdf:subject	"ruleml source"
s2.1	"ruleml source"	rdfs:subClassOf	"source"
s2.1	"ruleml source"	rdfs:member	"ruleml"
s2.1	"automatically converting ruleml sources into an inference engine"	rdf:predicate	"convert"
s2.1	"automatically converting ruleml sources into an inference engine"	rdf:object	"inference engine"
s2.1	"inference engine"	rdfs:member	"inference"
s2.1	"inference engine"	rdfs:subClassOf	"engine"
s2.1	"automatically converting ruleml sources into an inference engine"	local:AM-MNR	"automatically"
s2	"this paper describes two approaches for automatically converting ruleml sources into an inference engine"
s2	"this paper describes two approaches for automatically converting ruleml sources into an inference engine"	rdf:subject	"paper"
s2	"this paper describes two approaches for automatically converting ruleml sources into an inference engine"	rdf:predicate	"describe"
s2	"this paper describes two approaches for automatically converting ruleml sources into an inference engine"	rdf:object	"two approach for automatically convert ruleml source into an inference engine"
s2	"two approach for automatically convert ruleml source into an inference engine"	rdfs:member	"approach"
s2	"two approach for automatically convert ruleml source into an inference engine"	rdfs:member	"automatically convert ruleml source"
s2	"two approach for automatically convert ruleml source into an inference engine"	rdfs:member	"inference engine"
s2	"convert ruleml"	rdfs:subClassOf	"ruleml"
s2	"ruleml source"	rdfs:member	"ruleml"
s2	"convert ruleml source"	rdfs:member	"convert ruleml"
s2	"inference engine"	rdfs:subClassOf	"engine"
s2	"automatically convert"	rdfs:member	"automatically"
s2	"inference engine"	rdfs:member	"inference"
s2	"ruleml source"	rdfs:subClassOf	"source"
s2	"convert ruleml source"	rdfs:subClassOf	"source"
s2	"automatically convert ruleml source"	rdfs:member	"automatically convert ruleml"
s2	"automatically convert ruleml source"	rdfs:subClassOf	"source"
s2	"automatically convert ruleml"	rdfs:member	"automatically convert"
s2	"automatically convert ruleml"	rdfs:subClassOf	"ruleml"
s2	"convert ruleml"	rdfs:member	"convert"
s2	"automatically convert"	rdfs:subClassOf	"convert"
s2	"two approach"	rdfs:subClassOf	"approach"
s2	"automatically convert into inference engine"	rdfs:member	"automatically convert"
s2	"automatically convert into inference engine"	rdfs:member	"inference engine"
s1.1	"automatically converting rdf schema into storage repository"
s1.1	"automatically converting rdf schema into storage repository"	rdf:subject	"rdf schema"
s1.1	"rdf schema"	rdfs:member	"rdf"
s1.1	"rdf schema"	rdfs:subClassOf	"schema"
s1.1	"automatically converting rdf schema into storage repository"	rdf:predicate	"convert"
s1.1	"automatically converting rdf schema into storage repository"	rdf:object	"storage repository"
s1.1	"storage repository"	rdfs:subClassOf	"repository"
s1.1	"storage repository"	rdfs:member	"storage"
s1.1	"automatically converting rdf schema into storage repository"	local:AM-MNR	"automatically"
s1	"this paper describes two approaches for automatically converting rdf schema into storage repository"
s1	"this paper describes two approaches for automatically converting rdf schema into storage repository"	rdf:subject	"paper"
s1	"this paper describes two approaches for automatically converting rdf schema into storage repository"	rdf:predicate	"describe"
s1	"this paper describes two approaches for automatically converting rdf schema into storage repository"	rdf:object	"two approach for automatically convert rdf schema into storage repository"
s1	"two approach for automatically convert rdf schema into storage repository"	rdfs:member	"automatically convert rdf schema"
s1	"two approach for automatically convert rdf schema into storage repository"	rdfs:member	"approach"
s1	"two approach for automatically convert rdf schema into storage repository"	rdfs:member	"storage repository"
s1	"rdf schema"	rdfs:member	"rdf"
s1	"automatically convert rdf"	rdfs:subClassOf	"rdf"
s1	"convert rdf"	rdfs:member	"convert"
s1	"convert rdf"	rdfs:subClassOf	"rdf"
s1	"automatically convert"	rdfs:member	"automatically"
s1	"automatically convert rdf schema"	rdfs:member	"automatically convert rdf"
s1	"storage repository"	rdfs:member	"storage"
s1	"rdf schema"	rdfs:subClassOf	"schema"
s1	"convert rdf schema"	rdfs:member	"convert rdf"
s1	"storage repository"	rdfs:subClassOf	"repository"
s1	"convert rdf schema"	rdfs:subClassOf	"schema"
s1	"automatically convert rdf schema"	rdfs:subClassOf	"schema"
s1	"automatically convert"	rdfs:subClassOf	"convert"
s1	"automatically convert rdf"	rdfs:member	"automatically convert"
s1	"two approach"	rdfs:subClassOf	"approach"
s1	"automatically convert into storage repository"	rdfs:member	"automatically convert"
s1	"automatically convert into storage repository"	rdfs:member	"storage repository"
s0.1	"this paper automatically converting rdf schema into an inference engine"
s0.1	"this paper automatically converting rdf schema into an inference engine"	rdf:subject	"paper"
s0.1	"this paper automatically converting rdf schema into an inference engine"	rdf:predicate	"convert"
s0.1	"this paper automatically converting rdf schema into an inference engine"	rdf:object	"rdf schema inference engine"
s0.1	"rdf schema"	rdfs:member	"rdf"
s0.1	"inference engine"	rdfs:subClassOf	"engine"
s0.1	"rdf schema inference"	rdfs:member	"rdf schema"
s0.1	"inference engine"	rdfs:member	"inference"
s0.1	"schema inference"	rdfs:member	"schema"
s0.1	"rdf schema"	rdfs:subClassOf	"schema"
s0.1	"rdf schema inference engine"	rdfs:subClassOf	"engine"
s0.1	"schema inference"	rdfs:subClassOf	"inference"
s0.1	"rdf schema inference engine"	rdfs:member	"rdf schema inference"
s0.1	"rdf schema inference"	rdfs:subClassOf	"inference"
s0.1	"schema inference engine"	rdfs:member	"schema inference"
s0.1	"schema inference engine"	rdfs:subClassOf	"engine"
s0.1	"schema inference engine"	rdfs:subClassOf	"inference engine"
s0.1	"rdf schema inference engine"	rdfs:subClassOf	"schema inference engine"
s0.1	"this paper automatically converting rdf schema into an inference engine"	local:AM-MNR	"automatically"
s0	"this paper describes two approaches for automatically converting rdf schema into an inference engine"
s0	"this paper describes two approaches for automatically converting rdf schema into an inference engine"	rdf:subject	"paper"
s0	"this paper describes two approaches for automatically converting rdf schema into an inference engine"	rdf:predicate	"describe"
s0	"this paper describes two approaches for automatically converting rdf schema into an inference engine"	rdf:object	"two approach for automatically convert rdf schema into an inference engine"
s0	"two approach for automatically convert rdf schema into an inference engine"	rdfs:member	"automatically convert rdf schema"
s0	"two approach for automatically convert rdf schema into an inference engine"	rdfs:member	"approach"
s0	"two approach for automatically convert rdf schema into an inference engine"	rdfs:member	"inference engine"
s0	"rdf schema"	rdfs:member	"rdf"
s0	"automatically convert rdf"	rdfs:subClassOf	"rdf"
s0	"convert rdf"	rdfs:member	"convert"
s0	"convert rdf"	rdfs:subClassOf	"rdf"
s0	"inference engine"	rdfs:subClassOf	"engine"
s0	"automatically convert"	rdfs:member	"automatically"
s0	"automatically convert rdf schema"	rdfs:member	"automatically convert rdf"
s0	"inference engine"	rdfs:member	"inference"
s0	"rdf schema"	rdfs:subClassOf	"schema"
s0	"convert rdf schema"	rdfs:member	"convert rdf"
s0	"convert rdf schema"	rdfs:subClassOf	"schema"
s0	"automatically convert rdf schema"	rdfs:subClassOf	"schema"
s0	"automatically convert"	rdfs:subClassOf	"convert"
s0	"automatically convert rdf"	rdfs:member	"automatically convert"
s0	"two approach"	rdfs:subClassOf	"approach"
s0	"automatically convert into inference engine"	rdfs:member	"automatically convert"
s0	"automatically convert into inference engine"	rdfs:member	"inference engine"
