s17.1	"the evaluation of topk queries can sped up by orders of magnitude"
s17.1	"the evaluation of topk queries can sped up by orders of magnitude"	rdf:subject	"order of magnitude"
s17.1	"order of magnitude"	rdfs:member	"magnitude"
s17.1	"order of magnitude"	rdfs:member	"order"
s17.1	"order of magnitude"	rdfs:member	"order"
s17.1	"order of magnitude"	rdfs:member	"magnitude"
s17.1	"the evaluation of topk queries can sped up by orders of magnitude"	rdf:predicate	"speed"
s17.1	"the evaluation of topk queries can sped up by orders of magnitude"	rdf:object	"evaluation of topk query"
s17.1	"evaluation of topk query"	rdfs:member	"topk query"
s17.1	"evaluation of topk query"	rdfs:member	"evaluation"
s17.1	"topk query"	rdfs:member	"topk"
s17.1	"topk query"	rdfs:subClassOf	"query"
s17.1	"evaluation of topk query"	rdfs:member	"evaluation"
s17.1	"evaluation of topk query"	rdfs:member	"topk query"
s17.1	"the evaluation of topk queries can sped up by orders of magnitude"	local:AM-MOD	"can"
s17	"experiments show that the evaluation of topk queries can be sped up by orders of magnitude"
s17	"experiments show that the evaluation of topk queries can be sped up by orders of magnitude"	rdf:subject	"experiment"
s17	"experiments show that the evaluation of topk queries can be sped up by orders of magnitude"	rdf:predicate	"show"
s17	"experiments show that the evaluation of topk queries can be sped up by orders of magnitude"	rdf:object	"evaluation of topk query can be speed up by order of magnitude"
s17	"evaluation of topk query can be speed up by order of magnitude"	rdfs:member	"magnitude"
s17	"evaluation of topk query can be speed up by order of magnitude"	rdfs:member	"topk query"
s17	"evaluation of topk query can be speed up by order of magnitude"	rdfs:member	"order"
s17	"evaluation of topk query can be speed up by order of magnitude"	rdfs:member	"evaluation"
s17	"topk query"	rdfs:member	"topk"
s17	"topk query"	rdfs:subClassOf	"query"
s17	"be speed"	rdfs:subClassOf	"speed"
s17	"can be speed"	rdfs:subClassOf	"be speed"
s17	"evaluation of topk query"	rdfs:member	"evaluation"
s17	"evaluation of topk query"	rdfs:member	"topk query"
s17	"can be speed by order"	rdfs:member	"can be speed"
s17	"can be speed by order"	rdfs:member	"order"
s17	"order of magnitude"	rdfs:member	"order"
s17	"order of magnitude"	rdfs:member	"magnitude"
s16.1	"a sparqlrank query engine based on arq"
s16.1	"a sparqlrank query engine based on arq"	rdf:subject	"sparqlrank query engine"
s16.1	"sparqlrank query engine"	rdfs:member	"sparqlrank query"
s16.1	"query engine"	rdfs:member	"query"
s16.1	"query engine"	rdfs:subClassOf	"engine"
s16.1	"sparqlrank query"	rdfs:subClassOf	"query"
s16.1	"sparqlrank query engine"	rdfs:subClassOf	"engine"
s16.1	"sparqlrank query"	rdfs:member	"sparqlrank"
s16.1	"sparqlrank query engine"	rdfs:subClassOf	"query engine"
s16.1	"a sparqlrank query engine based on arq"	rdf:predicate	"base"
s16.1	"a sparqlrank query engine based on arq"	local:AM-LOC	"arq"
s16	"experiments conducted with an open source implementation of a sparqlrank query engine based on arq"
s16	"experiments conducted with an open source implementation of a sparqlrank query engine based on arq"	rdf:subject	"experiment"
s16	"experiments conducted with an open source implementation of a sparqlrank query engine based on arq"	rdf:predicate	"conduct"
s16	"experiments conducted with an open source implementation of a sparqlrank query engine based on arq"	rdf:object	"open source implementation of a sparqlrank query engine base on arq"
s16	"open source implementation of a sparqlrank query engine base on arq"	rdfs:member	"open source implementation"
s16	"open source implementation of a sparqlrank query engine base on arq"	rdfs:member	"sparqlrank query engine base"
s16	"open source implementation of a sparqlrank query engine base on arq"	rdfs:member	"arq"
s16	"open source implementation"	rdfs:subClassOf	"implementation"
s16	"engine base"	rdfs:subClassOf	"base"
s16	"query engine base"	rdfs:member	"query engine"
s16	"sparqlrank query engine base"	rdfs:member	"sparqlrank query engine"
s16	"sparqlrank query engine base"	rdfs:subClassOf	"base"
s16	"sparqlrank query engine"	rdfs:member	"sparqlrank query"
s16	"source implementation"	rdfs:member	"source"
s16	"query engine"	rdfs:member	"query"
s16	"open source"	rdfs:subClassOf	"source"
s16	"query engine"	rdfs:subClassOf	"engine"
s16	"sparqlrank query"	rdfs:subClassOf	"query"
s16	"query engine base"	rdfs:subClassOf	"base"
s16	"source implementation"	rdfs:subClassOf	"implementation"
s16	"open source"	rdfs:member	"open"
s16	"engine base"	rdfs:member	"engine"
s16	"sparqlrank query engine"	rdfs:subClassOf	"engine"
s16	"open source implementation"	rdfs:member	"open source"
s16	"sparqlrank query"	rdfs:member	"sparqlrank"
s16	"query engine base"	rdfs:subClassOf	"engine base"
s16	"sparqlrank query engine base"	rdfs:subClassOf	"query engine base"
s16	"open source implementation"	rdfs:subClassOf	"source implementation"
s16	"open source implementation of sparqlrank query engine base"	rdfs:member	"open source implementation"
s16	"open source implementation of sparqlrank query engine base"	rdfs:member	"sparqlrank query engine base"
s16	"sparqlrank query engine base on arq"	rdfs:member	"sparqlrank query engine base"
s16	"sparqlrank query engine base on arq"	rdfs:member	"arq"
s15	"algorithm optimized for native rdf stores"
s15	"algorithm optimized for native rdf stores"	rdf:subject	"algorithm"
s15	"algorithm optimized for native rdf stores"	rdf:predicate	"optimize"
s15	"algorithm optimized for native rdf stores"	rdf:object	"native rdf store"
s15	"native rdf"	rdfs:subClassOf	"rdf"
s15	"rdf store"	rdfs:member	"rdf"
s15	"rdf store"	rdfs:subClassOf	"store"
s15	"native rdf store"	rdfs:member	"native rdf"
s15	"native rdf"	rdfs:member	"native"
s15	"native rdf store"	rdfs:subClassOf	"store"
s15	"native rdf store"	rdfs:subClassOf	"rdf store"
s14.2	"rankaware join algorithm"
s14.2	"rankaware join algorithm"	rdf:subject	"rankaware"
s14.2	"rankaware join algorithm"	rdf:predicate	"join"
s14.2	"rankaware join algorithm"	rdf:object	"algorithm"
s14.1	"we compare the performance of alternative physical operators"
s14.1	"we compare the performance of alternative physical operators"	rdf:subject	"we"
s14.1	"we compare the performance of alternative physical operators"	rdf:predicate	"compare"
s14.1	"we compare the performance of alternative physical operators"	rdf:object	"performance of alternative physical operator"
s14.1	"performance of alternative physical operator"	rdfs:member	"alternative physical operator"
s14.1	"performance of alternative physical operator"	rdfs:member	"performance"
s14.1	"physical operator"	rdfs:subClassOf	"operator"
s14.1	"alternative physical operator"	rdfs:subClassOf	"operator"
s14.1	"physical operator"	rdfs:member	"physical"
s14.1	"alternative physical"	rdfs:member	"alternative"
s14.1	"alternative physical operator"	rdfs:member	"alternative physical"
s14.1	"alternative physical"	rdfs:subClassOf	"physical"
s14.1	"alternative physical operator"	rdfs:subClassOf	"physical operator"
s14.1	"performance of alternative physical operator"	rdfs:member	"performance"
s14.1	"performance of alternative physical operator"	rdfs:member	"alternative physical operator"
s14	"we propose a rankaware join algorithm"
s14	"we propose a rankaware join algorithm"	rdf:subject	"we"
s14	"we propose a rankaware join algorithm"	rdf:predicate	"propose"
s14	"we propose a rankaware join algorithm"	rdf:object	"rankaware join algorithm"
s13.1	"efficient splitandinterleave processing schemes that improve the performance of topk sparql queries"
s13.1	"efficient splitandinterleave processing schemes that improve the performance of topk sparql queries"	rdf:subject	"efficient splitandinterleave process scheme"
s13.1	"efficient splitandinterleave"	rdfs:member	"efficient"
s13.1	"efficient splitandinterleave"	rdfs:subClassOf	"splitandinterleave"
s13.1	"splitandinterleave process"	rdfs:member	"splitandinterleave"
s13.1	"splitandinterleave process scheme"	rdfs:member	"splitandinterleave process"
s13.1	"efficient splitandinterleave process scheme"	rdfs:member	"efficient splitandinterleave process"
s13.1	"splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s13.1	"process scheme"	rdfs:member	"process"
s13.1	"process scheme"	rdfs:subClassOf	"scheme"
s13.1	"efficient splitandinterleave process"	rdfs:subClassOf	"process"
s13.1	"efficient splitandinterleave process"	rdfs:member	"efficient splitandinterleave"
s13.1	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s13.1	"splitandinterleave process"	rdfs:subClassOf	"process"
s13.1	"splitandinterleave process scheme"	rdfs:subClassOf	"process scheme"
s13.1	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"splitandinterleave process scheme"
s13.1	"efficient splitandinterleave processing schemes that improve the performance of topk sparql queries"	rdf:predicate	"improve"
s13.1	"efficient splitandinterleave processing schemes that improve the performance of topk sparql queries"	rdf:object	"performance of topk sparql query"
s13.1	"performance of topk sparql query"	rdfs:member	"topk sparql query"
s13.1	"performance of topk sparql query"	rdfs:member	"performance"
s13.1	"topk sparql"	rdfs:subClassOf	"sparql"
s13.1	"topk sparql query"	rdfs:subClassOf	"query"
s13.1	"sparql query"	rdfs:member	"sparql"
s13.1	"sparql query"	rdfs:subClassOf	"query"
s13.1	"topk sparql"	rdfs:member	"topk"
s13.1	"topk sparql query"	rdfs:member	"topk sparql"
s13.1	"topk sparql query"	rdfs:subClassOf	"sparql query"
s13.1	"performance of topk sparql query"	rdfs:member	"performance"
s13.1	"performance of topk sparql query"	rdfs:member	"topk sparql query"
s13	"efficient splitandinterleave processing schemes that can adopted to improve the performance of topk sparql queries"
s13	"efficient splitandinterleave processing schemes that can adopted to improve the performance of topk sparql queries"	rdf:subject	"efficient splitandinterleave process scheme"
s13	"efficient splitandinterleave"	rdfs:member	"efficient"
s13	"efficient splitandinterleave"	rdfs:subClassOf	"splitandinterleave"
s13	"splitandinterleave process"	rdfs:member	"splitandinterleave"
s13	"splitandinterleave process scheme"	rdfs:member	"splitandinterleave process"
s13	"efficient splitandinterleave process scheme"	rdfs:member	"efficient splitandinterleave process"
s13	"splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s13	"process scheme"	rdfs:member	"process"
s13	"process scheme"	rdfs:subClassOf	"scheme"
s13	"efficient splitandinterleave process"	rdfs:subClassOf	"process"
s13	"efficient splitandinterleave process"	rdfs:member	"efficient splitandinterleave"
s13	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s13	"splitandinterleave process"	rdfs:subClassOf	"process"
s13	"splitandinterleave process scheme"	rdfs:subClassOf	"process scheme"
s13	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"splitandinterleave process scheme"
s13	"efficient splitandinterleave processing schemes that can adopted to improve the performance of topk sparql queries"	rdf:predicate	"adopt"
s13	"efficient splitandinterleave processing schemes that can adopted to improve the performance of topk sparql queries"	local:AM-MOD	"can"
s13	"efficient splitandinterleave processing schemes that can adopted to improve the performance of topk sparql queries"	local:AM-PNC	"improve the performance of topk sparql query"
s13	"improve the performance of topk sparql query"	rdfs:member	"topk sparql query"
s13	"improve the performance of topk sparql query"	rdfs:member	"performance"
s13	"topk sparql"	rdfs:subClassOf	"sparql"
s13	"topk sparql query"	rdfs:subClassOf	"query"
s13	"sparql query"	rdfs:member	"sparql"
s13	"sparql query"	rdfs:subClassOf	"query"
s13	"topk sparql"	rdfs:member	"topk"
s13	"topk sparql query"	rdfs:member	"topk sparql"
s13	"topk sparql query"	rdfs:subClassOf	"sparql query"
s13	"performance of topk sparql query"	rdfs:member	"performance"
s13	"performance of topk sparql query"	rdfs:member	"topk sparql query"
s11.2	"a first class citizen enabling efficient splitandinterleave processing schemes"
s11.2	"a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:subject	"first class citizen"
s11.2	"first class citizen"	rdfs:subClassOf	"citizen"
s11.2	"class citizen"	rdfs:member	"class"
s11.2	"first class"	rdfs:subClassOf	"class"
s11.2	"class citizen"	rdfs:subClassOf	"citizen"
s11.2	"first class"	rdfs:member	"first"
s11.2	"first class citizen"	rdfs:member	"first class"
s11.2	"first class citizen"	rdfs:subClassOf	"class citizen"
s11.2	"a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:predicate	"enable"
s11.2	"a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:object	"efficient splitandinterleave process scheme"
s11.2	"efficient splitandinterleave"	rdfs:member	"efficient"
s11.2	"efficient splitandinterleave"	rdfs:subClassOf	"splitandinterleave"
s11.2	"splitandinterleave process"	rdfs:member	"splitandinterleave"
s11.2	"splitandinterleave process scheme"	rdfs:member	"splitandinterleave process"
s11.2	"efficient splitandinterleave process scheme"	rdfs:member	"efficient splitandinterleave process"
s11.2	"splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s11.2	"process scheme"	rdfs:member	"process"
s11.2	"process scheme"	rdfs:subClassOf	"scheme"
s11.2	"efficient splitandinterleave process"	rdfs:subClassOf	"process"
s11.2	"efficient splitandinterleave process"	rdfs:member	"efficient splitandinterleave"
s11.2	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s11.2	"splitandinterleave process"	rdfs:subClassOf	"process"
s11.2	"splitandinterleave process scheme"	rdfs:subClassOf	"process scheme"
s11.2	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"splitandinterleave process scheme"
s11.1	"an extended sparql algebra that treats order as a first class citizen enabling efficient splitandinterleave processing schemes"
s11.1	"an extended sparql algebra that treats order as a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:subject	"extend sparql algebra"
s11.1	"sparql algebra"	rdfs:subClassOf	"algebra"
s11.1	"sparql algebra"	rdfs:member	"sparql"
s11.1	"an extended sparql algebra that treats order as a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:predicate	"treat"
s11.1	"an extended sparql algebra that treats order as a first class citizen enabling efficient splitandinterleave processing schemes"	rdf:object	"order first class citizen enable efficient splitandinterleave process scheme"
s11.1	"order first class citizen enable efficient splitandinterleave process scheme"	rdfs:member	"enable efficient splitandinterleave process scheme"
s11.1	"order first class citizen enable efficient splitandinterleave process scheme"	rdfs:member	"first class citizen"
s11.1	"order first class citizen enable efficient splitandinterleave process scheme"	rdfs:member	"order"
s11.1	"enable efficient splitandinterleave"	rdfs:subClassOf	"splitandinterleave"
s11.1	"efficient splitandinterleave"	rdfs:subClassOf	"splitandinterleave"
s11.1	"splitandinterleave process scheme"	rdfs:member	"splitandinterleave process"
s11.1	"first class citizen"	rdfs:subClassOf	"citizen"
s11.1	"enable efficient splitandinterleave process scheme"	rdfs:member	"enable efficient splitandinterleave process"
s11.1	"first class"	rdfs:subClassOf	"class"
s11.1	"enable efficient splitandinterleave process"	rdfs:subClassOf	"process"
s11.1	"first class citizen"	rdfs:member	"first class"
s11.1	"enable efficient splitandinterleave"	rdfs:member	"enable efficient"
s11.1	"efficient splitandinterleave process scheme"	rdfs:member	"efficient splitandinterleave process"
s11.1	"process scheme"	rdfs:subClassOf	"scheme"
s11.1	"efficient splitandinterleave process"	rdfs:member	"efficient splitandinterleave"
s11.1	"enable efficient splitandinterleave process"	rdfs:member	"enable efficient splitandinterleave"
s11.1	"splitandinterleave process"	rdfs:member	"splitandinterleave"
s11.1	"enable efficient"	rdfs:subClassOf	"efficient"
s11.1	"class citizen"	rdfs:subClassOf	"citizen"
s11.1	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s11.1	"first class"	rdfs:member	"first"
s11.1	"splitandinterleave process"	rdfs:subClassOf	"process"
s11.1	"efficient splitandinterleave"	rdfs:member	"efficient"
s11.1	"class citizen"	rdfs:member	"class"
s11.1	"splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s11.1	"process scheme"	rdfs:member	"process"
s11.1	"enable efficient splitandinterleave process scheme"	rdfs:subClassOf	"scheme"
s11.1	"efficient splitandinterleave process"	rdfs:subClassOf	"process"
s11.1	"enable efficient"	rdfs:member	"enable"
s11.1	"splitandinterleave process scheme"	rdfs:subClassOf	"process scheme"
s11.1	"efficient splitandinterleave process scheme"	rdfs:subClassOf	"splitandinterleave process scheme"
s11.1	"first class citizen"	rdfs:subClassOf	"class citizen"
s11.1	"order first class citizen"	rdfs:subClassOf	"first class citizen"
s11	"extended sparql algebra"
s11	"extended sparql algebra"	rdf:subject	"sparql algebra"
s11	"sparql algebra"	rdfs:subClassOf	"algebra"
s11	"sparql algebra"	rdfs:member	"sparql"
s11	"extended sparql algebra"	rdf:predicate	"extend"
s10	"all the matching solutions even if only a limited number k"
s10	"all the matching solutions even if only a limited number k"	rdf:subject	"match solution even if only a limit number k"
s10	"match solution even if only a limit number k"	rdfs:member	"match solution"
s10	"match solution even if only a limit number k"	rdfs:member	"limit number k"
s10	"limit number"	rdfs:subClassOf	"number"
s10	"limit number"	rdfs:member	"limit"
s10	"match solution"	rdfs:member	"match"
s10	"limit number k"	rdfs:subClassOf	"k"
s10	"number k"	rdfs:subClassOf	"k"
s10	"match solution"	rdfs:subClassOf	"solution"
s10	"number k"	rdfs:member	"number"
s10	"limit number k"	rdfs:member	"limit number"
s10	"only limit number"	rdfs:subClassOf	"limit number"
s10	"even number k"	rdfs:subClassOf	"number k"
s10	"all the matching solutions even if only a limited number k"	rdf:predicate	"request"
s9	"all the matching eg thousands even if only a limited number k"
s9	"all the matching eg thousands even if only a limited number k"	rdf:subject	"match eg thousand even if only a limit number k"
s9	"match eg thousand even if only a limit number k"	rdfs:member	"limit number k"
s9	"match eg thousand even if only a limit number k"	rdfs:member	"match eg"
s9	"limit number"	rdfs:subClassOf	"number"
s9	"limit number"	rdfs:member	"limit"
s9	"limit number k"	rdfs:subClassOf	"k"
s9	"match eg"	rdfs:member	"match"
s9	"number k"	rdfs:subClassOf	"k"
s9	"number k"	rdfs:member	"number"
s9	"match eg"	rdfs:subClassOf	"eg"
s9	"limit number k"	rdfs:member	"limit number"
s9	"only limit number"	rdfs:subClassOf	"limit number"
s9	"even number k"	rdfs:subClassOf	"number k"
s9	"thousand match"	rdfs:subClassOf	"match"
s9	"eg thousand"	rdfs:subClassOf	"thousand"
s9	"all the matching eg thousands even if only a limited number k"	rdf:predicate	"request"
s8	"topk queries mostly managed with a materializethensort processing scheme"
s8	"topk queries mostly managed with a materializethensort processing scheme"	rdf:subject	"topk query"
s8	"topk query"	rdfs:member	"topk"
s8	"topk query"	rdfs:subClassOf	"query"
s8	"topk queries mostly managed with a materializethensort processing scheme"	rdf:predicate	"manage"
s8	"topk queries mostly managed with a materializethensort processing scheme"	rdf:object	"materializethensort process scheme"
s8	"materializethensort process"	rdfs:member	"materializethensort"
s8	"process scheme"	rdfs:member	"process"
s8	"process scheme"	rdfs:subClassOf	"scheme"
s8	"materializethensort process scheme"	rdfs:subClassOf	"scheme"
s8	"materializethensort process scheme"	rdfs:member	"materializethensort process"
s8	"materializethensort process"	rdfs:subClassOf	"process"
s8	"materializethensort process scheme"	rdfs:subClassOf	"process scheme"
s8	"topk queries mostly managed with a materializethensort processing scheme"	local:AM-ADV	"mostly"
s6	"all the matching solutions even if eg ten"
s6	"all the matching solutions even if eg ten"	rdf:subject	"match solution even if eg ten"
s6	"match solution even if eg ten"	rdfs:member	"match solution"
s6	"match solution even if eg ten"	rdfs:member	"eg"
s6	"match solution"	rdfs:member	"match"
s6	"match solution"	rdfs:subClassOf	"solution"
s6	"eg ten"	rdfs:subClassOf	"ten"
s6	"even eg ten"	rdfs:subClassOf	"eg ten"
s6	"match solution if even eg ten"	rdfs:member	"match solution"
s6	"match solution if even eg ten"	rdfs:member	"even eg ten"
s6	"all the matching solutions even if eg ten"	rdf:predicate	"request"
s5	"all the matching eg thousands even if eg ten"
s5	"all the matching eg thousands even if eg ten"	rdf:subject	"match eg thousand even if eg ten"
s5	"match eg thousand even if eg ten"	rdfs:member	"eg"
s5	"match eg thousand even if eg ten"	rdfs:member	"match eg"
s5	"match eg"	rdfs:member	"match"
s5	"match eg"	rdfs:subClassOf	"eg"
s5	"eg ten"	rdfs:subClassOf	"ten"
s5	"even eg ten"	rdfs:subClassOf	"eg ten"
s5	"thousand match"	rdfs:subClassOf	"match"
s5	"eg thousand"	rdfs:subClassOf	"thousand"
s5	"thousand match if even eg ten"	rdfs:member	"thousand match"
s5	"thousand match if even eg ten"	rdfs:member	"even eg ten"
s5	"all the matching eg thousands even if eg ten"	rdf:predicate	"request"
s4	"a materializethensort processing scheme that computes all the"
s4	"a materializethensort processing scheme that computes all the"	rdf:subject	"materializethensort process scheme"
s4	"materializethensort process"	rdfs:member	"materializethensort"
s4	"process scheme"	rdfs:member	"process"
s4	"process scheme"	rdfs:subClassOf	"scheme"
s4	"materializethensort process scheme"	rdfs:subClassOf	"scheme"
s4	"materializethensort process scheme"	rdfs:member	"materializethensort process"
s4	"materializethensort process"	rdfs:subClassOf	"process"
s4	"materializethensort process scheme"	rdfs:subClassOf	"process scheme"
s4	"a materializethensort processing scheme that computes all the"	rdf:predicate	"compute"
s4	"a materializethensort processing scheme that computes all the"	rdf:object	"the"
s2.1	"data that speed up query processing"
s2.1	"data that speed up query processing"	rdf:subject	"data"
s2.1	"data that speed up query processing"	rdf:predicate	"speed"
s2.1	"data that speed up query processing"	rdf:object	"query process"
s2.1	"query process"	rdfs:member	"query"
s2.1	"query process"	rdfs:subClassOf	"process"
s2	"data that can exploited to speed up query processing"
s2	"data that can exploited to speed up query processing"	rdf:subject	"data"
s2	"data that can exploited to speed up query processing"	rdf:predicate	"exploit"
s2	"data that can exploited to speed up query processing"	local:AM-MOD	"can"
s2	"data that can exploited to speed up query processing"	local:AM-PNC	"speed up query process"
s2	"speed up query process"	rdfs:member	"speed"
s2	"speed up query process"	rdfs:member	"up query process"
s2	"up query process"	rdfs:subClassOf	"process"
s2	"query process"	rdfs:subClassOf	"process"
s2	"query process"	rdfs:member	"query"
s2	"up query process"	rdfs:member	"up query"
s2	"up query"	rdfs:member	"up"
s2	"up query"	rdfs:subClassOf	"query"
s1	"queries returning the top k"
s1	"queries returning the top k"	rdf:subject	"query"
s1	"queries returning the top k"	rdf:predicate	"return"
s1	"queries returning the top k"	rdf:object	"top k"
s1	"top k"	rdfs:member	"top"
s1	"top k"	rdfs:subClassOf	"k"
s0.1	"topk queries ie queries results ordered by a userdefined scoring function"
s0.1	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:subject	"userdefined score function"
s0.1	"userdefined score"	rdfs:member	"userdefined"
s0.1	"score function"	rdfs:member	"score"
s0.1	"score function"	rdfs:subClassOf	"function"
s0.1	"userdefined score function"	rdfs:member	"userdefined score"
s0.1	"userdefined score function"	rdfs:subClassOf	"function"
s0.1	"userdefined score"	rdfs:subClassOf	"score"
s0.1	"userdefined score function"	rdfs:subClassOf	"score function"
s0.1	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:predicate	"order"
s0.1	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:object	"topk query ie query result"
s0.1	"query ie query"	rdfs:subClassOf	"query"
s0.1	"query ie query result"	rdfs:subClassOf	"result"
s0.1	"query ie query result"	rdfs:member	"query ie query"
s0.1	"topk query ie query result"	rdfs:subClassOf	"result"
s0.1	"query ie"	rdfs:member	"query"
s0.1	"query result"	rdfs:member	"query"
s0.1	"ie query result"	rdfs:subClassOf	"result"
s0.1	"topk query ie"	rdfs:subClassOf	"ie"
s0.1	"topk query"	rdfs:member	"topk"
s0.1	"topk query ie"	rdfs:member	"topk query"
s0.1	"query ie"	rdfs:subClassOf	"ie"
s0.1	"ie query result"	rdfs:member	"ie query"
s0.1	"topk query"	rdfs:subClassOf	"query"
s0.1	"ie query"	rdfs:member	"ie"
s0.1	"topk query ie query"	rdfs:member	"topk query ie"
s0.1	"query result"	rdfs:subClassOf	"result"
s0.1	"topk query ie query"	rdfs:subClassOf	"query"
s0.1	"ie query"	rdfs:subClassOf	"query"
s0.1	"query ie query"	rdfs:member	"query ie"
s0.1	"topk query ie query result"	rdfs:member	"topk query ie query"
s0	"topk queries ie queries results ordered by a userdefined scoring function"
s0	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:subject	"topk"
s0	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:predicate	"query"
s0	"topk queries ie queries results ordered by a userdefined scoring function"	rdf:object	"ie query result order by a userdefined score function"
s0	"ie query result order by a userdefined score function"	rdfs:member	"userdefined score function"
s0	"ie query result order by a userdefined score function"	rdfs:member	"ie query result order"
s0	"userdefined score"	rdfs:member	"userdefined"
s0	"ie query"	rdfs:member	"ie"
s0	"query result order"	rdfs:subClassOf	"order"
s0	"ie query result"	rdfs:member	"ie query"
s0	"ie query result order"	rdfs:member	"ie query result"
s0	"score function"	rdfs:member	"score"
s0	"score function"	rdfs:subClassOf	"function"
s0	"userdefined score function"	rdfs:member	"userdefined score"
s0	"query result"	rdfs:subClassOf	"result"
s0	"result order"	rdfs:member	"result"
s0	"ie query result order"	rdfs:subClassOf	"order"
s0	"query result"	rdfs:member	"query"
s0	"ie query result"	rdfs:subClassOf	"result"
s0	"userdefined score function"	rdfs:subClassOf	"function"
s0	"query result order"	rdfs:member	"query result"
s0	"ie query"	rdfs:subClassOf	"query"
s0	"userdefined score"	rdfs:subClassOf	"score"
s0	"result order"	rdfs:subClassOf	"order"
s0	"userdefined score function"	rdfs:subClassOf	"score function"
s0	"order by userdefined score function"	rdfs:member	"order"
s0	"order by userdefined score function"	rdfs:member	"userdefined score function"
