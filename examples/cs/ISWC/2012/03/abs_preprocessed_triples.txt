s17.2	"estimate equivalence relations between two type systems"
s17.2	"estimate equivalence relations between two type systems"	rdf:subject	"equivalence relation between two type system"
s17.2	"equivalence relation between two type system"	rdfs:member	"type system"
s17.2	"equivalence relation between two type system"	rdfs:member	"equivalence relation"
s17.2	"type system"	rdfs:member	"type"
s17.2	"type system"	rdfs:subClassOf	"system"
s17.2	"equivalence relation"	rdfs:member	"equivalence"
s17.2	"equivalence relation"	rdfs:subClassOf	"relation"
s17.2	"two type system"	rdfs:subClassOf	"type system"
s17.2	"equivalence relation between two type system"	rdfs:member	"equivalence relation"
s17.2	"equivalence relation between two type system"	rdfs:member	"two type system"
s17.2	"estimate equivalence relations between two type systems"	rdf:predicate	"estimate"
s17.1	"these techniques can used"
s17.1	"these techniques can used"	rdf:subject	"technique"
s17.1	"these techniques can used"	rdf:predicate	"use"
s17.1	"these techniques can used"	local:AM-MOD	"can"
s17	"we describe how these techniques can be used to estimate equivalence relations between two type systems"
s17	"we describe how these techniques can be used to estimate equivalence relations between two type systems"	rdf:subject	"we"
s17	"we describe how these techniques can be used to estimate equivalence relations between two type systems"	rdf:predicate	"describe"
s17	"we describe how these techniques can be used to estimate equivalence relations between two type systems"	rdf:object	"technique can be use to estimate equivalence relation between two type system"
s17	"technique can be use to estimate equivalence relation between two type system"	rdfs:member	"type system"
s17	"technique can be use to estimate equivalence relation between two type system"	rdfs:member	"technique"
s17	"technique can be use to estimate equivalence relation between two type system"	rdfs:member	"equivalence relation"
s17	"type system"	rdfs:member	"type"
s17	"type system"	rdfs:subClassOf	"system"
s17	"equivalence relation"	rdfs:member	"equivalence"
s17	"equivalence relation"	rdfs:subClassOf	"relation"
s17	"two type system"	rdfs:subClassOf	"type system"
s17	"can use"	rdfs:subClassOf	"use"
s17	"equivalence relation between two type system"	rdfs:member	"equivalence relation"
s17	"equivalence relation between two type system"	rdfs:member	"two type system"
s16.1	"computing instance similarity"
s16.1	"computing instance similarity"	rdf:subject	"instance similarity"
s16.1	"instance similarity"	rdfs:subClassOf	"similarity"
s16.1	"instance similarity"	rdfs:member	"instance"
s16.1	"computing instance similarity"	rdf:predicate	"compute"
s16	"we compare two different locality sensitive hashing techniques for computing instance similarity"
s16	"we compare two different locality sensitive hashing techniques for computing instance similarity"	rdf:subject	"we"
s16	"we compare two different locality sensitive hashing techniques for computing instance similarity"	rdf:predicate	"compare"
s16	"we compare two different locality sensitive hashing techniques for computing instance similarity"	rdf:object	"two different locality sensitive hash technique compute instance similarity"
s16	"two different locality sensitive hash technique compute instance similarity"	rdfs:member	"sensitive hash technique compute instance similarity"
s16	"two different locality sensitive hash technique compute instance similarity"	rdfs:member	"different locality"
s16	"sensitive hash technique"	rdfs:subClassOf	"technique"
s16	"sensitive hash technique compute instance"	rdfs:member	"sensitive hash technique compute"
s16	"technique compute instance similarity"	rdfs:subClassOf	"similarity"
s16	"sensitive hash technique compute"	rdfs:subClassOf	"compute"
s16	"hash technique compute instance similarity"	rdfs:subClassOf	"similarity"
s16	"hash technique compute"	rdfs:member	"hash technique"
s16	"technique compute instance"	rdfs:member	"technique compute"
s16	"sensitive hash technique compute instance"	rdfs:subClassOf	"instance"
s16	"hash technique compute instance"	rdfs:member	"hash technique compute"
s16	"different locality"	rdfs:member	"different"
s16	"technique compute instance similarity"	rdfs:member	"technique compute instance"
s16	"instance similarity"	rdfs:member	"instance"
s16	"hash technique"	rdfs:member	"hash"
s16	"hash technique"	rdfs:subClassOf	"technique"
s16	"hash technique compute instance similarity"	rdfs:member	"hash technique compute instance"
s16	"compute instance"	rdfs:subClassOf	"instance"
s16	"compute instance similarity"	rdfs:member	"compute instance"
s16	"sensitive hash"	rdfs:member	"sensitive"
s16	"sensitive hash"	rdfs:subClassOf	"hash"
s16	"instance similarity"	rdfs:subClassOf	"similarity"
s16	"different locality"	rdfs:subClassOf	"locality"
s16	"sensitive hash technique compute instance similarity"	rdfs:subClassOf	"similarity"
s16	"technique compute"	rdfs:member	"technique"
s16	"technique compute instance"	rdfs:subClassOf	"instance"
s16	"sensitive hash technique compute"	rdfs:member	"sensitive hash technique"
s16	"hash technique compute instance"	rdfs:subClassOf	"instance"
s16	"compute instance"	rdfs:member	"compute"
s16	"compute instance similarity"	rdfs:subClassOf	"similarity"
s16	"hash technique compute"	rdfs:subClassOf	"compute"
s16	"sensitive hash technique"	rdfs:member	"sensitive hash"
s16	"technique compute"	rdfs:subClassOf	"compute"
s16	"sensitive hash technique compute instance similarity"	rdfs:member	"sensitive hash technique compute instance"
s16	"sensitive hash technique"	rdfs:subClassOf	"hash technique"
s16	"locality sensitive hash technique"	rdfs:subClassOf	"sensitive hash technique"
s16	"different locality sensitive hash technique"	rdfs:subClassOf	"locality sensitive hash technique"
s16	"two different locality sensitive hash technique"	rdfs:subClassOf	"different locality sensitive hash technique"
s15.2	"estimate containment relations between two type systems"
s15.2	"estimate containment relations between two type systems"	rdf:subject	"containment relation between two type system"
s15.2	"containment relation between two type system"	rdfs:member	"type system"
s15.2	"containment relation between two type system"	rdfs:member	"containment relation"
s15.2	"containment relation"	rdfs:member	"containment"
s15.2	"type system"	rdfs:member	"type"
s15.2	"containment relation"	rdfs:subClassOf	"relation"
s15.2	"type system"	rdfs:subClassOf	"system"
s15.2	"two type system"	rdfs:subClassOf	"type system"
s15.2	"containment relation between two type system"	rdfs:member	"containment relation"
s15.2	"containment relation between two type system"	rdfs:member	"two type system"
s15.2	"estimate containment relations between two type systems"	rdf:predicate	"estimate"
s15.1	"these techniques can used"
s15.1	"these techniques can used"	rdf:subject	"technique"
s15.1	"these techniques can used"	rdf:predicate	"use"
s15.1	"these techniques can used"	local:AM-MOD	"can"
s15	"we describe how these techniques can be used to estimate containment relations between two type systems"
s15	"we describe how these techniques can be used to estimate containment relations between two type systems"	rdf:subject	"we"
s15	"we describe how these techniques can be used to estimate containment relations between two type systems"	rdf:predicate	"describe"
s15	"we describe how these techniques can be used to estimate containment relations between two type systems"	rdf:object	"technique can be use to estimate containment relation between two type system"
s15	"technique can be use to estimate containment relation between two type system"	rdfs:member	"type system"
s15	"technique can be use to estimate containment relation between two type system"	rdfs:member	"containment relation"
s15	"technique can be use to estimate containment relation between two type system"	rdfs:member	"technique"
s15	"containment relation"	rdfs:member	"containment"
s15	"type system"	rdfs:member	"type"
s15	"containment relation"	rdfs:subClassOf	"relation"
s15	"type system"	rdfs:subClassOf	"system"
s15	"two type system"	rdfs:subClassOf	"type system"
s15	"can use"	rdfs:subClassOf	"use"
s15	"containment relation between two type system"	rdfs:member	"containment relation"
s15	"containment relation between two type system"	rdfs:member	"two type system"
s14.1	"the feasibility of we approach with two different type systems with hundreds of types respectively"
s14.1	"the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:subject	"feasibility of we"
s14.1	"feasibility of we"	rdfs:member	"feasibility"
s14.1	"feasibility of we"	rdfs:member	"we"
s14.1	"the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:predicate	"approach"
s14.1	"the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:object	"two different type system with hundred of type respectively"
s14.1	"two different type system with hundred of type respectively"	rdfs:member	"different type system"
s14.1	"two different type system with hundred of type respectively"	rdfs:member	"type"
s14.1	"different type"	rdfs:member	"different"
s14.1	"type system"	rdfs:member	"type"
s14.1	"different type system"	rdfs:subClassOf	"system"
s14.1	"type system"	rdfs:subClassOf	"system"
s14.1	"different type system"	rdfs:member	"different type"
s14.1	"different type"	rdfs:subClassOf	"type"
s14.1	"respectively system"	rdfs:subClassOf	"system"
s14.1	"type respectively system"	rdfs:subClassOf	"respectively system"
s14.1	"different type respectively system"	rdfs:subClassOf	"type respectively system"
s14.1	"two different type respectively system"	rdfs:subClassOf	"different type respectively system"
s14.1	"two different type respectively system with hundred"	rdfs:member	"two different type respectively system"
s14.1	"two different type respectively system with hundred"	rdfs:member	"hundred"
s14.1	"hundred of type"	rdfs:member	"hundred"
s14.1	"hundred of type"	rdfs:member	"type"
s14	"we show the feasibility of we approach with two different type systems with hundreds of types respectively"
s14	"we show the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:subject	"we"
s14	"we show the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:predicate	"show"
s14	"we show the feasibility of we approach with two different type systems with hundreds of types respectively"	rdf:object	"feasibility of we approach with two different type system with hundred of type respectively"
s14	"feasibility of we approach with two different type system with hundred of type respectively"	rdfs:member	"feasibility"
s14	"feasibility of we approach with two different type system with hundred of type respectively"	rdfs:member	"different type system"
s14	"feasibility of we approach with two different type system with hundred of type respectively"	rdfs:member	"type"
s14	"different type"	rdfs:member	"different"
s14	"type system"	rdfs:member	"type"
s14	"different type system"	rdfs:subClassOf	"system"
s14	"type system"	rdfs:subClassOf	"system"
s14	"different type system"	rdfs:member	"different type"
s14	"different type"	rdfs:subClassOf	"type"
s14	"respectively approach"	rdfs:subClassOf	"approach"
s14	"different type system"	rdfs:subClassOf	"type system"
s14	"two different type system"	rdfs:subClassOf	"different type system"
s14	"respectively approach with two different type system"	rdfs:member	"respectively approach"
s14	"respectively approach with two different type system"	rdfs:member	"two different type system"
s14	"two different type system with hundred"	rdfs:member	"two different type system"
s14	"two different type system with hundred"	rdfs:member	"hundred"
s14	"hundred of type"	rdfs:member	"hundred"
s14	"hundred of type"	rdfs:member	"type"
s13.1	"the feasibility of we approach with dbpedia with hundreds of types respectively"
s13.1	"the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:subject	"feasibility of we"
s13.1	"feasibility of we"	rdfs:member	"feasibility"
s13.1	"feasibility of we"	rdfs:member	"we"
s13.1	"the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:predicate	"approach"
s13.1	"the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:object	"dbpedia with hundred of type respectively"
s13.1	"dbpedia with hundred of type respectively"	rdfs:member	"type"
s13.1	"dbpedia with hundred of type respectively"	rdfs:member	"dbpedia"
s13.1	"respectively dbpedia"	rdfs:subClassOf	"dbpedia"
s13.1	"respectively dbpedia with hundred"	rdfs:member	"respectively dbpedia"
s13.1	"respectively dbpedia with hundred"	rdfs:member	"hundred"
s13.1	"hundred of type"	rdfs:member	"hundred"
s13.1	"hundred of type"	rdfs:member	"type"
s13	"we show the feasibility of we approach with dbpedia with hundreds of types respectively"
s13	"we show the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:subject	"we"
s13	"we show the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:predicate	"show"
s13	"we show the feasibility of we approach with dbpedia with hundreds of types respectively"	rdf:object	"feasibility of we approach with dbpedia with hundred of type respectively"
s13	"feasibility of we approach with dbpedia with hundred of type respectively"	rdfs:member	"feasibility"
s13	"feasibility of we approach with dbpedia with hundred of type respectively"	rdfs:member	"type"
s13	"feasibility of we approach with dbpedia with hundred of type respectively"	rdfs:member	"dbpedia"
s13	"respectively approach"	rdfs:subClassOf	"approach"
s13	"respectively approach with dbpedia"	rdfs:member	"respectively approach"
s13	"respectively approach with dbpedia"	rdfs:member	"dbpedia"
s13	"respectively approach with dbpedia with hundred"	rdfs:member	"respectively approach with dbpedia"
s13	"respectively approach with dbpedia with hundred"	rdfs:member	"hundred"
s13	"hundred of type"	rdfs:member	"hundred"
s13	"hundred of type"	rdfs:member	"type"
s12.1	"the feasibility of we approach with dbpedia with thousands of types respectively"
s12.1	"the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:subject	"feasibility of we"
s12.1	"feasibility of we"	rdfs:member	"feasibility"
s12.1	"feasibility of we"	rdfs:member	"we"
s12.1	"the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:predicate	"approach"
s12.1	"the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:object	"dbpedia with thousand of type respectively"
s12.1	"dbpedia with thousand of type respectively"	rdfs:member	"thousand"
s12.1	"dbpedia with thousand of type respectively"	rdfs:member	"type"
s12.1	"dbpedia with thousand of type respectively"	rdfs:member	"dbpedia"
s12.1	"respectively dbpedia"	rdfs:subClassOf	"dbpedia"
s12.1	"respectively dbpedia with thousand"	rdfs:member	"respectively dbpedia"
s12.1	"respectively dbpedia with thousand"	rdfs:member	"thousand"
s12.1	"thousand of type"	rdfs:member	"thousand"
s12.1	"thousand of type"	rdfs:member	"type"
s12	"we show the feasibility of we approach with dbpedia with thousands of types respectively"
s12	"we show the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:subject	"we"
s12	"we show the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:predicate	"show"
s12	"we show the feasibility of we approach with dbpedia with thousands of types respectively"	rdf:object	"feasibility of we approach with dbpedia with thousand of type respectively"
s12	"feasibility of we approach with dbpedia with thousand of type respectively"	rdfs:member	"thousand"
s12	"feasibility of we approach with dbpedia with thousand of type respectively"	rdfs:member	"feasibility"
s12	"feasibility of we approach with dbpedia with thousand of type respectively"	rdfs:member	"type"
s12	"feasibility of we approach with dbpedia with thousand of type respectively"	rdfs:member	"dbpedia"
s12	"respectively approach"	rdfs:subClassOf	"approach"
s12	"respectively approach with dbpedia"	rdfs:member	"respectively approach"
s12	"respectively approach with dbpedia"	rdfs:member	"dbpedia"
s12	"respectively approach with dbpedia with thousand"	rdfs:member	"respectively approach with dbpedia"
s12	"respectively approach with dbpedia with thousand"	rdfs:member	"thousand"
s12	"thousand of type"	rdfs:member	"thousand"
s12	"thousand of type"	rdfs:member	"type"
s11.1	"the feasibility of we approach with freebase with thousands of types respectively"
s11.1	"the feasibility of we approach with freebase with thousands of types respectively"	rdf:subject	"feasibility of we"
s11.1	"feasibility of we"	rdfs:member	"feasibility"
s11.1	"feasibility of we"	rdfs:member	"we"
s11.1	"the feasibility of we approach with freebase with thousands of types respectively"	rdf:predicate	"approach"
s11.1	"the feasibility of we approach with freebase with thousands of types respectively"	rdf:object	"freebase with thousand of type respectively"
s11.1	"freebase with thousand of type respectively"	rdfs:member	"thousand"
s11.1	"freebase with thousand of type respectively"	rdfs:member	"freebase"
s11.1	"freebase with thousand of type respectively"	rdfs:member	"type"
s11.1	"respectively freebase"	rdfs:subClassOf	"freebase"
s11.1	"respectively freebase with thousand"	rdfs:member	"respectively freebase"
s11.1	"respectively freebase with thousand"	rdfs:member	"thousand"
s11.1	"thousand of type"	rdfs:member	"thousand"
s11.1	"thousand of type"	rdfs:member	"type"
s11	"we show the feasibility of we approach with freebase with thousands of types respectively"
s11	"we show the feasibility of we approach with freebase with thousands of types respectively"	rdf:subject	"we"
s11	"we show the feasibility of we approach with freebase with thousands of types respectively"	rdf:predicate	"show"
s11	"we show the feasibility of we approach with freebase with thousands of types respectively"	rdf:object	"feasibility of we approach with freebase with thousand of type respectively"
s11	"feasibility of we approach with freebase with thousand of type respectively"	rdfs:member	"thousand"
s11	"feasibility of we approach with freebase with thousand of type respectively"	rdfs:member	"freebase"
s11	"feasibility of we approach with freebase with thousand of type respectively"	rdfs:member	"feasibility"
s11	"feasibility of we approach with freebase with thousand of type respectively"	rdfs:member	"type"
s11	"respectively approach"	rdfs:subClassOf	"approach"
s11	"respectively approach with freebase"	rdfs:member	"respectively approach"
s11	"respectively approach with freebase"	rdfs:member	"freebase"
s11	"respectively approach with freebase with thousand"	rdfs:member	"respectively approach with freebase"
s11	"respectively approach with freebase with thousand"	rdfs:member	"thousand"
s11	"thousand of type"	rdfs:member	"thousand"
s11	"thousand of type"	rdfs:member	"type"
s10.1	"the feasibility of we approach with two different type systems with thousands of types respectively"
s10.1	"the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:subject	"feasibility of we"
s10.1	"feasibility of we"	rdfs:member	"feasibility"
s10.1	"feasibility of we"	rdfs:member	"we"
s10.1	"the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:predicate	"approach"
s10.1	"the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:object	"two different type system with thousand of type respectively"
s10.1	"two different type system with thousand of type respectively"	rdfs:member	"thousand"
s10.1	"two different type system with thousand of type respectively"	rdfs:member	"different type system"
s10.1	"two different type system with thousand of type respectively"	rdfs:member	"type"
s10.1	"different type"	rdfs:member	"different"
s10.1	"type system"	rdfs:member	"type"
s10.1	"different type system"	rdfs:subClassOf	"system"
s10.1	"type system"	rdfs:subClassOf	"system"
s10.1	"different type system"	rdfs:member	"different type"
s10.1	"different type"	rdfs:subClassOf	"type"
s10.1	"respectively system"	rdfs:subClassOf	"system"
s10.1	"type respectively system"	rdfs:subClassOf	"respectively system"
s10.1	"different type respectively system"	rdfs:subClassOf	"type respectively system"
s10.1	"two different type respectively system"	rdfs:subClassOf	"different type respectively system"
s10.1	"two different type respectively system with thousand"	rdfs:member	"two different type respectively system"
s10.1	"two different type respectively system with thousand"	rdfs:member	"thousand"
s10.1	"thousand of type"	rdfs:member	"thousand"
s10.1	"thousand of type"	rdfs:member	"type"
s10	"we show the feasibility of we approach with two different type systems with thousands of types respectively"
s10	"we show the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:subject	"we"
s10	"we show the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:predicate	"show"
s10	"we show the feasibility of we approach with two different type systems with thousands of types respectively"	rdf:object	"feasibility of we approach with two different type system with thousand of type respectively"
s10	"feasibility of we approach with two different type system with thousand of type respectively"	rdfs:member	"thousand"
s10	"feasibility of we approach with two different type system with thousand of type respectively"	rdfs:member	"feasibility"
s10	"feasibility of we approach with two different type system with thousand of type respectively"	rdfs:member	"different type system"
s10	"feasibility of we approach with two different type system with thousand of type respectively"	rdfs:member	"type"
s10	"different type"	rdfs:member	"different"
s10	"type system"	rdfs:member	"type"
s10	"different type system"	rdfs:subClassOf	"system"
s10	"type system"	rdfs:subClassOf	"system"
s10	"different type system"	rdfs:member	"different type"
s10	"different type"	rdfs:subClassOf	"type"
s10	"respectively approach"	rdfs:subClassOf	"approach"
s10	"different type system"	rdfs:subClassOf	"type system"
s10	"two different type system"	rdfs:subClassOf	"different type system"
s10	"respectively approach with two different type system"	rdfs:member	"respectively approach"
s10	"respectively approach with two different type system"	rdfs:member	"two different type system"
s10	"two different type system with thousand"	rdfs:member	"two different type system"
s10	"two different type system with thousand"	rdfs:member	"thousand"
s10	"thousand of type"	rdfs:member	"thousand"
s10	"thousand of type"	rdfs:member	"type"
s9.1	"the feasibility of we approach with freebase with hundreds of types respectively"
s9.1	"the feasibility of we approach with freebase with hundreds of types respectively"	rdf:subject	"feasibility of we"
s9.1	"feasibility of we"	rdfs:member	"feasibility"
s9.1	"feasibility of we"	rdfs:member	"we"
s9.1	"the feasibility of we approach with freebase with hundreds of types respectively"	rdf:predicate	"approach"
s9.1	"the feasibility of we approach with freebase with hundreds of types respectively"	rdf:object	"freebase with hundred of type respectively"
s9.1	"freebase with hundred of type respectively"	rdfs:member	"freebase"
s9.1	"freebase with hundred of type respectively"	rdfs:member	"type"
s9.1	"respectively freebase"	rdfs:subClassOf	"freebase"
s9.1	"respectively freebase with hundred"	rdfs:member	"respectively freebase"
s9.1	"respectively freebase with hundred"	rdfs:member	"hundred"
s9.1	"hundred of type"	rdfs:member	"hundred"
s9.1	"hundred of type"	rdfs:member	"type"
s9	"we show the feasibility of we approach with freebase with hundreds of types respectively"
s9	"we show the feasibility of we approach with freebase with hundreds of types respectively"	rdf:subject	"we"
s9	"we show the feasibility of we approach with freebase with hundreds of types respectively"	rdf:predicate	"show"
s9	"we show the feasibility of we approach with freebase with hundreds of types respectively"	rdf:object	"feasibility of we approach with freebase with hundred of type respectively"
s9	"feasibility of we approach with freebase with hundred of type respectively"	rdfs:member	"freebase"
s9	"feasibility of we approach with freebase with hundred of type respectively"	rdfs:member	"feasibility"
s9	"feasibility of we approach with freebase with hundred of type respectively"	rdfs:member	"type"
s9	"respectively approach"	rdfs:subClassOf	"approach"
s9	"respectively approach with freebase"	rdfs:member	"respectively approach"
s9	"respectively approach with freebase"	rdfs:member	"freebase"
s9	"respectively approach with freebase with hundred"	rdfs:member	"respectively approach with freebase"
s9	"respectively approach with freebase with hundred"	rdfs:member	"hundred"
s9	"hundred of type"	rdfs:member	"hundred"
s9	"hundred of type"	rdfs:member	"type"
s8.2	"matching across multiple types"
s8.2	"matching across multiple types"	rdf:predicate	"match"
s8.2	"matching across multiple types"	local:AM-MNR	"across multiple type"
s8.2	"multiple type"	rdfs:subClassOf	"type"
s8.2	"multiple type"	rdfs:member	"multiple"
s8.1	"vastly improve the scalability of instance matching across multiple types"
s8.1	"vastly improve the scalability of instance matching across multiple types"	rdf:subject	"scalability of instance match across multiple type"
s8.1	"scalability of instance match across multiple type"	rdfs:member	"instance match"
s8.1	"scalability of instance match across multiple type"	rdfs:member	"scalability"
s8.1	"scalability of instance match across multiple type"	rdfs:member	"multiple type"
s8.1	"instance match"	rdfs:member	"instance"
s8.1	"multiple type"	rdfs:subClassOf	"type"
s8.1	"instance match"	rdfs:subClassOf	"match"
s8.1	"multiple type"	rdfs:member	"multiple"
s8.1	"scalability of instance match"	rdfs:member	"scalability"
s8.1	"scalability of instance match"	rdfs:member	"instance match"
s8.1	"scalability of instance match across multiple type"	rdfs:member	"scalability of instance match"
s8.1	"scalability of instance match across multiple type"	rdfs:member	"multiple type"
s8.1	"vastly improve the scalability of instance matching across multiple types"	rdf:predicate	"improve"
s8.1	"vastly improve the scalability of instance matching across multiple types"	local:AM-MNR	"vastly"
s8	"we propose the use of locality sensitive hashing techniques to vastly improve the scalability of instance matching across multiple types"
s8	"we propose the use of locality sensitive hashing techniques to vastly improve the scalability of instance matching across multiple types"	rdf:subject	"we"
s8	"we propose the use of locality sensitive hashing techniques to vastly improve the scalability of instance matching across multiple types"	rdf:predicate	"propose"
s8	"we propose the use of locality sensitive hashing techniques to vastly improve the scalability of instance matching across multiple types"	rdf:object	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"instance match"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"scalability"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"multiple type"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"sensitive hash technique"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"locality"
s8	"use of locality sensitive hash technique to vastly improve the scalability of instance match across multiple type"	rdfs:member	"use"
s8	"sensitive hash technique"	rdfs:subClassOf	"technique"
s8	"sensitive hash"	rdfs:member	"sensitive"
s8	"sensitive hash"	rdfs:subClassOf	"hash"
s8	"sensitive hash technique"	rdfs:member	"sensitive hash"
s8	"multiple type"	rdfs:subClassOf	"type"
s8	"instance match"	rdfs:member	"instance"
s8	"instance match"	rdfs:subClassOf	"match"
s8	"multiple type"	rdfs:member	"multiple"
s8	"hash technique"	rdfs:member	"hash"
s8	"hash technique"	rdfs:subClassOf	"technique"
s8	"vastly improve"	rdfs:subClassOf	"improve"
s8	"sensitive hash technique"	rdfs:subClassOf	"hash technique"
s8	"locality sensitive hash technique"	rdfs:subClassOf	"sensitive hash technique"
s8	"use of locality sensitive hash technique"	rdfs:member	"use"
s8	"use of locality sensitive hash technique"	rdfs:member	"locality sensitive hash technique"
s8	"scalability of instance match"	rdfs:member	"scalability"
s8	"scalability of instance match"	rdfs:member	"instance match"
s8	"scalability of instance match across multiple type"	rdfs:member	"scalability of instance match"
s8	"scalability of instance match across multiple type"	rdfs:member	"multiple type"
s7.1	"the matching algorithm match a large number of type pairs"
s7.1	"the matching algorithm match a large number of type pairs"	rdf:subject	"match algorithm"
s7.1	"match algorithm"	rdfs:subClassOf	"algorithm"
s7.1	"match algorithm"	rdfs:member	"match"
s7.1	"the matching algorithm match a large number of type pairs"	rdf:predicate	"match"
s7.1	"the matching algorithm match a large number of type pairs"	rdf:object	"large number of type pair"
s7.1	"large number of type pair"	rdfs:member	"type pair"
s7.1	"large number of type pair"	rdfs:member	"large number"
s7.1	"type pair"	rdfs:subClassOf	"pair"
s7.1	"large number"	rdfs:member	"large"
s7.1	"large number"	rdfs:subClassOf	"number"
s7.1	"type pair"	rdfs:member	"type"
s7.1	"large number of type pair"	rdfs:member	"large number"
s7.1	"large number of type pair"	rdfs:member	"type pair"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"	rdf:subject	"key problem in instance match of type"
s7	"key problem in instance match of type"	rdfs:member	"instance match"
s7	"key problem in instance match of type"	rdfs:member	"type"
s7	"key problem in instance match of type"	rdfs:member	"key problem"
s7	"instance match"	rdfs:member	"instance"
s7	"key problem"	rdfs:subClassOf	"problem"
s7	"instance match"	rdfs:subClassOf	"match"
s7	"key problem"	rdfs:member	"key"
s7	"key problem in instance match"	rdfs:member	"key problem"
s7	"key problem in instance match"	rdfs:member	"instance match"
s7	"instance match of type"	rdfs:member	"instance match"
s7	"instance match of type"	rdfs:member	"type"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"	rdf:predicate	"scale"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"	rdf:object	"match algorithm"
s7	"match algorithm"	rdfs:subClassOf	"algorithm"
s7	"match algorithm"	rdfs:member	"match"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"	local:AM-DIS	"however"
s7	"a key problem in instance matching of types however scaling the matching algorithm to match a large number of type pairs"	local:AM-PNC	"match a large number of type pair"
s7	"match a large number of type pair"	rdfs:member	"type pair"
s7	"match a large number of type pair"	rdfs:member	"match"
s7	"match a large number of type pair"	rdfs:member	"large number"
s7	"type pair"	rdfs:subClassOf	"pair"
s7	"large number"	rdfs:member	"large"
s7	"large number"	rdfs:subClassOf	"number"
s7	"type pair"	rdfs:member	"type"
s7	"large number of type pair"	rdfs:member	"large number"
s7	"large number of type pair"	rdfs:member	"type pair"
s6.1	"the matching algorithm handle types with a large number of instances"
s6.1	"the matching algorithm handle types with a large number of instances"	rdf:subject	"match algorithm"
s6.1	"match algorithm"	rdfs:subClassOf	"algorithm"
s6.1	"match algorithm"	rdfs:member	"match"
s6.1	"the matching algorithm handle types with a large number of instances"	rdf:predicate	"handle"
s6.1	"the matching algorithm handle types with a large number of instances"	rdf:object	"large number of instance type"
s6.1	"large number of instance type"	rdfs:member	"instance type"
s6.1	"large number of instance type"	rdfs:member	"large number"
s6.1	"instance type"	rdfs:subClassOf	"type"
s6.1	"large number"	rdfs:member	"large"
s6.1	"instance type"	rdfs:member	"instance"
s6.1	"large number"	rdfs:subClassOf	"number"
s6.1	"large number of instance type"	rdfs:member	"large number"
s6.1	"large number of instance type"	rdfs:member	"instance type"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"	rdf:subject	"key problem in instance match of type"
s6	"key problem in instance match of type"	rdfs:member	"instance match"
s6	"key problem in instance match of type"	rdfs:member	"type"
s6	"key problem in instance match of type"	rdfs:member	"key problem"
s6	"instance match"	rdfs:member	"instance"
s6	"key problem"	rdfs:subClassOf	"problem"
s6	"instance match"	rdfs:subClassOf	"match"
s6	"key problem"	rdfs:member	"key"
s6	"key problem in instance match"	rdfs:member	"key problem"
s6	"key problem in instance match"	rdfs:member	"instance match"
s6	"instance match of type"	rdfs:member	"instance match"
s6	"instance match of type"	rdfs:member	"type"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"	rdf:predicate	"scale"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"	rdf:object	"match algorithm"
s6	"match algorithm"	rdfs:subClassOf	"algorithm"
s6	"match algorithm"	rdfs:member	"match"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"	local:AM-DIS	"however"
s6	"a key problem in instance matching of types however scaling the matching algorithm to handle types with a large number of instances"	local:AM-PNC	"handle type with a large number of instance"
s6	"handle type with a large number of instance"	rdfs:member	"large number"
s6	"handle type with a large number of instance"	rdfs:member	"handle type"
s6	"handle type with a large number of instance"	rdfs:member	"instance"
s6	"handle type"	rdfs:subClassOf	"type"
s6	"large number"	rdfs:member	"large"
s6	"handle type"	rdfs:member	"handle"
s6	"large number"	rdfs:subClassOf	"number"
s6	"handle with large number"	rdfs:member	"handle"
s6	"handle with large number"	rdfs:member	"large number"
s6	"large number of instance"	rdfs:member	"large number"
s6	"large number of instance"	rdfs:member	"instance"
s5	"ontologies that have different structures"
s5	"ontologies that have different structures"	rdf:subject	"ontology"
s5	"ontologies that have different structures"	rdf:predicate	"have"
s5	"ontologies that have different structures"	rdf:object	"different structure"
s5	"different structure"	rdfs:subClassOf	"structure"
s5	"different structure"	rdfs:member	"different"
s4	"ontologies that have different names"
s4	"ontologies that have different names"	rdf:subject	"ontology"
s4	"ontologies that have different names"	rdf:predicate	"have"
s4	"ontologies that have different names"	rdf:object	"different name"
s4	"different name"	rdfs:subClassOf	"name"
s4	"different name"	rdfs:member	"different"
s3.1	"a useful technique matching ontologies"
s3.1	"a useful technique matching ontologies"	rdf:subject	"ontology"
s3.1	"a useful technique matching ontologies"	rdf:predicate	"match"
s3.1	"a useful technique matching ontologies"	rdf:object	"useful technique"
s3.1	"useful technique"	rdfs:member	"useful"
s3.1	"useful technique"	rdfs:subClassOf	"technique"
s3	"instancebased matching known to be a useful technique for matching ontologies"
s3	"instancebased matching known to be a useful technique for matching ontologies"	rdf:subject	"instancebased match"
s3	"instancebased match"	rdfs:subClassOf	"match"
s3	"instancebased match"	rdfs:member	"instancebased"
s3	"instancebased matching known to be a useful technique for matching ontologies"	rdf:predicate	"know"
s3	"instancebased matching known to be a useful technique for matching ontologies"	rdf:object	"useful technique for match ontology"
s3	"useful technique for match ontology"	rdfs:member	"useful technique"
s3	"useful technique for match ontology"	rdfs:member	"match ontology"
s3	"match ontology"	rdfs:subClassOf	"ontology"
s3	"match ontology"	rdfs:member	"match"
s3	"useful technique"	rdfs:member	"useful"
s3	"useful technique"	rdfs:subClassOf	"technique"
s3	"useful technique for match ontology"	rdfs:member	"useful technique"
s3	"useful technique for match ontology"	rdfs:member	"match ontology"
s2	"in this paper we describe a mechanism for ontology alignment"
s2	"in this paper we describe a mechanism for ontology alignment"	rdf:subject	"we"
s2	"in this paper we describe a mechanism for ontology alignment"	rdf:predicate	"describe"
s2	"in this paper we describe a mechanism for ontology alignment"	rdf:object	"mechanism ontology alignment"
s2	"mechanism ontology"	rdfs:member	"mechanism"
s2	"ontology alignment"	rdfs:subClassOf	"alignment"
s2	"mechanism ontology alignment"	rdfs:subClassOf	"alignment"
s2	"mechanism ontology"	rdfs:subClassOf	"ontology"
s2	"mechanism ontology alignment"	rdfs:member	"mechanism ontology"
s2	"ontology alignment"	rdfs:member	"ontology"
s2	"mechanism ontology alignment"	rdfs:subClassOf	"ontology alignment"
s2	"in this paper we describe a mechanism for ontology alignment"	local:AM-LOC	"paper"
s1	"instance based matching of types"
s1	"instance based matching of types"	rdf:subject	"instance"
s1	"instance based matching of types"	rdf:predicate	"base"
s1	"instance based matching of types"	rdf:object	"match of type"
s1	"match of type"	rdfs:member	"match"
s1	"match of type"	rdfs:member	"type"
s1	"match of type"	rdfs:member	"match"
s1	"match of type"	rdfs:member	"type"
s0	"using instance"
s0	"using instance"	rdf:subject	"instance"
s0	"using instance"	rdf:predicate	"use"
