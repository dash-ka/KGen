s10	"we propose a tractable rewriting approach"
s10	"we propose a tractable rewriting approach"	rdf:subject	"we"
s10	"we propose a tractable rewriting approach"	rdf:predicate	"propose"
s10	"we propose a tractable rewriting approach"	rdf:object	"tractable rewrite approach"
s10	"tractable rewrite"	rdfs:member	"tractable"
s10	"tractable rewrite approach"	rdfs:member	"tractable rewrite"
s10	"rewrite approach"	rdfs:member	"rewrite"
s10	"rewrite approach"	rdfs:subClassOf	"approach"
s10	"tractable rewrite"	rdfs:subClassOf	"rewrite"
s10	"tractable rewrite approach"	rdfs:subClassOf	"approach"
s9.1	"existing approaches"
s9.1	"existing approaches"	rdf:subject	"approach"
s9.1	"existing approaches"	rdf:predicate	"exist"
s9	"that not require such an extreme prioritization with existing approaches with encouraging results"
s9	"that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:subject	"that"
s9	"that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:predicate	"not require"
s9	"that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:object	"extreme prioritization with exist approach with encourage result"
s9	"extreme prioritization with exist approach with encourage result"	rdfs:member	"extreme prioritization"
s9	"extreme prioritization with exist approach with encourage result"	rdfs:member	"encourage result"
s9	"extreme prioritization with exist approach with encourage result"	rdfs:member	"exist approach"
s9	"encourage result"	rdfs:member	"encourage"
s9	"exist approach"	rdfs:member	"exist"
s9	"exist approach"	rdfs:subClassOf	"approach"
s9	"extreme prioritization"	rdfs:subClassOf	"prioritization"
s9	"encourage result"	rdfs:subClassOf	"result"
s9	"extreme prioritization"	rdfs:member	"extreme"
s9	"extreme prioritization with exist approach"	rdfs:member	"extreme prioritization"
s9	"extreme prioritization with exist approach"	rdfs:member	"exist approach"
s8	"empirically compare a novel technique for el"
s8	"empirically compare a novel technique for el"	rdf:subject	"novel technique"
s8	"novel technique"	rdfs:subClassOf	"technique"
s8	"novel technique"	rdfs:member	"novel"
s8	"empirically compare a novel technique for el"	rdf:predicate	"compare"
s8	"empirically compare a novel technique for el"	rdf:object	"el"
s8	"empirically compare a novel technique for el"	local:AM-MNR	"empirically"
s7	"we propose a novel technique for el"
s7	"we propose a novel technique for el"	rdf:subject	"we"
s7	"we propose a novel technique for el"	rdf:predicate	"propose"
s7	"we propose a novel technique for el"	rdf:object	"novel technique for el"
s7	"novel technique for el"	rdfs:member	"novel technique"
s7	"novel technique for el"	rdfs:member	"el"
s7	"novel technique"	rdfs:subClassOf	"technique"
s7	"novel technique"	rdfs:member	"novel"
s7	"novel technique for el"	rdfs:member	"novel technique"
s7	"novel technique for el"	rdfs:member	"el"
s6	"that not require such an extreme prioritization"
s6	"that not require such an extreme prioritization"	rdf:subject	"that"
s6	"that not require such an extreme prioritization"	rdf:predicate	"not require"
s6	"that not require such an extreme prioritization"	rdf:object	"extreme prioritization"
s6	"extreme prioritization"	rdfs:subClassOf	"prioritization"
s6	"extreme prioritization"	rdfs:member	"extreme"
s5.2	"influence the other two"
s5.2	"influence the other two"	rdf:subject	"two"
s5.2	"influence the other two"	rdf:predicate	"influence"
s5.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s5.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"absolute priority to one of these requirement"
s5.1	"absolute priority to one of these requirement"	rdfs:member	"requirement"
s5.1	"absolute priority to one of these requirement"	rdfs:member	"absolute priority"
s5.1	"absolute priority"	rdfs:member	"absolute"
s5.1	"absolute priority"	rdfs:subClassOf	"priority"
s5.1	"requirement priority"	rdfs:subClassOf	"priority"
s5.1	"one requirement"	rdfs:subClassOf	"requirement"
s5.1	"absolute requirement priority"	rdfs:subClassOf	"requirement priority"
s5.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"limit"
s5.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"possibility to influence the other two"
s5.1	"other two"	rdfs:subClassOf	"two"
s5.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	local:AM-DIS	"thereby"
s5	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s5	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"uniform interpolation"
s5	"uniform interpolation"	rdfs:subClassOf	"interpolation"
s5	"uniform interpolation"	rdfs:member	"uniform"
s5	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"assign"
s5	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"absolute priority one of these requirement thereby limit the possibility to influence the other two"
s5	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"requirement thereby"
s5	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"absolute priority"
s5	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"possibility"
s5	"absolute priority"	rdfs:member	"absolute"
s5	"requirement thereby"	rdfs:member	"requirement"
s5	"absolute priority"	rdfs:subClassOf	"priority"
s5	"requirement thereby"	rdfs:subClassOf	"thereby"
s5	"other two"	rdfs:subClassOf	"two"
s5	"thereby limit"	rdfs:subClassOf	"limit"
s5	"one requirement"	rdfs:subClassOf	"requirement"
s4.2	"influence the other two"
s4.2	"influence the other two"	rdf:subject	"two"
s4.2	"influence the other two"	rdf:predicate	"influence"
s4.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"
s4.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:subject	"one of these requirement"
s4.1	"one requirement"	rdfs:subClassOf	"requirement"
s4.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:predicate	"limit"
s4.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:object	"possibility to influence the other two"
s4.1	"other two"	rdfs:subClassOf	"two"
s4	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s4	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"minimal module extraction"
s4	"minimal module"	rdfs:member	"minimal"
s4	"module extraction"	rdfs:subClassOf	"extraction"
s4	"minimal module"	rdfs:subClassOf	"module"
s4	"module extraction"	rdfs:member	"module"
s4	"minimal module extraction"	rdfs:member	"minimal module"
s4	"minimal module extraction"	rdfs:subClassOf	"extraction"
s4	"minimal module extraction"	rdfs:subClassOf	"module extraction"
s4	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"assign"
s4	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"absolute priority one of these requirement thereby limit the possibility to influence the other two"
s4	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"requirement thereby"
s4	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"absolute priority"
s4	"absolute priority one of these requirement thereby limit the possibility to influence the other two"	rdfs:member	"possibility"
s4	"absolute priority"	rdfs:member	"absolute"
s4	"requirement thereby"	rdfs:member	"requirement"
s4	"absolute priority"	rdfs:subClassOf	"priority"
s4	"requirement thereby"	rdfs:subClassOf	"thereby"
s4	"other two"	rdfs:subClassOf	"two"
s4	"thereby limit"	rdfs:subClassOf	"limit"
s4	"one requirement"	rdfs:subClassOf	"requirement"
s3.1	"extracted base"
s3.1	"extracted base"	rdf:subject	"base"
s3.1	"extracted base"	rdf:predicate	"extract"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	rdf:subject	"three conflict requirement"
s3	"conflict requirement"	rdfs:subClassOf	"requirement"
s3	"conflict requirement"	rdfs:member	"conflict"
s3	"three conflict requirement"	rdfs:subClassOf	"conflict requirement"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	rdf:predicate	"arise"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	local:AM-LOC	"context of knowledge base extraction of the extract base with the original one"
s3	"context of knowledge base extraction of the extract base with the original one"	rdfs:member	"knowledge base extraction"
s3	"context of knowledge base extraction of the extract base with the original one"	rdfs:member	"original one"
s3	"context of knowledge base extraction of the extract base with the original one"	rdfs:member	"extract base"
s3	"context of knowledge base extraction of the extract base with the original one"	rdfs:member	"context"
s3	"knowledge base extraction"	rdfs:subClassOf	"extraction"
s3	"knowledge base extraction"	rdfs:member	"knowledge base"
s3	"extract base"	rdfs:subClassOf	"base"
s3	"knowledge base"	rdfs:member	"knowledge"
s3	"original one"	rdfs:subClassOf	"one"
s3	"base extraction"	rdfs:subClassOf	"extraction"
s3	"knowledge base"	rdfs:subClassOf	"base"
s3	"original one"	rdfs:member	"original"
s3	"base extraction"	rdfs:member	"base"
s3	"extract base"	rdfs:member	"extract"
s3	"knowledge base extraction"	rdfs:subClassOf	"base extraction"
s3	"context of knowledge base extraction"	rdfs:member	"context"
s3	"context of knowledge base extraction"	rdfs:member	"knowledge base extraction"
s3	"knowledge base extraction of extract base"	rdfs:member	"knowledge base extraction"
s3	"knowledge base extraction of extract base"	rdfs:member	"extract base"
s3	"context of knowledge base extraction with original one"	rdfs:member	"context of knowledge base extraction"
s3	"context of knowledge base extraction with original one"	rdfs:member	"original one"
s2	"extracted base"
s2	"extracted base"	rdf:subject	"base"
s2	"extracted base"	rdf:predicate	"extract"
s1	"extracted base"
s1	"extracted base"	rdf:subject	"base"
s1	"extracted base"	rdf:predicate	"extract"
s0	"extracted base"
s0	"extracted base"	rdf:subject	"base"
s0	"extracted base"	rdf:predicate	"extract"
s0	"extracted base"	rdf:object	"base"
