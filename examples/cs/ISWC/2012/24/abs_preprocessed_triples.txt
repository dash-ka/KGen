s10	"empirically compare a novel technique for el"
s10	"empirically compare a novel technique for el"	rdf:subject	"novel technique"
s10	"novel technique"	rdfs:subClassOf	"technique"
s10	"novel technique"	rdfs:member	"novel"
s10	"empirically compare a novel technique for el"	rdf:predicate	"compare"
s10	"empirically compare a novel technique for el"	rdf:object	"EL"
s10	"empirically compare a novel technique for el"	local:AM-MNR	"empirically"
s9	"we propose a tractable rewriting approach"
s9	"we propose a tractable rewriting approach"	rdf:subject	"We"
s9	"we propose a tractable rewriting approach"	rdf:predicate	"propose"
s9	"we propose a tractable rewriting approach"	rdf:object	"tractable rewriting approach"
s9	"rewriting approach"	rdfs:subClassOf	"approach"
s9	"tractable rewriting approach"	rdfs:subClassOf	"rewriting approach"
s8.1	"existing approaches"
s8.1	"existing approaches"	rdf:subject	"approaches"
s8.1	"existing approaches"	rdf:predicate	"exist"
s8	"el that not require such an extreme prioritization with existing approaches with encouraging results"
s8	"el that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:subject	"EL"
s8	"el that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:predicate	"not require"
s8	"el that not require such an extreme prioritization with existing approaches with encouraging results"	rdf:object	"extreme prioritization with existing approaches with encouraging results"
s8	"extreme prioritization with existing approaches with encouraging results"	rdfs:member	"extreme prioritization"
s8	"extreme prioritization with existing approaches with encouraging results"	rdfs:member	"approaches"
s8	"extreme prioritization with existing approaches with encouraging results"	rdfs:member	"encouraging results"
s8	"extreme prioritization"	rdfs:subClassOf	"prioritization"
s8	"encouraging results"	rdfs:member	"encouraging"
s8	"extreme prioritization"	rdfs:member	"extreme"
s8	"encouraging results"	rdfs:subClassOf	"results"
s8	"existing approaches"	rdfs:subClassOf	"approaches"
s8	"extreme prioritization with existing approaches"	rdfs:member	"extreme prioritization"
s8	"extreme prioritization with existing approaches"	rdfs:member	"existing approaches"
s8	"existing approaches with encouraging results"	rdfs:member	"existing approaches"
s8	"existing approaches with encouraging results"	rdfs:member	"encouraging results"
s7	"el that not require such an extreme prioritization"
s7	"el that not require such an extreme prioritization"	rdf:subject	"EL"
s7	"el that not require such an extreme prioritization"	rdf:predicate	"not require"
s7	"el that not require such an extreme prioritization"	rdf:object	"extreme prioritization"
s7	"extreme prioritization"	rdfs:subClassOf	"prioritization"
s7	"extreme prioritization"	rdfs:member	"extreme"
s6	"we propose a novel technique for el"
s6	"we propose a novel technique for el"	rdf:subject	"We"
s6	"we propose a novel technique for el"	rdf:predicate	"propose"
s6	"we propose a novel technique for el"	rdf:object	"novel technique for EL"
s6	"novel technique for el"	rdfs:member	"novel technique"
s6	"novel technique for el"	rdfs:member	"el"
s6	"novel technique"	rdfs:subClassOf	"technique"
s6	"novel technique"	rdfs:member	"novel"
s6	"novel technique for el"	rdfs:member	"novel technique"
s6	"novel technique for el"	rdfs:member	"el"
s5.2	"influence the other two"
s5.2	"influence the other two"	rdf:subject	"two"
s5.2	"influence the other two"	rdf:predicate	"influence"
s5.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"
s5.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:subject	"one of these requirements"
s5.1	"one requirements"	rdfs:subClassOf	"requirements"
s5.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:predicate	"limit"
s5.1	"minimal module extraction one of these requirements limiting the possibilities to influence the other two"	rdf:object	"possibilities to influence the other two"
s5.1	"other two"	rdfs:subClassOf	"two"
s5	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s5	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"Minimal module extraction"
s5	"module extraction"	rdfs:member	"module"
s5	"minimal module extraction"	rdfs:member	"minimal module"
s5	"minimal module"	rdfs:subClassOf	"module"
s5	"minimal module extraction"	rdfs:subClassOf	"extraction"
s5	"module extraction"	rdfs:subClassOf	"extraction"
s5	"minimal module"	rdfs:member	"minimal"
s5	"minimal module extraction"	rdfs:subClassOf	"module extraction"
s5	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"assign"
s5	"minimal module extraction assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"
s5	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"absolute priority"
s5	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"requirements"
s5	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"possibilities"
s5	"absolute priority"	rdfs:member	"absolute"
s5	"absolute priority"	rdfs:subClassOf	"priority"
s5	"other two"	rdfs:subClassOf	"two"
s5	"thereby limiting"	rdfs:subClassOf	"limiting"
s5	"one requirements"	rdfs:subClassOf	"requirements"
s5	"one thereby limiting"	rdfs:member	"one"
s5	"one thereby limiting"	rdfs:member	"thereby limiting"
s4.2	"influence the other two"
s4.2	"influence the other two"	rdf:subject	"two"
s4.2	"influence the other two"	rdf:predicate	"influence"
s4.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s4.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"absolute priority to one of these requirements"
s4.1	"absolute priority to one of these requirements"	rdfs:member	"absolute priority"
s4.1	"absolute priority to one of these requirements"	rdfs:member	"requirements"
s4.1	"absolute priority"	rdfs:member	"absolute"
s4.1	"absolute priority"	rdfs:subClassOf	"priority"
s4.1	"requirements priority"	rdfs:subClassOf	"priority"
s4.1	"one requirements"	rdfs:subClassOf	"requirements"
s4.1	"absolute requirements priority"	rdfs:subClassOf	"requirements priority"
s4.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"limit"
s4.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"possibilities to influence the other two"
s4.1	"other two"	rdfs:subClassOf	"two"
s4.1	"an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	local:AM-DIS	"thereby"
s4	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"
s4	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:subject	"uniform interpolation"
s4	"uniform interpolation"	rdfs:subClassOf	"interpolation"
s4	"uniform interpolation"	rdfs:member	"uniform"
s4	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:predicate	"assign"
s4	"uniform interpolation assign an absolute priority to one of these requirements thereby limiting the possibilities to influence the other two"	rdf:object	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"
s4	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"absolute priority"
s4	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"requirements"
s4	"absolute priority one of these requirements thereby limiting the possibilities to influence the other two"	rdfs:member	"possibilities"
s4	"absolute priority"	rdfs:member	"absolute"
s4	"absolute priority"	rdfs:subClassOf	"priority"
s4	"other two"	rdfs:subClassOf	"two"
s4	"thereby limiting"	rdfs:subClassOf	"limiting"
s4	"one requirements"	rdfs:subClassOf	"requirements"
s4	"one thereby limiting"	rdfs:member	"one"
s4	"one thereby limiting"	rdfs:member	"thereby limiting"
s3.1	"extracted base"
s3.1	"extracted base"	rdf:subject	"base"
s3.1	"extracted base"	rdf:predicate	"extract"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	rdf:subject	"Three conflicting requirements"
s3	"conflicting requirements"	rdfs:subClassOf	"requirements"
s3	"conflicting requirements"	rdfs:member	"conflicting"
s3	"three conflicting requirements"	rdfs:subClassOf	"conflicting requirements"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	rdf:predicate	"arise"
s3	"three conflicting requirements arise in the context of knowledge base extraction of the extracted base with the original one"	local:AM-LOC	"context of knowledge base extraction of the extracted base with the original one"
s3	"context of knowledge base extraction of the extracted base with the original one"	rdfs:member	"context"
s3	"context of knowledge base extraction of the extracted base with the original one"	rdfs:member	"knowledge base extraction"
s3	"context of knowledge base extraction of the extracted base with the original one"	rdfs:member	"original one"
s3	"context of knowledge base extraction of the extracted base with the original one"	rdfs:member	"extracted base"
s3	"original one"	rdfs:member	"original"
s3	"original one"	rdfs:subClassOf	"one"
s3	"extracted base"	rdfs:member	"extracted"
s3	"knowledge base"	rdfs:subClassOf	"base"
s3	"base extraction"	rdfs:subClassOf	"extraction"
s3	"base extraction"	rdfs:member	"base"
s3	"extracted base"	rdfs:subClassOf	"base"
s3	"knowledge base extraction"	rdfs:member	"knowledge base"
s3	"knowledge base"	rdfs:member	"knowledge"
s3	"knowledge base extraction"	rdfs:subClassOf	"extraction"
s3	"knowledge base extraction"	rdfs:subClassOf	"base extraction"
s3	"context of knowledge base extraction"	rdfs:member	"context"
s3	"context of knowledge base extraction"	rdfs:member	"knowledge base extraction"
s3	"knowledge base extraction of extracted base"	rdfs:member	"knowledge base extraction"
s3	"knowledge base extraction of extracted base"	rdfs:member	"extracted base"
s3	"context of knowledge base extraction with original one"	rdfs:member	"context of knowledge base extraction"
s3	"context of knowledge base extraction with original one"	rdfs:member	"original one"
s2	"extracted base"
s2	"extracted base"	rdf:subject	"base"
s2	"extracted base"	rdf:predicate	"extract"
s1	"extracted base"
s1	"extracted base"	rdf:subject	"base"
s1	"extracted base"	rdf:predicate	"extract"
s1	"extracted base"	rdf:object	"base"
s0	"extracted base"
s0	"extracted base"	rdf:subject	"base"
s0	"extracted base"	rdf:predicate	"extract"
