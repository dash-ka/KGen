s17.4	"reducing the time"
s17.4	"reducing the time"	rdf:subject	"time"
s17.4	"reducing the time"	rdf:predicate	"reduce"
s17.3	"fully cached results"
s17.3	"fully cached results"	rdf:subject	"results"
s17.3	"fully cached results"	rdf:predicate	"cache"
s17.3	"fully cached results"	local:AM-MNR	"fully"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:subject	"hybrid query execution"
s17.2	"query execution"	rdfs:subClassOf	"execution"
s17.2	"hybrid query"	rdfs:member	"hybrid"
s17.2	"hybrid query execution"	rdfs:member	"hybrid query"
s17.2	"hybrid query"	rdfs:subClassOf	"query"
s17.2	"query execution"	rdfs:member	"query"
s17.2	"hybrid query execution"	rdfs:subClassOf	"execution"
s17.2	"hybrid query execution"	rdfs:subClassOf	"query execution"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:predicate	"improve"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:object	"freshness vs fully cached results"
s17.2	"freshness vs fully cached results"	rdfs:member	"results"
s17.2	"freshness vs fully cached results"	rdfs:member	"freshness vs"
s17.2	"freshness vs"	rdfs:member	"freshness"
s17.2	"freshness vs"	rdfs:subClassOf	"vs"
s17.2	"cached results"	rdfs:subClassOf	"results"
s17.2	"fully cached"	rdfs:subClassOf	"cached"
s17.2	"freshness cached results"	rdfs:subClassOf	"cached results"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"	local:AM-MOD	"can"
s17.2	"hybrid query execution can improve freshness vs fully cached results while reducing the time"	local:AM-TMP	"reducing the time"
s17.1	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"
s17.1	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:subject	"results"
s17.1	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:predicate	"show"
s17.1	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:object	"hybrid query execution can improve freshness vs fully cached results while reducing the time"
s17	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"
s17	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:subject	"We"
s17	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:predicate	"result"
s17	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdf:object	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"
s17	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdfs:member	"execution"
s17	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdfs:member	"time"
s17	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdfs:member	"results"
s17	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdfs:member	"show"
s17	"show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	rdfs:member	"freshness vs"
s17	"freshness vs"	rdfs:member	"freshness"
s17	"freshness vs"	rdfs:subClassOf	"vs"
s17	"cached results"	rdfs:subClassOf	"results"
s17	"fully cached"	rdfs:subClassOf	"cached"
s17	"freshness cached results"	rdfs:subClassOf	"cached results"
s17	"can improve"	rdfs:subClassOf	"improve"
s17	"query execution"	rdfs:subClassOf	"execution"
s17	"hybrid query execution"	rdfs:subClassOf	"query execution"
s16.1	"the time taken vs fully live execution"
s16.1	"the time taken vs fully live execution"	rdf:subject	"execution"
s16.1	"the time taken vs fully live execution"	rdf:predicate	"live"
s16.1	"the time taken vs fully live execution"	local:AM-TMP	"time taken vs fully"
s16.1	"time taken vs fully"	rdfs:member	"time"
s16.1	"time taken vs fully"	rdfs:member	"vs"
s16.1	"fully taken"	rdfs:subClassOf	"taken"
s16.1	"time fully taken"	rdfs:member	"time"
s16.1	"time fully taken"	rdfs:member	"fully taken"
s16	"the time taken"
s16	"the time taken"	rdf:subject	"time"
s16	"the time taken"	rdf:predicate	"take"
s15	"finally we evaluate different hybrid query plans"
s15	"finally we evaluate different hybrid query plans"	rdf:subject	"We"
s15	"finally we evaluate different hybrid query plans"	rdf:predicate	"evaluate"
s15	"finally we evaluate different hybrid query plans"	rdf:object	"different hybrid query plans"
s15	"different hybrid query"	rdfs:member	"different hybrid"
s15	"different hybrid query plans"	rdfs:subClassOf	"plans"
s15	"hybrid query"	rdfs:member	"hybrid"
s15	"query plans"	rdfs:member	"query"
s15	"different hybrid"	rdfs:member	"different"
s15	"hybrid query plans"	rdfs:subClassOf	"plans"
s15	"different hybrid query"	rdfs:subClassOf	"query"
s15	"hybrid query"	rdfs:subClassOf	"query"
s15	"different hybrid query plans"	rdfs:member	"different hybrid query"
s15	"different hybrid"	rdfs:subClassOf	"hybrid"
s15	"query plans"	rdfs:subClassOf	"plans"
s15	"hybrid query plans"	rdfs:member	"hybrid query"
s15	"hybrid query plans"	rdfs:subClassOf	"query plans"
s15	"different hybrid query plans"	rdfs:subClassOf	"hybrid query plans"
s15	"finally we evaluate different hybrid query plans"	local:AM-TMP	"Finally"
s14	"finally we evaluate split positions in a realworld setup"
s14	"finally we evaluate split positions in a realworld setup"	rdf:subject	"We"
s14	"finally we evaluate split positions in a realworld setup"	rdf:predicate	"evaluate"
s14	"finally we evaluate split positions in a realworld setup"	rdf:object	"split positions"
s14	"split positions"	rdfs:member	"split"
s14	"split positions"	rdfs:subClassOf	"positions"
s14	"finally we evaluate split positions in a realworld setup"	local:AM-LOC	"realworld setup"
s14	"realworld setup"	rdfs:subClassOf	"setup"
s14	"realworld setup"	rdfs:member	"realworld"
s14	"finally we evaluate split positions in a realworld setup"	local:AM-TMP	"Finally"
s13	"a subquery that should instead run"
s13	"a subquery that should instead run"	rdf:subject	"subquery"
s13	"a subquery that should instead run"	rdf:predicate	"run"
s13	"a subquery that should instead run"	local:AM-DIS	"instead"
s13	"a subquery that should instead run"	local:AM-MOD	"should"
s12	"a subquery for which the have good fresh coverage"
s12	"a subquery for which the have good fresh coverage"	rdf:subject	"subquery for which the"
s12	"subquery for which"	rdfs:member	"subquery"
s12	"subquery for which"	rdfs:member	"which"
s12	"a subquery for which the have good fresh coverage"	rdf:predicate	"have"
s12	"a subquery for which the have good fresh coverage"	rdf:object	"good fresh coverage"
s12	"fresh coverage"	rdfs:subClassOf	"coverage"
s12	"good fresh"	rdfs:subClassOf	"fresh"
s12	"good fresh"	rdfs:member	"good"
s12	"fresh coverage"	rdfs:member	"fresh"
s12	"good fresh coverage"	rdfs:subClassOf	"coverage"
s12	"good fresh coverage"	rdfs:member	"good fresh"
s12	"good fresh coverage"	rdfs:subClassOf	"fresh coverage"
s11.2	"we split a query into a subquery"
s11.2	"we split a query into a subquery"	rdf:subject	"We"
s11.2	"we split a query into a subquery"	rdf:predicate	"split"
s11.2	"we split a query into a subquery"	rdf:object	"query subquery"
s11.2	"query subquery"	rdfs:subClassOf	"subquery"
s11.2	"query subquery"	rdfs:member	"query"
s11.1	"we using coherence estimates to split a query into a subquery"
s11.1	"we using coherence estimates to split a query into a subquery"	rdf:subject	"We"
s11.1	"we using coherence estimates to split a query into a subquery"	rdf:predicate	"use"
s11.1	"we using coherence estimates to split a query into a subquery"	rdf:object	"coherence estimates to split a query into a subquery"
s11.1	"coherence estimates to split a query into a subquery"	rdfs:member	"coherence estimates"
s11.1	"coherence estimates to split a query into a subquery"	rdfs:member	"subquery"
s11.1	"coherence estimates to split a query into a subquery"	rdfs:member	"query"
s11.1	"coherence estimates"	rdfs:member	"coherence"
s11.1	"coherence estimates"	rdfs:subClassOf	"estimates"
s11.1	"split into subquery"	rdfs:member	"split"
s11.1	"split into subquery"	rdfs:member	"subquery"
s11	"we thus propose using coherence estimates to split a query into a subquery"
s11	"we thus propose using coherence estimates to split a query into a subquery"	rdf:subject	"We"
s11	"we thus propose using coherence estimates to split a query into a subquery"	rdf:predicate	"propose"
s11	"we thus propose using coherence estimates to split a query into a subquery"	rdf:object	"using coherence estimates to split a query into a subquery"
s11	"using coherence estimates to split a query into a subquery"	rdfs:member	"coherence estimates"
s11	"using coherence estimates to split a query into a subquery"	rdfs:member	"subquery"
s11	"using coherence estimates to split a query into a subquery"	rdfs:member	"query"
s11	"coherence estimates"	rdfs:member	"coherence"
s11	"coherence estimates"	rdfs:subClassOf	"estimates"
s11	"split into subquery"	rdfs:member	"split"
s11	"split into subquery"	rdfs:member	"subquery"
s11	"we thus propose using coherence estimates to split a query into a subquery"	local:AM-DIS	"thus"
s9.2	"we split a query into a subquery"
s9.2	"we split a query into a subquery"	rdf:subject	"We"
s9.2	"we split a query into a subquery"	rdf:predicate	"split"
s9.2	"we split a query into a subquery"	rdf:object	"query subquery"
s9.2	"query subquery"	rdfs:subClassOf	"subquery"
s9.2	"query subquery"	rdfs:member	"query"
s9.1	"we using coherence estimates to split a query into a subquery"
s9.1	"we using coherence estimates to split a query into a subquery"	rdf:subject	"We"
s9.1	"we using coherence estimates to split a query into a subquery"	rdf:predicate	"use"
s9.1	"we using coherence estimates to split a query into a subquery"	rdf:object	"coherence estimates to split a query into a subquery"
s9.1	"coherence estimates to split a query into a subquery"	rdfs:member	"coherence estimates"
s9.1	"coherence estimates to split a query into a subquery"	rdfs:member	"subquery"
s9.1	"coherence estimates to split a query into a subquery"	rdfs:member	"query"
s9.1	"coherence estimates"	rdfs:member	"coherence"
s9.1	"coherence estimates"	rdfs:subClassOf	"estimates"
s9.1	"split into subquery"	rdfs:member	"split"
s9.1	"split into subquery"	rdfs:member	"subquery"
s9	"we thus propose using coherence estimates to split a query into a subquery"
s9	"we thus propose using coherence estimates to split a query into a subquery"	rdf:subject	"We"
s9	"we thus propose using coherence estimates to split a query into a subquery"	rdf:predicate	"propose"
s9	"we thus propose using coherence estimates to split a query into a subquery"	rdf:object	"using coherence estimates to split a query into a subquery"
s9	"using coherence estimates to split a query into a subquery"	rdfs:member	"coherence estimates"
s9	"using coherence estimates to split a query into a subquery"	rdfs:member	"subquery"
s9	"using coherence estimates to split a query into a subquery"	rdfs:member	"query"
s9	"coherence estimates"	rdfs:member	"coherence"
s9	"coherence estimates"	rdfs:subClassOf	"estimates"
s9	"split into subquery"	rdfs:member	"split"
s9	"split into subquery"	rdfs:member	"subquery"
s9	"we thus propose using coherence estimates to split a query into a subquery"	local:AM-DIS	"thus"
s8.2	"current versions of the linked data sources they cache cache results often"
s8.2	"current versions of the linked data sources they cache cache results often"	rdf:subject	"current versions of the Linked Data sources they cache cache results"
s8.2	"current versions of the linked data sources they cache cache results"	rdfs:member	"current versions"
s8.2	"current versions of the linked data sources they cache cache results"	rdfs:member	"cache results"
s8.2	"current versions of the linked data sources they cache cache results"	rdfs:member	"linked data sources"
s8.2	"linked data"	rdfs:member	"linked"
s8.2	"cache results"	rdfs:subClassOf	"results"
s8.2	"current versions"	rdfs:subClassOf	"versions"
s8.2	"current versions"	rdfs:member	"current"
s8.2	"linked data sources"	rdfs:subClassOf	"sources"
s8.2	"linked data sources"	rdfs:member	"linked data"
s8.2	"data sources"	rdfs:member	"data"
s8.2	"linked data"	rdfs:subClassOf	"data"
s8.2	"data sources"	rdfs:subClassOf	"sources"
s8.2	"cache results"	rdfs:member	"cache"
s8.2	"cache cache results"	rdfs:subClassOf	"cache results"
s8.2	"linked data sources"	rdfs:subClassOf	"data sources"
s8.2	"current versions of linked data sources"	rdfs:member	"current versions"
s8.2	"current versions of linked data sources"	rdfs:member	"linked data sources"
s8.2	"current versions of the linked data sources they cache cache results often"	rdf:predicate	"miss"
s8.2	"current versions of the linked data sources they cache cache results often"	local:AM-TMP	"often"
s8.1	"they cache cache results"
s8.1	"they cache cache results"	rdf:subject	"they"
s8.1	"they cache cache results"	rdf:predicate	"cache"
s8.1	"they cache cache results"	rdf:object	"cache results"
s8.1	"cache results"	rdfs:subClassOf	"results"
s8.1	"cache results"	rdfs:member	"cache"
s8	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"
s8	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdf:subject	"We"
s8	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdf:predicate	"compare"
s8	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdf:object	"results from two public SPARQL stores against current versions of the Linked Data sources two public SPARQL stores against current versions of the Linked Data sources they cache cache results are often missing"
s8	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdfs:member	"current versions"
s8	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdfs:member	"public sparql stores"
s8	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdfs:member	"linked data sources"
s8	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdfs:member	"results"
s8	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	rdfs:member	"cache results"
s8	"linked data"	rdfs:member	"linked"
s8	"cache results"	rdfs:subClassOf	"results"
s8	"current versions"	rdfs:subClassOf	"versions"
s8	"public sparql"	rdfs:subClassOf	"sparql"
s8	"current versions"	rdfs:member	"current"
s8	"linked data sources"	rdfs:subClassOf	"sources"
s8	"linked data sources"	rdfs:member	"linked data"
s8	"data sources"	rdfs:member	"data"
s8	"public sparql stores"	rdfs:member	"public sparql"
s8	"linked data"	rdfs:subClassOf	"data"
s8	"data sources"	rdfs:subClassOf	"sources"
s8	"sparql stores"	rdfs:subClassOf	"stores"
s8	"public sparql stores"	rdfs:subClassOf	"stores"
s8	"cache results"	rdfs:member	"cache"
s8	"public sparql"	rdfs:member	"public"
s8	"sparql stores"	rdfs:member	"sparql"
s8	"often missing"	rdfs:subClassOf	"missing"
s8	"are often missing"	rdfs:subClassOf	"often missing"
s8	"cache cache results"	rdfs:subClassOf	"cache results"
s8	"linked data sources"	rdfs:subClassOf	"data sources"
s8	"public sparql stores"	rdfs:subClassOf	"sparql stores"
s8	"two public sparql stores"	rdfs:subClassOf	"public sparql stores"
s8	"linked data sources"	rdfs:subClassOf	"data sources"
s8	"public sparql stores"	rdfs:subClassOf	"sparql stores"
s8	"two public sparql stores"	rdfs:subClassOf	"public sparql stores"
s8	"results from two public sparql stores"	rdfs:member	"results"
s8	"results from two public sparql stores"	rdfs:member	"two public sparql stores"
s8	"two public sparql stores against current versions"	rdfs:member	"two public sparql stores"
s8	"two public sparql stores against current versions"	rdfs:member	"current versions"
s8	"current versions of linked data sources"	rdfs:member	"current versions"
s8	"current versions of linked data sources"	rdfs:member	"linked data sources"
s8	"two public sparql stores against current versions"	rdfs:member	"two public sparql stores"
s8	"two public sparql stores against current versions"	rdfs:member	"current versions"
s8	"current versions of linked data sources"	rdfs:member	"current versions"
s8	"current versions of linked data sources"	rdfs:member	"linked data sources"
s8	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	local:AM-TMP	"first"
s7.1	"they cache cache results"
s7.1	"they cache cache results"	rdf:subject	"they"
s7.1	"they cache cache results"	rdf:predicate	"cache"
s7.1	"they cache cache results"	rdf:object	"cache results"
s7.1	"cache results"	rdfs:subClassOf	"results"
s7.1	"cache results"	rdfs:member	"cache"
s7	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"
s7	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdf:subject	"We"
s7	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdf:predicate	"compare"
s7	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdf:object	"results from two public SPARQL stores against current versions of the Linked Data sources two public SPARQL stores against current versions of the Linked Data sources they cache cache results are outofdate"
s7	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdfs:member	"current versions"
s7	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdfs:member	"public sparql stores"
s7	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdfs:member	"linked data sources"
s7	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdfs:member	"results"
s7	"results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	rdfs:member	"cache results"
s7	"linked data"	rdfs:member	"linked"
s7	"cache results"	rdfs:subClassOf	"results"
s7	"current versions"	rdfs:subClassOf	"versions"
s7	"public sparql"	rdfs:subClassOf	"sparql"
s7	"current versions"	rdfs:member	"current"
s7	"linked data sources"	rdfs:subClassOf	"sources"
s7	"linked data sources"	rdfs:member	"linked data"
s7	"data sources"	rdfs:member	"data"
s7	"public sparql stores"	rdfs:member	"public sparql"
s7	"linked data"	rdfs:subClassOf	"data"
s7	"data sources"	rdfs:subClassOf	"sources"
s7	"sparql stores"	rdfs:subClassOf	"stores"
s7	"public sparql stores"	rdfs:subClassOf	"stores"
s7	"cache results"	rdfs:member	"cache"
s7	"public sparql"	rdfs:member	"public"
s7	"sparql stores"	rdfs:member	"sparql"
s7	"cache cache results"	rdfs:subClassOf	"cache results"
s7	"linked data sources"	rdfs:subClassOf	"data sources"
s7	"public sparql stores"	rdfs:subClassOf	"sparql stores"
s7	"two public sparql stores"	rdfs:subClassOf	"public sparql stores"
s7	"linked data sources"	rdfs:subClassOf	"data sources"
s7	"public sparql stores"	rdfs:subClassOf	"sparql stores"
s7	"two public sparql stores"	rdfs:subClassOf	"public sparql stores"
s7	"results from two public sparql stores"	rdfs:member	"results"
s7	"results from two public sparql stores"	rdfs:member	"two public sparql stores"
s7	"two public sparql stores against current versions"	rdfs:member	"two public sparql stores"
s7	"two public sparql stores against current versions"	rdfs:member	"current versions"
s7	"current versions of linked data sources"	rdfs:member	"current versions"
s7	"current versions of linked data sources"	rdfs:member	"linked data sources"
s7	"two public sparql stores against current versions"	rdfs:member	"two public sparql stores"
s7	"two public sparql stores against current versions"	rdfs:member	"current versions"
s7	"current versions of linked data sources"	rdfs:member	"current versions"
s7	"current versions of linked data sources"	rdfs:member	"linked data sources"
s7	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	local:AM-TMP	"first"
s6	"a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario"
s6	"a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario"	rdf:subject	"hybrid query execution approach"
s6	"query execution"	rdfs:subClassOf	"execution"
s6	"hybrid query"	rdfs:member	"hybrid"
s6	"hybrid query execution"	rdfs:member	"hybrid query"
s6	"hybrid query execution approach"	rdfs:member	"hybrid query execution"
s6	"hybrid query"	rdfs:subClassOf	"query"
s6	"query execution approach"	rdfs:subClassOf	"approach"
s6	"query execution"	rdfs:member	"query"
s6	"execution approach"	rdfs:subClassOf	"approach"
s6	"hybrid query execution approach"	rdfs:subClassOf	"approach"
s6	"hybrid query execution"	rdfs:subClassOf	"execution"
s6	"query execution approach"	rdfs:member	"query execution"
s6	"execution approach"	rdfs:member	"execution"
s6	"query execution approach"	rdfs:subClassOf	"execution approach"
s6	"hybrid query execution approach"	rdfs:subClassOf	"query execution approach"
s6	"a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario"	rdf:predicate	"return"
s6	"a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario"	rdf:object	"fresher results broader range of sources vs the centralised scenario"
s6	"fresher results broader range of sources vs the centralised scenario"	rdfs:member	"fresher results"
s6	"fresher results broader range of sources vs the centralised scenario"	rdfs:member	"centralised scenario"
s6	"fresher results broader range of sources vs the centralised scenario"	rdfs:member	"range"
s6	"fresher results broader range of sources vs the centralised scenario"	rdfs:member	"sources"
s6	"fresher results"	rdfs:member	"fresher"
s6	"fresher results"	rdfs:subClassOf	"results"
s6	"centralised scenario"	rdfs:member	"centralised"
s6	"centralised scenario"	rdfs:subClassOf	"scenario"
s6	"broader range"	rdfs:subClassOf	"range"
s6	"broader range of sources"	rdfs:member	"broader range"
s6	"broader range of sources"	rdfs:member	"sources"
s6	"broader range of sources of centralised scenario"	rdfs:member	"broader range of sources"
s6	"broader range of sources of centralised scenario"	rdfs:member	"centralised scenario"
s5.1	"we speeding up results"
s5.1	"we speeding up results"	rdf:subject	"we"
s5.1	"we speeding up results"	rdf:predicate	"speed"
s5.1	"we speeding up results"	rdf:object	"results"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	rdf:subject	"we"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	rdf:predicate	"propose"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	rdf:object	"hybrid query execution approach"
s5	"query execution"	rdfs:subClassOf	"execution"
s5	"hybrid query"	rdfs:member	"hybrid"
s5	"hybrid query execution"	rdfs:member	"hybrid query"
s5	"hybrid query execution approach"	rdfs:member	"hybrid query execution"
s5	"hybrid query"	rdfs:subClassOf	"query"
s5	"query execution approach"	rdfs:subClassOf	"approach"
s5	"query execution"	rdfs:member	"query"
s5	"execution approach"	rdfs:subClassOf	"approach"
s5	"hybrid query execution approach"	rdfs:subClassOf	"approach"
s5	"hybrid query execution"	rdfs:subClassOf	"execution"
s5	"query execution approach"	rdfs:member	"query execution"
s5	"execution approach"	rdfs:member	"execution"
s5	"query execution approach"	rdfs:subClassOf	"execution approach"
s5	"hybrid query execution approach"	rdfs:subClassOf	"query execution approach"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	local:AM-TMP	"Herein"
s5	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	local:AM-TMP	"speeding up results vs the live scenario"
s5	"speeding up results vs the live scenario"	rdfs:member	"live scenario"
s5	"speeding up results vs the live scenario"	rdfs:member	"up results"
s5	"live scenario"	rdfs:member	"live"
s5	"up results"	rdfs:member	"up"
s5	"up results"	rdfs:subClassOf	"results"
s5	"live scenario"	rdfs:subClassOf	"scenario"
s4	"centralised approaches that can efficiently answer queries over data"
s4	"centralised approaches that can efficiently answer queries over data"	rdf:subject	"centralised approaches"
s4	"centralised approaches"	rdfs:subClassOf	"approaches"
s4	"centralised approaches that can efficiently answer queries over data"	rdf:predicate	"answer"
s4	"centralised approaches that can efficiently answer queries over data"	rdf:object	"queries over data"
s4	"queries over data"	rdfs:member	"data"
s4	"queries over data"	rdfs:member	"queries"
s4	"queries over data"	rdfs:member	"queries"
s4	"queries over data"	rdfs:member	"data"
s4	"centralised approaches that can efficiently answer queries over data"	local:AM-MNR	"efficiently"
s4	"centralised approaches that can efficiently answer queries over data"	local:AM-MOD	"can"
s3	"data cached from parts of the web"
s3	"data cached from parts of the web"	rdf:subject	"data"
s3	"data cached from parts of the web"	rdf:predicate	"cache"
s3	"data cached from parts of the web"	rdf:object	"parts of the Web"
s3	"parts of the web"	rdfs:member	"web"
s3	"parts of the web"	rdfs:member	"parts"
s3	"parts of web"	rdfs:member	"parts"
s3	"parts of web"	rdfs:member	"web"
s1	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"
s1	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"	rdf:subject	"decentralised approaches"
s1	"decentralised approaches"	rdfs:subClassOf	"approaches"
s1	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"	rdf:predicate	"provide"
s1	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"	rdf:object	"fresher results over the entire Web cost of slower response times"
s1	"fresher results over the entire web cost of slower response times"	rdfs:member	"fresher results"
s1	"fresher results over the entire web cost of slower response times"	rdfs:member	"slower response times"
s1	"fresher results over the entire web cost of slower response times"	rdfs:member	"entire web cost"
s1	"response times"	rdfs:member	"response"
s1	"fresher results"	rdfs:member	"fresher"
s1	"web cost"	rdfs:subClassOf	"cost"
s1	"slower response times"	rdfs:member	"slower response"
s1	"slower response times"	rdfs:subClassOf	"times"
s1	"entire web cost"	rdfs:subClassOf	"cost"
s1	"entire web"	rdfs:subClassOf	"web"
s1	"entire web cost"	rdfs:member	"entire web"
s1	"response times"	rdfs:subClassOf	"times"
s1	"fresher results"	rdfs:subClassOf	"results"
s1	"web cost"	rdfs:member	"web"
s1	"slower response"	rdfs:subClassOf	"response"
s1	"entire web"	rdfs:member	"entire"
s1	"slower response"	rdfs:member	"slower"
s1	"slower response times"	rdfs:subClassOf	"response times"
s1	"entire web cost"	rdfs:subClassOf	"web cost"
s1	"fresher results over entire web cost"	rdfs:member	"fresher results"
s1	"fresher results over entire web cost"	rdfs:member	"entire web cost"
s1	"entire web cost of slower response times"	rdfs:member	"entire web cost"
s1	"entire web cost of slower response times"	rdfs:member	"slower response times"
s1	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"	local:AM-MOD	"can"
s0	"centralised approaches that can efficiently live decentralised approaches"
s0	"centralised approaches that can efficiently live decentralised approaches"	rdf:subject	"centralised approaches"
s0	"centralised approaches"	rdfs:subClassOf	"approaches"
s0	"centralised approaches that can efficiently live decentralised approaches"	rdf:predicate	"live"
s0	"centralised approaches that can efficiently live decentralised approaches"	rdf:object	"decentralised approaches"
s0	"decentralised approaches"	rdfs:subClassOf	"approaches"
s0	"centralised approaches that can efficiently live decentralised approaches"	local:AM-MNR	"efficiently"
s0	"centralised approaches that can efficiently live decentralised approaches"	local:AM-MOD	"can"
