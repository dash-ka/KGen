@prefix	rdfs:	<http://www.w3.org/2000/01/rdf-schema#>	.
@prefix	local:	<http://local/local.owl#>	.
@prefix	cso:	<https://cso.kmi.open.ac.uk/topics/>	.
@prefix	rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>	.
@prefix	owl:	<http://www.w3.org/2002/07/owl#>	.

#### Statements ####

local:s17.4	a	rdf:Statement	;
	rdfs:label	"reducing the time"	.

local:s17.3	a	rdf:Statement	;
	rdfs:label	"fully cached results"	.

local:s17.2	a	rdf:Statement	;
	rdfs:label	"that hybrid query execution can improve freshness vs fully cached results while reducing the time"	.

local:s17.1	a	rdf:Statement	;
	rdfs:label	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	.

local:s17	a	rdf:Statement	;
	rdfs:label	"we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time"	.

local:s16.1	a	rdf:Statement	;
	rdfs:label	"the time taken vs fully live execution"	.

local:s16	a	rdf:Statement	;
	rdfs:label	"the time taken"	.

local:s15	a	rdf:Statement	;
	rdfs:label	"finally we evaluate different hybrid query plans"	.

local:s14	a	rdf:Statement	;
	rdfs:label	"we evaluate split positions in a realworld setup"	.

local:s13.2	a	rdf:Statement	;
	rdfs:label	"we split a query into a subquery"	.

local:s13.1	a	rdf:Statement	;
	rdfs:label	"we using coherence estimates to split a query into a subquery"	.

local:s13	a	rdf:Statement	;
	rdfs:label	"we thus propose using coherence estimates to split a query into a subquery"	.

local:s12	a	rdf:Statement	;
	rdfs:label	"a subquery for which the have good fresh coverage"	.

local:s10.2	a	rdf:Statement	;
	rdfs:label	"we split a query into a subquery"	.

local:s10.1	a	rdf:Statement	;
	rdfs:label	"we using coherence estimates to split a query into a subquery"	.

local:s10	a	rdf:Statement	;
	rdfs:label	"we thus propose using coherence estimates to split a query into a subquery"	.

local:s9	a	rdf:Statement	;
	rdfs:label	"a subquery that should instead run"	.

local:s8.2	a	rdf:Statement	;
	rdfs:label	"they cache cache results"	.

local:s8.1	a	rdf:Statement	;
	rdfs:label	"linked data sources"	.

local:s8	a	rdf:Statement	;
	rdfs:label	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate"	.

local:s7.3	a	rdf:Statement	;
	rdfs:label	"two public sparql stores against current versions of the linked data sources they cache cache results often"	.

local:s7.2	a	rdf:Statement	;
	rdfs:label	"they cache cache results"	.

local:s7.1	a	rdf:Statement	;
	rdfs:label	"linked data sources"	.

local:s7	a	rdf:Statement	;
	rdfs:label	"we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing"	.

local:s6.1	a	rdf:Statement	;
	rdfs:label	"we speeding up results"	.

local:s6	a	rdf:Statement	;
	rdfs:label	"herein we propose a hybrid query execution approach while speeding up results vs the live scenario"	.

local:s5	a	rdf:Statement	;
	rdfs:label	"a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario"	.

local:s4	a	rdf:Statement	;
	rdfs:label	"linked data query engines"	.

local:s3	a	rdf:Statement	;
	rdfs:label	"centralised approaches that can efficiently live decentralised approaches"	.

local:s2	a	rdf:Statement	;
	rdfs:label	"data cached from parts of the web"	.

local:s1	a	rdf:Statement	;
	rdfs:label	"centralised approaches that can efficiently answer queries over data"	.

local:s0	a	rdf:Statement	;
	rdfs:label	"decentralised approaches that can provide fresher results over the entire web at the cost of slower response times"	.


#### Classes ####

local:time	a	rdf:Class	;
	rdfs:label	"time"	.

local:reduce	a	rdf:Class	;
	rdfs:label	"reduce"	.

local:result	a	rdf:Class	;
	rdfs:label	"result"	.

local:cache	a	rdf:Class	;
	rdfs:label	"cache"	.

local:fully	a	rdf:Class	;
	rdfs:label	"fully"	.

local:hybrid_query_execution	a	rdf:Class	;
	rdfs:label	"hybrid query execution"	.

local:hybrid_query	a	rdf:Class	;
	rdfs:label	"hybrid query"	.

local:hybrid	a	rdf:Class	;
	rdfs:label	"hybrid"	.

local:query	a	rdf:Class	;
	rdfs:label	"query"	.

local:execution	a	rdf:Class	;
	rdfs:label	"execution"	.

local:query_execution	a	rdf:Class	;
	rdfs:label	"query execution"	.

local:improve	a	rdf:Class	;
	rdfs:label	"improve"	.

local:freshness_v_fully_cache_result	a	rdf:Class	;
	rdfs:label	"freshness v fully cache result"	.

local:freshness_v	a	rdf:Class	;
	rdfs:label	"freshness v"	.

local:freshness	a	rdf:Class	;
	rdfs:label	"freshness"	.

local:v	a	rdf:Class	;
	rdfs:label	"v"	.

local:cache_result	a	rdf:Class	;
	rdfs:label	"cache result"	.

local:fully_cache	a	rdf:Class	;
	rdfs:label	"fully cache"	.

local:can	a	rdf:Class	;
	rdfs:label	"can"	.

local:reduce_the_time	a	rdf:Class	;
	rdfs:label	"reduce the time"	.

local:show	a	rdf:Class	;
	rdfs:label	"show"	.

local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	a	rdf:Class	;
	rdfs:label	"hybrid query execution can improve freshness v fully cache result while reduce the time"	.

local:freshness_cache_result	a	rdf:Class	;
	rdfs:label	"freshness cache result"	.

local:can_improve	a	rdf:Class	;
	rdfs:label	"can improve"	.

local:we	a	rdf:Class	;
	rdfs:label	"we"	.

local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	a	rdf:Class	;
	rdfs:label	"show that hybrid query execution can improve freshness v fully cache result while reduce the time"	.

local:live	a	rdf:Class	;
	rdfs:label	"live"	.

local:time_take_v_fully	a	rdf:Class	;
	rdfs:label	"time take v fully"	.

local:fully_v	a	rdf:Class	;
	rdfs:label	"fully v"	.

local:take	a	rdf:Class	;
	rdfs:label	"take"	.

local:evaluate	a	rdf:Class	;
	rdfs:label	"evaluate"	.

local:different_hybrid_query_plan	a	rdf:Class	;
	rdfs:label	"different hybrid query plan"	.

local:different_hybrid_query	a	rdf:Class	;
	rdfs:label	"different hybrid query"	.

local:plan	a	rdf:Class	;
	rdfs:label	"plan"	.

local:different_hybrid	a	rdf:Class	;
	rdfs:label	"different hybrid"	.

local:query_plan	a	rdf:Class	;
	rdfs:label	"query plan"	.

local:hybrid_query_plan	a	rdf:Class	;
	rdfs:label	"hybrid query plan"	.

local:different	a	rdf:Class	;
	rdfs:label	"different"	.

local:finally	a	rdf:Class	;
	rdfs:label	"finally"	.

local:split_position	a	rdf:Class	;
	rdfs:label	"split position"	.

local:split	a	rdf:Class	;
	rdfs:label	"split"	.

local:position	a	rdf:Class	;
	rdfs:label	"position"	.

local:realworld_setup	a	rdf:Class	;
	rdfs:label	"realworld setup"	.

local:setup	a	rdf:Class	;
	rdfs:label	"setup"	.

local:realworld	a	rdf:Class	;
	rdfs:label	"realworld"	.

local:query_subquery	a	rdf:Class	;
	rdfs:label	"query subquery"	.

local:subquery	a	rdf:Class	;
	rdfs:label	"subquery"	.

local:use	a	rdf:Class	;
	rdfs:label	"use"	.

local:coherence_estimate_to_split_a_query_into_a_subquery	a	rdf:Class	;
	rdfs:label	"coherence estimate to split a query into a subquery"	.

local:coherence_estimate	a	rdf:Class	;
	rdfs:label	"coherence estimate"	.

local:estimate	a	rdf:Class	;
	rdfs:label	"estimate"	.

local:coherence	a	rdf:Class	;
	rdfs:label	"coherence"	.

local:split_into_subquery	a	rdf:Class	;
	rdfs:label	"split into subquery"	.

local:propose	a	rdf:Class	;
	rdfs:label	"propose"	.

local:use_coherence_estimate_to_split_a_query_into_a_subquery	a	rdf:Class	;
	rdfs:label	"use coherence estimate to split a query into a subquery"	.

local:use_coherence_estimate	a	rdf:Class	;
	rdfs:label	"use coherence estimate"	.

local:use_coherence	a	rdf:Class	;
	rdfs:label	"use coherence"	.

local:thus	a	rdf:Class	;
	rdfs:label	"thus"	.

local:subquery_for_which_the	a	rdf:Class	;
	rdfs:label	"subquery for which the"	.

local:subquery_for_which	a	rdf:Class	;
	rdfs:label	"subquery for which"	.

local:which	a	rdf:Class	;
	rdfs:label	"which"	.

local:have	a	rdf:Class	;
	rdfs:label	"have"	.

local:good_fresh_coverage	a	rdf:Class	;
	rdfs:label	"good fresh coverage"	.

local:coverage	a	rdf:Class	;
	rdfs:label	"coverage"	.

local:fresh_coverage	a	rdf:Class	;
	rdfs:label	"fresh coverage"	.

local:fresh	a	rdf:Class	;
	rdfs:label	"fresh"	.

local:good_fresh	a	rdf:Class	;
	rdfs:label	"good fresh"	.

local:good	a	rdf:Class	;
	rdfs:label	"good"	.

local:run	a	rdf:Class	;
	rdfs:label	"run"	.

local:instead	a	rdf:Class	;
	rdfs:label	"instead"	.

local:should	a	rdf:Class	;
	rdfs:label	"should"	.

local:they	a	rdf:Class	;
	rdfs:label	"they"	.

local:data_source	a	rdf:Class	;
	rdfs:label	"data source"	.

local:data	a	rdf:Class	;
	rdfs:label	"data"	.

local:source	a	rdf:Class	;
	rdfs:label	"source"	.

local:link	a	rdf:Class	;
	rdfs:label	"link"	.

local:compare	a	rdf:Class	;
	rdfs:label	"compare"	.

local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	a	rdf:Class	;
	rdfs:label	"result from two public sparql store against current version of the link data source two public sparql store against current version of the link data source they cache cache result be outofdate"	.

local:current_version	a	rdf:Class	;
	rdfs:label	"current version"	.

local:link_data_source	a	rdf:Class	;
	rdfs:label	"link data source"	.

local:store	a	rdf:Class	;
	rdfs:label	"store"	.

local:link_data	a	rdf:Class	;
	rdfs:label	"link data"	.

local:current	a	rdf:Class	;
	rdfs:label	"current"	.

local:version	a	rdf:Class	;
	rdfs:label	"version"	.

local:cache_cache	a	rdf:Class	;
	rdfs:label	"cache cache"	.

local:sparql_store	a	rdf:Class	;
	rdfs:label	"sparql store"	.

local:public_sparql_store	a	rdf:Class	;
	rdfs:label	"public sparql store"	.

local:two_public_sparql_store	a	rdf:Class	;
	rdfs:label	"two public sparql store"	.

local:result_from_two_public_sparql_store	a	rdf:Class	;
	rdfs:label	"result from two public sparql store"	.

local:two_public_sparql_store_against_current_version	a	rdf:Class	;
	rdfs:label	"two public sparql store against current version"	.

local:current_version_of_link_data_source	a	rdf:Class	;
	rdfs:label	"current version of link data source"	.

local:first	a	rdf:Class	;
	rdfs:label	"first"	.

local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	a	rdf:Class	;
	rdfs:label	"two public sparql store against current version of the link data source they cache cache result"	.

local:miss	a	rdf:Class	;
	rdfs:label	"miss"	.

local:often	a	rdf:Class	;
	rdfs:label	"often"	.

local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	a	rdf:Class	;
	rdfs:label	"result from two public sparql store against current version of the link data source two public sparql store against current version of the link data source they cache cache result be often miss"	.

local:often_miss	a	rdf:Class	;
	rdfs:label	"often miss"	.

local:speed	a	rdf:Class	;
	rdfs:label	"speed"	.

local:hybrid_query_execution_approach	a	rdf:Class	;
	rdfs:label	"hybrid query execution approach"	.

local:execution_approach	a	rdf:Class	;
	rdfs:label	"execution approach"	.

local:approach	a	rdf:Class	;
	rdfs:label	"approach"	.

local:query_execution_approach	a	rdf:Class	;
	rdfs:label	"query execution approach"	.

local:herein	a	rdf:Class	;
	rdfs:label	"herein"	.

local:speed_up_result_v_the_live_scenario	a	rdf:Class	;
	rdfs:label	"speed up result v the live scenario"	.

local:up_result	a	rdf:Class	;
	rdfs:label	"up result"	.

local:live_scenario	a	rdf:Class	;
	rdfs:label	"live scenario"	.

local:scenario	a	rdf:Class	;
	rdfs:label	"scenario"	.

local:up	a	rdf:Class	;
	rdfs:label	"up"	.

local:return	a	rdf:Class	;
	rdfs:label	"return"	.

local:fresher_result_broader_range_of_source_v_the_centralise_scenario	a	rdf:Class	;
	rdfs:label	"fresher result broader range of source v the centralise scenario"	.

local:centralise_scenario	a	rdf:Class	;
	rdfs:label	"centralise scenario"	.

local:fresher_result	a	rdf:Class	;
	rdfs:label	"fresher result"	.

local:broader_range	a	rdf:Class	;
	rdfs:label	"broader range"	.

local:fresher	a	rdf:Class	;
	rdfs:label	"fresher"	.

local:range	a	rdf:Class	;
	rdfs:label	"range"	.

local:broader	a	rdf:Class	;
	rdfs:label	"broader"	.

local:centralise	a	rdf:Class	;
	rdfs:label	"centralise"	.

local:broader_range_of_source	a	rdf:Class	;
	rdfs:label	"broader range of source"	.

local:broader_range_of_source_v	a	rdf:Class	;
	rdfs:label	"broader range of source v"	.

local:data_query_engine	a	rdf:Class	;
	rdfs:label	"data query engine"	.

local:data_query	a	rdf:Class	;
	rdfs:label	"data query"	.

local:engine	a	rdf:Class	;
	rdfs:label	"engine"	.

local:query_engine	a	rdf:Class	;
	rdfs:label	"query engine"	.

local:centralise_approach	a	rdf:Class	;
	rdfs:label	"centralise approach"	.

local:decentralise_approach	a	rdf:Class	;
	rdfs:label	"decentralise approach"	.

local:decentralise	a	rdf:Class	;
	rdfs:label	"decentralise"	.

local:efficiently	a	rdf:Class	;
	rdfs:label	"efficiently"	.

local:part_of_the_web	a	rdf:Class	;
	rdfs:label	"part of the web"	.

local:part	a	rdf:Class	;
	rdfs:label	"part"	.

local:web	a	rdf:Class	;
	rdfs:label	"web"	.

local:part_of_web	a	rdf:Class	;
	rdfs:label	"part of web"	.

local:answer	a	rdf:Class	;
	rdfs:label	"answer"	.

local:query_over_data	a	rdf:Class	;
	rdfs:label	"query over data"	.

local:provide	a	rdf:Class	;
	rdfs:label	"provide"	.

local:fresher_result_over_the_entire_web_cost_of_slower_response_time	a	rdf:Class	;
	rdfs:label	"fresher result over the entire web cost of slower response time"	.

local:entire_web_cost	a	rdf:Class	;
	rdfs:label	"entire web cost"	.

local:slower_response_time	a	rdf:Class	;
	rdfs:label	"slower response time"	.

local:web_cost	a	rdf:Class	;
	rdfs:label	"web cost"	.

local:cost	a	rdf:Class	;
	rdfs:label	"cost"	.

local:entire_web	a	rdf:Class	;
	rdfs:label	"entire web"	.

local:slower_response	a	rdf:Class	;
	rdfs:label	"slower response"	.

local:slower	a	rdf:Class	;
	rdfs:label	"slower"	.

local:response_time	a	rdf:Class	;
	rdfs:label	"response time"	.

local:response	a	rdf:Class	;
	rdfs:label	"response"	.

local:entire	a	rdf:Class	;
	rdfs:label	"entire"	.

local:fresher_result_over_entire_web_cost	a	rdf:Class	;
	rdfs:label	"fresher result over entire web cost"	.

local:entire_web_cost_of_slower_response_time	a	rdf:Class	;
	rdfs:label	"entire web cost of slower response time"	.

#### Mapped Relations ####

cso:engine	rdfs:label	"engine"	.
local:engine	owl:sameAs	cso:engine	.
local:query_execution	owl:sameAs	cso:query_execution	.
cso:query_execution	rdfs:label	"query execution"	.

#### Relations ####

local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	rdfs:member	local:current_version	.
local:s16.1	rdf:subject	local:execution	.
local:coherence_estimate	rdfs:member	local:coherence	.
local:web_cost	rdfs:member	local:web	.
local:s10	local:AM-DIS	local:thus	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	rdfs:member	local:current_version	.
local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:execution	.
local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	rdfs:member	local:link_data_source	.
local:different_hybrid_query	rdfs:subClassOf	local:query	.
local:s0	local:AM-MOD	local:can	.
local:fresher_result_broader_range_of_source_v_the_centralise_scenario	rdfs:member	local:fresher_result	.
local:s10.1	rdf:predicate	local:use	.
local:s13.2	rdf:predicate	local:split	.
local:s10	rdf:predicate	local:propose	.
local:s10.2	rdf:object	local:query_subquery	.
local:sparql_store	rdfs:subClassOf	local:store	.
local:s13.2	rdf:subject	local:we	.
local:s17.2	rdf:predicate	local:improve	.
local:slower_response_time	rdfs:subClassOf	local:time	.
local:good_fresh	rdfs:subClassOf	local:fresh	.
local:s6.1	rdf:predicate	local:speed	.
local:s17.1	rdf:subject	local:result	.
local:data_query_engine	rdfs:subClassOf	local:query_engine	.
local:use_coherence_estimate	rdfs:member	local:use_coherence	.
local:s7	rdf:subject	local:we	.
local:query_subquery	rdfs:member	local:query	.
local:current_version_of_link_data_source	rdfs:member	local:current_version	.
local:s17.1	rdf:predicate	local:show	.
local:s7	local:AM-TMP	local:first	.
local:entire_web_cost	rdfs:subClassOf	local:cost	.
local:different_hybrid_query_plan	rdfs:member	local:different_hybrid_query	.
local:s7	rdf:predicate	local:compare	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	rdfs:member	local:link_data_source	.
local:s13	rdf:predicate	local:propose	.
local:different_hybrid_query	rdfs:member	local:different_hybrid	.
local:good_fresh	rdfs:member	local:good	.
local:s8	local:AM-TMP	local:first	.
local:s12	rdf:object	local:good_fresh_coverage	.
local:query_execution_approach	rdfs:subClassOf	local:execution_approach	.
local:hybrid_query_execution_approach	rdfs:member	local:hybrid_query_execution	.
local:s3	rdf:predicate	local:live	.
local:s8.1	rdf:predicate	local:link	.
local:speed_up_result_v_the_live_scenario	rdfs:member	local:live_scenario	.
local:query_engine	rdfs:member	local:query	.
local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:show	.
local:s14	rdf:predicate	local:evaluate	.
local:query_execution_approach	rdfs:member	local:query_execution	.
local:entire_web	rdfs:member	local:entire	.
local:s9	local:AM-DIS	local:instead	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	rdfs:member	local:store	.
local:use_coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:subquery	.
local:s17.1	rdf:object	local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	.
local:fresh_coverage	rdfs:subClassOf	local:coverage	.
local:cache_cache	rdfs:subClassOf	local:cache	.
local:use_coherence	rdfs:subClassOf	local:coherence	.
local:s13.1	rdf:object	local:coherence_estimate_to_split_a_query_into_a_subquery	.
local:response_time	rdfs:member	local:response	.
local:s6	rdf:predicate	local:propose	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	rdfs:member	local:current_version	.
local:s0	rdf:object	local:fresher_result_over_the_entire_web_cost_of_slower_response_time	.
local:split_position	rdfs:member	local:split	.
local:s9	rdf:subject	local:subquery	.
local:s17.3	rdf:subject	local:result	.
local:s6	local:AM-TMP	local:herein	.
local:s14	rdf:object	local:split_position	.
local:centralise_approach	rdfs:member	local:centralise	.
local:freshness_v_fully_cache_result	rdfs:member	local:freshness_v	.
local:current_version	rdfs:member	local:current	.
local:s17.2	local:AM-TMP	local:reduce_the_time	.
local:subquery_for_which	rdfs:member	local:subquery	.
local:fresher_result_broader_range_of_source_v_the_centralise_scenario	rdfs:member	local:centralise_scenario	.
local:entire_web_cost	rdfs:subClassOf	local:web_cost	.
local:s13	rdf:subject	local:we	.
local:split_into_subquery	rdfs:member	local:subquery	.
local:data_source	rdfs:subClassOf	local:source	.
local:s9	local:AM-MOD	local:should	.
local:query_execution	rdfs:subClassOf	local:execution	.
local:s13	rdf:object	local:use_coherence_estimate_to_split_a_query_into_a_subquery	.
local:link_data_source	rdfs:member	local:link_data	.
local:public_sparql_store	rdfs:subClassOf	local:sparql_store	.
local:result_from_two_public_sparql_store	rdfs:member	local:result	.
local:execution_approach	rdfs:member	local:execution	.
local:part_of_the_web	rdfs:member	local:web	.
local:good_fresh_coverage	rdfs:subClassOf	local:fresh_coverage	.
local:s14	local:AM-LOC	local:realworld_setup	.
local:s8	rdf:predicate	local:compare	.
local:s6	rdf:object	local:hybrid_query_execution_approach	.
local:fresher_result_broader_range_of_source_v_the_centralise_scenario	rdfs:member	local:source	.
local:entire_web_cost_of_slower_response_time	rdfs:member	local:entire_web_cost	.
local:s1	local:AM-MOD	local:can	.
local:link_data	rdfs:member	local:link	.
local:s17.2	local:AM-MOD	local:can	.
local:s16	rdf:subject	local:time	.
local:s8	rdf:object	local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	.
local:decentralise_approach	rdfs:subClassOf	local:approach	.
local:s3	local:AM-MNR	local:efficiently	.
local:s7.2	rdf:object	local:cache_result	.
local:broader_range_of_source	rdfs:member	local:broader_range	.
local:data_source	rdfs:member	local:data	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	rdfs:member	local:result	.
local:centralise_scenario	rdfs:member	local:centralise	.
local:s16.1	rdf:predicate	local:live	.
local:cache_result	rdfs:subClassOf	local:result	.
local:link_data_source	rdfs:subClassOf	local:data_source	.
local:cache_result	rdfs:member	local:cache	.
local:live_scenario	rdfs:member	local:live	.
local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	rdfs:member	local:store	.
local:s17.4	rdf:predicate	local:reduce	.
local:can_improve	rdfs:subClassOf	local:improve	.
local:two_public_sparql_store	rdfs:subClassOf	local:public_sparql_store	.
local:s7.3	rdf:subject	local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	.
local:up_result	rdfs:member	local:up	.
local:s10.1	rdf:object	local:coherence_estimate_to_split_a_query_into_a_subquery	.
local:use_coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:use_coherence_estimate	.
local:s8.2	rdf:subject	local:they	.
local:hybrid_query	rdfs:member	local:hybrid	.
local:s1	local:AM-MNR	local:efficiently	.
local:hybrid_query_plan	rdfs:subClassOf	local:plan	.
local:s12	rdf:subject	local:subquery_for_which_the	.
local:data_query	rdfs:subClassOf	local:query	.
local:current_version_of_link_data_source	rdfs:member	local:link_data_source	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	rdfs:member	local:cache_result	.
local:slower_response	rdfs:subClassOf	local:response	.
local:fresher_result_over_the_entire_web_cost_of_slower_response_time	rdfs:member	local:entire_web_cost	.
local:s17.2	rdf:object	local:freshness_v_fully_cache_result	.
local:s3	rdf:object	local:decentralise_approach	.
local:time_take_v_fully	rdfs:member	local:v	.
local:s15	rdf:subject	local:we	.
local:s2	rdf:predicate	local:cache	.
local:freshness_v	rdfs:member	local:freshness	.
local:s15	rdf:predicate	local:evaluate	.
local:hybrid_query_execution	rdfs:subClassOf	local:query_execution	.
local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:time	.
local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:freshness_v	.
local:hybrid_query_plan	rdfs:subClassOf	local:query_plan	.
local:execution_approach	rdfs:subClassOf	local:approach	.
local:s4	rdf:subject	local:data_query_engine	.
local:s7	rdf:object	local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	.
local:coherence_estimate	rdfs:subClassOf	local:estimate	.
local:use_coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:query	.
local:hybrid_query_execution_approach	rdfs:subClassOf	local:approach	.
local:part_of_the_web	rdfs:member	local:part	.
local:two_public_sparql_store_against_current_version	rdfs:member	local:two_public_sparql_store	.
local:s8.1	rdf:subject	local:data_source	.
local:broader_range	rdfs:member	local:broader	.
local:broader_range_of_source_v	rdfs:member	local:v	.
local:centralise_approach	rdfs:subClassOf	local:approach	.
local:response_time	rdfs:subClassOf	local:time	.
local:s0	rdf:predicate	local:provide	.
local:use_coherence_estimate	rdfs:subClassOf	local:estimate	.
local:s13.2	rdf:object	local:query_subquery	.
local:s3	local:AM-MOD	local:can	.
local:s3	rdf:subject	local:centralise_approach	.
local:good_fresh_coverage	rdfs:subClassOf	local:coverage	.
local:entire_web	rdfs:subClassOf	local:web	.
local:up_result	rdfs:subClassOf	local:result	.
local:s0	rdf:subject	local:decentralise_approach	.
local:fresher_result_over_the_entire_web_cost_of_slower_response_time	rdfs:member	local:fresher_result	.
local:freshness_v_fully_cache_result	rdfs:member	local:result	.
local:link_data	rdfs:subClassOf	local:data	.
local:part_of_web	rdfs:member	local:web	.
local:query_execution_approach	rdfs:subClassOf	local:approach	.
local:broader_range_of_source_v	rdfs:member	local:broader_range_of_source	.
local:s7.3	rdf:predicate	local:miss	.
local:freshness_v	rdfs:subClassOf	local:v	.
local:hybrid_query_plan	rdfs:member	local:hybrid_query	.
local:s7.1	rdf:subject	local:data_source	.
local:s16	rdf:predicate	local:take	.
local:fresh_coverage	rdfs:member	local:fresh	.
local:broader_range_of_source	rdfs:member	local:source	.
local:data_query	rdfs:member	local:data	.
local:s5	rdf:object	local:fresher_result_broader_range_of_source_v_the_centralise_scenario	.
local:query_over_data	rdfs:member	local:data	.
local:query_plan	rdfs:member	local:query	.
local:hybrid_query_execution	rdfs:subClassOf	local:execution	.
local:s10	rdf:object	local:use_coherence_estimate_to_split_a_query_into_a_subquery	.
local:s15	local:AM-TMP	local:finally	.
local:s8	rdf:subject	local:we	.
local:s15	rdf:object	local:different_hybrid_query_plan	.
local:fresher_result	rdfs:subClassOf	local:result	.
local:result_from_two_public_sparql_store	rdfs:member	local:two_public_sparql_store	.
local:realworld_setup	rdfs:member	local:realworld	.
local:s6	local:AM-TMP	local:speed_up_result_v_the_live_scenario	.
local:slower_response_time	rdfs:subClassOf	local:response_time	.
local:freshness_cache_result	rdfs:subClassOf	local:cache_result	.
local:broader_range	rdfs:subClassOf	local:range	.
local:often_miss	rdfs:subClassOf	local:miss	.
local:s8.1	rdf:object	local:data_source	.
local:coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:query	.
local:fully_v	rdfs:subClassOf	local:v	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	rdfs:member	local:store	.
local:s6	rdf:subject	local:we	.
local:s2	rdf:subject	local:data	.
local:subquery_for_which	rdfs:member	local:which	.
local:query_plan	rdfs:subClassOf	local:plan	.
local:s12	rdf:predicate	local:have	.
local:s7.3	local:AM-TMP	local:often	.
local:s10.2	rdf:predicate	local:split	.
local:query_subquery	rdfs:subClassOf	local:subquery	.
local:coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:coherence_estimate	.
local:slower_response	rdfs:member	local:slower	.
local:entire_web_cost_of_slower_response_time	rdfs:member	local:slower_response_time	.
local:s13	local:AM-DIS	local:thus	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	rdfs:member	local:cache_result	.
local:s7.2	rdf:predicate	local:cache	.
local:s7.1	rdf:predicate	local:link	.
local:s10.1	rdf:subject	local:we	.
local:fresher_result_over_the_entire_web_cost_of_slower_response_time	rdfs:member	local:slower_response_time	.
local:speed_up_result_v_the_live_scenario	rdfs:member	local:speed	.
local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:result	.
local:realworld_setup	rdfs:subClassOf	local:setup	.
local:different_hybrid_query_plan	rdfs:subClassOf	local:hybrid_query_plan	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_often_miss	rdfs:member	local:result	.
local:s17	rdf:predicate	local:result	.
local:fresher_result	rdfs:member	local:fresher	.
local:s2	rdf:object	local:part_of_the_web	.
local:fresher_result_over_entire_web_cost	rdfs:member	local:fresher_result	.
local:s10.2	rdf:subject	local:we	.
local:part_of_web	rdfs:member	local:part	.
local:split_position	rdfs:subClassOf	local:position	.
local:result_from_two_public_sparql_store_against_current_version_of_the_link_data_source_two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result_be_outofdate	rdfs:member	local:link_data_source	.
local:fresher_result_broader_range_of_source_v_the_centralise_scenario	rdfs:member	local:broader_range	.
local:query_execution	rdfs:member	local:query	.
local:s8.2	rdf:object	local:cache_result	.
local:use_coherence	rdfs:member	local:use	.
local:s17.3	local:AM-MNR	local:fully	.
local:s13.1	rdf:subject	local:we	.
local:hybrid_query_execution	rdfs:member	local:hybrid_query	.
local:coherence_estimate_to_split_a_query_into_a_subquery	rdfs:member	local:subquery	.
local:s17	rdf:subject	local:we	.
local:two_public_sparql_store_against_current_version	rdfs:member	local:current_version	.
local:centralise_scenario	rdfs:subClassOf	local:scenario	.
local:s13.1	rdf:predicate	local:use	.
local:s5	rdf:subject	local:hybrid_query_execution_approach	.
local:query_engine	rdfs:subClassOf	local:engine	.
local:current_version	rdfs:subClassOf	local:version	.
local:s6.1	rdf:subject	local:we	.
local:different_hybrid	rdfs:subClassOf	local:hybrid	.
local:s1	rdf:predicate	local:answer	.
local:entire_web_cost	rdfs:member	local:entire_web	.
local:s17.4	rdf:subject	local:time	.
local:slower_response_time	rdfs:member	local:slower_response	.
local:speed_up_result_v_the_live_scenario	rdfs:member	local:up_result	.
local:s4	rdf:predicate	local:link	.
local:s7.2	rdf:subject	local:they	.
local:hybrid_query_execution_approach	rdfs:subClassOf	local:query_execution_approach	.
local:use_coherence_estimate	rdfs:subClassOf	local:coherence_estimate	.
local:two_public_sparql_store_against_current_version_of_the_link_data_source_they_cache_cache_result	rdfs:member	local:cache_result	.
local:s1	rdf:object	local:query_over_data	.
local:s6.1	rdf:object	local:result	.
local:good_fresh_coverage	rdfs:member	local:good_fresh	.
local:s16.1	local:AM-TMP	local:time_take_v_fully	.
local:link_data_source	rdfs:subClassOf	local:source	.
local:data_query_engine	rdfs:subClassOf	local:engine	.
local:s1	rdf:subject	local:centralise_approach	.
local:query_over_data	rdfs:member	local:query	.
local:fresher_result_over_entire_web_cost	rdfs:member	local:entire_web_cost	.
local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:freshness_v	.
local:s17	rdf:object	local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	.
local:hybrid_query	rdfs:subClassOf	local:query	.
local:different_hybrid_query_plan	rdfs:subClassOf	local:plan	.
local:split_into_subquery	rdfs:member	local:split	.
local:data_query_engine	rdfs:member	local:data_query	.
local:web_cost	rdfs:subClassOf	local:cost	.
local:different_hybrid	rdfs:member	local:different	.
local:time_take_v_fully	rdfs:member	local:time	.
local:s10	rdf:subject	local:we	.
local:s5	rdf:predicate	local:return	.
local:s9	rdf:predicate	local:run	.
local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:time	.
local:s8.2	rdf:predicate	local:cache	.
local:show_that_hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:execution	.
local:live_scenario	rdfs:subClassOf	local:scenario	.
local:s17.2	rdf:subject	local:hybrid_query_execution	.
local:hybrid_query_execution_can_improve_freshness_v_fully_cache_result_while_reduce_the_time	rdfs:member	local:result	.
local:s7.1	rdf:object	local:data_source	.
local:s14	rdf:subject	local:we	.
local:s17.3	rdf:predicate	local:cache	.
local:decentralise_approach	rdfs:member	local:decentralise	.
local:fully_cache	rdfs:subClassOf	local:cache	.
