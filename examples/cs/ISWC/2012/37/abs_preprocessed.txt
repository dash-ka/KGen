decentralised approaches that can provide fresher results over the entire web at the cost of slower response times
centralised approaches that can efficiently answer queries over data
data cached from parts of the web
centralised approaches that can efficiently live decentralised approaches
for linked data query engines there are inherent tradeoffs between centralised approaches
a hybrid query execution approach that returns fresher results from a broader range of sources vs the centralised scenario
herein we propose a hybrid query execution approach while speeding up results vs the live scenario
we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are often missing
we first compare results from two public sparql stores against current versions of the linked data sources two public sparql stores against current versions of the linked data sources they cache cache results are outofdate
a subquery that should instead be run live
we thus propose using coherence estimates to split a query into a subquery
the cached data
a subquery for which the have good fresh coverage
we thus propose using coherence estimates to split a query into a subquery
finally we evaluate split positions in a realworld setup
finally we evaluate different hybrid query plans
the time taken vs fully live execution
we results show that hybrid query execution can improve freshness vs fully cached results while reducing the time