s15.1	"funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"
s15.1	"funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:subject	"funmap"
s15.1	"funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:predicate	"reduce"
s15.1	"funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:object	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"
s15.1	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"factor"
s15.1	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"scalable solution"
s15.1	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"execution time"
s15.1	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"knowledge graph creation"
s15.1	"execution time of rmlcompliant engine up factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"rmlcompliant engine"
s15.1	"knowledge graph"	rdfs:subClassOf	"graph"
s15.1	"graph creation"	rdfs:subClassOf	"creation"
s15.1	"execution time"	rdfs:member	"execution"
s15.1	"knowledge graph creation"	rdfs:member	"knowledge graph"
s15.1	"knowledge graph creation"	rdfs:subClassOf	"creation"
s15.1	"rmlcompliant engine"	rdfs:subClassOf	"engine"
s15.1	"scalable solution"	rdfs:member	"scalable"
s15.1	"scalable solution"	rdfs:subClassOf	"solution"
s15.1	"execution time"	rdfs:subClassOf	"time"
s15.1	"rmlcompliant engine"	rdfs:member	"rmlcompliant"
s15.1	"knowledge graph"	rdfs:member	"knowledge"
s15.1	"graph creation"	rdfs:member	"graph"
s15.1	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s15.1	"thus furnish"	rdfs:subClassOf	"furnish"
s15.1	"execution time of rmlcompliant engine"	rdfs:member	"execution time"
s15.1	"execution time of rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s15.1	"execution time of rmlcompliant engine up factor"	rdfs:member	"execution time of rmlcompliant engine"
s15.1	"execution time of rmlcompliant engine up factor"	rdfs:member	"factor"
s15.1	"factor of 18"	rdfs:member	"factor"
s15.1	"factor of 18"	rdfs:member	"18"
s15.1	"scalable solution for knowledge graph creation"	rdfs:member	"scalable solution"
s15.1	"scalable solution for knowledge graph creation"	rdfs:member	"knowledge graph creation"
s15	"the results indicate that funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"
s15	"the results indicate that funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:subject	"result"
s15	"the results indicate that funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:predicate	"indicate"
s15	"the results indicate that funmap reduces the execution time of rmlcompliant engines by up to a factor of 18 furnishing thus a scalable solution for knowledge graph creation"	rdf:object	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"factor"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"scalable solution"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"funmap"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"execution time"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"knowledge graph creation"
s15	"funmap reduce the execution time of rmlcompliant engine by up to a factor of 18 furnish thus a scalable solution for knowledge graph creation"	rdfs:member	"rmlcompliant engine"
s15	"knowledge graph"	rdfs:subClassOf	"graph"
s15	"graph creation"	rdfs:subClassOf	"creation"
s15	"execution time"	rdfs:member	"execution"
s15	"knowledge graph creation"	rdfs:member	"knowledge graph"
s15	"knowledge graph creation"	rdfs:subClassOf	"creation"
s15	"rmlcompliant engine"	rdfs:subClassOf	"engine"
s15	"scalable solution"	rdfs:member	"scalable"
s15	"scalable solution"	rdfs:subClassOf	"solution"
s15	"execution time"	rdfs:subClassOf	"time"
s15	"rmlcompliant engine"	rdfs:member	"rmlcompliant"
s15	"knowledge graph"	rdfs:member	"knowledge"
s15	"graph creation"	rdfs:member	"graph"
s15	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s15	"thus scalable solution"	rdfs:subClassOf	"scalable solution"
s15	"execution time of rmlcompliant engine"	rdfs:member	"execution time"
s15	"execution time of rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s15	"reduce up_to factor"	rdfs:member	"reduce"
s15	"reduce up_to factor"	rdfs:member	"factor"
s15	"factor of 18"	rdfs:member	"factor"
s15	"factor of 18"	rdfs:member	"18"
s15	"thus scalable solution for knowledge graph creation"	rdfs:member	"thus scalable solution"
s15	"thus scalable solution for knowledge graph creation"	rdfs:member	"knowledge graph creation"
s14	"we evaluate funmap performance over realworld testbeds from the biomedical domain"
s14	"we evaluate funmap performance over realworld testbeds from the biomedical domain"	rdf:subject	"we"
s14	"we evaluate funmap performance over realworld testbeds from the biomedical domain"	rdf:predicate	"evaluate"
s14	"we evaluate funmap performance over realworld testbeds from the biomedical domain"	rdf:object	"funmap performance over realworld testbeds from the biomedical domain"
s14	"funmap performance over realworld testbeds from the biomedical domain"	rdfs:member	"funmap performance"
s14	"funmap performance over realworld testbeds from the biomedical domain"	rdfs:member	"realworld testbeds"
s14	"funmap performance over realworld testbeds from the biomedical domain"	rdfs:member	"biomedical domain"
s14	"realworld testbeds"	rdfs:member	"realworld"
s14	"funmap performance"	rdfs:member	"funmap"
s14	"realworld testbeds"	rdfs:subClassOf	"testbeds"
s14	"biomedical domain"	rdfs:subClassOf	"domain"
s14	"funmap performance"	rdfs:subClassOf	"performance"
s14	"biomedical domain"	rdfs:member	"biomedical"
s14	"funmap performance over realworld testbeds"	rdfs:member	"funmap performance"
s14	"funmap performance over realworld testbeds"	rdfs:member	"realworld testbeds"
s14	"realworld testbeds from biomedical domain"	rdfs:member	"realworld testbeds"
s14	"realworld testbeds from biomedical domain"	rdfs:member	"biomedical domain"
s13.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"
s13.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:subject	"funmap"
s13.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:predicate	"convert"
s13.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:object	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"
s13.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s13.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"equivalent rule executable"
s13.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"rmlfno mapping set"
s13.1	"rmlfno mapping set"	rdfs:subClassOf	"set"
s13.1	"equivalent rule"	rdfs:subClassOf	"rule"
s13.1	"rule executable"	rdfs:subClassOf	"executable"
s13.1	"rule executable"	rdfs:member	"rule"
s13.1	"equivalent rule executable"	rdfs:member	"equivalent rule"
s13.1	"rmlfno mapping set"	rdfs:member	"rmlfno mapping"
s13.1	"rmlcompliant engine"	rdfs:subClassOf	"engine"
s13.1	"mapping set"	rdfs:member	"mapping"
s13.1	"rmlfno mapping"	rdfs:subClassOf	"mapping"
s13.1	"rmlcompliant engine"	rdfs:member	"rmlcompliant"
s13.1	"equivalent rule executable"	rdfs:subClassOf	"executable"
s13.1	"rmlfno mapping"	rdfs:member	"rmlfno"
s13.1	"equivalent rule"	rdfs:member	"equivalent"
s13.1	"mapping set"	rdfs:subClassOf	"set"
s13.1	"executable set"	rdfs:subClassOf	"set"
s13.1	"mapping executable set"	rdfs:subClassOf	"executable set"
s13.1	"rmlfno mapping executable set"	rdfs:subClassOf	"mapping executable set"
s13.1	"rmlfno mapping executable set of equivalent rule"	rdfs:member	"rmlfno mapping executable set"
s13.1	"rmlfno mapping executable set of equivalent rule"	rdfs:member	"equivalent rule"
s13.1	"executable on rmlcompliant engine"	rdfs:member	"executable"
s13.1	"executable on rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s13	"funmap reduces data redundancy and unused attributes"
s13	"funmap reduces data redundancy and unused attributes"	rdf:subject	"funmap"
s13	"funmap reduces data redundancy and unused attributes"	rdf:predicate	"reduce"
s13	"funmap reduces data redundancy and unused attributes"	rdf:object	"data redundancy and unused attribute"
s13	"data redundancy and unused attribute"	rdfs:member	"unused attribute"
s13	"data redundancy and unused attribute"	rdfs:member	"data redundancy"
s13	"data redundancy"	rdfs:member	"data"
s13	"unused attribute"	rdfs:member	"unused"
s13	"data redundancy"	rdfs:subClassOf	"redundancy"
s13	"unused attribute"	rdfs:subClassOf	"attribute"
s12.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"
s12.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:subject	"funmap"
s12.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:predicate	"convert"
s12.1	"funmap converts rmlfno mappings into a set of equivalent rules executable on rmlcompliant engines"	rdf:object	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"
s12.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s12.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"equivalent rule executable"
s12.1	"rmlfno mapping set of equivalent rule executable on rmlcompliant engine"	rdfs:member	"rmlfno mapping set"
s12.1	"rmlfno mapping set"	rdfs:subClassOf	"set"
s12.1	"equivalent rule"	rdfs:subClassOf	"rule"
s12.1	"rule executable"	rdfs:subClassOf	"executable"
s12.1	"rule executable"	rdfs:member	"rule"
s12.1	"equivalent rule executable"	rdfs:member	"equivalent rule"
s12.1	"rmlfno mapping set"	rdfs:member	"rmlfno mapping"
s12.1	"rmlcompliant engine"	rdfs:subClassOf	"engine"
s12.1	"mapping set"	rdfs:member	"mapping"
s12.1	"rmlfno mapping"	rdfs:subClassOf	"mapping"
s12.1	"rmlcompliant engine"	rdfs:member	"rmlcompliant"
s12.1	"equivalent rule executable"	rdfs:subClassOf	"executable"
s12.1	"rmlfno mapping"	rdfs:member	"rmlfno"
s12.1	"equivalent rule"	rdfs:member	"equivalent"
s12.1	"mapping set"	rdfs:subClassOf	"set"
s12.1	"executable set"	rdfs:subClassOf	"set"
s12.1	"mapping executable set"	rdfs:subClassOf	"executable set"
s12.1	"rmlfno mapping executable set"	rdfs:subClassOf	"mapping executable set"
s12.1	"rmlfno mapping executable set of equivalent rule"	rdfs:member	"rmlfno mapping executable set"
s12.1	"rmlfno mapping executable set of equivalent rule"	rdfs:member	"equivalent rule"
s12.1	"executable on rmlcompliant engine"	rdfs:member	"executable"
s12.1	"executable on rmlcompliant engine"	rdfs:member	"rmlcompliant engine"
s12	"funmap reduces data redundancy and duplicates"
s12	"funmap reduces data redundancy and duplicates"	rdf:subject	"funmap"
s12	"funmap reduces data redundancy and duplicates"	rdf:predicate	"reduce"
s12	"funmap reduces data redundancy and duplicates"	rdf:object	"data redundancy and duplicate"
s12	"data redundancy and duplicate"	rdfs:member	"data redundancy"
s12	"data redundancy and duplicate"	rdfs:member	"duplicate"
s12	"data redundancy"	rdfs:member	"data"
s12	"data redundancy"	rdfs:subClassOf	"redundancy"
s11.1	"although applicable to any functionbased mapping language joins between mapping rules funmap feasibility shown on rmlfno"
s11.1	"although applicable to any functionbased mapping language joins between mapping rules funmap feasibility shown on rmlfno"	rdf:predicate	"show"
s11.1	"although applicable to any functionbased mapping language joins between mapping rules funmap feasibility shown on rmlfno"	local:AM-ADV	"although applicable to any functionbased map language join between map rule funmap feasibility"
s11.1	"although applicable to any functionbased map language join between map rule funmap feasibility"	rdfs:member	"functionbased map language join"
s11.1	"although applicable to any functionbased map language join between map rule funmap feasibility"	rdfs:member	"feasibility"
s11.1	"although applicable to any functionbased map language join between map rule funmap feasibility"	rdfs:member	"map rule"
s11.1	"map language"	rdfs:member	"map"
s11.1	"functionbased map language"	rdfs:subClassOf	"language"
s11.1	"functionbased map language"	rdfs:member	"functionbased map"
s11.1	"map language join"	rdfs:subClassOf	"join"
s11.1	"functionbased map"	rdfs:member	"functionbased"
s11.1	"functionbased map"	rdfs:subClassOf	"map"
s11.1	"map language join"	rdfs:member	"map language"
s11.1	"language join"	rdfs:subClassOf	"join"
s11.1	"map rule"	rdfs:member	"map"
s11.1	"functionbased map language join"	rdfs:subClassOf	"join"
s11.1	"functionbased map language join"	rdfs:member	"functionbased map language"
s11.1	"language join"	rdfs:member	"language"
s11.1	"map rule"	rdfs:subClassOf	"rule"
s11.1	"map language"	rdfs:subClassOf	"language"
s11.1	"funmap feasibility"	rdfs:subClassOf	"feasibility"
s11.1	"rule funmap feasibility"	rdfs:subClassOf	"funmap feasibility"
s11.1	"map rule funmap feasibility"	rdfs:subClassOf	"rule funmap feasibility"
s11.1	"functionbased map language"	rdfs:subClassOf	"map language"
s11.1	"applicable to functionbased map language"	rdfs:member	"applicable"
s11.1	"applicable to functionbased map language"	rdfs:member	"functionbased map language"
s11.1	"join between map rule funmap feasibility"	rdfs:member	"join"
s11.1	"join between map rule funmap feasibility"	rdfs:member	"map rule funmap feasibility"
s11.1	"although applicable to any functionbased mapping language joins between mapping rules funmap feasibility shown on rmlfno"	local:AM-LOC	"rmlfno"
s11	"applicable to any functionbased mapping language joins between mapping rules funmap feasibility"
s11	"applicable to any functionbased mapping language joins between mapping rules funmap feasibility"	rdf:subject	"applicable to any functionbased map language"
s11	"map language"	rdfs:member	"map"
s11	"functionbased map language"	rdfs:subClassOf	"language"
s11	"functionbased map language"	rdfs:member	"functionbased map"
s11	"functionbased map"	rdfs:member	"functionbased"
s11	"functionbased map"	rdfs:subClassOf	"map"
s11	"map language"	rdfs:subClassOf	"language"
s11	"functionbased map language"	rdfs:subClassOf	"map language"
s11	"applicable to functionbased map language"	rdfs:member	"applicable"
s11	"applicable to functionbased map language"	rdfs:member	"functionbased map language"
s11	"applicable to any functionbased mapping language joins between mapping rules funmap feasibility"	rdf:predicate	"join"
s11	"applicable to any functionbased mapping language joins between mapping rules funmap feasibility"	rdf:object	"map rule funmap feasibility"
s11	"map rule funmap feasibility"	rdfs:member	"feasibility"
s11	"map rule funmap feasibility"	rdfs:member	"map rule"
s11	"map rule"	rdfs:member	"map"
s11	"map rule"	rdfs:subClassOf	"rule"
s11	"funmap feasibility"	rdfs:subClassOf	"feasibility"
s11	"rule funmap feasibility"	rdfs:subClassOf	"funmap feasibility"
s11	"map rule funmap feasibility"	rdfs:subClassOf	"rule funmap feasibility"
s10	"any functionbased mapping language that supports"
s10	"any functionbased mapping language that supports"	rdf:subject	"functionbased map language"
s10	"map language"	rdfs:member	"map"
s10	"map language"	rdfs:subClassOf	"language"
s10	"functionbased map language"	rdfs:subClassOf	"map language"
s10	"any functionbased mapping language that supports"	rdf:predicate	"support"
s9.3	"an interpreter a set of lossless rewriting rules push down"
s9.3	"an interpreter a set of lossless rewriting rules push down"	rdf:subject	"interpreter"
s9.3	"an interpreter a set of lossless rewriting rules push down"	rdf:predicate	"push"
s9.3	"an interpreter a set of lossless rewriting rules push down"	rdf:object	"set of lossless rewrite rule down"
s9.3	"set of lossless rewrite rule down"	rdfs:member	"set"
s9.3	"set of lossless rewrite rule down"	rdfs:member	"lossless rewrite rule"
s9.3	"rewrite rule"	rdfs:member	"rewrite"
s9.3	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s9.3	"lossless rewrite"	rdfs:member	"lossless"
s9.3	"rewrite rule"	rdfs:subClassOf	"rule"
s9.3	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s9.3	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s9.3	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s9.3	"set of lossless rewrite rule"	rdfs:member	"set"
s9.3	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s9.2	"rewriting rules"
s9.2	"rewriting rules"	rdf:subject	"rule"
s9.2	"rewriting rules"	rdf:predicate	"rewrite"
s9.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"
s9.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:subject	"interpreter of functionbased map language"
s9.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s9.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s9.1	"map language"	rdfs:member	"map"
s9.1	"functionbased map language"	rdfs:subClassOf	"language"
s9.1	"functionbased map language"	rdfs:member	"functionbased map"
s9.1	"functionbased map"	rdfs:member	"functionbased"
s9.1	"functionbased map"	rdfs:subClassOf	"map"
s9.1	"map language"	rdfs:subClassOf	"language"
s9.1	"functionbased map language"	rdfs:subClassOf	"map language"
s9.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s9.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s9.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:predicate	"rely"
s9.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:object	"set of lossless rewrite rule to push down"
s9.1	"set of lossless rewrite rule to push down"	rdfs:member	"set"
s9.1	"set of lossless rewrite rule to push down"	rdfs:member	"lossless rewrite rule"
s9.1	"rewrite rule"	rdfs:member	"rewrite"
s9.1	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s9.1	"lossless rewrite"	rdfs:member	"lossless"
s9.1	"rewrite rule"	rdfs:subClassOf	"rule"
s9.1	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s9.1	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s9.1	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s9.1	"set of lossless rewrite rule"	rdfs:member	"set"
s9.1	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s9	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"
s9	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:subject	"we"
s9	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:predicate	"propose"
s9	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:object	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"
s9	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"lossless rewrite rule"
s9	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"funmap"
s9	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"interpreter"
s9	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"set"
s9	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"functionbased map language"
s9	"rewrite rule"	rdfs:member	"rewrite"
s9	"map language"	rdfs:member	"map"
s9	"functionbased map language"	rdfs:subClassOf	"language"
s9	"functionbased map language"	rdfs:member	"functionbased map"
s9	"functionbased map"	rdfs:member	"functionbased"
s9	"functionbased map"	rdfs:subClassOf	"map"
s9	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s9	"lossless rewrite"	rdfs:member	"lossless"
s9	"rewrite rule"	rdfs:subClassOf	"rule"
s9	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s9	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s9	"map language"	rdfs:subClassOf	"language"
s9	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s9	"functionbased map language"	rdfs:subClassOf	"map language"
s9	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s9	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s9	"rely on set"	rdfs:member	"rely"
s9	"rely on set"	rdfs:member	"set"
s9	"set of lossless rewrite rule"	rdfs:member	"set"
s9	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s8.3	"funmap an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"
s8.3	"funmap an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"funmap an interpreter of functionbased map language"
s8.3	"funmap an interpreter of functionbased map language"	rdfs:member	"interpreter"
s8.3	"funmap an interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s8.3	"funmap an interpreter of functionbased map language"	rdfs:member	"funmap"
s8.3	"map language"	rdfs:member	"map"
s8.3	"functionbased map language"	rdfs:subClassOf	"language"
s8.3	"functionbased map language"	rdfs:member	"functionbased map"
s8.3	"functionbased map"	rdfs:member	"functionbased"
s8.3	"functionbased map"	rdfs:subClassOf	"map"
s8.3	"map language"	rdfs:subClassOf	"language"
s8.3	"functionbased map language"	rdfs:subClassOf	"map language"
s8.3	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s8.3	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s8.3	"funmap an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"materialize"
s8.3	"funmap an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"execution of function in initial step of knowledge graph creation"
s8.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s8.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s8.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s8.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s8.3	"initial step"	rdfs:member	"initial"
s8.3	"knowledge graph"	rdfs:subClassOf	"graph"
s8.3	"graph creation"	rdfs:subClassOf	"creation"
s8.3	"knowledge graph creation"	rdfs:member	"knowledge graph"
s8.3	"knowledge graph creation"	rdfs:subClassOf	"creation"
s8.3	"initial step"	rdfs:subClassOf	"step"
s8.3	"knowledge graph"	rdfs:member	"knowledge"
s8.3	"graph creation"	rdfs:member	"graph"
s8.3	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s8.3	"execution of function"	rdfs:member	"execution"
s8.3	"execution of function"	rdfs:member	"function"
s8.3	"execution of function in initial step"	rdfs:member	"execution of function"
s8.3	"execution of function in initial step"	rdfs:member	"initial step"
s8.3	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s8.3	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s8.2	"rewriting rules"
s8.2	"rewriting rules"	rdf:subject	"rule"
s8.2	"rewriting rules"	rdf:predicate	"rewrite"
s8.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"
s8.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"interpreter of functionbased map language"
s8.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s8.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s8.1	"map language"	rdfs:member	"map"
s8.1	"functionbased map language"	rdfs:subClassOf	"language"
s8.1	"functionbased map language"	rdfs:member	"functionbased map"
s8.1	"functionbased map"	rdfs:member	"functionbased"
s8.1	"functionbased map"	rdfs:subClassOf	"map"
s8.1	"map language"	rdfs:subClassOf	"language"
s8.1	"functionbased map language"	rdfs:subClassOf	"map language"
s8.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s8.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s8.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"rely"
s8.1	"an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"lossless rewrite rule"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s8.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"set"
s8.1	"rewrite rule"	rdfs:member	"rewrite"
s8.1	"initial step"	rdfs:member	"initial"
s8.1	"knowledge graph"	rdfs:subClassOf	"graph"
s8.1	"graph creation"	rdfs:subClassOf	"creation"
s8.1	"knowledge graph creation"	rdfs:member	"knowledge graph"
s8.1	"knowledge graph creation"	rdfs:subClassOf	"creation"
s8.1	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s8.1	"lossless rewrite"	rdfs:member	"lossless"
s8.1	"rewrite rule"	rdfs:subClassOf	"rule"
s8.1	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s8.1	"initial step"	rdfs:subClassOf	"step"
s8.1	"knowledge graph"	rdfs:member	"knowledge"
s8.1	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s8.1	"graph creation"	rdfs:member	"graph"
s8.1	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s8.1	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s8.1	"set of lossless rewrite rule"	rdfs:member	"set"
s8.1	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s8.1	"execution of function"	rdfs:member	"execution"
s8.1	"execution of function"	rdfs:member	"function"
s8.1	"materialize in initial step"	rdfs:member	"materialize"
s8.1	"materialize in initial step"	rdfs:member	"initial step"
s8.1	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s8.1	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s8	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"
s8	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"we"
s8	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"propose"
s8	"we propose funmap an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"lossless rewrite rule"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"funmap"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"interpreter"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"set"
s8	"funmap an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"functionbased map language"
s8	"rewrite rule"	rdfs:member	"rewrite"
s8	"functionbased map"	rdfs:subClassOf	"map"
s8	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s8	"rewrite rule"	rdfs:subClassOf	"rule"
s8	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s8	"knowledge graph"	rdfs:member	"knowledge"
s8	"functionbased map language"	rdfs:subClassOf	"language"
s8	"functionbased map language"	rdfs:member	"functionbased map"
s8	"initial step"	rdfs:member	"initial"
s8	"graph creation"	rdfs:subClassOf	"creation"
s8	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s8	"map language"	rdfs:subClassOf	"language"
s8	"map language"	rdfs:member	"map"
s8	"knowledge graph"	rdfs:subClassOf	"graph"
s8	"knowledge graph creation"	rdfs:subClassOf	"creation"
s8	"graph creation"	rdfs:member	"graph"
s8	"functionbased map"	rdfs:member	"functionbased"
s8	"knowledge graph creation"	rdfs:member	"knowledge graph"
s8	"lossless rewrite"	rdfs:member	"lossless"
s8	"initial step"	rdfs:subClassOf	"step"
s8	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s8	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s8	"functionbased map language"	rdfs:subClassOf	"map language"
s8	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s8	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s8	"rely on set"	rdfs:member	"rely"
s8	"rely on set"	rdfs:member	"set"
s8	"set of lossless rewrite rule"	rdfs:member	"set"
s8	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s8	"execution of function"	rdfs:member	"execution"
s8	"execution of function"	rdfs:member	"function"
s8	"materialize in initial step"	rdfs:member	"materialize"
s8	"materialize in initial step"	rdfs:member	"initial step"
s8	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s8	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s7.3	"an interpreter an interpreter a set of lossless rewriting rules push down"
s7.3	"an interpreter an interpreter a set of lossless rewriting rules push down"	rdf:subject	"interpreter"
s7.3	"an interpreter an interpreter a set of lossless rewriting rules push down"	rdf:predicate	"push"
s7.3	"an interpreter an interpreter a set of lossless rewriting rules push down"	rdf:object	"set of lossless rewrite rule down"
s7.3	"set of lossless rewrite rule down"	rdfs:member	"set"
s7.3	"set of lossless rewrite rule down"	rdfs:member	"lossless rewrite rule"
s7.3	"rewrite rule"	rdfs:member	"rewrite"
s7.3	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s7.3	"lossless rewrite"	rdfs:member	"lossless"
s7.3	"rewrite rule"	rdfs:subClassOf	"rule"
s7.3	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s7.3	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s7.3	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s7.3	"set of lossless rewrite rule"	rdfs:member	"set"
s7.3	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s7.2	"rewriting rules"
s7.2	"rewriting rules"	rdf:subject	"rule"
s7.2	"rewriting rules"	rdf:predicate	"rewrite"
s7.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"
s7.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:subject	"interpreter of functionbased map language an interpreter of functionbased map language"
s7.1	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"interpreter"
s7.1	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s7.1	"map language"	rdfs:member	"map"
s7.1	"functionbased map language"	rdfs:subClassOf	"language"
s7.1	"functionbased map language"	rdfs:member	"functionbased map"
s7.1	"functionbased map"	rdfs:member	"functionbased"
s7.1	"functionbased map"	rdfs:subClassOf	"map"
s7.1	"map language"	rdfs:subClassOf	"language"
s7.1	"functionbased map language"	rdfs:subClassOf	"map language"
s7.1	"functionbased map language"	rdfs:subClassOf	"map language"
s7.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s7.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s7.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s7.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s7.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:predicate	"rely"
s7.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:object	"set of lossless rewrite rule to push down"
s7.1	"set of lossless rewrite rule to push down"	rdfs:member	"set"
s7.1	"set of lossless rewrite rule to push down"	rdfs:member	"lossless rewrite rule"
s7.1	"rewrite rule"	rdfs:member	"rewrite"
s7.1	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s7.1	"lossless rewrite"	rdfs:member	"lossless"
s7.1	"rewrite rule"	rdfs:subClassOf	"rule"
s7.1	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s7.1	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s7.1	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s7.1	"set of lossless rewrite rule"	rdfs:member	"set"
s7.1	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s7	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"
s7	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:subject	"we"
s7	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:predicate	"propose"
s7	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to push down"	rdf:object	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"
s7	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"interpreter"
s7	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"lossless rewrite rule"
s7	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"set"
s7	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to push down"	rdfs:member	"functionbased map language"
s7	"rewrite rule"	rdfs:member	"rewrite"
s7	"map language"	rdfs:member	"map"
s7	"functionbased map language"	rdfs:subClassOf	"language"
s7	"functionbased map language"	rdfs:member	"functionbased map"
s7	"functionbased map"	rdfs:member	"functionbased"
s7	"functionbased map"	rdfs:subClassOf	"map"
s7	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s7	"lossless rewrite"	rdfs:member	"lossless"
s7	"rewrite rule"	rdfs:subClassOf	"rule"
s7	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s7	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s7	"map language"	rdfs:subClassOf	"language"
s7	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s7	"functionbased map language"	rdfs:subClassOf	"map language"
s7	"functionbased map language"	rdfs:subClassOf	"map language"
s7	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s7	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s7	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s7	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s7	"rely on set"	rdfs:member	"rely"
s7	"rely on set"	rdfs:member	"set"
s7	"set of lossless rewrite rule"	rdfs:member	"set"
s7	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s6.3	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"
s6.3	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"interpreter of functionbased map language an interpreter of functionbased map language"
s6.3	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.3	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.3	"map language"	rdfs:member	"map"
s6.3	"functionbased map language"	rdfs:subClassOf	"language"
s6.3	"functionbased map language"	rdfs:member	"functionbased map"
s6.3	"functionbased map"	rdfs:member	"functionbased"
s6.3	"functionbased map"	rdfs:subClassOf	"map"
s6.3	"map language"	rdfs:subClassOf	"language"
s6.3	"functionbased map language"	rdfs:subClassOf	"map language"
s6.3	"functionbased map language"	rdfs:subClassOf	"map language"
s6.3	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.3	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.3	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.3	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.3	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"materialize"
s6.3	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"execution of function in initial step of knowledge graph creation"
s6.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s6.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s6.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s6.3	"execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s6.3	"initial step"	rdfs:member	"initial"
s6.3	"knowledge graph"	rdfs:subClassOf	"graph"
s6.3	"graph creation"	rdfs:subClassOf	"creation"
s6.3	"knowledge graph creation"	rdfs:member	"knowledge graph"
s6.3	"knowledge graph creation"	rdfs:subClassOf	"creation"
s6.3	"initial step"	rdfs:subClassOf	"step"
s6.3	"knowledge graph"	rdfs:member	"knowledge"
s6.3	"graph creation"	rdfs:member	"graph"
s6.3	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s6.3	"execution of function"	rdfs:member	"execution"
s6.3	"execution of function"	rdfs:member	"function"
s6.3	"execution of function in initial step"	rdfs:member	"execution of function"
s6.3	"execution of function in initial step"	rdfs:member	"initial step"
s6.3	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s6.3	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s6.2	"rewriting rules"
s6.2	"rewriting rules"	rdf:subject	"rule"
s6.2	"rewriting rules"	rdf:predicate	"rewrite"
s6.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"
s6.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"interpreter of functionbased map language an interpreter of functionbased map language"
s6.1	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.1	"interpreter of functionbased map language an interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.1	"map language"	rdfs:member	"map"
s6.1	"functionbased map language"	rdfs:subClassOf	"language"
s6.1	"functionbased map language"	rdfs:member	"functionbased map"
s6.1	"functionbased map"	rdfs:member	"functionbased"
s6.1	"functionbased map"	rdfs:subClassOf	"map"
s6.1	"map language"	rdfs:subClassOf	"language"
s6.1	"functionbased map language"	rdfs:subClassOf	"map language"
s6.1	"functionbased map language"	rdfs:subClassOf	"map language"
s6.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.1	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6.1	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"rely"
s6.1	"an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"lossless rewrite rule"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s6.1	"set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"set"
s6.1	"rewrite rule"	rdfs:member	"rewrite"
s6.1	"initial step"	rdfs:member	"initial"
s6.1	"knowledge graph"	rdfs:subClassOf	"graph"
s6.1	"graph creation"	rdfs:subClassOf	"creation"
s6.1	"knowledge graph creation"	rdfs:member	"knowledge graph"
s6.1	"knowledge graph creation"	rdfs:subClassOf	"creation"
s6.1	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s6.1	"lossless rewrite"	rdfs:member	"lossless"
s6.1	"rewrite rule"	rdfs:subClassOf	"rule"
s6.1	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s6.1	"initial step"	rdfs:subClassOf	"step"
s6.1	"knowledge graph"	rdfs:member	"knowledge"
s6.1	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s6.1	"graph creation"	rdfs:member	"graph"
s6.1	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s6.1	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s6.1	"set of lossless rewrite rule"	rdfs:member	"set"
s6.1	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s6.1	"execution of function"	rdfs:member	"execution"
s6.1	"execution of function"	rdfs:member	"function"
s6.1	"materialize in initial step"	rdfs:member	"materialize"
s6.1	"materialize in initial step"	rdfs:member	"initial step"
s6.1	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s6.1	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s6	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"
s6	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:subject	"we"
s6	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:predicate	"propose"
s6	"we propose an interpreter of functionbased mapping languages an interpreter of functionbased mapping languages relies on a set of lossless rewriting rules to materialize the execution of functions in initial steps of knowledge graph creation"	rdf:object	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"lossless rewrite rule"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"initial step"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"interpreter"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"function"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"execution"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"set"
s6	"interpreter of functionbased map language an interpreter of functionbased map language rely on a set of lossless rewrite rule to materialize the execution of function in initial step of knowledge graph creation"	rdfs:member	"functionbased map language"
s6	"rewrite rule"	rdfs:member	"rewrite"
s6	"functionbased map"	rdfs:subClassOf	"map"
s6	"lossless rewrite"	rdfs:subClassOf	"rewrite"
s6	"rewrite rule"	rdfs:subClassOf	"rule"
s6	"lossless rewrite rule"	rdfs:member	"lossless rewrite"
s6	"knowledge graph"	rdfs:member	"knowledge"
s6	"functionbased map language"	rdfs:subClassOf	"language"
s6	"functionbased map language"	rdfs:member	"functionbased map"
s6	"initial step"	rdfs:member	"initial"
s6	"graph creation"	rdfs:subClassOf	"creation"
s6	"lossless rewrite rule"	rdfs:subClassOf	"rule"
s6	"map language"	rdfs:subClassOf	"language"
s6	"map language"	rdfs:member	"map"
s6	"knowledge graph"	rdfs:subClassOf	"graph"
s6	"knowledge graph creation"	rdfs:subClassOf	"creation"
s6	"graph creation"	rdfs:member	"graph"
s6	"functionbased map"	rdfs:member	"functionbased"
s6	"knowledge graph creation"	rdfs:member	"knowledge graph"
s6	"lossless rewrite"	rdfs:member	"lossless"
s6	"initial step"	rdfs:subClassOf	"step"
s6	"knowledge graph creation"	rdfs:subClassOf	"graph creation"
s6	"lossless rewrite rule"	rdfs:subClassOf	"rewrite rule"
s6	"functionbased map language"	rdfs:subClassOf	"map language"
s6	"functionbased map language"	rdfs:subClassOf	"map language"
s6	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6	"interpreter of functionbased map language"	rdfs:member	"interpreter"
s6	"interpreter of functionbased map language"	rdfs:member	"functionbased map language"
s6	"rely on set"	rdfs:member	"rely"
s6	"rely on set"	rdfs:member	"set"
s6	"set of lossless rewrite rule"	rdfs:member	"set"
s6	"set of lossless rewrite rule"	rdfs:member	"lossless rewrite rule"
s6	"execution of function"	rdfs:member	"execution"
s6	"execution of function"	rdfs:member	"function"
s6	"materialize in initial step"	rdfs:member	"materialize"
s6	"materialize in initial step"	rdfs:member	"initial step"
s6	"initial step of knowledge graph creation"	rdfs:member	"initial step"
s6	"initial step of knowledge graph creation"	rdfs:member	"knowledge graph creation"
s5.1	"these mapping languages hinders these"
s5.1	"these mapping languages hinders these"	rdf:subject	"map language"
s5.1	"map language"	rdfs:member	"map"
s5.1	"map language"	rdfs:subClassOf	"language"
s5.1	"these mapping languages hinders these"	rdf:predicate	"hinder"
s5.1	"these mapping languages hinders these"	rdf:object	"these"
s5	"the absence of engines efficiently execute these mapping languages"
s5	"the absence of engines efficiently execute these mapping languages"	rdf:subject	"absence of engine"
s5	"absence of engine"	rdfs:member	"absence"
s5	"absence of engine"	rdfs:member	"engine"
s5	"absence of engine"	rdfs:member	"absence"
s5	"absence of engine"	rdfs:member	"engine"
s5	"the absence of engines efficiently execute these mapping languages"	rdf:predicate	"execute"
s5	"the absence of engines efficiently execute these mapping languages"	rdf:object	"map language"
s5	"map language"	rdfs:member	"map"
s5	"map language"	rdfs:subClassOf	"language"
s5	"the absence of engines efficiently execute these mapping languages"	local:AM-MNR	"efficiently"
s3.2	"functionbased mapping languages like funul overcome interoperability issues across heterogeneous data sources"
s3.2	"functionbased mapping languages like funul overcome interoperability issues across heterogeneous data sources"	rdf:subject	"functionbased map language like funul"
s3.2	"functionbased map language like funul"	rdfs:member	"funul"
s3.2	"functionbased map language like funul"	rdfs:member	"map language"
s3.2	"map language"	rdfs:member	"map"
s3.2	"map language"	rdfs:subClassOf	"language"
s3.2	"functionbased map language"	rdfs:subClassOf	"map language"
s3.2	"functionbased map language like funul"	rdfs:member	"functionbased map language"
s3.2	"functionbased map language like funul"	rdfs:member	"funul"
s3.2	"functionbased mapping languages like funul overcome interoperability issues across heterogeneous data sources"	rdf:predicate	"overcome"
s3.2	"functionbased mapping languages like funul overcome interoperability issues across heterogeneous data sources"	rdf:object	"interoperability issue"
s3.2	"interoperability issue"	rdfs:member	"interoperability"
s3.2	"interoperability issue"	rdfs:subClassOf	"issue"
s3.2	"functionbased mapping languages like funul overcome interoperability issues across heterogeneous data sources"	local:AM-LOC	"across heterogeneous data source"
s3.2	"heterogeneous data source"	rdfs:member	"heterogeneous data"
s3.2	"data source"	rdfs:subClassOf	"source"
s3.2	"heterogeneous data source"	rdfs:subClassOf	"source"
s3.2	"heterogeneous data"	rdfs:member	"heterogeneous"
s3.2	"heterogeneous data"	rdfs:subClassOf	"data"
s3.2	"data source"	rdfs:member	"data"
s3.2	"heterogeneous data source"	rdfs:subClassOf	"data source"
s3.1	"transformation functions specified with functionbased mapping languages like funul can applied to overcome interoperability issues across heterogeneous data sources"
s3.1	"transformation functions specified with functionbased mapping languages like funul can applied to overcome interoperability issues across heterogeneous data sources"	rdf:subject	"transformation function specify with functionbased map language like funul"
s3.1	"transformation function specify with functionbased map language like funul"	rdfs:member	"transformation function specify"
s3.1	"transformation function specify with functionbased map language like funul"	rdfs:member	"funul"
s3.1	"transformation function specify with functionbased map language like funul"	rdfs:member	"functionbased map language"
s3.1	"map language"	rdfs:member	"map"
s3.1	"functionbased map language"	rdfs:subClassOf	"language"
s3.1	"functionbased map language"	rdfs:member	"functionbased map"
s3.1	"function specify"	rdfs:subClassOf	"specify"
s3.1	"functionbased map"	rdfs:member	"functionbased"
s3.1	"function specify"	rdfs:member	"function"
s3.1	"transformation function specify"	rdfs:member	"transformation function"
s3.1	"transformation function"	rdfs:member	"transformation"
s3.1	"functionbased map"	rdfs:subClassOf	"map"
s3.1	"transformation function specify"	rdfs:subClassOf	"specify"
s3.1	"transformation function"	rdfs:subClassOf	"function"
s3.1	"map language"	rdfs:subClassOf	"language"
s3.1	"functionbased map language"	rdfs:subClassOf	"map language"
s3.1	"specify with functionbased map language"	rdfs:member	"specify"
s3.1	"specify with functionbased map language"	rdfs:member	"functionbased map language"
s3.1	"functionbased map language like funul"	rdfs:member	"functionbased map language"
s3.1	"functionbased map language like funul"	rdfs:member	"funul"
s3.1	"transformation functions specified with functionbased mapping languages like funul can applied to overcome interoperability issues across heterogeneous data sources"	rdf:predicate	"apply"
s3.1	"transformation functions specified with functionbased mapping languages like funul can applied to overcome interoperability issues across heterogeneous data sources"	rdf:object	"overcome interoperability issue across heterogeneous data source"
s3.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"overcome interoperability issue"
s3.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"heterogeneous data source"
s3.1	"heterogeneous data source"	rdfs:member	"heterogeneous data"
s3.1	"interoperability issue"	rdfs:subClassOf	"issue"
s3.1	"overcome interoperability issue"	rdfs:subClassOf	"issue"
s3.1	"data source"	rdfs:subClassOf	"source"
s3.1	"overcome interoperability"	rdfs:subClassOf	"interoperability"
s3.1	"heterogeneous data source"	rdfs:subClassOf	"source"
s3.1	"overcome interoperability"	rdfs:member	"overcome"
s3.1	"overcome interoperability issue"	rdfs:member	"overcome interoperability"
s3.1	"heterogeneous data"	rdfs:member	"heterogeneous"
s3.1	"heterogeneous data"	rdfs:subClassOf	"data"
s3.1	"interoperability issue"	rdfs:member	"interoperability"
s3.1	"data source"	rdfs:member	"data"
s3.1	"heterogeneous data source"	rdfs:subClassOf	"data source"
s3.1	"overcome interoperability issue"	rdfs:subClassOf	"interoperability issue"
s3.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"overcome interoperability issue"
s3.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"heterogeneous data source"
s3.1	"transformation functions specified with functionbased mapping languages like funul can applied to overcome interoperability issues across heterogeneous data sources"	local:AM-MOD	"can"
s3	"transformation functions specified with functionbased mapping languages like funul"
s3	"transformation functions specified with functionbased mapping languages like funul"	rdf:subject	"transformation function"
s3	"transformation function"	rdfs:subClassOf	"function"
s3	"transformation function"	rdfs:member	"transformation"
s3	"transformation functions specified with functionbased mapping languages like funul"	rdf:predicate	"specify"
s3	"transformation functions specified with functionbased mapping languages like funul"	local:AM-MNR	"functionbased map language like funul"
s3	"functionbased map language like funul"	rdfs:member	"funul"
s3	"functionbased map language like funul"	rdfs:member	"map language"
s3	"map language"	rdfs:member	"map"
s3	"map language"	rdfs:subClassOf	"language"
s3	"functionbased map language"	rdfs:subClassOf	"map language"
s3	"functionbased map language like funul"	rdfs:member	"functionbased map language"
s3	"functionbased map language like funul"	rdfs:member	"funul"
s2.2	"functionbased mapping languages like rmlfno overcome interoperability issues across heterogeneous data sources"
s2.2	"functionbased mapping languages like rmlfno overcome interoperability issues across heterogeneous data sources"	rdf:subject	"functionbased map language like rmlfno"
s2.2	"functionbased map language like rmlfno"	rdfs:member	"map language"
s2.2	"functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s2.2	"map language"	rdfs:member	"map"
s2.2	"map language"	rdfs:subClassOf	"language"
s2.2	"functionbased map language"	rdfs:subClassOf	"map language"
s2.2	"functionbased map language like rmlfno"	rdfs:member	"functionbased map language"
s2.2	"functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s2.2	"functionbased mapping languages like rmlfno overcome interoperability issues across heterogeneous data sources"	rdf:predicate	"overcome"
s2.2	"functionbased mapping languages like rmlfno overcome interoperability issues across heterogeneous data sources"	rdf:object	"interoperability issue"
s2.2	"interoperability issue"	rdfs:member	"interoperability"
s2.2	"interoperability issue"	rdfs:subClassOf	"issue"
s2.2	"functionbased mapping languages like rmlfno overcome interoperability issues across heterogeneous data sources"	local:AM-LOC	"across heterogeneous data source"
s2.2	"heterogeneous data source"	rdfs:member	"heterogeneous data"
s2.2	"data source"	rdfs:subClassOf	"source"
s2.2	"heterogeneous data source"	rdfs:subClassOf	"source"
s2.2	"heterogeneous data"	rdfs:member	"heterogeneous"
s2.2	"heterogeneous data"	rdfs:subClassOf	"data"
s2.2	"data source"	rdfs:member	"data"
s2.2	"heterogeneous data source"	rdfs:subClassOf	"data source"
s2.1	"transformation functions specified with functionbased mapping languages like rmlfno can applied to overcome interoperability issues across heterogeneous data sources"
s2.1	"transformation functions specified with functionbased mapping languages like rmlfno can applied to overcome interoperability issues across heterogeneous data sources"	rdf:subject	"transformation function specify with functionbased map language like rmlfno"
s2.1	"transformation function specify with functionbased map language like rmlfno"	rdfs:member	"transformation function specify"
s2.1	"transformation function specify with functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s2.1	"transformation function specify with functionbased map language like rmlfno"	rdfs:member	"functionbased map language"
s2.1	"map language"	rdfs:member	"map"
s2.1	"functionbased map language"	rdfs:subClassOf	"language"
s2.1	"functionbased map language"	rdfs:member	"functionbased map"
s2.1	"function specify"	rdfs:subClassOf	"specify"
s2.1	"functionbased map"	rdfs:member	"functionbased"
s2.1	"function specify"	rdfs:member	"function"
s2.1	"transformation function specify"	rdfs:member	"transformation function"
s2.1	"transformation function"	rdfs:member	"transformation"
s2.1	"functionbased map"	rdfs:subClassOf	"map"
s2.1	"transformation function specify"	rdfs:subClassOf	"specify"
s2.1	"transformation function"	rdfs:subClassOf	"function"
s2.1	"map language"	rdfs:subClassOf	"language"
s2.1	"functionbased map language"	rdfs:subClassOf	"map language"
s2.1	"specify with functionbased map language"	rdfs:member	"specify"
s2.1	"specify with functionbased map language"	rdfs:member	"functionbased map language"
s2.1	"functionbased map language like rmlfno"	rdfs:member	"functionbased map language"
s2.1	"functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s2.1	"transformation functions specified with functionbased mapping languages like rmlfno can applied to overcome interoperability issues across heterogeneous data sources"	rdf:predicate	"apply"
s2.1	"transformation functions specified with functionbased mapping languages like rmlfno can applied to overcome interoperability issues across heterogeneous data sources"	rdf:object	"overcome interoperability issue across heterogeneous data source"
s2.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"overcome interoperability issue"
s2.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"heterogeneous data source"
s2.1	"heterogeneous data source"	rdfs:member	"heterogeneous data"
s2.1	"interoperability issue"	rdfs:subClassOf	"issue"
s2.1	"overcome interoperability issue"	rdfs:subClassOf	"issue"
s2.1	"data source"	rdfs:subClassOf	"source"
s2.1	"overcome interoperability"	rdfs:subClassOf	"interoperability"
s2.1	"heterogeneous data source"	rdfs:subClassOf	"source"
s2.1	"overcome interoperability"	rdfs:member	"overcome"
s2.1	"overcome interoperability issue"	rdfs:member	"overcome interoperability"
s2.1	"heterogeneous data"	rdfs:member	"heterogeneous"
s2.1	"heterogeneous data"	rdfs:subClassOf	"data"
s2.1	"interoperability issue"	rdfs:member	"interoperability"
s2.1	"data source"	rdfs:member	"data"
s2.1	"heterogeneous data source"	rdfs:subClassOf	"data source"
s2.1	"overcome interoperability issue"	rdfs:subClassOf	"interoperability issue"
s2.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"overcome interoperability issue"
s2.1	"overcome interoperability issue across heterogeneous data source"	rdfs:member	"heterogeneous data source"
s2.1	"transformation functions specified with functionbased mapping languages like rmlfno can applied to overcome interoperability issues across heterogeneous data sources"	local:AM-MOD	"can"
s2	"transformation functions specified with functionbased mapping languages like rmlfno"
s2	"transformation functions specified with functionbased mapping languages like rmlfno"	rdf:subject	"transformation function"
s2	"transformation function"	rdfs:subClassOf	"function"
s2	"transformation function"	rdfs:member	"transformation"
s2	"transformation functions specified with functionbased mapping languages like rmlfno"	rdf:predicate	"specify"
s2	"transformation functions specified with functionbased mapping languages like rmlfno"	local:AM-MNR	"functionbased map language like rmlfno"
s2	"functionbased map language like rmlfno"	rdfs:member	"map language"
s2	"functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s2	"map language"	rdfs:member	"map"
s2	"map language"	rdfs:subClassOf	"language"
s2	"functionbased map language"	rdfs:subClassOf	"map language"
s2	"functionbased map language like rmlfno"	rdfs:member	"functionbased map language"
s2	"functionbased map language like rmlfno"	rdfs:member	"rmlfno"
s1.2	"existing data sources"
s1.2	"existing data sources"	rdf:subject	"data source"
s1.2	"data source"	rdfs:subClassOf	"source"
s1.2	"data source"	rdfs:member	"data"
s1.2	"existing data sources"	rdf:predicate	"exist"
s1.1	"integrate a myriad of existing data sources"
s1.1	"integrate a myriad of existing data sources"	rdf:subject	"myriad of exist data source"
s1.1	"myriad of exist data source"	rdfs:member	"exist data source"
s1.1	"myriad of exist data source"	rdfs:member	"myriad"
s1.1	"exist data"	rdfs:member	"exist"
s1.1	"exist data"	rdfs:subClassOf	"data"
s1.1	"data source"	rdfs:subClassOf	"source"
s1.1	"exist data source"	rdfs:subClassOf	"source"
s1.1	"exist data source"	rdfs:member	"exist data"
s1.1	"data source"	rdfs:member	"data"
s1.1	"integrate a myriad of existing data sources"	rdf:predicate	"integrate"
s1	"knowledge graphs constitute powerful formalisms to integrate a myriad of existing data sources"
s1	"knowledge graphs constitute powerful formalisms to integrate a myriad of existing data sources"	rdf:subject	"knowledge graph"
s1	"knowledge graph"	rdfs:member	"knowledge"
s1	"knowledge graph"	rdfs:subClassOf	"graph"
s1	"knowledge graphs constitute powerful formalisms to integrate a myriad of existing data sources"	rdf:predicate	"constitute"
s1	"knowledge graphs constitute powerful formalisms to integrate a myriad of existing data sources"	rdf:object	"powerful formalism to integrate a myriad of exist data source"
s1	"powerful formalism to integrate a myriad of exist data source"	rdfs:member	"exist data source"
s1	"powerful formalism to integrate a myriad of exist data source"	rdfs:member	"myriad"
s1	"powerful formalism to integrate a myriad of exist data source"	rdfs:member	"powerful formalism"
s1	"powerful formalism"	rdfs:member	"powerful"
s1	"exist data"	rdfs:member	"exist"
s1	"exist data"	rdfs:subClassOf	"data"
s1	"data source"	rdfs:subClassOf	"source"
s1	"powerful formalism"	rdfs:subClassOf	"formalism"
s1	"exist data source"	rdfs:subClassOf	"source"
s1	"exist data source"	rdfs:member	"exist data"
s1	"data source"	rdfs:member	"data"
s0	"data exponentially grown in the last years"
s0	"data exponentially grown in the last years"	rdf:subject	"data"
s0	"data exponentially grown in the last years"	rdf:predicate	"grow"
s0	"data exponentially grown in the last years"	local:AM-MNR	"exponentially"
s0	"data exponentially grown in the last years"	local:AM-TMP	"last year"
s0	"last year"	rdfs:member	"last"
s0	"last year"	rdfs:subClassOf	"year"
