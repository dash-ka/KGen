s14.1	"integrating logmaps output mappings with the input ontologies"
s14.1	"integrating logmaps output mappings with the input ontologies"	rdf:subject	"logmaps output mapping with the input ontology"
s14.1	"logmaps output mapping with the input ontology"	rdfs:member	"input ontology"
s14.1	"logmaps output mapping with the input ontology"	rdfs:member	"logmaps output"
s14.1	"logmaps output"	rdfs:subClassOf	"output"
s14.1	"input ontology"	rdfs:subClassOf	"ontology"
s14.1	"logmaps output"	rdfs:member	"logmaps"
s14.1	"input ontology"	rdfs:member	"input"
s14.1	"output mapping"	rdfs:subClassOf	"mapping"
s14.1	"logmaps output mapping"	rdfs:subClassOf	"output mapping"
s14.1	"logmaps output mapping with input ontology"	rdfs:member	"logmaps output mapping"
s14.1	"logmaps output mapping with input ontology"	rdfs:member	"input ontology"
s14.1	"integrating logmaps output mappings with the input ontologies"	rdf:predicate	"integrate"
s14	"the ontology obtained by integrating logmaps output mappings with the input ontologies"
s14	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	rdf:subject	"ontology"
s14	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	rdf:predicate	"obtain"
s14	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	local:AM-MNR	"integrate logmaps output mapping with the input ontology"
s14	"integrate logmaps output mapping with the input ontology"	rdfs:member	"input ontology"
s14	"integrate logmaps output mapping with the input ontology"	rdfs:member	"integrate logmaps output"
s14	"logmaps output"	rdfs:subClassOf	"output"
s14	"input ontology"	rdfs:subClassOf	"ontology"
s14	"input ontology"	rdfs:member	"input"
s14	"integrate logmaps output"	rdfs:subClassOf	"output"
s14	"integrate logmaps"	rdfs:subClassOf	"logmaps"
s14	"logmaps output"	rdfs:member	"logmaps"
s14	"integrate logmaps output"	rdfs:member	"integrate logmaps"
s14	"integrate logmaps"	rdfs:member	"integrate"
s14	"output mapping"	rdfs:subClassOf	"mapping"
s14	"logmaps output mapping"	rdfs:subClassOf	"output mapping"
s14	"integrate with input ontology"	rdfs:member	"integrate"
s14	"integrate with input ontology"	rdfs:member	"input ontology"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:subject	"logmaps"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:predicate	"produce"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:object	"clean set of output mapping"
s13	"clean set of output mapping"	rdfs:member	"output mapping"
s13	"clean set of output mapping"	rdfs:member	"clean set"
s13	"clean set"	rdfs:member	"clean"
s13	"output mapping"	rdfs:subClassOf	"mapping"
s13	"clean set"	rdfs:subClassOf	"set"
s13	"output mapping"	rdfs:member	"output"
s13	"clean set of output mapping"	rdfs:member	"clean set"
s13	"clean set of output mapping"	rdfs:member	"output mapping"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	local:AM-LOC	"many case in the sense that the ontology be consistent"
s13	"many case in the sense that the ontology be consistent"	rdfs:member	"sense"
s13	"many case in the sense that the ontology be consistent"	rdfs:member	"ontology"
s13	"many case in the sense that the ontology be consistent"	rdfs:member	"many case"
s13	"many case"	rdfs:subClassOf	"case"
s13	"many case"	rdfs:member	"many"
s13	"many case in sense"	rdfs:member	"many case"
s13	"many case in sense"	rdfs:member	"sense"
s12.1	"the ontology not contain unsatisfiable classes"
s12.1	"the ontology not contain unsatisfiable classes"	rdf:subject	"ontology"
s12.1	"the ontology not contain unsatisfiable classes"	rdf:predicate	"not contain"
s12.1	"the ontology not contain unsatisfiable classes"	rdf:object	"unsatisfiable class"
s12.1	"unsatisfiable class"	rdfs:subClassOf	"class"
s12.1	"unsatisfiable class"	rdfs:member	"unsatisfiable"
s12	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"
s12	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:subject	"logmaps"
s12	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:predicate	"produce"
s12	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:object	"clean set of output mapping"
s12	"clean set of output mapping"	rdfs:member	"output mapping"
s12	"clean set of output mapping"	rdfs:member	"clean set"
s12	"clean set"	rdfs:member	"clean"
s12	"output mapping"	rdfs:subClassOf	"mapping"
s12	"clean set"	rdfs:subClassOf	"set"
s12	"output mapping"	rdfs:member	"output"
s12	"clean set of output mapping"	rdfs:member	"clean set"
s12	"clean set of output mapping"	rdfs:member	"output mapping"
s12	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	local:AM-LOC	"many case in the sense that the ontology do not contain unsatisfiable class"
s12	"many case in the sense that the ontology do not contain unsatisfiable class"	rdfs:member	"sense"
s12	"many case in the sense that the ontology do not contain unsatisfiable class"	rdfs:member	"unsatisfiable class"
s12	"many case in the sense that the ontology do not contain unsatisfiable class"	rdfs:member	"ontology"
s12	"many case in the sense that the ontology do not contain unsatisfiable class"	rdfs:member	"many case"
s12	"unsatisfiable class"	rdfs:subClassOf	"class"
s12	"many case"	rdfs:subClassOf	"case"
s12	"many case"	rdfs:member	"many"
s12	"unsatisfiable class"	rdfs:member	"unsatisfiable"
s12	"not contain"	rdfs:subClassOf	"contain"
s12	"do not contain"	rdfs:subClassOf	"not contain"
s12	"many case in sense"	rdfs:member	"many case"
s12	"many case in sense"	rdfs:member	"sense"
s11.3	"existing biomedical ontologies"
s11.3	"existing biomedical ontologies"	rdf:subject	"biomedical ontology"
s11.3	"biomedical ontology"	rdfs:member	"biomedical"
s11.3	"biomedical ontology"	rdfs:subClassOf	"ontology"
s11.3	"existing biomedical ontologies"	rdf:predicate	"exist"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest exist biomedical ontology"
s11.2	"exist biomedical"	rdfs:member	"exist"
s11.2	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s11.2	"largest exist"	rdfs:member	"largest"
s11.2	"biomedical ontology"	rdfs:subClassOf	"ontology"
s11.2	"exist biomedical"	rdfs:subClassOf	"biomedical"
s11.2	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s11.2	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s11.2	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s11.2	"largest exist biomedical"	rdfs:member	"largest exist"
s11.2	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s11.2	"biomedical ontology"	rdfs:member	"biomedical"
s11.2	"largest exist"	rdfs:subClassOf	"exist"
s11.2	"even largest exist"	rdfs:subClassOf	"largest exist"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s11.2	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s11.1	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s11.1	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiment with the ontology fma ct"
s11.1	"experiment with the ontology fma ct"	rdfs:member	"ontology fma ct"
s11.1	"experiment with the ontology fma ct"	rdfs:member	"experiment"
s11.1	"ontology fma ct"	rdfs:subClassOf	"ct"
s11.1	"ontology fma"	rdfs:subClassOf	"fma"
s11.1	"ontology fma"	rdfs:member	"ontology"
s11.1	"fma ct"	rdfs:subClassOf	"ct"
s11.1	"ontology fma ct"	rdfs:member	"ontology fma"
s11.1	"fma ct"	rdfs:member	"fma"
s11.1	"ontology fma ct"	rdfs:subClassOf	"fma ct"
s11.1	"experiment with ontology fma ct"	rdfs:member	"experiment"
s11.1	"experiment with ontology fma ct"	rdfs:member	"ontology fma ct"
s11.1	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s11.1	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest exist biomedical ontology"
s11.1	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"largest exist biomedical ontology"
s11.1	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"system"
s11.1	"exist biomedical"	rdfs:member	"exist"
s11.1	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s11.1	"largest exist"	rdfs:member	"largest"
s11.1	"biomedical ontology"	rdfs:subClassOf	"ontology"
s11.1	"exist biomedical"	rdfs:subClassOf	"biomedical"
s11.1	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s11.1	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s11.1	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s11.1	"largest exist biomedical"	rdfs:member	"largest exist"
s11.1	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s11.1	"biomedical ontology"	rdfs:member	"biomedical"
s11.1	"largest exist"	rdfs:subClassOf	"exist"
s11.1	"even largest exist"	rdfs:subClassOf	"largest exist"
s11.1	"efficiently match"	rdfs:subClassOf	"match"
s11.1	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s11	"the ontologies fma"
s11	"the ontologies fma"	rdf:subject	"ontology"
s11	"the ontologies fma"	rdf:predicate	"fma"
s10.2	"existing biomedical ontologies"
s10.2	"existing biomedical ontologies"	rdf:subject	"biomedical ontology"
s10.2	"biomedical ontology"	rdfs:member	"biomedical"
s10.2	"biomedical ontology"	rdfs:subClassOf	"ontology"
s10.2	"existing biomedical ontologies"	rdf:predicate	"exist"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest exist biomedical ontology"
s10.1	"exist biomedical"	rdfs:member	"exist"
s10.1	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s10.1	"largest exist"	rdfs:member	"largest"
s10.1	"biomedical ontology"	rdfs:subClassOf	"ontology"
s10.1	"exist biomedical"	rdfs:subClassOf	"biomedical"
s10.1	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s10.1	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s10.1	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s10.1	"largest exist biomedical"	rdfs:member	"largest exist"
s10.1	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s10.1	"biomedical ontology"	rdfs:member	"biomedical"
s10.1	"largest exist"	rdfs:subClassOf	"exist"
s10.1	"even largest exist"	rdfs:subClassOf	"largest exist"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s10	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s10	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiment with the ontology snomed ct"
s10	"experiment with the ontology snomed ct"	rdfs:member	"ct"
s10	"experiment with the ontology snomed ct"	rdfs:member	"ontology"
s10	"experiment with the ontology snomed ct"	rdfs:member	"experiment"
s10	"experiment with ontology"	rdfs:member	"experiment"
s10	"experiment with ontology"	rdfs:member	"ontology"
s10	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s10	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest exist biomedical ontology"
s10	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"largest exist biomedical ontology"
s10	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"system"
s10	"exist biomedical"	rdfs:member	"exist"
s10	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s10	"largest exist"	rdfs:member	"largest"
s10	"biomedical ontology"	rdfs:subClassOf	"ontology"
s10	"exist biomedical"	rdfs:subClassOf	"biomedical"
s10	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s10	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s10	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s10	"largest exist biomedical"	rdfs:member	"largest exist"
s10	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s10	"biomedical ontology"	rdfs:member	"biomedical"
s10	"largest exist"	rdfs:subClassOf	"exist"
s10	"even largest exist"	rdfs:subClassOf	"largest exist"
s10	"efficiently match"	rdfs:subClassOf	"match"
s10	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s9.2	"existing biomedical ontologies"
s9.2	"existing biomedical ontologies"	rdf:subject	"biomedical ontology"
s9.2	"biomedical ontology"	rdfs:member	"biomedical"
s9.2	"biomedical ontology"	rdfs:subClassOf	"ontology"
s9.2	"existing biomedical ontologies"	rdf:predicate	"exist"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest exist biomedical ontology"
s9.1	"exist biomedical"	rdfs:member	"exist"
s9.1	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s9.1	"largest exist"	rdfs:member	"largest"
s9.1	"biomedical ontology"	rdfs:subClassOf	"ontology"
s9.1	"exist biomedical"	rdfs:subClassOf	"biomedical"
s9.1	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s9.1	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s9.1	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s9.1	"largest exist biomedical"	rdfs:member	"largest exist"
s9.1	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s9.1	"biomedical ontology"	rdfs:member	"biomedical"
s9.1	"largest exist"	rdfs:subClassOf	"exist"
s9.1	"even largest exist"	rdfs:subClassOf	"largest exist"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiment with the ontology nci ct"
s9	"experiment with the ontology nci ct"	rdfs:member	"experiment"
s9	"experiment with the ontology nci ct"	rdfs:member	"ontology nci ct"
s9	"ontology nci ct"	rdfs:member	"ontology nci"
s9	"nci ct"	rdfs:member	"nci"
s9	"nci ct"	rdfs:subClassOf	"ct"
s9	"ontology nci"	rdfs:member	"ontology"
s9	"ontology nci ct"	rdfs:subClassOf	"ct"
s9	"ontology nci"	rdfs:subClassOf	"nci"
s9	"ontology nci ct"	rdfs:subClassOf	"nci ct"
s9	"experiment with ontology nci ct"	rdfs:member	"experiment"
s9	"experiment with ontology nci ct"	rdfs:member	"ontology nci ct"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest exist biomedical ontology"
s9	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"largest exist biomedical ontology"
s9	"system can efficiently match even the largest exist biomedical ontology"	rdfs:member	"system"
s9	"exist biomedical"	rdfs:member	"exist"
s9	"largest exist biomedical ontology"	rdfs:subClassOf	"ontology"
s9	"largest exist"	rdfs:member	"largest"
s9	"biomedical ontology"	rdfs:subClassOf	"ontology"
s9	"exist biomedical"	rdfs:subClassOf	"biomedical"
s9	"exist biomedical ontology"	rdfs:member	"exist biomedical"
s9	"largest exist biomedical ontology"	rdfs:member	"largest exist biomedical"
s9	"largest exist biomedical"	rdfs:subClassOf	"biomedical"
s9	"largest exist biomedical"	rdfs:member	"largest exist"
s9	"exist biomedical ontology"	rdfs:subClassOf	"ontology"
s9	"biomedical ontology"	rdfs:member	"biomedical"
s9	"largest exist"	rdfs:subClassOf	"exist"
s9	"even largest exist"	rdfs:subClassOf	"largest exist"
s9	"efficiently match"	rdfs:subClassOf	"match"
s9	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s8	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"
s8	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	rdf:subject	"algorithm for on the fly unsatisfiability detection"
s8	"algorithm for on the fly unsatisfiability detection"	rdfs:member	"algorithm"
s8	"algorithm for on the fly unsatisfiability detection"	rdfs:member	"fly unsatisfiability detection"
s8	"fly unsatisfiability"	rdfs:subClassOf	"unsatisfiability"
s8	"fly unsatisfiability detection"	rdfs:subClassOf	"detection"
s8	"fly unsatisfiability"	rdfs:member	"fly"
s8	"fly unsatisfiability detection"	rdfs:member	"fly unsatisfiability"
s8	"unsatisfiability detection"	rdfs:member	"unsatisfiability"
s8	"unsatisfiability detection"	rdfs:subClassOf	"detection"
s8	"fly unsatisfiability detection"	rdfs:subClassOf	"unsatisfiability detection"
s8	"algorithm on fly unsatisfiability detection"	rdfs:member	"algorithm"
s8	"algorithm on fly unsatisfiability detection"	rdfs:member	"fly unsatisfiability detection"
s8	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	rdf:predicate	"implement"
s8	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	local:AM-ADV	"contrast to most exist tool logmaps"
s8	"contrast to most exist tool logmaps"	rdfs:member	"most exist tool logmaps"
s8	"contrast to most exist tool logmaps"	rdfs:member	"contrast"
s8	"most exist"	rdfs:member	"most"
s8	"exist tool"	rdfs:member	"exist"
s8	"most exist tool"	rdfs:subClassOf	"tool"
s8	"most exist tool logmaps"	rdfs:subClassOf	"logmaps"
s8	"tool logmaps"	rdfs:subClassOf	"logmaps"
s8	"most exist tool logmaps"	rdfs:member	"most exist tool"
s8	"most exist tool"	rdfs:member	"most exist"
s8	"exist tool logmaps"	rdfs:member	"exist tool"
s8	"exist tool"	rdfs:subClassOf	"tool"
s8	"exist tool logmaps"	rdfs:subClassOf	"logmaps"
s8	"most exist"	rdfs:subClassOf	"exist"
s8	"tool logmaps"	rdfs:member	"tool"
s8	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	local:AM-DIS	"also"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:subject	"algorithm"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:predicate	"implement"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:object	"repair"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"	local:AM-ADV	"contrast to most exist tool logmaps"
s7	"contrast to most exist tool logmaps"	rdfs:member	"most exist tool logmaps"
s7	"contrast to most exist tool logmaps"	rdfs:member	"contrast"
s7	"most exist"	rdfs:member	"most"
s7	"exist tool"	rdfs:member	"exist"
s7	"most exist tool"	rdfs:subClassOf	"tool"
s7	"most exist tool logmaps"	rdfs:subClassOf	"logmaps"
s7	"tool logmaps"	rdfs:subClassOf	"logmaps"
s7	"most exist tool logmaps"	rdfs:member	"most exist tool"
s7	"most exist tool"	rdfs:member	"most exist"
s7	"exist tool logmaps"	rdfs:member	"exist tool"
s7	"exist tool"	rdfs:subClassOf	"tool"
s7	"exist tool logmaps"	rdfs:subClassOf	"logmaps"
s7	"most exist"	rdfs:subClassOf	"exist"
s7	"tool logmaps"	rdfs:member	"tool"
s7	"in contrast to most existing tools logmaps also implements algorithms for repair"	local:AM-DIS	"also"
s6	"the only matching system that can deal with semantically rich ontologies"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:subject	"match system"
s6	"match system"	rdfs:member	"match"
s6	"match system"	rdfs:subClassOf	"system"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:predicate	"deal"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:object	"semantically rich ontology"
s6	"semantically rich ontology"	rdfs:member	"semantically rich"
s6	"semantically rich"	rdfs:member	"semantically"
s6	"semantically rich ontology"	rdfs:subClassOf	"ontology"
s6	"semantically rich"	rdfs:subClassOf	"rich"
s6	"rich ontology"	rdfs:subClassOf	"ontology"
s6	"rich ontology"	rdfs:member	"rich"
s6	"the only matching system that can deal with semantically rich ontologies"	local:AM-MOD	"can"
s5	"semantically rich ontologies containing tens of thousands of classes"
s5	"semantically rich ontologies containing tens of thousands of classes"	rdf:subject	"semantically rich ontology"
s5	"semantically rich ontology"	rdfs:member	"semantically rich"
s5	"semantically rich"	rdfs:member	"semantically"
s5	"semantically rich ontology"	rdfs:subClassOf	"ontology"
s5	"semantically rich"	rdfs:subClassOf	"rich"
s5	"rich ontology"	rdfs:subClassOf	"ontology"
s5	"rich ontology"	rdfs:member	"rich"
s5	"semantically rich ontologies containing tens of thousands of classes"	rdf:predicate	"contain"
s5	"semantically rich ontologies containing tens of thousands of classes"	rdf:object	"ten of thousand of class"
s5	"ten of thousand of class"	rdfs:member	"ten"
s5	"ten of thousand of class"	rdfs:member	"thousand"
s5	"ten of thousand of class"	rdfs:member	"class"
s5	"ten of thousand"	rdfs:member	"ten"
s5	"ten of thousand"	rdfs:member	"thousand"
s5	"thousand of class"	rdfs:member	"thousand"
s5	"thousand of class"	rdfs:member	"class"
s3	"semantically rich ontologies containing hundreds of thousands of classes"
s3	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:subject	"semantically rich ontology"
s3	"semantically rich ontology"	rdfs:member	"semantically rich"
s3	"semantically rich"	rdfs:member	"semantically"
s3	"semantically rich ontology"	rdfs:subClassOf	"ontology"
s3	"semantically rich"	rdfs:subClassOf	"rich"
s3	"rich ontology"	rdfs:subClassOf	"ontology"
s3	"rich ontology"	rdfs:member	"rich"
s3	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:predicate	"contain"
s3	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:object	"hundred of thousand of class"
s3	"hundred of thousand"	rdfs:member	"hundred"
s3	"hundred of thousand"	rdfs:member	"thousand"
s3	"thousand of class"	rdfs:member	"thousand"
s3	"thousand of class"	rdfs:member	"class"
s2	"matching system"
s2	"matching system"	rdf:subject	"system"
s2	"matching system"	rdf:predicate	"match"
s1	"in this paper we present logmap a highly scalable ontology"
s1	"in this paper we present logmap a highly scalable ontology"	rdf:subject	"we"
s1	"in this paper we present logmap a highly scalable ontology"	rdf:predicate	"present"
s1	"in this paper we present logmap a highly scalable ontology"	rdf:object	"logmap a highly scalable ontology"
s1	"scalable ontology"	rdfs:subClassOf	"ontology"
s1	"highly scalable ontology"	rdfs:member	"highly scalable"
s1	"highly scalable ontology"	rdfs:subClassOf	"ontology"
s1	"highly scalable"	rdfs:subClassOf	"scalable"
s1	"scalable ontology"	rdfs:member	"scalable"
s1	"highly scalable"	rdfs:member	"highly"
s1	"in this paper we present logmap a highly scalable ontology"	local:AM-LOC	"paper"
s0	"matching system with diagnosis capabilities"
s0	"matching system with diagnosis capabilities"	rdf:subject	"diagnosis capability"
s0	"diagnosis capability"	rdfs:member	"diagnosis"
s0	"diagnosis capability"	rdfs:subClassOf	"capability"
s0	"matching system with diagnosis capabilities"	rdf:predicate	"match"
s0	"matching system with diagnosis capabilities"	rdf:object	"system"
