s14.1	"the ontology not contain unsatisfiable classes"
s14.1	"the ontology not contain unsatisfiable classes"	rdf:subject	"ontology"
s14.1	"the ontology not contain unsatisfiable classes"	rdf:predicate	"not contain"
s14.1	"the ontology not contain unsatisfiable classes"	rdf:object	"unsatisfiable classes"
s14.1	"unsatisfiable classes"	rdfs:subClassOf	"classes"
s14.1	"unsatisfiable classes"	rdfs:member	"unsatisfiable"
s14	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"
s14	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:subject	"LogMaps"
s14	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:predicate	"produce"
s14	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	rdf:object	"clean set of output mappings"
s14	"clean set of output mappings"	rdfs:member	"clean set"
s14	"clean set of output mappings"	rdfs:member	"output mappings"
s14	"output mappings"	rdfs:member	"output"
s14	"clean set"	rdfs:member	"clean"
s14	"output mappings"	rdfs:subClassOf	"mappings"
s14	"clean set"	rdfs:subClassOf	"set"
s14	"clean set of output mappings"	rdfs:member	"clean set"
s14	"clean set of output mappings"	rdfs:member	"output mappings"
s14	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology does not contain unsatisfiable classes"	local:AM-LOC	"many cases in the sense that the ontology does not contain unsatisfiable classes"
s14	"many cases in the sense that the ontology does not contain unsatisfiable classes"	rdfs:member	"unsatisfiable classes"
s14	"many cases in the sense that the ontology does not contain unsatisfiable classes"	rdfs:member	"ontology"
s14	"many cases in the sense that the ontology does not contain unsatisfiable classes"	rdfs:member	"many cases"
s14	"many cases in the sense that the ontology does not contain unsatisfiable classes"	rdfs:member	"sense"
s14	"unsatisfiable classes"	rdfs:subClassOf	"classes"
s14	"unsatisfiable classes"	rdfs:member	"unsatisfiable"
s14	"many cases"	rdfs:member	"many"
s14	"many cases"	rdfs:subClassOf	"cases"
s14	"not contain"	rdfs:subClassOf	"contain"
s14	"does not contain"	rdfs:subClassOf	"not contain"
s14	"many cases in sense"	rdfs:member	"many cases"
s14	"many cases in sense"	rdfs:member	"sense"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:subject	"LogMaps"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:predicate	"produce"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	rdf:object	"clean set of output mappings"
s13	"clean set of output mappings"	rdfs:member	"clean set"
s13	"clean set of output mappings"	rdfs:member	"output mappings"
s13	"output mappings"	rdfs:member	"output"
s13	"clean set"	rdfs:member	"clean"
s13	"output mappings"	rdfs:subClassOf	"mappings"
s13	"clean set"	rdfs:subClassOf	"set"
s13	"clean set of output mappings"	rdfs:member	"clean set"
s13	"clean set of output mappings"	rdfs:member	"output mappings"
s13	"logmaps produce a clean set of output mappings in many cases in the sense that the ontology is consistent"	local:AM-LOC	"many cases in the sense that the ontology is consistent"
s13	"many cases in the sense that the ontology is consistent"	rdfs:member	"ontology"
s13	"many cases in the sense that the ontology is consistent"	rdfs:member	"many cases"
s13	"many cases in the sense that the ontology is consistent"	rdfs:member	"sense"
s13	"many cases"	rdfs:member	"many"
s13	"many cases"	rdfs:subClassOf	"cases"
s13	"many cases in sense"	rdfs:member	"many cases"
s13	"many cases in sense"	rdfs:member	"sense"
s12.1	"integrating logmaps output mappings with the input ontologies"
s12.1	"integrating logmaps output mappings with the input ontologies"	rdf:subject	"LogMaps output mappings with the input ontologies"
s12.1	"logmaps output mappings with the input ontologies"	rdfs:member	"input ontologies"
s12.1	"logmaps output mappings with the input ontologies"	rdfs:member	"logmaps output mappings"
s12.1	"output mappings"	rdfs:member	"output"
s12.1	"output mappings"	rdfs:subClassOf	"mappings"
s12.1	"logmaps output"	rdfs:subClassOf	"output"
s12.1	"input ontologies"	rdfs:member	"input"
s12.1	"input ontologies"	rdfs:subClassOf	"ontologies"
s12.1	"logmaps output"	rdfs:member	"logmaps"
s12.1	"logmaps output mappings"	rdfs:member	"logmaps output"
s12.1	"logmaps output mappings"	rdfs:subClassOf	"mappings"
s12.1	"logmaps output mappings"	rdfs:subClassOf	"output mappings"
s12.1	"logmaps output mappings with input ontologies"	rdfs:member	"logmaps output mappings"
s12.1	"logmaps output mappings with input ontologies"	rdfs:member	"input ontologies"
s12.1	"integrating logmaps output mappings with the input ontologies"	rdf:predicate	"integrate"
s12	"the ontology obtained by integrating logmaps output mappings with the input ontologies"
s12	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	rdf:subject	"ontology"
s12	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	rdf:predicate	"obtain"
s12	"the ontology obtained by integrating logmaps output mappings with the input ontologies"	local:AM-MNR	"integrating LogMaps output mappings with the input ontologies"
s12	"integrating logmaps output mappings with the input ontologies"	rdfs:member	"input ontologies"
s12	"integrating logmaps output mappings with the input ontologies"	rdfs:member	"logmaps output mappings"
s12	"output mappings"	rdfs:member	"output"
s12	"output mappings"	rdfs:subClassOf	"mappings"
s12	"logmaps output"	rdfs:subClassOf	"output"
s12	"input ontologies"	rdfs:member	"input"
s12	"input ontologies"	rdfs:subClassOf	"ontologies"
s12	"logmaps output"	rdfs:member	"logmaps"
s12	"logmaps output mappings"	rdfs:member	"logmaps output"
s12	"logmaps output mappings"	rdfs:subClassOf	"mappings"
s12	"logmaps output mappings"	rdfs:subClassOf	"output mappings"
s12	"integrating with input ontologies"	rdfs:member	"integrating"
s12	"integrating with input ontologies"	rdfs:member	"input ontologies"
s11.2	"existing biomedical ontologies"
s11.2	"existing biomedical ontologies"	rdf:subject	"biomedical ontologies"
s11.2	"biomedical ontologies"	rdfs:member	"biomedical"
s11.2	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s11.2	"existing biomedical ontologies"	rdf:predicate	"exist"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest existing biomedical ontologies"
s11.1	"biomedical ontologies"	rdfs:member	"biomedical"
s11.1	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s11.1	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s11.1	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s11.1	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s11.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s11	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s11	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiments with the ontologies SNOMED CT"
s11	"experiments with the ontologies snomed ct"	rdfs:member	"experiments"
s11	"experiments with the ontologies snomed ct"	rdfs:member	"ontologies snomed ct"
s11	"ontologies snomed ct"	rdfs:subClassOf	"ct"
s11	"snomed ct"	rdfs:member	"snomed"
s11	"ontologies snomed ct"	rdfs:member	"ontologies snomed"
s11	"ontologies snomed"	rdfs:subClassOf	"snomed"
s11	"ontologies snomed"	rdfs:member	"ontologies"
s11	"snomed ct"	rdfs:subClassOf	"ct"
s11	"experiments with ontologies"	rdfs:member	"experiments"
s11	"experiments with ontologies"	rdfs:member	"ontologies"
s11	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s11	"our experiments with the ontologies snomed ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest existing biomedical ontologies"
s11	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"system"
s11	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"biomedical ontologies"
s11	"biomedical ontologies"	rdfs:member	"biomedical"
s11	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s11	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s11	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s11	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s11	"efficiently match"	rdfs:subClassOf	"match"
s11	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s10.2	"existing biomedical ontologies"
s10.2	"existing biomedical ontologies"	rdf:subject	"biomedical ontologies"
s10.2	"biomedical ontologies"	rdfs:member	"biomedical"
s10.2	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s10.2	"existing biomedical ontologies"	rdf:predicate	"exist"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest existing biomedical ontologies"
s10.1	"biomedical ontologies"	rdfs:member	"biomedical"
s10.1	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s10.1	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s10.1	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s10.1	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s10.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s10	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s10	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiments with the ontologies FMA CT"
s10	"experiments with the ontologies fma ct"	rdfs:member	"experiments"
s10	"experiments with the ontologies fma ct"	rdfs:member	"ontologies fma ct"
s10	"ontologies fma"	rdfs:member	"ontologies"
s10	"ontologies fma"	rdfs:subClassOf	"fma"
s10	"ontologies fma ct"	rdfs:member	"ontologies fma"
s10	"ontologies fma ct"	rdfs:subClassOf	"ct"
s10	"fma ct"	rdfs:member	"fma"
s10	"fma ct"	rdfs:subClassOf	"ct"
s10	"ontologies fma ct"	rdfs:subClassOf	"fma ct"
s10	"experiments with ontologies fma ct"	rdfs:member	"experiments"
s10	"experiments with ontologies fma ct"	rdfs:member	"ontologies fma ct"
s10	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s10	"our experiments with the ontologies fma ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest existing biomedical ontologies"
s10	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"system"
s10	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"biomedical ontologies"
s10	"biomedical ontologies"	rdfs:member	"biomedical"
s10	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s10	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s10	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s10	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s10	"efficiently match"	rdfs:subClassOf	"match"
s10	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s9.2	"existing biomedical ontologies"
s9.2	"existing biomedical ontologies"	rdf:subject	"biomedical ontologies"
s9.2	"biomedical ontologies"	rdfs:member	"biomedical"
s9.2	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s9.2	"existing biomedical ontologies"	rdf:predicate	"exist"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"system"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"match"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"even the largest existing biomedical ontologies"
s9.1	"biomedical ontologies"	rdfs:member	"biomedical"
s9.1	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s9.1	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s9.1	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s9.1	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MNR	"efficiently"
s9.1	"our system can efficiently match even the largest existing biomedical ontologies"	local:AM-MOD	"can"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:subject	"experiments with the ontologies NCI CT"
s9	"experiments with the ontologies nci ct"	rdfs:member	"ontologies nci ct"
s9	"experiments with the ontologies nci ct"	rdfs:member	"experiments"
s9	"ontologies nci"	rdfs:subClassOf	"nci"
s9	"nci ct"	rdfs:member	"nci"
s9	"ontologies nci ct"	rdfs:subClassOf	"ct"
s9	"nci ct"	rdfs:subClassOf	"ct"
s9	"ontologies nci ct"	rdfs:member	"ontologies nci"
s9	"ontologies nci"	rdfs:member	"ontologies"
s9	"ontologies nci ct"	rdfs:subClassOf	"nci ct"
s9	"experiments with ontologies nci ct"	rdfs:member	"experiments"
s9	"experiments with ontologies nci ct"	rdfs:member	"ontologies nci ct"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:predicate	"confirm"
s9	"our experiments with the ontologies nci ct confirm that our system can efficiently match even the largest existing biomedical ontologies"	rdf:object	"system can efficiently match even the largest existing biomedical ontologies"
s9	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"system"
s9	"system can efficiently match even the largest existing biomedical ontologies"	rdfs:member	"biomedical ontologies"
s9	"biomedical ontologies"	rdfs:member	"biomedical"
s9	"biomedical ontologies"	rdfs:subClassOf	"ontologies"
s9	"existing biomedical ontologies"	rdfs:subClassOf	"biomedical ontologies"
s9	"largest existing biomedical ontologies"	rdfs:subClassOf	"existing biomedical ontologies"
s9	"even largest existing biomedical ontologies"	rdfs:subClassOf	"largest existing biomedical ontologies"
s9	"efficiently match"	rdfs:subClassOf	"match"
s9	"can efficiently match"	rdfs:subClassOf	"efficiently match"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:subject	"LogMaps"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:predicate	"implement"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"	rdf:object	"algorithms repair"
s8	"algorithms repair"	rdfs:subClassOf	"repair"
s8	"algorithms repair"	rdfs:member	"algorithms"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"	local:AM-ADV	"contrast to most existing tools"
s8	"contrast to most existing tools"	rdfs:member	"contrast"
s8	"contrast to most existing tools"	rdfs:member	"most existing tools"
s8	"existing tools"	rdfs:member	"existing"
s8	"most existing tools"	rdfs:subClassOf	"tools"
s8	"existing tools"	rdfs:subClassOf	"tools"
s8	"most existing"	rdfs:member	"most"
s8	"most existing tools"	rdfs:member	"most existing"
s8	"most existing"	rdfs:subClassOf	"existing"
s8	"contrast to existing tools"	rdfs:member	"contrast"
s8	"contrast to existing tools"	rdfs:member	"existing tools"
s8	"in contrast to most existing tools logmaps also implements algorithms for repair"	local:AM-DIS	"also"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	rdf:subject	"LogMaps"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	rdf:predicate	"implement"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	rdf:object	"algorithms fly unsatisfiability detection"
s7	"algorithms fly unsatisfiability detection"	rdfs:member	"algorithms"
s7	"algorithms fly unsatisfiability detection"	rdfs:member	"unsatisfiability detection"
s7	"unsatisfiability detection"	rdfs:subClassOf	"detection"
s7	"unsatisfiability detection"	rdfs:member	"unsatisfiability"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	local:AM-ADV	"contrast to most existing tools"
s7	"contrast to most existing tools"	rdfs:member	"contrast"
s7	"contrast to most existing tools"	rdfs:member	"most existing tools"
s7	"existing tools"	rdfs:member	"existing"
s7	"most existing tools"	rdfs:subClassOf	"tools"
s7	"existing tools"	rdfs:subClassOf	"tools"
s7	"most existing"	rdfs:member	"most"
s7	"most existing tools"	rdfs:member	"most existing"
s7	"most existing"	rdfs:subClassOf	"existing"
s7	"contrast to existing tools"	rdfs:member	"contrast"
s7	"contrast to existing tools"	rdfs:member	"existing tools"
s7	"in contrast to most existing tools logmaps also implements algorithms for on the fly unsatisfiability detection"	local:AM-DIS	"also"
s6	"the only matching system that can deal with semantically rich ontologies"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:subject	"matching system"
s6	"matching system"	rdfs:subClassOf	"system"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:predicate	"deal"
s6	"the only matching system that can deal with semantically rich ontologies"	rdf:object	"semantically rich ontologies"
s6	"rich ontologies"	rdfs:member	"rich"
s6	"semantically rich ontologies"	rdfs:subClassOf	"ontologies"
s6	"semantically rich"	rdfs:subClassOf	"rich"
s6	"semantically rich ontologies"	rdfs:member	"semantically rich"
s6	"rich ontologies"	rdfs:subClassOf	"ontologies"
s6	"semantically rich"	rdfs:member	"semantically"
s6	"the only matching system that can deal with semantically rich ontologies"	local:AM-MOD	"can"
s5	"semantically rich ontologies containing hundreds of thousands of classes"
s5	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:subject	"semantically rich ontologies"
s5	"rich ontologies"	rdfs:member	"rich"
s5	"semantically rich ontologies"	rdfs:subClassOf	"ontologies"
s5	"semantically rich"	rdfs:subClassOf	"rich"
s5	"semantically rich ontologies"	rdfs:member	"semantically rich"
s5	"rich ontologies"	rdfs:subClassOf	"ontologies"
s5	"semantically rich"	rdfs:member	"semantically"
s5	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:predicate	"contain"
s5	"semantically rich ontologies containing hundreds of thousands of classes"	rdf:object	"hundreds of thousands of classes"
s5	"hundreds of thousands of classes"	rdfs:member	"classes"
s5	"hundreds of thousands of classes"	rdfs:member	"thousands"
s5	"hundreds of thousands of classes"	rdfs:member	"hundreds"
s5	"thousands classes"	rdfs:subClassOf	"classes"
s5	"hundreds thousands"	rdfs:subClassOf	"thousands"
s4	"semantically rich ontologies containing tens of thousands of classes"
s4	"semantically rich ontologies containing tens of thousands of classes"	rdf:subject	"semantically rich ontologies"
s4	"rich ontologies"	rdfs:member	"rich"
s4	"semantically rich ontologies"	rdfs:subClassOf	"ontologies"
s4	"semantically rich"	rdfs:subClassOf	"rich"
s4	"semantically rich ontologies"	rdfs:member	"semantically rich"
s4	"rich ontologies"	rdfs:subClassOf	"ontologies"
s4	"semantically rich"	rdfs:member	"semantically"
s4	"semantically rich ontologies containing tens of thousands of classes"	rdf:predicate	"contain"
s4	"semantically rich ontologies containing tens of thousands of classes"	rdf:object	"tens of thousands of classes"
s4	"tens of thousands of classes"	rdfs:member	"classes"
s4	"tens of thousands of classes"	rdfs:member	"thousands"
s4	"tens of thousands of classes"	rdfs:member	"tens"
s4	"thousands classes"	rdfs:subClassOf	"classes"
s4	"tens thousands"	rdfs:subClassOf	"thousands"
s2	"matching system with diagnosis capabilities"
s2	"matching system with diagnosis capabilities"	rdf:subject	"diagnosis capabilities"
s2	"diagnosis capabilities"	rdfs:member	"diagnosis"
s2	"diagnosis capabilities"	rdfs:subClassOf	"capabilities"
s2	"matching system with diagnosis capabilities"	rdf:predicate	"match"
s2	"matching system with diagnosis capabilities"	rdf:object	"system"
s1	"matching system"
s1	"matching system"	rdf:subject	"system"
s1	"matching system"	rdf:predicate	"match"
s0	"in this paper we present logmap a highly scalable ontology"
s0	"in this paper we present logmap a highly scalable ontology"	rdf:subject	"we"
s0	"in this paper we present logmap a highly scalable ontology"	rdf:predicate	"present"
s0	"in this paper we present logmap a highly scalable ontology"	rdf:object	"LogMap a highly scalable ontology"
s0	"highly scalable"	rdfs:member	"highly"
s0	"scalable ontology"	rdfs:subClassOf	"ontology"
s0	"highly scalable"	rdfs:subClassOf	"scalable"
s0	"scalable ontology"	rdfs:member	"scalable"
s0	"highly scalable ontology"	rdfs:member	"highly scalable"
s0	"highly scalable ontology"	rdfs:subClassOf	"ontology"
s0	"in this paper we present logmap a highly scalable ontology"	local:AM-LOC	"paper"
