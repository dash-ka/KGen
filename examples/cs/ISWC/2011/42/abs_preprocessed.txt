2 reasoners which in some cases fail to derive all answers to a query
the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners
in some applications may even be unacceptable
this is clearly undesirable
to address this problem we investigate the problem of  repairing  an ontology tthat is computing an ontology r such that a reasoner becomes complete when used with t r
a reasoner that is incomplete for t
we identify conditions on t and present a preliminary evaluation reasonable in size and do not significantly affect reasoner performance
the reasoner that make this possible present a practical algorithm for computing r
we identify conditions on the reasoner and present a preliminary evaluation reasonable in size and do not significantly affect reasoner performance
a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute