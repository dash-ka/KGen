2 reasoners which in some cases fail to derive all answers to a query
The need for scalable query answering often forces Semantic Web applications to use incomplete OWL 2 reasoners
in some applications may even be unacceptable
This is clearly undesirable
a reasoner that is incomplete for T
To address this problem we investigate the problem of  repairing  an ontology Tthat is computing an ontology R such that a reasoner becomes complete when used with T R
a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute
We identify conditions on T and present a preliminary evaluation reasonable in size and do not significantly affect reasoner performance
the reasoner that make this possible present a practical algorithm for computing R
We identify conditions on the reasoner and present a preliminary evaluation reasonable in size and do not significantly affect reasoner performance