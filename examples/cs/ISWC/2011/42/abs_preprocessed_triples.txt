s9.1	"a preliminary evaluation which shows that in some realistic cases repairs"
s9.1	"a preliminary evaluation which shows that in some realistic cases repairs"	rdf:subject	"preliminary evaluation which show that in some realistic case repair"
s9.1	"preliminary evaluation which show that in some realistic case repair"	rdfs:member	"preliminary evaluation"
s9.1	"preliminary evaluation which show that in some realistic case repair"	rdfs:member	"realistic case repair"
s9.1	"realistic case repair"	rdfs:member	"realistic case"
s9.1	"case repair"	rdfs:subClassOf	"repair"
s9.1	"realistic case"	rdfs:subClassOf	"case"
s9.1	"realistic case repair"	rdfs:subClassOf	"repair"
s9.1	"preliminary evaluation"	rdfs:member	"preliminary"
s9.1	"realistic case"	rdfs:member	"realistic"
s9.1	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s9.1	"case repair"	rdfs:member	"case"
s9.1	"repair in realistic case"	rdfs:member	"repair"
s9.1	"repair in realistic case"	rdfs:member	"realistic case"
s9.1	"a preliminary evaluation which shows that in some realistic cases repairs"	rdf:predicate	"compute"
s9	"a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute"
s9	"a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute"	rdf:subject	"preliminary evaluation"
s9	"preliminary evaluation"	rdfs:member	"preliminary"
s9	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s9	"a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute"	rdf:predicate	"show"
s9	"a preliminary evaluation which shows that in some realistic cases repairs are feasible to compute"	rdf:object	"realistic case repair be feasible to compute"
s9	"realistic case repair"	rdfs:member	"realistic case"
s9	"case repair"	rdfs:subClassOf	"repair"
s9	"realistic case"	rdfs:subClassOf	"case"
s9	"realistic case repair"	rdfs:subClassOf	"repair"
s9	"realistic case"	rdfs:member	"realistic"
s9	"case repair"	rdfs:member	"case"
s9	"realistic case repair"	rdfs:subClassOf	"case repair"
s8.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"
s8.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:subject	"preliminary evaluation reasonable in size and do not significantly"
s8.2	"preliminary evaluation reasonable in size and do not significantly"	rdfs:member	"size"
s8.2	"preliminary evaluation reasonable in size and do not significantly"	rdfs:member	"preliminary evaluation reasonable"
s8.2	"evaluation reasonable"	rdfs:member	"evaluation"
s8.2	"preliminary evaluation reasonable"	rdfs:member	"preliminary evaluation"
s8.2	"preliminary evaluation"	rdfs:member	"preliminary"
s8.2	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s8.2	"evaluation reasonable"	rdfs:subClassOf	"reasonable"
s8.2	"preliminary evaluation reasonable"	rdfs:subClassOf	"reasonable"
s8.2	"significantly do"	rdfs:subClassOf	"do"
s8.2	"reasonable evaluation"	rdfs:subClassOf	"evaluation"
s8.2	"preliminary reasonable evaluation"	rdfs:subClassOf	"reasonable evaluation"
s8.2	"reasonable in size"	rdfs:member	"reasonable"
s8.2	"reasonable in size"	rdfs:member	"size"
s8.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:predicate	"affect"
s8.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:object	"reasoner performance"
s8.2	"reasoner performance"	rdfs:member	"reasoner"
s8.2	"reasoner performance"	rdfs:subClassOf	"performance"
s8.1	"we present a preliminary evaluation reasonable in size"
s8.1	"we present a preliminary evaluation reasonable in size"	rdf:subject	"we"
s8.1	"we present a preliminary evaluation reasonable in size"	rdf:predicate	"present"
s8.1	"we present a preliminary evaluation reasonable in size"	rdf:object	"preliminary evaluation reasonable in size"
s8.1	"preliminary evaluation reasonable in size"	rdfs:member	"size"
s8.1	"preliminary evaluation reasonable in size"	rdfs:member	"preliminary evaluation reasonable"
s8.1	"evaluation reasonable"	rdfs:member	"evaluation"
s8.1	"preliminary evaluation reasonable"	rdfs:member	"preliminary evaluation"
s8.1	"preliminary evaluation"	rdfs:member	"preliminary"
s8.1	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s8.1	"evaluation reasonable"	rdfs:subClassOf	"reasonable"
s8.1	"preliminary evaluation reasonable"	rdfs:subClassOf	"reasonable"
s8.1	"reasonable evaluation"	rdfs:subClassOf	"evaluation"
s8.1	"preliminary reasonable evaluation"	rdfs:subClassOf	"reasonable evaluation"
s8.1	"reasonable in size"	rdfs:member	"reasonable"
s8.1	"reasonable in size"	rdfs:member	"size"
s8	"we identify conditions on the reasoner"
s8	"we identify conditions on the reasoner"	rdf:subject	"we"
s8	"we identify conditions on the reasoner"	rdf:predicate	"identify"
s8	"we identify conditions on the reasoner"	rdf:object	"condition on the reasoner"
s8	"condition on the reasoner"	rdfs:member	"reasoner"
s8	"condition on the reasoner"	rdfs:member	"condition"
s8	"condition on reasoner"	rdfs:member	"condition"
s8	"condition on reasoner"	rdfs:member	"reasoner"
s7	"the reasoner that make this possible present a practical algorithm for computing r"
s7	"the reasoner that make this possible present a practical algorithm for computing r"	rdf:subject	"reasoner"
s7	"the reasoner that make this possible present a practical algorithm for computing r"	rdf:predicate	"make"
s7	"the reasoner that make this possible present a practical algorithm for computing r"	rdf:object	"possible present a practical algorithm compute r"
s7	"possible present a practical algorithm compute r"	rdfs:member	"possible present"
s7	"possible present a practical algorithm compute r"	rdfs:member	"practical algorithm compute r"
s7	"algorithm compute"	rdfs:member	"algorithm"
s7	"compute r"	rdfs:subClassOf	"r"
s7	"possible present"	rdfs:member	"possible"
s7	"practical algorithm"	rdfs:member	"practical"
s7	"practical algorithm compute"	rdfs:subClassOf	"compute"
s7	"algorithm compute r"	rdfs:subClassOf	"r"
s7	"algorithm compute r"	rdfs:member	"algorithm compute"
s7	"compute r"	rdfs:member	"compute"
s7	"practical algorithm compute r"	rdfs:subClassOf	"r"
s7	"practical algorithm compute"	rdfs:member	"practical algorithm"
s7	"possible present"	rdfs:subClassOf	"present"
s7	"algorithm compute"	rdfs:subClassOf	"compute"
s7	"practical algorithm compute r"	rdfs:member	"practical algorithm compute"
s7	"practical algorithm"	rdfs:subClassOf	"algorithm"
s7	"present practical algorithm"	rdfs:subClassOf	"practical algorithm"
s7	"possible present practical algorithm"	rdfs:subClassOf	"present practical algorithm"
s6.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"
s6.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:subject	"preliminary evaluation reasonable in size and do not significantly"
s6.2	"preliminary evaluation reasonable in size and do not significantly"	rdfs:member	"size"
s6.2	"preliminary evaluation reasonable in size and do not significantly"	rdfs:member	"preliminary evaluation reasonable"
s6.2	"evaluation reasonable"	rdfs:member	"evaluation"
s6.2	"preliminary evaluation reasonable"	rdfs:member	"preliminary evaluation"
s6.2	"preliminary evaluation"	rdfs:member	"preliminary"
s6.2	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s6.2	"evaluation reasonable"	rdfs:subClassOf	"reasonable"
s6.2	"preliminary evaluation reasonable"	rdfs:subClassOf	"reasonable"
s6.2	"significantly do"	rdfs:subClassOf	"do"
s6.2	"reasonable evaluation"	rdfs:subClassOf	"evaluation"
s6.2	"preliminary reasonable evaluation"	rdfs:subClassOf	"reasonable evaluation"
s6.2	"reasonable in size"	rdfs:member	"reasonable"
s6.2	"reasonable in size"	rdfs:member	"size"
s6.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:predicate	"affect"
s6.2	"we a preliminary evaluation reasonable in size and do not significantly affect reasoner performance"	rdf:object	"reasoner performance"
s6.2	"reasoner performance"	rdfs:member	"reasoner"
s6.2	"reasoner performance"	rdfs:subClassOf	"performance"
s6.1	"we present a preliminary evaluation reasonable in size"
s6.1	"we present a preliminary evaluation reasonable in size"	rdf:subject	"we"
s6.1	"we present a preliminary evaluation reasonable in size"	rdf:predicate	"present"
s6.1	"we present a preliminary evaluation reasonable in size"	rdf:object	"preliminary evaluation reasonable in size"
s6.1	"preliminary evaluation reasonable in size"	rdfs:member	"size"
s6.1	"preliminary evaluation reasonable in size"	rdfs:member	"preliminary evaluation reasonable"
s6.1	"evaluation reasonable"	rdfs:member	"evaluation"
s6.1	"preliminary evaluation reasonable"	rdfs:member	"preliminary evaluation"
s6.1	"preliminary evaluation"	rdfs:member	"preliminary"
s6.1	"preliminary evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"evaluation reasonable"	rdfs:subClassOf	"reasonable"
s6.1	"preliminary evaluation reasonable"	rdfs:subClassOf	"reasonable"
s6.1	"reasonable evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"preliminary reasonable evaluation"	rdfs:subClassOf	"reasonable evaluation"
s6.1	"reasonable in size"	rdfs:member	"reasonable"
s6.1	"reasonable in size"	rdfs:member	"size"
s6	"we identify conditions on t"
s6	"we identify conditions on t"	rdf:subject	"we"
s6	"we identify conditions on t"	rdf:predicate	"identify"
s6	"we identify conditions on t"	rdf:object	"condition on t"
s6	"condition on t"	rdfs:member	"t"
s6	"condition on t"	rdfs:member	"condition"
s6	"condition on t"	rdfs:member	"condition"
s6	"condition on t"	rdfs:member	"t"
s4.5	"a reasoner used with t r"
s4.5	"a reasoner used with t r"	rdf:subject	"reasoner"
s4.5	"a reasoner used with t r"	rdf:predicate	"use"
s4.5	"a reasoner used with t r"	rdf:object	"r"
s4.4	"a reasoner becomes complete when used with t r"
s4.4	"a reasoner becomes complete when used with t r"	rdf:subject	"reasoner"
s4.4	"a reasoner becomes complete when used with t r"	rdf:predicate	"become"
s4.4	"a reasoner becomes complete when used with t r"	rdf:object	"complete when use with t r"
s4.4	"complete when use with t r"	rdfs:member	"use"
s4.4	"complete when use with t r"	rdfs:member	"t r"
s4.4	"t r"	rdfs:member	"t"
s4.4	"t r"	rdfs:subClassOf	"r"
s4.4	"use with t r"	rdfs:member	"use"
s4.4	"use with t r"	rdfs:member	"t r"
s4.3	"an ontology tthat computing an ontology r such that a reasoner becomes complete when used with t r"
s4.3	"an ontology tthat computing an ontology r such that a reasoner becomes complete when used with t r"	rdf:subject	"ontology tthat"
s4.3	"ontology tthat"	rdfs:subClassOf	"tthat"
s4.3	"ontology tthat"	rdfs:member	"ontology"
s4.3	"an ontology tthat computing an ontology r such that a reasoner becomes complete when used with t r"	rdf:predicate	"compute"
s4.3	"an ontology tthat computing an ontology r such that a reasoner becomes complete when used with t r"	rdf:object	"ontology r such that a reasoner become complete when use with t r"
s4.3	"ontology r such that a reasoner become complete when use with t r"	rdfs:member	"use"
s4.3	"ontology r such that a reasoner become complete when use with t r"	rdfs:member	"t r"
s4.3	"ontology r such that a reasoner become complete when use with t r"	rdfs:member	"ontology r"
s4.3	"ontology r such that a reasoner become complete when use with t r"	rdfs:member	"reasoner become"
s4.3	"t r"	rdfs:subClassOf	"r"
s4.3	"reasoner become"	rdfs:member	"reasoner"
s4.3	"ontology r"	rdfs:member	"ontology"
s4.3	"ontology r"	rdfs:subClassOf	"r"
s4.3	"t r"	rdfs:member	"t"
s4.3	"reasoner become"	rdfs:subClassOf	"become"
s4.3	"ontology t r"	rdfs:subClassOf	"t r"
s4.3	"use with t r"	rdfs:member	"use"
s4.3	"use with t r"	rdfs:member	"t r"
s4.2	"we repairing an ontology tthat"
s4.2	"we repairing an ontology tthat"	rdf:subject	"we"
s4.2	"we repairing an ontology tthat"	rdf:predicate	"repair"
s4.2	"we repairing an ontology tthat"	rdf:object	"ontology tthat"
s4.2	"ontology tthat"	rdfs:subClassOf	"tthat"
s4.2	"ontology tthat"	rdfs:member	"ontology"
s4.1	"we investigate the problem of repairing an ontology tthat"
s4.1	"we investigate the problem of repairing an ontology tthat"	rdf:subject	"we"
s4.1	"we investigate the problem of repairing an ontology tthat"	rdf:predicate	"investigate"
s4.1	"we investigate the problem of repairing an ontology tthat"	rdf:object	"problem of repair an ontology tthat"
s4.1	"problem of repair an ontology tthat"	rdfs:member	"repair"
s4.1	"problem of repair an ontology tthat"	rdfs:member	"problem"
s4.1	"problem of repair an ontology tthat"	rdfs:member	"ontology tthat"
s4.1	"ontology tthat"	rdfs:subClassOf	"tthat"
s4.1	"ontology tthat"	rdfs:member	"ontology"
s4.1	"problem of repair"	rdfs:member	"problem"
s4.1	"problem of repair"	rdfs:member	"repair"
s4	"address this problem we"
s4	"address this problem we"	rdf:subject	"we"
s4	"address this problem we"	rdf:predicate	"address"
s4	"address this problem we"	rdf:object	"problem"
s1.1	"use incomplete owl 2 reasoners"
s1.1	"use incomplete owl 2 reasoners"	rdf:subject	"incomplete owl"
s1.1	"incomplete owl"	rdfs:subClassOf	"owl"
s1.1	"incomplete owl"	rdfs:member	"incomplete"
s1.1	"use incomplete owl 2 reasoners"	rdf:predicate	"use"
s1.1	"use incomplete owl 2 reasoners"	rdf:object	"2 reasoner"
s1.1	"2 reasoner"	rdfs:subClassOf	"reasoner"
s1	"the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners"
s1	"the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners"	rdf:subject	"need for scalable query answer"
s1	"need for scalable query answer"	rdfs:member	"scalable query answer"
s1	"need for scalable query answer"	rdfs:member	"need"
s1	"scalable query answer"	rdfs:member	"scalable query"
s1	"query answer"	rdfs:member	"query"
s1	"scalable query"	rdfs:subClassOf	"query"
s1	"scalable query answer"	rdfs:subClassOf	"answer"
s1	"query answer"	rdfs:subClassOf	"answer"
s1	"scalable query"	rdfs:member	"scalable"
s1	"scalable query answer"	rdfs:subClassOf	"query answer"
s1	"need for scalable query answer"	rdfs:member	"need"
s1	"need for scalable query answer"	rdfs:member	"scalable query answer"
s1	"the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners"	rdf:predicate	"force"
s1	"the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners"	rdf:object	"semantic web application use incomplete owl 2 reasoner"
s1	"semantic web application use incomplete owl 2 reasoner"	rdfs:member	"incomplete owl"
s1	"semantic web application use incomplete owl 2 reasoner"	rdfs:member	"reasoner"
s1	"semantic web application use incomplete owl 2 reasoner"	rdfs:member	"semantic web application use"
s1	"application use"	rdfs:member	"application"
s1	"semantic web"	rdfs:subClassOf	"web"
s1	"web application"	rdfs:subClassOf	"application"
s1	"semantic web"	rdfs:member	"semantic"
s1	"semantic web application"	rdfs:member	"semantic web"
s1	"incomplete owl"	rdfs:subClassOf	"owl"
s1	"web application use"	rdfs:member	"web application"
s1	"web application use"	rdfs:subClassOf	"use"
s1	"semantic web application use"	rdfs:subClassOf	"use"
s1	"incomplete owl"	rdfs:member	"incomplete"
s1	"web application"	rdfs:member	"web"
s1	"semantic web application"	rdfs:subClassOf	"application"
s1	"application use"	rdfs:subClassOf	"use"
s1	"semantic web application use"	rdfs:member	"semantic web application"
s1	"2 reasoner"	rdfs:subClassOf	"reasoner"
s1	"owl 2 reasoner"	rdfs:subClassOf	"2 reasoner"
s1	"incomplete owl 2 reasoner"	rdfs:subClassOf	"owl 2 reasoner"
s1	"web application use"	rdfs:subClassOf	"application use"
s1	"semantic web application use"	rdfs:subClassOf	"web application use"
s1	"the need for scalable query answering often forces semantic web applications to use incomplete owl 2 reasoners"	local:AM-TMP	"often"
s0.1	"2 reasoners which in some cases derive all answers to a query"
s0.1	"2 reasoners which in some cases derive all answers to a query"	rdf:subject	"2 reasoner which in some case"
s0.1	"2 reasoner which in some case"	rdfs:member	"reasoner"
s0.1	"2 reasoner which in some case"	rdfs:member	"case"
s0.1	"2 reasoner"	rdfs:subClassOf	"reasoner"
s0.1	"which in case"	rdfs:member	"which"
s0.1	"which in case"	rdfs:member	"case"
s0.1	"2 reasoners which in some cases derive all answers to a query"	rdf:predicate	"derive"
s0.1	"2 reasoners which in some cases derive all answers to a query"	rdf:object	"answer to a query"
s0.1	"answer to a query"	rdfs:member	"query"
s0.1	"answer to a query"	rdfs:member	"answer"
s0.1	"answer to query"	rdfs:member	"answer"
s0.1	"answer to query"	rdfs:member	"query"
s0	"2 reasoners which in some cases fail to derive all answers to a query"
s0	"2 reasoners which in some cases fail to derive all answers to a query"	rdf:subject	"2 reasoner which in some case"
s0	"2 reasoner which in some case"	rdfs:member	"reasoner"
s0	"2 reasoner which in some case"	rdfs:member	"case"
s0	"2 reasoner"	rdfs:subClassOf	"reasoner"
s0	"which in case"	rdfs:member	"which"
s0	"which in case"	rdfs:member	"case"
s0	"2 reasoners which in some cases fail to derive all answers to a query"	rdf:predicate	"fail"
s0	"2 reasoners which in some cases fail to derive all answers to a query"	rdf:object	"derive all answer to a query"
s0	"derive all answer to a query"	rdfs:member	"query"
s0	"derive all answer to a query"	rdfs:member	"answer"
s0	"derive to query"	rdfs:member	"derive"
s0	"derive to query"	rdfs:member	"query"
