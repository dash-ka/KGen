s4	"an even more expressive language that allows for integrity constraints"
s4	"an even more expressive language that allows for integrity constraints"	rdf:subject	"even more expressive language"
s4	"even more"	rdfs:member	"even"
s4	"more expressive"	rdfs:subClassOf	"expressive"
s4	"even more"	rdfs:subClassOf	"more"
s4	"more expressive language"	rdfs:subClassOf	"language"
s4	"more expressive language"	rdfs:member	"more expressive"
s4	"more expressive"	rdfs:member	"more"
s4	"expressive language"	rdfs:member	"expressive"
s4	"expressive language"	rdfs:subClassOf	"language"
s4	"even more expressive language"	rdfs:member	"even more expressive"
s4	"even more expressive language"	rdfs:subClassOf	"language"
s4	"even more expressive"	rdfs:member	"even more"
s4	"even more expressive"	rdfs:subClassOf	"expressive"
s4	"even more expressive"	rdfs:subClassOf	"more expressive"
s4	"an even more expressive language that allows for integrity constraints"	rdf:predicate	"allow"
s4	"an even more expressive language that allows for integrity constraints"	rdf:object	"integrity constraint"
s4	"integrity constraint"	rdfs:subClassOf	"constraint"
s4	"integrity constraint"	rdfs:member	"integrity"
s3	"an even more expressive language that allows for modeling defaults"
s3	"an even more expressive language that allows for modeling defaults"	rdf:subject	"even more expressive language"
s3	"even more"	rdfs:member	"even"
s3	"more expressive"	rdfs:subClassOf	"expressive"
s3	"even more"	rdfs:subClassOf	"more"
s3	"more expressive language"	rdfs:subClassOf	"language"
s3	"more expressive language"	rdfs:member	"more expressive"
s3	"more expressive"	rdfs:member	"more"
s3	"expressive language"	rdfs:member	"expressive"
s3	"expressive language"	rdfs:subClassOf	"language"
s3	"even more expressive language"	rdfs:member	"even more expressive"
s3	"even more expressive language"	rdfs:subClassOf	"language"
s3	"even more expressive"	rdfs:member	"even more"
s3	"even more expressive"	rdfs:subClassOf	"expressive"
s3	"even more expressive"	rdfs:subClassOf	"more expressive"
s3	"an even more expressive language that allows for modeling defaults"	rdf:predicate	"allow"
s3	"an even more expressive language that allows for modeling defaults"	rdf:object	"model default"
s3	"model default"	rdfs:subClassOf	"default"
s3	"model default"	rdfs:member	"model"
s2.3	"such ontology languages with rules such as those expressible in rifcore and further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"
s2.3	"such ontology languages with rules such as those expressible in rifcore and further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:subject	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"ontology language"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"rule"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"riffld"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"nonmonotonic rule integrate default negation"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"rifcore"
s2.3	"ontology language with rule such a those expressible in rifcore and further with nonmonotonic rule integrate default negation a describe in the riffld"	rdfs:member	"describe"
s2.3	"nonmonotonic rule integrate default"	rdfs:member	"nonmonotonic rule integrate"
s2.3	"nonmonotonic rule integrate"	rdfs:subClassOf	"integrate"
s2.3	"nonmonotonic rule integrate"	rdfs:member	"nonmonotonic rule"
s2.3	"default negation"	rdfs:subClassOf	"negation"
s2.3	"rule integrate default negation"	rdfs:member	"rule integrate default"
s2.3	"rule integrate"	rdfs:subClassOf	"integrate"
s2.3	"rule integrate"	rdfs:member	"rule"
s2.3	"rule integrate default"	rdfs:subClassOf	"default"
s2.3	"ontology language"	rdfs:subClassOf	"language"
s2.3	"integrate default negation"	rdfs:member	"integrate default"
s2.3	"nonmonotonic rule integrate default negation"	rdfs:member	"nonmonotonic rule integrate default"
s2.3	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s2.3	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s2.3	"nonmonotonic rule integrate default"	rdfs:subClassOf	"default"
s2.3	"integrate default"	rdfs:member	"integrate"
s2.3	"ontology language"	rdfs:member	"ontology"
s2.3	"rule integrate default"	rdfs:member	"rule integrate"
s2.3	"rule integrate default negation"	rdfs:subClassOf	"negation"
s2.3	"integrate default negation"	rdfs:subClassOf	"negation"
s2.3	"integrate default"	rdfs:subClassOf	"default"
s2.3	"nonmonotonic rule integrate default negation"	rdfs:subClassOf	"negation"
s2.3	"default negation"	rdfs:member	"default"
s2.3	"further nonmonotonic rule"	rdfs:subClassOf	"nonmonotonic rule"
s2.3	"such expressible"	rdfs:subClassOf	"expressible"
s2.3	"integrate with rule"	rdfs:member	"integrate"
s2.3	"integrate with rule"	rdfs:member	"rule"
s2.3	"such expressible in rifcore"	rdfs:member	"such expressible"
s2.3	"such expressible in rifcore"	rdfs:member	"rifcore"
s2.3	"describe in riffld"	rdfs:member	"describe"
s2.3	"describe in riffld"	rdfs:member	"riffld"
s2.3	"such ontology languages with rules such as those expressible in rifcore and further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:predicate	"yield"
s2.3	"such ontology languages with rules such as those expressible in rifcore and further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:object	"even more expressive language"
s2.3	"even more"	rdfs:member	"even"
s2.3	"more expressive"	rdfs:subClassOf	"expressive"
s2.3	"even more"	rdfs:subClassOf	"more"
s2.3	"more expressive language"	rdfs:subClassOf	"language"
s2.3	"more expressive language"	rdfs:member	"more expressive"
s2.3	"more expressive"	rdfs:member	"more"
s2.3	"expressive language"	rdfs:member	"expressive"
s2.3	"expressive language"	rdfs:subClassOf	"language"
s2.3	"even more expressive language"	rdfs:member	"even more expressive"
s2.3	"even more expressive language"	rdfs:subClassOf	"language"
s2.3	"even more expressive"	rdfs:member	"even more"
s2.3	"even more expressive"	rdfs:subClassOf	"expressive"
s2.3	"even more expressive"	rdfs:subClassOf	"more expressive"
s2.2	"described in the riffld"
s2.2	"described in the riffld"	rdf:predicate	"describe"
s2.2	"described in the riffld"	local:AM-LOC	"riffld"
s2.1	"nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"
s2.1	"nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:subject	"nonmonotonic rule"
s2.1	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s2.1	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s2.1	"nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:predicate	"integrate"
s2.1	"nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:object	"default negation"
s2.1	"default negation"	rdfs:subClassOf	"negation"
s2.1	"default negation"	rdfs:member	"default"
s2.1	"nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	local:AM-MNR	"describe in the riffld yield an even more expressive language"
s2.1	"describe in the riffld yield an even more expressive language"	rdfs:member	"describe"
s2.1	"describe in the riffld yield an even more expressive language"	rdfs:member	"even more expressive language"
s2.1	"describe in the riffld yield an even more expressive language"	rdfs:member	"riffld yield"
s2.1	"even more"	rdfs:member	"even"
s2.1	"more expressive"	rdfs:subClassOf	"expressive"
s2.1	"even more"	rdfs:subClassOf	"more"
s2.1	"more expressive language"	rdfs:subClassOf	"language"
s2.1	"more expressive language"	rdfs:member	"more expressive"
s2.1	"more expressive"	rdfs:member	"more"
s2.1	"expressive language"	rdfs:member	"expressive"
s2.1	"expressive language"	rdfs:subClassOf	"language"
s2.1	"even more expressive language"	rdfs:member	"even more expressive"
s2.1	"even more expressive language"	rdfs:subClassOf	"language"
s2.1	"riffld yield"	rdfs:subClassOf	"yield"
s2.1	"even more expressive"	rdfs:member	"even more"
s2.1	"even more expressive"	rdfs:subClassOf	"expressive"
s2.1	"riffld yield"	rdfs:member	"riffld"
s2.1	"describe in riffld yield"	rdfs:member	"describe"
s2.1	"describe in riffld yield"	rdfs:member	"riffld yield"
s2	"extending such ontology languages with rules such as those expressible in rifcore further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"
s2	"extending such ontology languages with rules such as those expressible in rifcore further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:subject	"ontology language"
s2	"ontology language"	rdfs:member	"ontology"
s2	"ontology language"	rdfs:subClassOf	"language"
s2	"extending such ontology languages with rules such as those expressible in rifcore further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:predicate	"extend"
s2	"extending such ontology languages with rules such as those expressible in rifcore further with nonmonotonic rules integrating default negation as described in the riffld yields an even more expressive language"	rdf:object	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"rule"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"riffld yield"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"even more expressive language"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"nonmonotonic rule integrate default negation"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"rifcore"
s2	"rule such a those expressible in rifcore nonmonotonic rule integrate default negation a describe in the riffld yield an even more expressive language"	rdfs:member	"describe"
s2	"more expressive"	rdfs:subClassOf	"expressive"
s2	"nonmonotonic rule integrate default"	rdfs:member	"nonmonotonic rule integrate"
s2	"nonmonotonic rule integrate"	rdfs:subClassOf	"integrate"
s2	"nonmonotonic rule integrate"	rdfs:member	"nonmonotonic rule"
s2	"more expressive"	rdfs:member	"more"
s2	"even more expressive language"	rdfs:subClassOf	"language"
s2	"default negation"	rdfs:subClassOf	"negation"
s2	"rule integrate default negation"	rdfs:member	"rule integrate default"
s2	"even more expressive"	rdfs:subClassOf	"expressive"
s2	"riffld yield"	rdfs:member	"riffld"
s2	"rule integrate"	rdfs:subClassOf	"integrate"
s2	"rule integrate"	rdfs:member	"rule"
s2	"more expressive language"	rdfs:subClassOf	"language"
s2	"expressive language"	rdfs:member	"expressive"
s2	"even more expressive language"	rdfs:member	"even more expressive"
s2	"rule integrate default"	rdfs:subClassOf	"default"
s2	"integrate default negation"	rdfs:member	"integrate default"
s2	"nonmonotonic rule integrate default negation"	rdfs:member	"nonmonotonic rule integrate default"
s2	"even more"	rdfs:member	"even"
s2	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s2	"even more"	rdfs:subClassOf	"more"
s2	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s2	"nonmonotonic rule integrate default"	rdfs:subClassOf	"default"
s2	"integrate default"	rdfs:member	"integrate"
s2	"even more expressive"	rdfs:member	"even more"
s2	"rule integrate default"	rdfs:member	"rule integrate"
s2	"rule integrate default negation"	rdfs:subClassOf	"negation"
s2	"integrate default negation"	rdfs:subClassOf	"negation"
s2	"integrate default"	rdfs:subClassOf	"default"
s2	"more expressive language"	rdfs:member	"more expressive"
s2	"expressive language"	rdfs:subClassOf	"language"
s2	"nonmonotonic rule integrate default negation"	rdfs:subClassOf	"negation"
s2	"riffld yield"	rdfs:subClassOf	"yield"
s2	"default negation"	rdfs:member	"default"
s2	"rifcore nonmonotonic rule"	rdfs:subClassOf	"nonmonotonic rule"
s2	"such expressible"	rdfs:subClassOf	"expressible"
s2	"such expressible in rifcore nonmonotonic rule"	rdfs:member	"such expressible"
s2	"such expressible in rifcore nonmonotonic rule"	rdfs:member	"rifcore nonmonotonic rule"
s2	"describe in riffld yield"	rdfs:member	"describe"
s2	"describe in riffld yield"	rdfs:member	"riffld yield"
s1	"an even more expressive language that allows for exceptions"
s1	"an even more expressive language that allows for exceptions"	rdf:subject	"even more expressive language"
s1	"even more"	rdfs:member	"even"
s1	"more expressive"	rdfs:subClassOf	"expressive"
s1	"even more"	rdfs:subClassOf	"more"
s1	"more expressive language"	rdfs:subClassOf	"language"
s1	"more expressive language"	rdfs:member	"more expressive"
s1	"more expressive"	rdfs:member	"more"
s1	"expressive language"	rdfs:member	"expressive"
s1	"expressive language"	rdfs:subClassOf	"language"
s1	"even more expressive language"	rdfs:member	"even more expressive"
s1	"even more expressive language"	rdfs:subClassOf	"language"
s1	"even more expressive"	rdfs:member	"even more"
s1	"even more expressive"	rdfs:subClassOf	"expressive"
s1	"even more expressive"	rdfs:subClassOf	"more expressive"
s1	"an even more expressive language that allows for exceptions"	rdf:predicate	"allow"
