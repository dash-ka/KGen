As SPARQL endpoints are increasingly used to serve linked data SPARQL endpoints ability to scale becomes crucial
Although much work has been done to improve query evaluation little has been done to take advantage of caching
Effective solutions for caching query results can improve scalability by reducing network IO
Effective solutions for caching query results can improve scalability by reducing latency
Effective solutions for caching query results can improve scalability by reducing CPU overhead
We show that simple augmentation of the database indexes can directly lead to effective caching at the HTTP protocol level
the database indexes found in common SPARQL implementations
Using tests from the Berlin SPARQL benchmark We evaluate the potential of such caching to improve overall efficiency of SPARQL query evaluation