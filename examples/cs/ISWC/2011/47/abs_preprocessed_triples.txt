s7.2	"improve overall efficiency of sparql query evaluation"
s7.2	"improve overall efficiency of sparql query evaluation"	rdf:subject	"overall efficiency of sparql query evaluation"
s7.2	"overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7.2	"overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7.2	"overall efficiency"	rdfs:subClassOf	"efficiency"
s7.2	"sparql query"	rdfs:subClassOf	"query"
s7.2	"sparql query evaluation"	rdfs:member	"sparql query"
s7.2	"query evaluation"	rdfs:member	"query"
s7.2	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s7.2	"overall efficiency"	rdfs:member	"overall"
s7.2	"query evaluation"	rdfs:subClassOf	"evaluation"
s7.2	"sparql query"	rdfs:member	"sparql"
s7.2	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s7.2	"overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7.2	"overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7.2	"improve overall efficiency of sparql query evaluation"	rdf:predicate	"improve"
s7.1	"using tests from the berlin sparql benchmark we evaluate the potential of such caching to improve overall efficiency of sparql query evaluation"
s7.1	"using tests from the berlin sparql benchmark we evaluate the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:subject	"we"
s7.1	"using tests from the berlin sparql benchmark we evaluate the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:predicate	"evaluate"
s7.1	"using tests from the berlin sparql benchmark we evaluate the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:object	"potential of such cache to improve overall efficiency of sparql query evaluation"
s7.1	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7.1	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"such cache"
s7.1	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"potential"
s7.1	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7.1	"overall efficiency"	rdfs:subClassOf	"efficiency"
s7.1	"such cache"	rdfs:subClassOf	"cache"
s7.1	"sparql query"	rdfs:subClassOf	"query"
s7.1	"sparql query evaluation"	rdfs:member	"sparql query"
s7.1	"such cache"	rdfs:member	"such"
s7.1	"query evaluation"	rdfs:member	"query"
s7.1	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s7.1	"overall efficiency"	rdfs:member	"overall"
s7.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s7.1	"sparql query"	rdfs:member	"sparql"
s7.1	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s7.1	"potential of such cache"	rdfs:member	"potential"
s7.1	"potential of such cache"	rdfs:member	"such cache"
s7.1	"overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7.1	"overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7.1	"using tests from the berlin sparql benchmark we evaluate the potential of such caching to improve overall efficiency of sparql query evaluation"	local:AM-ADV	"use test from the berlin sparql benchmark"
s7.1	"use test from the berlin sparql benchmark"	rdfs:member	"use test"
s7.1	"use test from the berlin sparql benchmark"	rdfs:member	"berlin sparql benchmark"
s7.1	"berlin sparql"	rdfs:member	"berlin"
s7.1	"berlin sparql benchmark"	rdfs:subClassOf	"benchmark"
s7.1	"berlin sparql benchmark"	rdfs:member	"berlin sparql"
s7.1	"berlin sparql"	rdfs:subClassOf	"sparql"
s7.1	"sparql benchmark"	rdfs:member	"sparql"
s7.1	"use test"	rdfs:member	"use"
s7.1	"use test"	rdfs:subClassOf	"test"
s7.1	"sparql benchmark"	rdfs:subClassOf	"benchmark"
s7.1	"berlin sparql benchmark"	rdfs:subClassOf	"sparql benchmark"
s7.1	"use from berlin sparql benchmark"	rdfs:member	"use"
s7.1	"use from berlin sparql benchmark"	rdfs:member	"berlin sparql benchmark"
s7	"using tests from the berlin sparql benchmark we the potential of such caching to improve overall efficiency of sparql query evaluation"
s7	"using tests from the berlin sparql benchmark we the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:subject	"potential of such cache to improve overall efficiency of sparql query evaluation"
s7	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"such cache"
s7	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"potential"
s7	"potential of such cache to improve overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7	"overall efficiency"	rdfs:subClassOf	"efficiency"
s7	"such cache"	rdfs:subClassOf	"cache"
s7	"sparql query"	rdfs:subClassOf	"query"
s7	"sparql query evaluation"	rdfs:member	"sparql query"
s7	"such cache"	rdfs:member	"such"
s7	"query evaluation"	rdfs:member	"query"
s7	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s7	"overall efficiency"	rdfs:member	"overall"
s7	"query evaluation"	rdfs:subClassOf	"evaluation"
s7	"sparql query"	rdfs:member	"sparql"
s7	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s7	"potential of such cache"	rdfs:member	"potential"
s7	"potential of such cache"	rdfs:member	"such cache"
s7	"overall efficiency of sparql query evaluation"	rdfs:member	"overall efficiency"
s7	"overall efficiency of sparql query evaluation"	rdfs:member	"sparql query evaluation"
s7	"using tests from the berlin sparql benchmark we the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:predicate	"use"
s7	"using tests from the berlin sparql benchmark we the potential of such caching to improve overall efficiency of sparql query evaluation"	rdf:object	"test berlin sparql benchmark"
s7	"berlin sparql"	rdfs:member	"berlin"
s7	"test berlin sparql"	rdfs:member	"test berlin"
s7	"berlin sparql benchmark"	rdfs:subClassOf	"benchmark"
s7	"berlin sparql benchmark"	rdfs:member	"berlin sparql"
s7	"berlin sparql"	rdfs:subClassOf	"sparql"
s7	"test berlin"	rdfs:subClassOf	"berlin"
s7	"sparql benchmark"	rdfs:member	"sparql"
s7	"test berlin"	rdfs:member	"test"
s7	"test berlin sparql benchmark"	rdfs:subClassOf	"benchmark"
s7	"test berlin sparql"	rdfs:subClassOf	"sparql"
s7	"test berlin sparql benchmark"	rdfs:member	"test berlin sparql"
s7	"sparql benchmark"	rdfs:subClassOf	"benchmark"
s7	"berlin sparql benchmark"	rdfs:subClassOf	"sparql benchmark"
s7	"test berlin sparql benchmark"	rdfs:subClassOf	"berlin sparql benchmark"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:subject	"simple augmentation of the database index"
s6.1	"simple augmentation of the database index"	rdfs:member	"simple augmentation"
s6.1	"simple augmentation of the database index"	rdfs:member	"database index"
s6.1	"simple augmentation"	rdfs:member	"simple"
s6.1	"simple augmentation"	rdfs:subClassOf	"augmentation"
s6.1	"database index"	rdfs:subClassOf	"index"
s6.1	"database index"	rdfs:member	"database"
s6.1	"simple augmentation of database index"	rdfs:member	"simple augmentation"
s6.1	"simple augmentation of database index"	rdfs:member	"database index"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:predicate	"lead"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:object	"effective cache"
s6.1	"effective cache"	rdfs:subClassOf	"cache"
s6.1	"effective cache"	rdfs:member	"effective"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	local:AM-LOC	"http protocol level"
s6.1	"protocol level"	rdfs:subClassOf	"level"
s6.1	"http protocol"	rdfs:member	"http"
s6.1	"protocol level"	rdfs:member	"protocol"
s6.1	"http protocol level"	rdfs:subClassOf	"level"
s6.1	"http protocol"	rdfs:subClassOf	"protocol"
s6.1	"http protocol level"	rdfs:member	"http protocol"
s6.1	"http protocol level"	rdfs:subClassOf	"protocol level"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	local:AM-MNR	"directly"
s6.1	"simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	local:AM-MOD	"can"
s6	"we show that simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"
s6	"we show that simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:subject	"we"
s6	"we show that simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:predicate	"show"
s6	"we show that simple augmentation of the database indexes can directly lead to effective caching at the http protocol level"	rdf:object	"simple augmentation of the database index can directly lead to effective cache at the http protocol level"
s6	"simple augmentation of the database index can directly lead to effective cache at the http protocol level"	rdfs:member	"simple augmentation"
s6	"simple augmentation of the database index can directly lead to effective cache at the http protocol level"	rdfs:member	"database index"
s6	"simple augmentation of the database index can directly lead to effective cache at the http protocol level"	rdfs:member	"http protocol level"
s6	"simple augmentation of the database index can directly lead to effective cache at the http protocol level"	rdfs:member	"effective cache"
s6	"simple augmentation"	rdfs:member	"simple"
s6	"effective cache"	rdfs:subClassOf	"cache"
s6	"protocol level"	rdfs:subClassOf	"level"
s6	"database index"	rdfs:subClassOf	"index"
s6	"http protocol"	rdfs:member	"http"
s6	"protocol level"	rdfs:member	"protocol"
s6	"http protocol level"	rdfs:subClassOf	"level"
s6	"effective cache"	rdfs:member	"effective"
s6	"database index"	rdfs:member	"database"
s6	"simple augmentation"	rdfs:subClassOf	"augmentation"
s6	"http protocol"	rdfs:subClassOf	"protocol"
s6	"http protocol level"	rdfs:member	"http protocol"
s6	"http protocol level"	rdfs:subClassOf	"protocol level"
s6	"directly lead"	rdfs:subClassOf	"lead"
s6	"can directly lead"	rdfs:subClassOf	"directly lead"
s6	"simple augmentation of database index"	rdfs:member	"simple augmentation"
s6	"simple augmentation of database index"	rdfs:member	"database index"
s6	"can directly lead to effective cache"	rdfs:member	"can directly lead"
s6	"can directly lead to effective cache"	rdfs:member	"effective cache"
s6	"effective cache at http protocol level"	rdfs:member	"effective cache"
s6	"effective cache at http protocol level"	rdfs:member	"http protocol level"
s5	"the database indexes found in common sparql implementations"
s5	"the database indexes found in common sparql implementations"	rdf:subject	"database index"
s5	"database index"	rdfs:member	"database"
s5	"database index"	rdfs:subClassOf	"index"
s5	"the database indexes found in common sparql implementations"	rdf:predicate	"find"
s5	"the database indexes found in common sparql implementations"	local:AM-LOC	"common sparql implementation"
s5	"common sparql implementation"	rdfs:subClassOf	"implementation"
s5	"sparql implementation"	rdfs:member	"sparql"
s5	"common sparql implementation"	rdfs:member	"common sparql"
s5	"common sparql"	rdfs:subClassOf	"sparql"
s5	"common sparql"	rdfs:member	"common"
s5	"sparql implementation"	rdfs:subClassOf	"implementation"
s5	"common sparql implementation"	rdfs:subClassOf	"sparql implementation"
s4.1	"reducing network"
s4.1	"reducing network"	rdf:subject	"network"
s4.1	"reducing network"	rdf:predicate	"reduce"
s4	"effective solutions for caching query results can improve scalability by reducing network io"
s4	"effective solutions for caching query results can improve scalability by reducing network io"	rdf:subject	"effective solution for cache query result"
s4	"effective solution for cache query result"	rdfs:member	"effective solution"
s4	"effective solution for cache query result"	rdfs:member	"cache query result"
s4	"query result"	rdfs:subClassOf	"result"
s4	"cache query result"	rdfs:subClassOf	"result"
s4	"cache query"	rdfs:subClassOf	"query"
s4	"effective solution"	rdfs:member	"effective"
s4	"cache query"	rdfs:member	"cache"
s4	"effective solution"	rdfs:subClassOf	"solution"
s4	"query result"	rdfs:member	"query"
s4	"cache query result"	rdfs:member	"cache query"
s4	"effective solution for cache query"	rdfs:member	"effective solution"
s4	"effective solution for cache query"	rdfs:member	"cache query"
s4	"effective solutions for caching query results can improve scalability by reducing network io"	rdf:predicate	"improve"
s4	"effective solutions for caching query results can improve scalability by reducing network io"	rdf:object	"scalability"
s4	"effective solutions for caching query results can improve scalability by reducing network io"	local:AM-MNR	"reduce network io"
s4	"network io"	rdfs:subClassOf	"io"
s4	"network io"	rdfs:member	"network"
s4	"effective solutions for caching query results can improve scalability by reducing network io"	local:AM-MOD	"can"
s3.1	"effective solutions for caching query results reducing cpu"
s3.1	"effective solutions for caching query results reducing cpu"	rdf:subject	"effective solution for cache query result"
s3.1	"effective solution for cache query result"	rdfs:member	"effective solution"
s3.1	"effective solution for cache query result"	rdfs:member	"cache query result"
s3.1	"query result"	rdfs:subClassOf	"result"
s3.1	"cache query result"	rdfs:subClassOf	"result"
s3.1	"cache query"	rdfs:subClassOf	"query"
s3.1	"effective solution"	rdfs:member	"effective"
s3.1	"cache query"	rdfs:member	"cache"
s3.1	"effective solution"	rdfs:subClassOf	"solution"
s3.1	"query result"	rdfs:member	"query"
s3.1	"cache query result"	rdfs:member	"cache query"
s3.1	"effective solution for cache query"	rdfs:member	"effective solution"
s3.1	"effective solution for cache query"	rdfs:member	"cache query"
s3.1	"effective solutions for caching query results reducing cpu"	rdf:predicate	"reduce"
s3.1	"effective solutions for caching query results reducing cpu"	rdf:object	"cpu"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"	rdf:subject	"effective solution for cache query result"
s3	"effective solution for cache query result"	rdfs:member	"effective solution"
s3	"effective solution for cache query result"	rdfs:member	"cache query result"
s3	"query result"	rdfs:subClassOf	"result"
s3	"cache query result"	rdfs:subClassOf	"result"
s3	"cache query"	rdfs:subClassOf	"query"
s3	"effective solution"	rdfs:member	"effective"
s3	"cache query"	rdfs:member	"cache"
s3	"effective solution"	rdfs:subClassOf	"solution"
s3	"query result"	rdfs:member	"query"
s3	"cache query result"	rdfs:member	"cache query"
s3	"effective solution for cache query"	rdfs:member	"effective solution"
s3	"effective solution for cache query"	rdfs:member	"cache query"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"	rdf:predicate	"improve"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"	rdf:object	"scalability"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"	local:AM-MNR	"reduce cpu overhead"
s3	"cpu overhead"	rdfs:subClassOf	"overhead"
s3	"effective solutions for caching query results can improve scalability by reducing cpu overhead"	local:AM-MOD	"can"
s2.1	"effective solutions for caching query results reducing latency"
s2.1	"effective solutions for caching query results reducing latency"	rdf:subject	"effective solution for cache query result"
s2.1	"effective solution for cache query result"	rdfs:member	"effective solution"
s2.1	"effective solution for cache query result"	rdfs:member	"cache query result"
s2.1	"query result"	rdfs:subClassOf	"result"
s2.1	"cache query result"	rdfs:subClassOf	"result"
s2.1	"cache query"	rdfs:subClassOf	"query"
s2.1	"effective solution"	rdfs:member	"effective"
s2.1	"cache query"	rdfs:member	"cache"
s2.1	"effective solution"	rdfs:subClassOf	"solution"
s2.1	"query result"	rdfs:member	"query"
s2.1	"cache query result"	rdfs:member	"cache query"
s2.1	"effective solution for cache query"	rdfs:member	"effective solution"
s2.1	"effective solution for cache query"	rdfs:member	"cache query"
s2.1	"effective solutions for caching query results reducing latency"	rdf:predicate	"reduce"
s2.1	"effective solutions for caching query results reducing latency"	rdf:object	"latency"
s2	"effective solutions for caching query results can improve scalability by reducing latency"
s2	"effective solutions for caching query results can improve scalability by reducing latency"	rdf:subject	"effective solution for cache query result"
s2	"effective solution for cache query result"	rdfs:member	"effective solution"
s2	"effective solution for cache query result"	rdfs:member	"cache query result"
s2	"query result"	rdfs:subClassOf	"result"
s2	"cache query result"	rdfs:subClassOf	"result"
s2	"cache query"	rdfs:subClassOf	"query"
s2	"effective solution"	rdfs:member	"effective"
s2	"cache query"	rdfs:member	"cache"
s2	"effective solution"	rdfs:subClassOf	"solution"
s2	"query result"	rdfs:member	"query"
s2	"cache query result"	rdfs:member	"cache query"
s2	"effective solution for cache query"	rdfs:member	"effective solution"
s2	"effective solution for cache query"	rdfs:member	"cache query"
s2	"effective solutions for caching query results can improve scalability by reducing latency"	rdf:predicate	"improve"
s2	"effective solutions for caching query results can improve scalability by reducing latency"	rdf:object	"scalability"
s2	"effective solutions for caching query results can improve scalability by reducing latency"	local:AM-MNR	"reduce latency"
s2	"effective solutions for caching query results can improve scalability by reducing latency"	local:AM-MOD	"can"
s1.2	"take advantage of caching"
s1.2	"take advantage of caching"	rdf:subject	"advantage"
s1.2	"take advantage of caching"	rdf:predicate	"take"
s1.2	"take advantage of caching"	rdf:object	"cache"
s1.1	"much work improve query evaluation little"
s1.1	"much work improve query evaluation little"	rdf:subject	"much work"
s1.1	"much work"	rdfs:subClassOf	"work"
s1.1	"much work"	rdfs:member	"much"
s1.1	"much work improve query evaluation little"	rdf:predicate	"improve"
s1.1	"much work improve query evaluation little"	rdf:object	"query evaluation little"
s1.1	"little evaluation"	rdfs:subClassOf	"evaluation"
s1.1	"query little evaluation"	rdfs:subClassOf	"little evaluation"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"	rdf:predicate	"do"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"	local:AM-ADV	"although"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"	local:AM-ADV	"much much work work have be do"
s1	"much much work work"	rdfs:member	"much much work"
s1	"much much"	rdfs:member	"much"
s1	"much much work"	rdfs:member	"much much"
s1	"much work work"	rdfs:member	"much work"
s1	"much much work work"	rdfs:subClassOf	"work"
s1	"much much"	rdfs:subClassOf	"much"
s1	"much much work"	rdfs:subClassOf	"work"
s1	"work work"	rdfs:subClassOf	"work"
s1	"much work"	rdfs:member	"much"
s1	"much work work"	rdfs:subClassOf	"work"
s1	"work work"	rdfs:member	"work"
s1	"much work"	rdfs:subClassOf	"work"
s1	"be do"	rdfs:subClassOf	"do"
s1	"have be do"	rdfs:subClassOf	"be do"
s1	"much work work"	rdfs:subClassOf	"work work"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"	local:AM-ADV	"improve improve query query evaluation evaluation little little"
s1	"query evaluation evaluation"	rdfs:subClassOf	"evaluation"
s1	"query query"	rdfs:subClassOf	"query"
s1	"query query evaluation"	rdfs:member	"query query"
s1	"query query"	rdfs:member	"query"
s1	"query query evaluation"	rdfs:subClassOf	"evaluation"
s1	"query query evaluation evaluation"	rdfs:member	"query query evaluation"
s1	"evaluation evaluation"	rdfs:member	"evaluation"
s1	"query evaluation"	rdfs:member	"query"
s1	"query evaluation evaluation"	rdfs:member	"query evaluation"
s1	"query evaluation"	rdfs:subClassOf	"evaluation"
s1	"evaluation evaluation"	rdfs:subClassOf	"evaluation"
s1	"query query evaluation evaluation"	rdfs:subClassOf	"evaluation"
s1	"little improve"	rdfs:subClassOf	"improve"
s1	"little little"	rdfs:subClassOf	"little"
s1	"query evaluation evaluation"	rdfs:subClassOf	"evaluation evaluation"
s1	"query query evaluation evaluation"	rdfs:subClassOf	"query evaluation evaluation"
s1	"although much work has been done to improve query evaluation little done to take advantage of caching"	local:AM-PNC	"take advantage of cache"
s1	"take advantage of cache"	rdfs:member	"advantage"
s1	"take advantage of cache"	rdfs:member	"cache"
s1	"take of cache"	rdfs:member	"take"
s1	"take of cache"	rdfs:member	"cache"
s0.4	"data sparql endpoints ability to scale becomes crucial"
s0.4	"data sparql endpoints ability to scale becomes crucial"	rdf:subject	"data sparql endpoint ability to scale"
s0.4	"data sparql endpoint ability to scale"	rdfs:member	"ability"
s0.4	"data sparql endpoint ability to scale"	rdfs:member	"data sparql"
s0.4	"data sparql"	rdfs:member	"data"
s0.4	"data sparql"	rdfs:subClassOf	"sparql"
s0.4	"endpoint ability"	rdfs:subClassOf	"ability"
s0.4	"endpoint ability to scale"	rdfs:member	"endpoint ability"
s0.4	"endpoint ability to scale"	rdfs:member	"scale"
s0.4	"data sparql endpoints ability to scale becomes crucial"	rdf:predicate	"become"
s0.4	"data sparql endpoints ability to scale becomes crucial"	rdf:object	"crucial"
s0.3	"scale"
s0.3	"scale"	rdf:predicate	"scale"
s0.2	"linked data"
s0.2	"linked data"	rdf:subject	"data"
s0.2	"linked data"	rdf:predicate	"link"
s0.1	"sparql endpoints serve linked data sparql endpoints ability to scale"
s0.1	"sparql endpoints serve linked data sparql endpoints ability to scale"	rdf:subject	"sparql endpoint"
s0.1	"sparql endpoint"	rdfs:member	"sparql"
s0.1	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s0.1	"sparql endpoints serve linked data sparql endpoints ability to scale"	rdf:predicate	"serve"
s0.1	"sparql endpoints serve linked data sparql endpoints ability to scale"	rdf:object	"link data sparql endpoint ability to scale"
s0.1	"link data sparql endpoint ability to scale"	rdfs:member	"endpoint ability"
s0.1	"link data sparql endpoint ability to scale"	rdfs:member	"link data"
s0.1	"endpoint ability"	rdfs:member	"endpoint"
s0.1	"link data"	rdfs:subClassOf	"data"
s0.1	"link data"	rdfs:member	"link"
s0.1	"endpoint ability"	rdfs:subClassOf	"ability"
s0.1	"sparql endpoint ability"	rdfs:subClassOf	"endpoint ability"
s0.1	"data sparql endpoint ability"	rdfs:subClassOf	"sparql endpoint ability"
s0.1	"link data sparql endpoint ability"	rdfs:subClassOf	"data sparql endpoint ability"
s0.1	"link data sparql endpoint ability to scale"	rdfs:member	"link data sparql endpoint ability"
s0.1	"link data sparql endpoint ability to scale"	rdfs:member	"scale"
s0	"sparql endpoints increasingly used"
s0	"sparql endpoints increasingly used"	rdf:subject	"sparql endpoint"
s0	"sparql endpoint"	rdfs:member	"sparql"
s0	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s0	"sparql endpoints increasingly used"	rdf:predicate	"use"
s0	"sparql endpoints increasingly used"	local:AM-ADV	"increasingly"
