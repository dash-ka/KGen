s15.1	"we observed that anapsid speeds up execution time in some cases in more than one order of magnitude"
s15.1	"we observed that anapsid speeds up execution time in some cases in more than one order of magnitude"	rdf:subject	"we"
s15.1	"we observed that anapsid speeds up execution time in some cases in more than one order of magnitude"	rdf:predicate	"observe"
s15.1	"we observed that anapsid speeds up execution time in some cases in more than one order of magnitude"	rdf:object	"anapsid speed up execution time in some case in more than one order of magnitude"
s15.1	"anapsid speed up execution time in some case in more than one order of magnitude"	rdfs:member	"anapsid"
s15.1	"anapsid speed up execution time in some case in more than one order of magnitude"	rdfs:member	"magnitude"
s15.1	"anapsid speed up execution time in some case in more than one order of magnitude"	rdfs:member	"order"
s15.1	"anapsid speed up execution time in some case in more than one order of magnitude"	rdfs:member	"case"
s15.1	"anapsid speed up execution time in some case in more than one order of magnitude"	rdfs:member	"up execution time"
s15.1	"up execution"	rdfs:member	"up"
s15.1	"up execution time"	rdfs:subClassOf	"time"
s15.1	"execution time"	rdfs:member	"execution"
s15.1	"execution time"	rdfs:subClassOf	"time"
s15.1	"up execution time"	rdfs:member	"up execution"
s15.1	"up execution"	rdfs:subClassOf	"execution"
s15.1	"one order"	rdfs:subClassOf	"order"
s15.1	"more one"	rdfs:subClassOf	"one"
s15.1	"anapsid speed"	rdfs:subClassOf	"speed"
s15.1	"anapsid speed in case"	rdfs:member	"anapsid speed"
s15.1	"anapsid speed in case"	rdfs:member	"case"
s15.1	"case in one order"	rdfs:member	"case"
s15.1	"case in one order"	rdfs:member	"one order"
s15.1	"one order of magnitude"	rdfs:member	"one order"
s15.1	"one order of magnitude"	rdfs:member	"magnitude"
s15	"we compared anapsid performance with respect to rdf stores and endpoints"
s15	"we compared anapsid performance with respect to rdf stores and endpoints"	rdf:subject	"we"
s15	"we compared anapsid performance with respect to rdf stores and endpoints"	rdf:predicate	"compare"
s15	"we compared anapsid performance with respect to rdf stores and endpoints"	rdf:object	"anapsid performance respect to rdf store and endpoint"
s15	"anapsid performance respect to rdf store and endpoint"	rdfs:member	"endpoint"
s15	"anapsid performance respect to rdf store and endpoint"	rdfs:member	"anapsid performance respect"
s15	"anapsid performance respect to rdf store and endpoint"	rdfs:member	"store"
s15	"anapsid performance respect"	rdfs:member	"anapsid performance"
s15	"anapsid performance respect"	rdfs:subClassOf	"respect"
s15	"performance respect"	rdfs:member	"performance"
s15	"anapsid performance"	rdfs:member	"anapsid"
s15	"anapsid performance"	rdfs:subClassOf	"performance"
s15	"performance respect"	rdfs:subClassOf	"respect"
s15	"rdf store"	rdfs:subClassOf	"store"
s15	"anapsid performance respect"	rdfs:subClassOf	"performance respect"
s15	"anapsid performance respect to rdf store"	rdfs:member	"anapsid performance respect"
s15	"anapsid performance respect to rdf store"	rdfs:member	"rdf store"
s15	"anapsid performance respect to rdf store to endpoint"	rdfs:member	"anapsid performance respect to rdf store"
s15	"anapsid performance respect to rdf store to endpoint"	rdfs:member	"endpoint"
s14.3	"secondary memory avoiding duplicates"
s14.3	"secondary memory avoiding duplicates"	rdf:subject	"secondary memory"
s14.3	"secondary memory"	rdfs:member	"secondary"
s14.3	"secondary memory"	rdfs:subClassOf	"memory"
s14.3	"secondary memory avoiding duplicates"	rdf:predicate	"avoid"
s14.3	"secondary memory avoiding duplicates"	rdf:object	"duplicate"
s14.2	"previously computed matches"
s14.2	"previously computed matches"	rdf:subject	"match"
s14.2	"previously computed matches"	rdf:predicate	"compute"
s14.2	"previously computed matches"	local:AM-TMP	"previously"
s14.1	"anapsid operators move previously computed matches to secondary memory"
s14.1	"anapsid operators move previously computed matches to secondary memory"	rdf:subject	"anapsid operator"
s14.1	"anapsid operator"	rdfs:member	"anapsid"
s14.1	"anapsid operator"	rdfs:subClassOf	"operator"
s14.1	"anapsid operators move previously computed matches to secondary memory"	rdf:predicate	"move"
s14.1	"anapsid operators move previously computed matches to secondary memory"	rdf:object	"previously compute match secondary memory"
s14.1	"previously compute match secondary memory"	rdfs:member	"secondary memory"
s14.1	"previously compute match secondary memory"	rdfs:member	"previously compute match"
s14.1	"previously compute"	rdfs:member	"previously"
s14.1	"secondary memory"	rdfs:subClassOf	"memory"
s14.1	"compute match"	rdfs:subClassOf	"match"
s14.1	"previously compute match"	rdfs:member	"previously compute"
s14.1	"secondary memory"	rdfs:member	"secondary"
s14.1	"compute match"	rdfs:member	"compute"
s14.1	"previously compute match"	rdfs:subClassOf	"match"
s14.1	"previously compute"	rdfs:subClassOf	"compute"
s14.1	"match secondary memory"	rdfs:subClassOf	"secondary memory"
s14	"anapsid operators implement main memory replacement policies to move previously computed matches to secondary memory avoiding duplicates"
s14	"anapsid operators implement main memory replacement policies to move previously computed matches to secondary memory avoiding duplicates"	rdf:subject	"anapsid operator"
s14	"anapsid operator"	rdfs:member	"anapsid"
s14	"anapsid operator"	rdfs:subClassOf	"operator"
s14	"anapsid operators implement main memory replacement policies to move previously computed matches to secondary memory avoiding duplicates"	rdf:predicate	"implement"
s14	"anapsid operators implement main memory replacement policies to move previously computed matches to secondary memory avoiding duplicates"	rdf:object	"main memory replacement policy to move previously compute match to secondary memory avoid duplicate"
s14	"main memory replacement policy to move previously compute match to secondary memory avoid duplicate"	rdfs:member	"secondary memory avoid duplicate"
s14	"main memory replacement policy to move previously compute match to secondary memory avoid duplicate"	rdfs:member	"main memory replacement policy"
s14	"main memory replacement policy to move previously compute match to secondary memory avoid duplicate"	rdfs:member	"previously compute match"
s14	"avoid duplicate"	rdfs:member	"avoid"
s14	"compute match"	rdfs:member	"compute"
s14	"memory avoid duplicate"	rdfs:subClassOf	"duplicate"
s14	"main memory replacement"	rdfs:subClassOf	"replacement"
s14	"replacement policy"	rdfs:member	"replacement"
s14	"main memory"	rdfs:subClassOf	"memory"
s14	"previously compute match"	rdfs:subClassOf	"match"
s14	"avoid duplicate"	rdfs:subClassOf	"duplicate"
s14	"previously compute"	rdfs:subClassOf	"compute"
s14	"main memory replacement"	rdfs:member	"main memory"
s14	"secondary memory avoid duplicate"	rdfs:subClassOf	"duplicate"
s14	"compute match"	rdfs:subClassOf	"match"
s14	"replacement policy"	rdfs:subClassOf	"policy"
s14	"secondary memory avoid duplicate"	rdfs:member	"secondary memory avoid"
s14	"memory avoid"	rdfs:member	"memory"
s14	"main memory replacement policy"	rdfs:member	"main memory replacement"
s14	"memory avoid duplicate"	rdfs:member	"memory avoid"
s14	"memory replacement"	rdfs:subClassOf	"replacement"
s14	"memory replacement policy"	rdfs:member	"memory replacement"
s14	"memory replacement"	rdfs:member	"memory"
s14	"secondary memory avoid"	rdfs:member	"secondary memory"
s14	"previously compute match"	rdfs:member	"previously compute"
s14	"main memory replacement policy"	rdfs:subClassOf	"policy"
s14	"memory replacement policy"	rdfs:subClassOf	"policy"
s14	"previously compute"	rdfs:member	"previously"
s14	"secondary memory"	rdfs:subClassOf	"memory"
s14	"main memory"	rdfs:member	"main"
s14	"secondary memory"	rdfs:member	"secondary"
s14	"secondary memory avoid"	rdfs:subClassOf	"avoid"
s14	"memory avoid"	rdfs:subClassOf	"avoid"
s14	"memory replacement policy"	rdfs:subClassOf	"replacement policy"
s14	"main memory replacement policy"	rdfs:subClassOf	"memory replacement policy"
s14	"previously compute to secondary memory"	rdfs:member	"previously compute"
s14	"previously compute to secondary memory"	rdfs:member	"secondary memory"
s13.2	"physical sparql operators that detect when a source"
s13.2	"physical sparql operators that detect when a source"	rdf:subject	"physical sparql operator that detect when a source"
s13.2	"physical sparql operator that detect when a source"	rdfs:member	"source"
s13.2	"physical sparql operator that detect when a source"	rdfs:member	"physical sparql operator"
s13.2	"sparql operator"	rdfs:member	"sparql"
s13.2	"physical sparql operator"	rdfs:member	"physical sparql"
s13.2	"physical sparql operator"	rdfs:subClassOf	"operator"
s13.2	"sparql operator"	rdfs:subClassOf	"operator"
s13.2	"physical sparql"	rdfs:subClassOf	"sparql"
s13.2	"physical sparql"	rdfs:member	"physical"
s13.2	"when source"	rdfs:subClassOf	"source"
s13.2	"physical sparql operator"	rdfs:subClassOf	"sparql operator"
s13.2	"physical sparql operators that detect when a source"	rdf:predicate	"block"
s13.1	"when a source becomes"
s13.1	"when a source becomes"	rdf:subject	"source"
s13.1	"when a source becomes"	rdf:predicate	"become"
s13	"physical sparql operators that detect"
s13	"physical sparql operators that detect"	rdf:subject	"physical sparql operator"
s13	"sparql operator"	rdfs:member	"sparql"
s13	"physical sparql operator"	rdfs:member	"physical sparql"
s13	"physical sparql operator"	rdfs:subClassOf	"operator"
s13	"sparql operator"	rdfs:subClassOf	"operator"
s13	"physical sparql"	rdfs:subClassOf	"sparql"
s13	"physical sparql"	rdfs:member	"physical"
s13	"physical sparql operator"	rdfs:subClassOf	"sparql operator"
s13	"physical sparql operators that detect"	rdf:predicate	"detect"
s12	"physical sparql operators that detect when data traffic is bursty"
s12	"physical sparql operators that detect when data traffic is bursty"	rdf:subject	"physical sparql operator"
s12	"sparql operator"	rdfs:member	"sparql"
s12	"physical sparql operator"	rdfs:member	"physical sparql"
s12	"physical sparql operator"	rdfs:subClassOf	"operator"
s12	"sparql operator"	rdfs:subClassOf	"operator"
s12	"physical sparql"	rdfs:subClassOf	"sparql"
s12	"physical sparql"	rdfs:member	"physical"
s12	"physical sparql operator"	rdfs:subClassOf	"sparql operator"
s12	"physical sparql operators that detect when data traffic is bursty"	rdf:predicate	"detect"
s12	"physical sparql operators that detect when data traffic is bursty"	local:AM-TMP	"data traffic be bursty"
s12	"data traffic"	rdfs:subClassOf	"traffic"
s12	"data traffic"	rdfs:member	"data"
s11.1	"data arrives from the sources"
s11.1	"data arrives from the sources"	rdf:subject	"data"
s11.1	"data arrives from the sources"	rdf:predicate	"arrive"
s11.1	"data arrives from the sources"	rdf:object	"source"
s11	"opportunistically the operators produce results as quickly as data arrives from the sources"
s11	"opportunistically the operators produce results as quickly as data arrives from the sources"	rdf:subject	"opportunistically the operator"
s11	"opportunistically operator"	rdfs:subClassOf	"operator"
s11	"opportunistically the operators produce results as quickly as data arrives from the sources"	rdf:predicate	"produce"
s11	"opportunistically the operators produce results as quickly as data arrives from the sources"	rdf:object	"result"
s11	"opportunistically the operators produce results as quickly as data arrives from the sources"	local:AM-TMP	"quickly a data arrive from the source"
s11	"quickly a data arrive from the source"	rdfs:member	"data arrive"
s11	"quickly a data arrive from the source"	rdfs:member	"source"
s11	"data arrive"	rdfs:subClassOf	"arrive"
s11	"data arrive"	rdfs:member	"data"
s11	"quickly arrive"	rdfs:subClassOf	"arrive"
s11	"quickly arrive from source"	rdfs:member	"quickly arrive"
s11	"quickly arrive from source"	rdfs:member	"source"
s10	"anapsid provides physical sparql operators"
s10	"anapsid provides physical sparql operators"	rdf:subject	"anapsid"
s10	"anapsid provides physical sparql operators"	rdf:predicate	"provide"
s10	"anapsid provides physical sparql operators"	rdf:object	"physical sparql operator"
s10	"sparql operator"	rdfs:member	"sparql"
s10	"physical sparql operator"	rdfs:member	"physical sparql"
s10	"physical sparql operator"	rdfs:subClassOf	"operator"
s10	"sparql operator"	rdfs:subClassOf	"operator"
s10	"physical sparql"	rdfs:subClassOf	"sparql"
s10	"physical sparql"	rdfs:member	"physical"
s10	"physical sparql operator"	rdfs:subClassOf	"sparql operator"
s9	"we present anapsid"
s9	"we present anapsid"	rdf:subject	"we"
s9	"we present anapsid"	rdf:predicate	"present"
s9	"we present anapsid"	rdf:object	"anapsid"
s8	"we present an adaptive query engine for sparql endpoints"
s8	"we present an adaptive query engine for sparql endpoints"	rdf:subject	"we"
s8	"we present an adaptive query engine for sparql endpoints"	rdf:predicate	"present"
s8	"we present an adaptive query engine for sparql endpoints"	rdf:object	"adaptive query engine"
s8	"adaptive query"	rdfs:member	"adaptive"
s8	"adaptive query engine"	rdfs:member	"adaptive query"
s8	"query engine"	rdfs:member	"query"
s8	"adaptive query"	rdfs:subClassOf	"query"
s8	"adaptive query engine"	rdfs:subClassOf	"engine"
s8	"query engine"	rdfs:subClassOf	"engine"
s8	"adaptive query engine"	rdfs:subClassOf	"query engine"
s8	"we present an adaptive query engine for sparql endpoints"	local:AM-PNC	"sparql endpoint"
s8	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s8	"sparql endpoint"	rdfs:member	"sparql"
s7	"sparql endpoints that adapts query execution schedulers to runtime conditions"
s7	"sparql endpoints that adapts query execution schedulers to runtime conditions"	rdf:subject	"sparql endpoint"
s7	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s7	"sparql endpoint"	rdfs:member	"sparql"
s7	"sparql endpoints that adapts query execution schedulers to runtime conditions"	rdf:predicate	"adapt"
s7	"sparql endpoints that adapts query execution schedulers to runtime conditions"	rdf:object	"query execution scheduler runtime condition"
s7	"query execution scheduler runtime condition"	rdfs:member	"query execution scheduler"
s7	"query execution scheduler runtime condition"	rdfs:member	"runtime condition"
s7	"query execution"	rdfs:subClassOf	"execution"
s7	"query execution scheduler"	rdfs:subClassOf	"scheduler"
s7	"query execution"	rdfs:member	"query"
s7	"execution scheduler"	rdfs:member	"execution"
s7	"runtime condition"	rdfs:member	"runtime"
s7	"execution scheduler"	rdfs:subClassOf	"scheduler"
s7	"runtime condition"	rdfs:subClassOf	"condition"
s7	"query execution scheduler"	rdfs:member	"query execution"
s7	"scheduler runtime condition"	rdfs:subClassOf	"runtime condition"
s7	"execution scheduler runtime condition"	rdfs:subClassOf	"scheduler runtime condition"
s7	"query execution scheduler runtime condition"	rdfs:subClassOf	"execution scheduler runtime condition"
s6	"sparql endpoints that adapts query execution"
s6	"sparql endpoints that adapts query execution"	rdf:subject	"sparql endpoint"
s6	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s6	"sparql endpoint"	rdfs:member	"sparql"
s6	"sparql endpoints that adapts query execution"	rdf:predicate	"adapt"
s6	"sparql endpoints that adapts query execution"	rdf:object	"query execution"
s6	"query execution"	rdfs:member	"query"
s6	"query execution"	rdfs:subClassOf	"execution"
s5.5	"data sources sending data"
s5.5	"data sources sending data"	rdf:subject	"data source"
s5.5	"data source"	rdfs:subClassOf	"source"
s5.5	"data source"	rdfs:member	"data"
s5.5	"data sources sending data"	rdf:predicate	"send"
s5.5	"data sources sending data"	rdf:object	"data"
s5.4	"data sources stop sending data"
s5.4	"data sources stop sending data"	rdf:subject	"data source"
s5.4	"data source"	rdfs:subClassOf	"source"
s5.4	"data source"	rdfs:member	"data"
s5.4	"data sources stop sending data"	rdf:predicate	"stop"
s5.4	"data sources stop sending data"	rdf:object	"send data"
s5.4	"send data"	rdfs:subClassOf	"data"
s5.4	"send data"	rdfs:member	"send"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"	rdf:subject	"endpoint query engine"
s5.3	"endpoint query"	rdfs:member	"endpoint"
s5.3	"endpoint query"	rdfs:subClassOf	"query"
s5.3	"endpoint query engine"	rdfs:subClassOf	"engine"
s5.3	"query engine"	rdfs:member	"query"
s5.3	"endpoint query engine"	rdfs:member	"endpoint query"
s5.3	"query engine"	rdfs:subClassOf	"engine"
s5.3	"endpoint query engine"	rdfs:subClassOf	"query engine"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"	rdf:predicate	"block"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"	local:AM-ADV	"data source stop send data"
s5.3	"data source stop send data"	rdfs:member	"data source"
s5.3	"data source stop send data"	rdfs:member	"stop send data"
s5.3	"stop send"	rdfs:subClassOf	"send"
s5.3	"stop send"	rdfs:member	"stop"
s5.3	"stop send data"	rdfs:subClassOf	"data"
s5.3	"data source"	rdfs:member	"data"
s5.3	"send data"	rdfs:member	"send"
s5.3	"data source"	rdfs:subClassOf	"source"
s5.3	"send data"	rdfs:subClassOf	"data"
s5.3	"stop send data"	rdfs:member	"stop send"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"	local:AM-CAU	"second because block operator be usually implement"
s5.3	"block operator"	rdfs:member	"block"
s5.3	"block operator"	rdfs:subClassOf	"operator"
s5.3	"usually implement"	rdfs:subClassOf	"implement"
s5.3	"second usually implement"	rdfs:subClassOf	"usually implement"
s5.3	"second because blocking operators are usually implemented endpoint query engines may blocked if data sources stop sending data"	local:AM-MOD	"may"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	rdf:subject	"endpoint query engine"
s5.2	"endpoint query"	rdfs:member	"endpoint"
s5.2	"endpoint query"	rdfs:subClassOf	"query"
s5.2	"endpoint query engine"	rdfs:subClassOf	"engine"
s5.2	"query engine"	rdfs:member	"query"
s5.2	"endpoint query engine"	rdfs:member	"endpoint query"
s5.2	"query engine"	rdfs:subClassOf	"engine"
s5.2	"endpoint query engine"	rdfs:subClassOf	"query engine"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	rdf:predicate	"become"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	rdf:object	"block"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	local:AM-ADV	"data source stop send data"
s5.2	"data source stop send data"	rdfs:member	"data source"
s5.2	"data source stop send data"	rdfs:member	"stop send data"
s5.2	"stop send"	rdfs:subClassOf	"send"
s5.2	"stop send"	rdfs:member	"stop"
s5.2	"stop send data"	rdfs:subClassOf	"data"
s5.2	"data source"	rdfs:member	"data"
s5.2	"send data"	rdfs:member	"send"
s5.2	"data source"	rdfs:subClassOf	"source"
s5.2	"send data"	rdfs:subClassOf	"data"
s5.2	"stop send data"	rdfs:member	"stop send"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	local:AM-CAU	"second because block operator be usually implement"
s5.2	"block operator"	rdfs:member	"block"
s5.2	"block operator"	rdfs:subClassOf	"operator"
s5.2	"usually implement"	rdfs:subClassOf	"implement"
s5.2	"second usually implement"	rdfs:subClassOf	"usually implement"
s5.2	"second because blocking operators are usually implemented endpoint query engines may become blocked if data sources stop sending data"	local:AM-MOD	"may"
s5.1	"blocking operators usually implemented endpoint query engines"
s5.1	"blocking operators usually implemented endpoint query engines"	rdf:subject	"block operator"
s5.1	"block operator"	rdfs:member	"block"
s5.1	"block operator"	rdfs:subClassOf	"operator"
s5.1	"blocking operators usually implemented endpoint query engines"	rdf:predicate	"implement"
s5.1	"blocking operators usually implemented endpoint query engines"	rdf:object	"endpoint query engine"
s5.1	"endpoint query"	rdfs:member	"endpoint"
s5.1	"endpoint query"	rdfs:subClassOf	"query"
s5.1	"endpoint query engine"	rdfs:subClassOf	"engine"
s5.1	"query engine"	rdfs:member	"query"
s5.1	"endpoint query engine"	rdfs:member	"endpoint query"
s5.1	"query engine"	rdfs:subClassOf	"engine"
s5.1	"endpoint query engine"	rdfs:subClassOf	"query engine"
s5.1	"blocking operators usually implemented endpoint query engines"	local:AM-TMP	"usually"
s5	"blocking operators"
s5	"blocking operators"	rdf:subject	"operator"
s5	"blocking operators"	rdf:predicate	"block"
s4.2	"blocking operators endpoint query engines incrementally produce results"
s4.2	"blocking operators endpoint query engines incrementally produce results"	rdf:subject	"endpoint query engine"
s4.2	"endpoint query"	rdfs:member	"endpoint"
s4.2	"endpoint query"	rdfs:subClassOf	"query"
s4.2	"endpoint query engine"	rdfs:subClassOf	"engine"
s4.2	"query engine"	rdfs:member	"query"
s4.2	"endpoint query engine"	rdfs:member	"endpoint query"
s4.2	"query engine"	rdfs:subClassOf	"engine"
s4.2	"endpoint query engine"	rdfs:subClassOf	"query engine"
s4.2	"blocking operators endpoint query engines incrementally produce results"	rdf:predicate	"produce"
s4.2	"blocking operators endpoint query engines incrementally produce results"	rdf:object	"result"
s4.2	"blocking operators endpoint query engines incrementally produce results"	local:AM-MNR	"incrementally"
s4.1	"blocking operators usually implemented endpoint query engines"
s4.1	"blocking operators usually implemented endpoint query engines"	rdf:subject	"block operator"
s4.1	"block operator"	rdfs:member	"block"
s4.1	"block operator"	rdfs:subClassOf	"operator"
s4.1	"blocking operators usually implemented endpoint query engines"	rdf:predicate	"implement"
s4.1	"blocking operators usually implemented endpoint query engines"	rdf:object	"endpoint query engine"
s4.1	"endpoint query"	rdfs:member	"endpoint"
s4.1	"endpoint query"	rdfs:subClassOf	"query"
s4.1	"endpoint query engine"	rdfs:subClassOf	"engine"
s4.1	"query engine"	rdfs:member	"query"
s4.1	"endpoint query engine"	rdfs:member	"endpoint query"
s4.1	"query engine"	rdfs:subClassOf	"engine"
s4.1	"endpoint query engine"	rdfs:subClassOf	"query engine"
s4.1	"blocking operators usually implemented endpoint query engines"	local:AM-TMP	"usually"
s4	"blocking operators"
s4	"blocking operators"	rdf:subject	"operator"
s4	"blocking operators"	rdf:predicate	"block"
s3	"first fixed plans may timeout as a consequence of endpoint availability"
s3	"first fixed plans may timeout as a consequence of endpoint availability"	rdf:subject	"first fix plan"
s3	"first fix plan"	rdfs:subClassOf	"plan"
s3	"fix plan"	rdfs:member	"fix"
s3	"fix plan"	rdfs:subClassOf	"plan"
s3	"first fix"	rdfs:subClassOf	"fix"
s3	"first fix plan"	rdfs:member	"first fix"
s3	"first fix"	rdfs:member	"first"
s3	"first fixed plans may timeout as a consequence of endpoint availability"	rdf:predicate	"timeout"
s3	"first fixed plans may timeout as a consequence of endpoint availability"	rdf:object	"consequence of endpoint availability"
s3	"consequence of endpoint availability"	rdfs:member	"consequence"
s3	"consequence of endpoint availability"	rdfs:member	"endpoint availability"
s3	"endpoint availability"	rdfs:member	"endpoint"
s3	"endpoint availability"	rdfs:subClassOf	"availability"
s3	"consequence of endpoint availability"	rdfs:member	"consequence"
s3	"consequence of endpoint availability"	rdfs:member	"endpoint availability"
s3	"first fixed plans may timeout as a consequence of endpoint availability"	local:AM-MOD	"may"
s2.1	"following the traditional optimizethenexecute paradigm"
s2.1	"following the traditional optimizethenexecute paradigm"	rdf:predicate	"follow"
s2.1	"following the traditional optimizethenexecute paradigm"	rdf:object	"traditional optimizethenexecute paradigm"
s2.1	"traditional optimizethenexecute paradigm"	rdfs:member	"traditional optimizethenexecute"
s2.1	"traditional optimizethenexecute paradigm"	rdfs:subClassOf	"paradigm"
s2.1	"optimizethenexecute paradigm"	rdfs:member	"optimizethenexecute"
s2.1	"traditional optimizethenexecute"	rdfs:subClassOf	"optimizethenexecute"
s2.1	"optimizethenexecute paradigm"	rdfs:subClassOf	"paradigm"
s2.1	"traditional optimizethenexecute"	rdfs:member	"traditional"
s2.1	"traditional optimizethenexecute paradigm"	rdfs:subClassOf	"optimizethenexecute paradigm"
s2	"fixed plans identified following the traditional optimizethenexecute paradigm"
s2	"fixed plans identified following the traditional optimizethenexecute paradigm"	rdf:subject	"fix plan"
s2	"fix plan"	rdfs:subClassOf	"plan"
s2	"fix plan"	rdfs:member	"fix"
s2	"fixed plans identified following the traditional optimizethenexecute paradigm"	rdf:predicate	"identify"
s2	"fixed plans identified following the traditional optimizethenexecute paradigm"	local:AM-TMP	"follow the traditional optimizethenexecute paradigm"
s2	"traditional optimizethenexecute paradigm"	rdfs:member	"traditional optimizethenexecute"
s2	"traditional optimizethenexecute paradigm"	rdfs:subClassOf	"paradigm"
s2	"optimizethenexecute paradigm"	rdfs:member	"optimizethenexecute"
s2	"traditional optimizethenexecute"	rdfs:subClassOf	"optimizethenexecute"
s2	"optimizethenexecute paradigm"	rdfs:subClassOf	"paradigm"
s2	"traditional optimizethenexecute"	rdfs:member	"traditional"
s2	"traditional optimizethenexecute paradigm"	rdfs:subClassOf	"optimizethenexecute paradigm"
s1	"available sparql endpoints that support remote query processing"
s1	"available sparql endpoints that support remote query processing"	rdf:subject	"available sparql endpoint"
s1	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s1	"available sparql endpoint"	rdfs:subClassOf	"endpoint"
s1	"available sparql"	rdfs:subClassOf	"sparql"
s1	"available sparql"	rdfs:member	"available"
s1	"available sparql endpoint"	rdfs:member	"available sparql"
s1	"sparql endpoint"	rdfs:member	"sparql"
s1	"available sparql endpoint"	rdfs:subClassOf	"sparql endpoint"
s1	"available sparql endpoints that support remote query processing"	rdf:predicate	"support"
s1	"available sparql endpoints that support remote query processing"	rdf:object	"remote query process"
s1	"remote query process"	rdfs:member	"remote query"
s1	"query process"	rdfs:member	"query"
s1	"remote query"	rdfs:subClassOf	"query"
s1	"remote query"	rdfs:member	"remote"
s1	"query process"	rdfs:subClassOf	"process"
s1	"remote query process"	rdfs:subClassOf	"process"
s1	"remote query process"	rdfs:subClassOf	"query process"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	rdf:subject	"number of available sparql endpoint"
s0.2	"number of available sparql endpoint"	rdfs:member	"available sparql endpoint"
s0.2	"number of available sparql endpoint"	rdfs:member	"number"
s0.2	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s0.2	"available sparql endpoint"	rdfs:subClassOf	"endpoint"
s0.2	"available sparql"	rdfs:subClassOf	"sparql"
s0.2	"available sparql"	rdfs:member	"available"
s0.2	"available sparql endpoint"	rdfs:member	"available sparql"
s0.2	"sparql endpoint"	rdfs:member	"sparql"
s0.2	"available sparql endpoint"	rdfs:subClassOf	"sparql endpoint"
s0.2	"number of available sparql endpoint"	rdfs:member	"number"
s0.2	"number of available sparql endpoint"	rdfs:member	"available sparql endpoint"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	rdf:predicate	"grow"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	local:AM-CAU	"lack of adaptivity query execution"
s0.2	"lack of adaptivity query execution"	rdfs:member	"adaptivity query execution"
s0.2	"lack of adaptivity query execution"	rdfs:member	"lack"
s0.2	"adaptivity query execution"	rdfs:member	"adaptivity query"
s0.2	"query execution"	rdfs:subClassOf	"execution"
s0.2	"query execution"	rdfs:member	"query"
s0.2	"adaptivity query"	rdfs:subClassOf	"query"
s0.2	"adaptivity query"	rdfs:member	"adaptivity"
s0.2	"adaptivity query execution"	rdfs:subClassOf	"execution"
s0.2	"adaptivity query execution"	rdfs:subClassOf	"query execution"
s0.2	"lack of adaptivity query execution"	rdfs:member	"lack"
s0.2	"lack of adaptivity query execution"	rdfs:member	"adaptivity query execution"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	local:AM-DIS	"however"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	local:AM-MNR	"quickly"
s0.2	"following the design rules of linked data the number of available sparql endpoints quickly growing however because of the lack of adaptivity query executions"	local:AM-TMP	"follow the design rule of link data"
s0.2	"follow the design rule of link data"	rdfs:member	"link data"
s0.2	"follow the design rule of link data"	rdfs:member	"design rule"
s0.2	"design rule"	rdfs:subClassOf	"rule"
s0.2	"design rule"	rdfs:member	"design"
s0.2	"link data"	rdfs:member	"link"
s0.2	"link data"	rdfs:subClassOf	"data"
s0.2	"design rule of link data"	rdfs:member	"design rule"
s0.2	"design rule of link data"	rdfs:member	"link data"
s0.1	"linked data"
s0.1	"linked data"	rdf:subject	"data"
s0.1	"linked data"	rdf:predicate	"link"
s0	"following the design rules of linked data the number of available sparql endpoints"
s0	"following the design rules of linked data the number of available sparql endpoints"	rdf:predicate	"follow"
s0	"following the design rules of linked data the number of available sparql endpoints"	rdf:object	"design rule of link data the number of available sparql endpoint"
s0	"design rule of link data the number of available sparql endpoint"	rdfs:member	"link data"
s0	"design rule of link data the number of available sparql endpoint"	rdfs:member	"available sparql endpoint"
s0	"design rule of link data the number of available sparql endpoint"	rdfs:member	"design rule"
s0	"design rule of link data the number of available sparql endpoint"	rdfs:member	"number"
s0	"sparql endpoint"	rdfs:subClassOf	"endpoint"
s0	"available sparql endpoint"	rdfs:subClassOf	"endpoint"
s0	"link data"	rdfs:subClassOf	"data"
s0	"available sparql"	rdfs:subClassOf	"sparql"
s0	"link data"	rdfs:member	"link"
s0	"available sparql"	rdfs:member	"available"
s0	"design rule"	rdfs:subClassOf	"rule"
s0	"available sparql endpoint"	rdfs:member	"available sparql"
s0	"design rule"	rdfs:member	"design"
s0	"sparql endpoint"	rdfs:member	"sparql"
s0	"available sparql endpoint"	rdfs:subClassOf	"sparql endpoint"
s0	"design rule of link data"	rdfs:member	"design rule"
s0	"design rule of link data"	rdfs:member	"link data"
s0	"number of available sparql endpoint"	rdfs:member	"number"
s0	"number of available sparql endpoint"	rdfs:member	"available sparql endpoint"
