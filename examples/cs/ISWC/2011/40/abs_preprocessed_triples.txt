s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"
s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:subject	"Surprisingly low precision filtering mechanism"
s15	"low precision"	rdfs:member	"low"
s15	"surprisingly low precision filtering"	rdfs:subClassOf	"filtering"
s15	"surprisingly low"	rdfs:subClassOf	"low"
s15	"filtering mechanism"	rdfs:subClassOf	"mechanism"
s15	"low precision"	rdfs:subClassOf	"precision"
s15	"precision filtering"	rdfs:subClassOf	"filtering"
s15	"surprisingly low precision filtering mechanism"	rdfs:subClassOf	"mechanism"
s15	"surprisingly low"	rdfs:member	"surprisingly"
s15	"low precision filtering mechanism"	rdfs:subClassOf	"mechanism"
s15	"surprisingly low precision filtering"	rdfs:member	"surprisingly low precision"
s15	"low precision filtering"	rdfs:member	"low precision"
s15	"precision filtering mechanism"	rdfs:subClassOf	"mechanism"
s15	"precision filtering"	rdfs:member	"precision"
s15	"precision filtering mechanism"	rdfs:member	"precision filtering"
s15	"surprisingly low precision filtering mechanism"	rdfs:member	"surprisingly low precision filtering"
s15	"filtering mechanism"	rdfs:member	"filtering"
s15	"surprisingly low precision"	rdfs:subClassOf	"precision"
s15	"low precision filtering"	rdfs:subClassOf	"filtering"
s15	"low precision filtering mechanism"	rdfs:member	"low precision filtering"
s15	"surprisingly low precision"	rdfs:member	"surprisingly low"
s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:predicate	"lead"
s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:object	"higher Fscores"
s15	"higher fscores"	rdfs:subClassOf	"fscores"
s15	"higher fscores"	rdfs:member	"higher"
s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	local:AM-LOC	"overall system"
s15	"overall system"	rdfs:subClassOf	"system"
s15	"overall system"	rdfs:member	"overall"
s15	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	local:AM-TMP	"frequently"
s14	"surprisingly this high recall leads to higher fscores in the overall system"
s14	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:subject	"high recall"
s14	"high recall"	rdfs:member	"high"
s14	"high recall"	rdfs:subClassOf	"recall"
s14	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:predicate	"lead"
s14	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:object	"higher Fscores"
s14	"higher fscores"	rdfs:subClassOf	"fscores"
s14	"higher fscores"	rdfs:member	"higher"
s14	"surprisingly this high recall leads to higher fscores in the overall system"	local:AM-ADV	"Surprisingly"
s14	"surprisingly this high recall leads to higher fscores in the overall system"	local:AM-LOC	"overall system"
s14	"overall system"	rdfs:subClassOf	"system"
s14	"overall system"	rdfs:member	"overall"
s13.2	"applying"
s13.2	"applying"	rdf:predicate	"apply"
s13.1	"the entire entity coreference process scales well by applying we technique"
s13.1	"the entire entity coreference process scales well by applying we technique"	rdf:subject	"entire entity coreference process"
s13.1	"entire entity coreference"	rdfs:member	"entire entity"
s13.1	"entity coreference process"	rdfs:subClassOf	"process"
s13.1	"entity coreference"	rdfs:member	"entity"
s13.1	"entire entity"	rdfs:subClassOf	"entity"
s13.1	"entire entity coreference"	rdfs:subClassOf	"coreference"
s13.1	"coreference process"	rdfs:subClassOf	"process"
s13.1	"entire entity coreference process"	rdfs:subClassOf	"process"
s13.1	"entire entity"	rdfs:member	"entire"
s13.1	"entire entity coreference process"	rdfs:member	"entire entity coreference"
s13.1	"entity coreference"	rdfs:subClassOf	"coreference"
s13.1	"coreference process"	rdfs:member	"coreference"
s13.1	"entity coreference process"	rdfs:member	"entity coreference"
s13.1	"entity coreference process"	rdfs:subClassOf	"coreference process"
s13.1	"entire entity coreference process"	rdfs:subClassOf	"entity coreference process"
s13.1	"the entire entity coreference process scales well by applying we technique"	rdf:predicate	"scale"
s13.1	"the entire entity coreference process scales well by applying we technique"	local:AM-MNR	"well"
s13.1	"the entire entity coreference process scales well by applying we technique"	local:AM-MNR	"applying We technique"
s13	"we show that the entire entity coreference process scales well by applying we technique"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:subject	"We"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:predicate	"show"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:object	"entire entity coreference process scales well by applying We technique"
s13	"entire entity"	rdfs:member	"entire"
s13	"entity coreference"	rdfs:subClassOf	"coreference"
s13	"coreference process scales"	rdfs:subClassOf	"scales"
s13	"process scales"	rdfs:subClassOf	"scales"
s13	"entity coreference process"	rdfs:subClassOf	"process"
s13	"entire entity"	rdfs:subClassOf	"entity"
s13	"entire entity coreference"	rdfs:subClassOf	"coreference"
s13	"coreference process scales"	rdfs:member	"coreference process"
s13	"entity coreference process scales"	rdfs:member	"entity coreference process"
s13	"process scales"	rdfs:member	"process"
s13	"entire entity coreference"	rdfs:member	"entire entity"
s13	"entity coreference"	rdfs:member	"entity"
s13	"coreference process"	rdfs:subClassOf	"process"
s13	"entire entity coreference process"	rdfs:subClassOf	"process"
s13	"entity coreference process scales"	rdfs:subClassOf	"scales"
s13	"entity coreference process"	rdfs:member	"entity coreference"
s13	"entire entity coreference process scales"	rdfs:member	"entire entity coreference process"
s13	"entire entity coreference process scales"	rdfs:subClassOf	"scales"
s13	"entire entity coreference process"	rdfs:member	"entire entity coreference"
s13	"coreference process"	rdfs:member	"coreference"
s13	"well applying"	rdfs:subClassOf	"applying"
s13	"coreference process scales"	rdfs:subClassOf	"process scales"
s13	"entity coreference process scales"	rdfs:subClassOf	"coreference process scales"
s13	"entire entity coreference process scales"	rdfs:subClassOf	"entity coreference process scales"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:subject	"We"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:predicate	"process"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:object	"1 million instances"
s12.3	"million instances"	rdfs:subClassOf	"instances"
s12.3	"1 million"	rdfs:subClassOf	"million"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	local:AM-LOC	"one hour on a single Sun Workstation"
s12.3	"one hour on a single sun workstation"	rdfs:member	"hour"
s12.3	"one hour on a single sun workstation"	rdfs:member	"single sun workstation"
s12.3	"single sun workstation"	rdfs:member	"single sun"
s12.3	"single sun"	rdfs:subClassOf	"sun"
s12.3	"sun workstation"	rdfs:subClassOf	"workstation"
s12.3	"single sun workstation"	rdfs:subClassOf	"workstation"
s12.3	"sun workstation"	rdfs:member	"sun"
s12.3	"single sun"	rdfs:member	"single"
s12.3	"single sun workstation"	rdfs:subClassOf	"sun workstation"
s12.3	"one hour"	rdfs:subClassOf	"hour"
s12.3	"one hour on single sun workstation"	rdfs:member	"one hour"
s12.3	"one hour on single sun workstation"	rdfs:member	"single sun workstation"
s12.2	"we algorithm frequently outperforms alternatives"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:subject	"algorithm"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:predicate	"outperform"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:object	"alternatives"
s12.2	"we algorithm frequently outperforms alternatives"	local:AM-TMP	"frequently"
s12.1	"we algorithm frequently"
s12.1	"we algorithm frequently"	rdf:subject	"We"
s12.1	"we algorithm frequently"	rdf:predicate	"algorithm"
s12.1	"we algorithm frequently"	local:AM-TMP	"frequently"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:subject	"We"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:predicate	"show"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:object	"algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single Sun Workstation"
s12	"algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdfs:member	"hour"
s12	"algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdfs:member	"single sun workstation"
s12	"algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdfs:member	"alternatives"
s12	"algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdfs:member	"instances"
s12	"single sun workstation"	rdfs:member	"single sun"
s12	"single sun"	rdfs:subClassOf	"sun"
s12	"sun workstation"	rdfs:subClassOf	"workstation"
s12	"single sun workstation"	rdfs:subClassOf	"workstation"
s12	"sun workstation"	rdfs:member	"sun"
s12	"single sun"	rdfs:member	"single"
s12	"single sun workstation"	rdfs:subClassOf	"sun workstation"
s12	"one hour"	rdfs:subClassOf	"hour"
s12	"million instances"	rdfs:subClassOf	"instances"
s12	"1 million"	rdfs:subClassOf	"million"
s12	"frequently outperforms"	rdfs:subClassOf	"outperforms"
s12	"million instances under one hour"	rdfs:member	"million instances"
s12	"million instances under one hour"	rdfs:member	"one hour"
s12	"process on single sun workstation"	rdfs:member	"process"
s12	"process on single sun workstation"	rdfs:member	"single sun workstation"
s11.1	"the traditional metrics propose additional metrics"
s11.1	"the traditional metrics propose additional metrics"	rdf:subject	"traditional metrics"
s11.1	"traditional metrics"	rdfs:subClassOf	"metrics"
s11.1	"traditional metrics"	rdfs:member	"traditional"
s11.1	"the traditional metrics propose additional metrics"	rdf:predicate	"propose"
s11.1	"the traditional metrics propose additional metrics"	rdf:object	"additional metrics"
s11.1	"additional metrics"	rdfs:member	"additional"
s11.1	"additional metrics"	rdfs:subClassOf	"metrics"
s11	"we show that the traditional metrics propose additional metrics"
s11	"we show that the traditional metrics propose additional metrics"	rdf:subject	"We"
s11	"we show that the traditional metrics propose additional metrics"	rdf:predicate	"show"
s11	"we show that the traditional metrics propose additional metrics"	rdf:object	"traditional metrics propose additional metrics"
s11	"traditional metrics propose additional metrics"	rdfs:member	"traditional metrics"
s11	"traditional metrics propose additional metrics"	rdfs:member	"additional metrics"
s11	"traditional metrics"	rdfs:subClassOf	"metrics"
s11	"traditional metrics"	rdfs:member	"traditional"
s11	"additional metrics"	rdfs:member	"additional"
s11	"additional metrics"	rdfs:subClassOf	"metrics"
s11	"traditional additional metrics"	rdfs:subClassOf	"additional metrics"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:subject	"relative benefits of candidate selection"
s10.1	"relative benefits of candidate selection"	rdfs:member	"relative benefits"
s10.1	"relative benefits of candidate selection"	rdfs:member	"candidate selection"
s10.1	"relative benefits"	rdfs:member	"relative"
s10.1	"candidate selection"	rdfs:member	"candidate"
s10.1	"relative benefits"	rdfs:subClassOf	"benefits"
s10.1	"candidate selection"	rdfs:subClassOf	"selection"
s10.1	"relative benefits of candidate selection"	rdfs:member	"relative benefits"
s10.1	"relative benefits of candidate selection"	rdfs:member	"candidate selection"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:predicate	"not reflect"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:object	"traditional metrics"
s10.1	"traditional metrics"	rdfs:subClassOf	"metrics"
s10.1	"traditional metrics"	rdfs:member	"traditional"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	local:AM-MNR	"accurately"
s10.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	local:AM-TMP	"always"
s10	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"
s10	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:subject	"We"
s10	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:predicate	"show"
s10	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:object	"traditional metrics do not always accurately reflect the relative benefits of candidate selection"
s10	"traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdfs:member	"relative benefits"
s10	"traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdfs:member	"candidate selection"
s10	"traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdfs:member	"traditional metrics"
s10	"relative benefits"	rdfs:member	"relative"
s10	"traditional metrics"	rdfs:subClassOf	"metrics"
s10	"traditional metrics"	rdfs:member	"traditional"
s10	"candidate selection"	rdfs:member	"candidate"
s10	"relative benefits"	rdfs:subClassOf	"benefits"
s10	"candidate selection"	rdfs:subClassOf	"selection"
s10	"accurately reflect"	rdfs:subClassOf	"reflect"
s10	"always accurately reflect"	rdfs:subClassOf	"accurately reflect"
s10	"not always accurately reflect"	rdfs:subClassOf	"always accurately reflect"
s10	"do not always accurately reflect"	rdfs:subClassOf	"not always accurately reflect"
s10	"relative benefits of candidate selection"	rdfs:member	"relative benefits"
s10	"relative benefits of candidate selection"	rdfs:member	"candidate selection"
s8.1	"we approach on three"
s8.1	"we approach on three"	rdf:subject	"We"
s8.1	"we approach on three"	rdf:predicate	"approach"
s8.1	"we approach on three"	rdf:object	"three"
s8	"we evaluate we approach on three"
s8	"we evaluate we approach on three"	rdf:subject	"We"
s8	"we evaluate we approach on three"	rdf:predicate	"evaluate"
s8	"we evaluate we approach on three"	rdf:object	"approach on three"
s8	"approach on three"	rdfs:member	"approach"
s8	"approach on three"	rdfs:member	"three"
s7.1	"we approach on two rdf"
s7.1	"we approach on two rdf"	rdf:subject	"We"
s7.1	"we approach on two rdf"	rdf:predicate	"approach"
s7.1	"we approach on two rdf"	rdf:object	"two RDF"
s7.1	"two rdf"	rdfs:subClassOf	"rdf"
s7	"we evaluate we approach on two rdf"
s7	"we evaluate we approach on two rdf"	rdf:subject	"We"
s7	"we evaluate we approach on two rdf"	rdf:predicate	"evaluate"
s7	"we evaluate we approach on two rdf"	rdf:object	"approach on two RDF"
s7	"approach on two rdf"	rdfs:member	"approach"
s7	"approach on two rdf"	rdfs:member	"rdf"
s7	"two rdf"	rdfs:subClassOf	"rdf"
s7	"approach on two rdf"	rdfs:member	"approach"
s7	"approach on two rdf"	rdfs:member	"two rdf"
s6.2	"we efficiently look up similar instances"
s6.2	"we efficiently look up similar instances"	rdf:subject	"We"
s6.2	"we efficiently look up similar instances"	rdf:predicate	"look"
s6.2	"we efficiently look up similar instances"	rdf:object	"similar instances"
s6.2	"similar instances"	rdfs:member	"similar"
s6.2	"similar instances"	rdfs:subClassOf	"instances"
s6.2	"we efficiently look up similar instances"	local:AM-MNR	"efficiently"
s6.1	"chosen predicates"
s6.1	"chosen predicates"	rdf:subject	"predicates"
s6.1	"chosen predicates"	rdf:predicate	"choose"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:subject	"We"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:predicate	"index"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:object	"instances chosen predicates literal values to efficiently look up similar instances"
s6	"instances chosen predicates literal values to efficiently look up similar instances"	rdfs:member	"literal values"
s6	"instances chosen predicates literal values to efficiently look up similar instances"	rdfs:member	"up similar instances"
s6	"instances chosen predicates literal values to efficiently look up similar instances"	rdfs:member	"instances"
s6	"literal values"	rdfs:member	"literal"
s6	"similar instances"	rdfs:subClassOf	"instances"
s6	"up similar"	rdfs:member	"up"
s6	"literal values"	rdfs:subClassOf	"values"
s6	"up similar instances"	rdfs:member	"up similar"
s6	"up similar instances"	rdfs:subClassOf	"instances"
s6	"up similar"	rdfs:subClassOf	"similar"
s6	"similar instances"	rdfs:member	"similar"
s6	"efficiently look"	rdfs:subClassOf	"look"
s6	"predicates literal values"	rdfs:subClassOf	"literal values"
s5.1	"literal values that using domainindependent unsupervised learning"
s5.1	"literal values that using domainindependent unsupervised learning"	rdf:subject	"literal values"
s5.1	"literal values"	rdfs:subClassOf	"values"
s5.1	"literal values"	rdfs:member	"literal"
s5.1	"literal values that using domainindependent unsupervised learning"	rdf:predicate	"use"
s5.1	"literal values that using domainindependent unsupervised learning"	rdf:object	"domainindependent unsupervised learning"
s5.1	"domainindependent unsupervised learning"	rdfs:member	"learning"
s5.1	"domainindependent unsupervised learning"	rdfs:member	"domainindependent"
s5.1	"unsupervised learning"	rdfs:subClassOf	"learning"
s5.1	"domainindependent unsupervised learning"	rdfs:subClassOf	"unsupervised learning"
s5	"literal values that chosen using domainindependent unsupervised learning"
s5	"literal values that chosen using domainindependent unsupervised learning"	rdf:subject	"literal values"
s5	"literal values"	rdfs:subClassOf	"values"
s5	"literal values"	rdfs:member	"literal"
s5	"literal values that chosen using domainindependent unsupervised learning"	rdf:predicate	"choose"
s5	"literal values that chosen using domainindependent unsupervised learning"	local:AM-MNR	"using domainindependent unsupervised learning"
s5	"using domainindependent unsupervised learning"	rdfs:member	"learning"
s5	"using domainindependent unsupervised learning"	rdfs:member	"domainindependent"
s5	"unsupervised learning"	rdfs:subClassOf	"learning"
s5	"domainindependent unsupervised learning"	rdfs:subClassOf	"unsupervised learning"
s4.1	"we discriminating literal values"
s4.1	"we discriminating literal values"	rdf:subject	"We"
s4.1	"we discriminating literal values"	rdf:predicate	"discriminate"
s4.1	"we discriminating literal values"	rdf:object	"literal values"
s4.1	"literal values"	rdfs:subClassOf	"values"
s4.1	"literal values"	rdfs:member	"literal"
s4	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"
s4	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:subject	"We"
s4	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:predicate	"select"
s4	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:object	"candidate instance pairs"
s4	"candidate instance"	rdfs:subClassOf	"instance"
s4	"candidate instance"	rdfs:member	"candidate"
s4	"candidate instance pairs"	rdfs:member	"candidate instance"
s4	"candidate instance pairs"	rdfs:subClassOf	"pairs"
s4	"instance pairs"	rdfs:subClassOf	"pairs"
s4	"instance pairs"	rdfs:member	"instance"
s4	"candidate instance pairs"	rdfs:subClassOf	"instance pairs"
s4	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	local:AM-MNR	"computing a characterlevel similarity on discriminating literal values"
s4	"computing a characterlevel similarity on discriminating literal values"	rdfs:member	"literal values"
s4	"computing a characterlevel similarity on discriminating literal values"	rdfs:member	"characterlevel similarity"
s4	"literal values"	rdfs:subClassOf	"values"
s4	"characterlevel similarity"	rdfs:subClassOf	"similarity"
s4	"literal values"	rdfs:member	"literal"
s4	"characterlevel similarity"	rdfs:member	"characterlevel"
s3.1	"pruning the search space for entity coreference"
s3.1	"pruning the search space for entity coreference"	rdf:subject	"search space for entity coreference"
s3.1	"search space for entity coreference"	rdfs:member	"entity coreference"
s3.1	"search space for entity coreference"	rdfs:member	"search space"
s3.1	"entity coreference"	rdfs:subClassOf	"coreference"
s3.1	"search space"	rdfs:subClassOf	"space"
s3.1	"search space"	rdfs:member	"search"
s3.1	"entity coreference"	rdfs:member	"entity"
s3.1	"search space for entity coreference"	rdfs:member	"search space"
s3.1	"search space for entity coreference"	rdfs:member	"entity coreference"
s3.1	"pruning the search space for entity coreference"	rdf:predicate	"prune"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:subject	"we"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:predicate	"propose"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:object	"candidate selection algorithm for pruning the search space for entity coreference"
s3	"candidate selection algorithm for pruning the search space for entity coreference"	rdfs:member	"candidate selection algorithm"
s3	"candidate selection algorithm for pruning the search space for entity coreference"	rdfs:member	"entity coreference"
s3	"candidate selection algorithm for pruning the search space for entity coreference"	rdfs:member	"search space"
s3	"selection algorithm"	rdfs:member	"selection"
s3	"candidate selection algorithm"	rdfs:subClassOf	"algorithm"
s3	"entity coreference"	rdfs:member	"entity"
s3	"search space"	rdfs:member	"search"
s3	"selection algorithm"	rdfs:subClassOf	"algorithm"
s3	"entity coreference"	rdfs:subClassOf	"coreference"
s3	"candidate selection"	rdfs:member	"candidate"
s3	"search space"	rdfs:subClassOf	"space"
s3	"candidate selection"	rdfs:subClassOf	"selection"
s3	"candidate selection algorithm"	rdfs:member	"candidate selection"
s3	"candidate selection algorithm"	rdfs:subClassOf	"selection algorithm"
s3	"candidate selection algorithm for pruning"	rdfs:member	"candidate selection algorithm"
s3	"candidate selection algorithm for pruning"	rdfs:member	"pruning"
s3	"search space for entity coreference"	rdfs:member	"search space"
s3	"search space for entity coreference"	rdfs:member	"entity coreference"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	local:AM-LOC	"paper"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:subject	"Traditional approaches to this entity coreference problem"
s2.1	"traditional approaches to this entity coreference problem"	rdfs:member	"traditional approaches"
s2.1	"traditional approaches to this entity coreference problem"	rdfs:member	"entity coreference problem"
s2.1	"entity coreference"	rdfs:member	"entity"
s2.1	"entity coreference problem"	rdfs:subClassOf	"problem"
s2.1	"entity coreference problem"	rdfs:member	"entity coreference"
s2.1	"entity coreference"	rdfs:subClassOf	"coreference"
s2.1	"traditional approaches"	rdfs:member	"traditional"
s2.1	"traditional approaches"	rdfs:subClassOf	"approaches"
s2.1	"coreference problem"	rdfs:member	"coreference"
s2.1	"coreference problem"	rdfs:subClassOf	"problem"
s2.1	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2.1	"traditional approaches to entity coreference problem"	rdfs:member	"traditional approaches"
s2.1	"traditional approaches to entity coreference problem"	rdfs:member	"entity coreference problem"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:predicate	"compare"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:object	"every pair of instances"
s2.1	"every pair of instances"	rdfs:member	"pair"
s2.1	"every pair of instances"	rdfs:member	"instances"
s2.1	"pair of instances"	rdfs:member	"pair"
s2.1	"pair of instances"	rdfs:member	"instances"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	local:AM-MNR	"exhaustively"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:subject	"Traditional approaches to this entity coreference problem"
s2	"traditional approaches to this entity coreference problem"	rdfs:member	"traditional approaches"
s2	"traditional approaches to this entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"entity coreference"	rdfs:member	"entity"
s2	"entity coreference problem"	rdfs:subClassOf	"problem"
s2	"entity coreference problem"	rdfs:member	"entity coreference"
s2	"entity coreference"	rdfs:subClassOf	"coreference"
s2	"traditional approaches"	rdfs:member	"traditional"
s2	"traditional approaches"	rdfs:subClassOf	"approaches"
s2	"coreference problem"	rdfs:member	"coreference"
s2	"coreference problem"	rdfs:subClassOf	"problem"
s2	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2	"traditional approaches to entity coreference problem"	rdfs:member	"traditional approaches"
s2	"traditional approaches to entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:predicate	"not scale"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	local:AM-CAU	"Traditional approaches to this entity coreference problem exhaustively compare every pair of instances"
s2	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdfs:member	"traditional approaches"
s2	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdfs:member	"pair"
s2	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdfs:member	"entity coreference problem"
s2	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdfs:member	"instances"
s2	"entity coreference"	rdfs:member	"entity"
s2	"entity coreference problem"	rdfs:subClassOf	"problem"
s2	"entity coreference problem"	rdfs:member	"entity coreference"
s2	"entity coreference"	rdfs:subClassOf	"coreference"
s2	"traditional approaches"	rdfs:member	"traditional"
s2	"traditional approaches"	rdfs:subClassOf	"approaches"
s2	"coreference problem"	rdfs:member	"coreference"
s2	"coreference problem"	rdfs:subClassOf	"problem"
s2	"exhaustively compare"	rdfs:subClassOf	"compare"
s2	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2	"traditional approaches to entity coreference problem"	rdfs:member	"traditional approaches"
s2	"traditional approaches to entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"pair of instances"	rdfs:member	"pair"
s2	"pair of instances"	rdfs:member	"instances"
s1.1	"scalably establishing highquality owl sameas links"
s1.1	"scalably establishing highquality owl sameas links"	rdf:subject	"highquality owl sameAs links"
s1.1	"highquality owl sameas links"	rdfs:member	"highquality owl"
s1.1	"highquality owl sameas links"	rdfs:member	"sameas links"
s1.1	"sameas links"	rdfs:subClassOf	"links"
s1.1	"sameas links"	rdfs:member	"sameas"
s1.1	"highquality owl"	rdfs:subClassOf	"owl"
s1.1	"highquality owl"	rdfs:member	"highquality"
s1.1	"owl sameas links"	rdfs:subClassOf	"sameas links"
s1.1	"highquality owl sameas links"	rdfs:subClassOf	"owl sameas links"
s1.1	"scalably establishing highquality owl sameas links"	rdf:predicate	"establish"
s1.1	"scalably establishing highquality owl sameas links"	local:AM-MNR	"scalably"
s1	"linked data"
s1	"linked data"	rdf:subject	"Data"
s1	"linked data"	rdf:predicate	"Linked"
s0.1	"scalably establishing highquality owl sameas links"
s0.1	"scalably establishing highquality owl sameas links"	rdf:subject	"highquality owl sameAs links"
s0.1	"highquality owl sameas links"	rdfs:member	"highquality owl"
s0.1	"highquality owl sameas links"	rdfs:member	"sameas links"
s0.1	"sameas links"	rdfs:subClassOf	"links"
s0.1	"sameas links"	rdfs:member	"sameas"
s0.1	"highquality owl"	rdfs:subClassOf	"owl"
s0.1	"highquality owl"	rdfs:member	"highquality"
s0.1	"owl sameas links"	rdfs:subClassOf	"sameas links"
s0.1	"highquality owl sameas links"	rdfs:subClassOf	"owl sameas links"
s0.1	"scalably establishing highquality owl sameas links"	rdf:predicate	"establish"
s0.1	"scalably establishing highquality owl sameas links"	local:AM-MNR	"scalably"
s0	"linked data"
s0	"linked data"	rdf:subject	"Data"
s0	"linked data"	rdf:predicate	"Linked"
