s15	"surprisingly this high recall leads to higher fscores in the overall system"
s15	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:subject	"high recall"
s15	"high recall"	rdfs:member	"high"
s15	"high recall"	rdfs:subClassOf	"recall"
s15	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:predicate	"lead"
s15	"surprisingly this high recall leads to higher fscores in the overall system"	rdf:object	"higher fscores in the overall system"
s15	"higher fscores in the overall system"	rdfs:member	"overall system"
s15	"higher fscores in the overall system"	rdfs:member	"higher fscores"
s15	"higher fscores"	rdfs:member	"higher"
s15	"overall system"	rdfs:member	"overall"
s15	"overall system"	rdfs:subClassOf	"system"
s15	"higher fscores"	rdfs:subClassOf	"fscores"
s15	"higher fscores in overall system"	rdfs:member	"higher fscores"
s15	"higher fscores in overall system"	rdfs:member	"overall system"
s15	"surprisingly this high recall leads to higher fscores in the overall system"	local:AM-ADV	"surprisingly"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:subject	"surprisingly low precision filter mechanism"
s14	"surprisingly low precision"	rdfs:subClassOf	"precision"
s14	"precision filter"	rdfs:subClassOf	"filter"
s14	"surprisingly low"	rdfs:subClassOf	"low"
s14	"precision filter"	rdfs:member	"precision"
s14	"low precision"	rdfs:subClassOf	"precision"
s14	"surprisingly low precision filter mechanism"	rdfs:subClassOf	"mechanism"
s14	"surprisingly low precision filter"	rdfs:member	"surprisingly low precision"
s14	"surprisingly low precision filter"	rdfs:subClassOf	"filter"
s14	"surprisingly low precision"	rdfs:member	"surprisingly low"
s14	"surprisingly low precision filter mechanism"	rdfs:member	"surprisingly low precision filter"
s14	"low precision filter"	rdfs:member	"low precision"
s14	"surprisingly low"	rdfs:member	"surprisingly"
s14	"low precision filter mechanism"	rdfs:subClassOf	"mechanism"
s14	"filter mechanism"	rdfs:member	"filter"
s14	"filter mechanism"	rdfs:subClassOf	"mechanism"
s14	"precision filter mechanism"	rdfs:member	"precision filter"
s14	"low precision filter"	rdfs:subClassOf	"filter"
s14	"precision filter mechanism"	rdfs:subClassOf	"mechanism"
s14	"low precision filter mechanism"	rdfs:member	"low precision filter"
s14	"low precision"	rdfs:member	"low"
s14	"precision filter mechanism"	rdfs:subClassOf	"filter mechanism"
s14	"low precision filter mechanism"	rdfs:subClassOf	"precision filter mechanism"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:predicate	"lead"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	rdf:object	"higher fscores"
s14	"higher fscores"	rdfs:member	"higher"
s14	"higher fscores"	rdfs:subClassOf	"fscores"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	local:AM-LOC	"overall system"
s14	"overall system"	rdfs:member	"overall"
s14	"overall system"	rdfs:subClassOf	"system"
s14	"surprisingly low precision filtering mechanism frequently leads to higher fscores in the overall system"	local:AM-TMP	"frequently"
s13.2	"applying"
s13.2	"applying"	rdf:predicate	"apply"
s13.1	"the entire entity coreference process scales well by applying we technique"
s13.1	"the entire entity coreference process scales well by applying we technique"	rdf:subject	"entire entity coreference process"
s13.1	"entire entity"	rdfs:subClassOf	"entity"
s13.1	"coreference process"	rdfs:member	"coreference"
s13.1	"entity coreference process"	rdfs:member	"entity coreference"
s13.1	"entire entity coreference process"	rdfs:member	"entire entity coreference"
s13.1	"coreference process"	rdfs:subClassOf	"process"
s13.1	"entire entity coreference"	rdfs:subClassOf	"coreference"
s13.1	"entire entity coreference process"	rdfs:subClassOf	"process"
s13.1	"entire entity"	rdfs:member	"entire"
s13.1	"entity coreference process"	rdfs:subClassOf	"process"
s13.1	"entity coreference"	rdfs:subClassOf	"coreference"
s13.1	"entire entity coreference"	rdfs:member	"entire entity"
s13.1	"entity coreference"	rdfs:member	"entity"
s13.1	"entity coreference process"	rdfs:subClassOf	"coreference process"
s13.1	"entire entity coreference process"	rdfs:subClassOf	"entity coreference process"
s13.1	"the entire entity coreference process scales well by applying we technique"	rdf:predicate	"scale"
s13.1	"the entire entity coreference process scales well by applying we technique"	local:AM-MNR	"well"
s13.1	"the entire entity coreference process scales well by applying we technique"	local:AM-MNR	"apply we technique"
s13	"we show that the entire entity coreference process scales well by applying we technique"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:subject	"we"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:predicate	"show"
s13	"we show that the entire entity coreference process scales well by applying we technique"	rdf:object	"entire entity coreference process scale well by apply we technique"
s13	"entire entity coreference process scale well by apply we technique"	rdfs:member	"entire entity coreference process scale"
s13	"entire entity coreference process scale well by apply we technique"	rdfs:member	"apply"
s13	"coreference process"	rdfs:member	"coreference"
s13	"entire entity coreference process scale"	rdfs:subClassOf	"scale"
s13	"entire entity coreference process scale"	rdfs:member	"entire entity coreference process"
s13	"entity coreference"	rdfs:subClassOf	"coreference"
s13	"coreference process scale"	rdfs:member	"coreference process"
s13	"entire entity"	rdfs:subClassOf	"entity"
s13	"entire entity coreference process"	rdfs:member	"entire entity coreference"
s13	"entity coreference process"	rdfs:member	"entity coreference"
s13	"entire entity coreference process"	rdfs:subClassOf	"process"
s13	"entire entity"	rdfs:member	"entire"
s13	"entity coreference process"	rdfs:subClassOf	"process"
s13	"coreference process scale"	rdfs:subClassOf	"scale"
s13	"entire entity coreference"	rdfs:member	"entire entity"
s13	"entity coreference process scale"	rdfs:member	"entity coreference process"
s13	"entire entity coreference"	rdfs:subClassOf	"coreference"
s13	"process scale"	rdfs:subClassOf	"scale"
s13	"coreference process"	rdfs:subClassOf	"process"
s13	"entity coreference process scale"	rdfs:subClassOf	"scale"
s13	"process scale"	rdfs:member	"process"
s13	"entity coreference"	rdfs:member	"entity"
s13	"well apply"	rdfs:subClassOf	"apply"
s13	"coreference process scale"	rdfs:subClassOf	"process scale"
s13	"entity coreference process scale"	rdfs:subClassOf	"coreference process scale"
s13	"entire entity coreference process scale"	rdfs:subClassOf	"entity coreference process scale"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:subject	"we"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:predicate	"process"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	rdf:object	"1 million instance"
s12.3	"million instance"	rdfs:subClassOf	"instance"
s12.3	"1 million"	rdfs:subClassOf	"million"
s12.3	"we process 1 million instances in under one hour on a single sun workstation"	local:AM-LOC	"one hour on a single sun workstation"
s12.3	"one hour on a single sun workstation"	rdfs:member	"hour"
s12.3	"one hour on a single sun workstation"	rdfs:member	"single sun workstation"
s12.3	"single sun"	rdfs:member	"single"
s12.3	"single sun"	rdfs:subClassOf	"sun"
s12.3	"single sun workstation"	rdfs:subClassOf	"workstation"
s12.3	"single sun workstation"	rdfs:member	"single sun"
s12.3	"sun workstation"	rdfs:subClassOf	"workstation"
s12.3	"sun workstation"	rdfs:member	"sun"
s12.3	"single sun workstation"	rdfs:subClassOf	"sun workstation"
s12.3	"one hour"	rdfs:subClassOf	"hour"
s12.3	"one hour on single sun workstation"	rdfs:member	"one hour"
s12.3	"one hour on single sun workstation"	rdfs:member	"single sun workstation"
s12.2	"we algorithm frequently outperforms alternatives"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:subject	"algorithm"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:predicate	"outperform"
s12.2	"we algorithm frequently outperforms alternatives"	rdf:object	"alternative"
s12.2	"we algorithm frequently outperforms alternatives"	local:AM-TMP	"frequently"
s12.1	"we algorithm frequently"
s12.1	"we algorithm frequently"	rdf:subject	"we"
s12.1	"we algorithm frequently"	rdf:predicate	"algorithm"
s12.1	"we algorithm frequently"	local:AM-TMP	"frequently"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:subject	"we"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:predicate	"show"
s12	"we show that we algorithm frequently outperforms alternatives and is able to process 1 million instances in under one hour on a single sun workstation"	rdf:object	"algorithm frequently outperform alternative and be able to process 1 million instance in under one hour on a single sun workstation"
s12	"algorithm frequently outperform alternative and be able to process 1 million instance in under one hour on a single sun workstation"	rdfs:member	"algorithm frequently outperform alternative"
s12	"algorithm frequently outperform alternative and be able to process 1 million instance in under one hour on a single sun workstation"	rdfs:member	"instance"
s12	"algorithm frequently outperform alternative and be able to process 1 million instance in under one hour on a single sun workstation"	rdfs:member	"hour"
s12	"algorithm frequently outperform alternative and be able to process 1 million instance in under one hour on a single sun workstation"	rdfs:member	"single sun workstation"
s12	"algorithm frequently outperform"	rdfs:subClassOf	"outperform"
s12	"frequently outperform alternative"	rdfs:subClassOf	"alternative"
s12	"single sun"	rdfs:subClassOf	"sun"
s12	"single sun"	rdfs:member	"single"
s12	"single sun workstation"	rdfs:subClassOf	"workstation"
s12	"frequently outperform alternative"	rdfs:member	"frequently outperform"
s12	"single sun workstation"	rdfs:member	"single sun"
s12	"frequently outperform"	rdfs:member	"frequently"
s12	"sun workstation"	rdfs:subClassOf	"workstation"
s12	"algorithm frequently outperform alternative"	rdfs:member	"algorithm frequently outperform"
s12	"outperform alternative"	rdfs:member	"outperform"
s12	"algorithm frequently outperform"	rdfs:member	"algorithm frequently"
s12	"frequently outperform"	rdfs:subClassOf	"outperform"
s12	"sun workstation"	rdfs:member	"sun"
s12	"outperform alternative"	rdfs:subClassOf	"alternative"
s12	"algorithm frequently outperform alternative"	rdfs:subClassOf	"alternative"
s12	"algorithm frequently"	rdfs:subClassOf	"frequently"
s12	"algorithm frequently"	rdfs:member	"algorithm"
s12	"single sun workstation"	rdfs:subClassOf	"sun workstation"
s12	"one hour"	rdfs:subClassOf	"hour"
s12	"million instance"	rdfs:subClassOf	"instance"
s12	"1 million"	rdfs:subClassOf	"million"
s12	"million instance under one hour"	rdfs:member	"million instance"
s12	"million instance under one hour"	rdfs:member	"one hour"
s12	"process on single sun workstation"	rdfs:member	"process"
s12	"process on single sun workstation"	rdfs:member	"single sun workstation"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:subject	"relative benefit of candidate selection"
s11.1	"relative benefit of candidate selection"	rdfs:member	"relative benefit"
s11.1	"relative benefit of candidate selection"	rdfs:member	"candidate selection"
s11.1	"candidate selection"	rdfs:member	"candidate"
s11.1	"relative benefit"	rdfs:subClassOf	"benefit"
s11.1	"relative benefit"	rdfs:member	"relative"
s11.1	"candidate selection"	rdfs:subClassOf	"selection"
s11.1	"relative benefit of candidate selection"	rdfs:member	"relative benefit"
s11.1	"relative benefit of candidate selection"	rdfs:member	"candidate selection"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:predicate	"not reflect"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	rdf:object	"traditional metric"
s11.1	"traditional metric"	rdfs:subClassOf	"metric"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	local:AM-MNR	"accurately"
s11.1	"the traditional metrics not always accurately reflect the relative benefits of candidate selection"	local:AM-TMP	"always"
s11	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"
s11	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:subject	"we"
s11	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:predicate	"show"
s11	"we show that the traditional metrics do not always accurately reflect the relative benefits of candidate selection"	rdf:object	"traditional metric do not always accurately reflect the relative benefit of candidate selection"
s11	"traditional metric do not always accurately reflect the relative benefit of candidate selection"	rdfs:member	"relative benefit"
s11	"traditional metric do not always accurately reflect the relative benefit of candidate selection"	rdfs:member	"candidate selection"
s11	"candidate selection"	rdfs:member	"candidate"
s11	"relative benefit"	rdfs:subClassOf	"benefit"
s11	"relative benefit"	rdfs:member	"relative"
s11	"candidate selection"	rdfs:subClassOf	"selection"
s11	"accurately reflect"	rdfs:subClassOf	"reflect"
s11	"always accurately reflect"	rdfs:subClassOf	"accurately reflect"
s11	"not always accurately reflect"	rdfs:subClassOf	"always accurately reflect"
s11	"do not always accurately reflect"	rdfs:subClassOf	"not always accurately reflect"
s11	"traditional metric"	rdfs:subClassOf	"metric"
s11	"relative benefit of candidate selection"	rdfs:member	"relative benefit"
s11	"relative benefit of candidate selection"	rdfs:member	"candidate selection"
s10.1	"the traditional metrics propose additional metrics"
s10.1	"the traditional metrics propose additional metrics"	rdf:subject	"traditional metric"
s10.1	"traditional metric"	rdfs:subClassOf	"metric"
s10.1	"the traditional metrics propose additional metrics"	rdf:predicate	"propose"
s10.1	"the traditional metrics propose additional metrics"	rdf:object	"additional metric"
s10.1	"additional metric"	rdfs:subClassOf	"metric"
s10	"we show that the traditional metrics propose additional metrics"
s10	"we show that the traditional metrics propose additional metrics"	rdf:subject	"we"
s10	"we show that the traditional metrics propose additional metrics"	rdf:predicate	"show"
s10	"we show that the traditional metrics propose additional metrics"	rdf:object	"traditional metric propose additional metric"
s10	"additional metric"	rdfs:subClassOf	"metric"
s10	"traditional additional metric"	rdfs:subClassOf	"additional metric"
s9.1	"we approach on two rdf"
s9.1	"we approach on two rdf"	rdf:subject	"we"
s9.1	"we approach on two rdf"	rdf:predicate	"approach"
s9.1	"we approach on two rdf"	rdf:object	"two rdf"
s9.1	"two rdf"	rdfs:subClassOf	"rdf"
s9	"we evaluate we approach on two rdf"
s9	"we evaluate we approach on two rdf"	rdf:subject	"we"
s9	"we evaluate we approach on two rdf"	rdf:predicate	"evaluate"
s9	"we evaluate we approach on two rdf"	rdf:object	"approach on two rdf"
s9	"approach on two rdf"	rdfs:member	"approach"
s9	"approach on two rdf"	rdfs:member	"rdf"
s9	"two rdf"	rdfs:subClassOf	"rdf"
s9	"approach on two rdf"	rdfs:member	"approach"
s9	"approach on two rdf"	rdfs:member	"two rdf"
s8.1	"we approach on three"
s8.1	"we approach on three"	rdf:subject	"we"
s8.1	"we approach on three"	rdf:predicate	"approach"
s8.1	"we approach on three"	rdf:object	"three"
s8	"we evaluate we approach on three"
s8	"we evaluate we approach on three"	rdf:subject	"we"
s8	"we evaluate we approach on three"	rdf:predicate	"evaluate"
s8	"we evaluate we approach on three"	rdf:object	"approach on three"
s8	"approach on three"	rdfs:member	"approach"
s8	"approach on three"	rdfs:member	"three"
s6.2	"efficiently look up similar instances"
s6.2	"efficiently look up similar instances"	rdf:subject	"similar instance"
s6.2	"similar instance"	rdfs:subClassOf	"instance"
s6.2	"similar instance"	rdfs:member	"similar"
s6.2	"efficiently look up similar instances"	rdf:predicate	"look"
s6.2	"efficiently look up similar instances"	local:AM-MNR	"efficiently"
s6.1	"chosen predicates"
s6.1	"chosen predicates"	rdf:subject	"predicate"
s6.1	"chosen predicates"	rdf:predicate	"choose"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:subject	"we"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:predicate	"index"
s6	"we index the instances on the chosen predicates literal values to efficiently look up similar instances"	rdf:object	"instance choose predicate literal value to efficiently look up similar instance"
s6	"instance choose predicate literal value to efficiently look up similar instance"	rdfs:member	"instance choose"
s6	"instance choose predicate literal value to efficiently look up similar instance"	rdfs:member	"up similar instance"
s6	"instance choose predicate literal value to efficiently look up similar instance"	rdfs:member	"predicate literal value"
s6	"up similar"	rdfs:member	"up"
s6	"predicate literal"	rdfs:member	"predicate"
s6	"instance choose"	rdfs:subClassOf	"choose"
s6	"similar instance"	rdfs:subClassOf	"instance"
s6	"instance choose"	rdfs:member	"instance"
s6	"literal value"	rdfs:member	"literal"
s6	"literal value"	rdfs:subClassOf	"value"
s6	"up similar"	rdfs:subClassOf	"similar"
s6	"similar instance"	rdfs:member	"similar"
s6	"predicate literal"	rdfs:subClassOf	"literal"
s6	"predicate literal value"	rdfs:member	"predicate literal"
s6	"up similar instance"	rdfs:subClassOf	"instance"
s6	"up similar instance"	rdfs:member	"up similar"
s6	"predicate literal value"	rdfs:subClassOf	"value"
s6	"efficiently look"	rdfs:subClassOf	"look"
s6	"predicate literal value"	rdfs:subClassOf	"literal value"
s5.1	"discriminating literal values"
s5.1	"discriminating literal values"	rdf:subject	"literal value"
s5.1	"literal value"	rdfs:member	"literal"
s5.1	"literal value"	rdfs:subClassOf	"value"
s5.1	"discriminating literal values"	rdf:predicate	"discriminate"
s5	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"
s5	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:subject	"we"
s5	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:predicate	"select"
s5	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	rdf:object	"candidate instance pair"
s5	"instance pair"	rdfs:member	"instance"
s5	"candidate instance"	rdfs:subClassOf	"instance"
s5	"candidate instance pair"	rdfs:member	"candidate instance"
s5	"candidate instance pair"	rdfs:subClassOf	"pair"
s5	"candidate instance"	rdfs:member	"candidate"
s5	"instance pair"	rdfs:subClassOf	"pair"
s5	"candidate instance pair"	rdfs:subClassOf	"instance pair"
s5	"we select candidate instance pairs by computing a characterlevel similarity on discriminating literal values"	local:AM-MNR	"compute a characterlevel similarity on discriminate literal value"
s5	"compute a characterlevel similarity on discriminate literal value"	rdfs:member	"compute"
s5	"compute a characterlevel similarity on discriminate literal value"	rdfs:member	"characterlevel similarity"
s5	"compute a characterlevel similarity on discriminate literal value"	rdfs:member	"discriminate literal value"
s5	"characterlevel similarity"	rdfs:subClassOf	"similarity"
s5	"characterlevel similarity"	rdfs:member	"characterlevel"
s5	"discriminate literal value"	rdfs:subClassOf	"value"
s5	"literal value"	rdfs:member	"literal"
s5	"literal value"	rdfs:subClassOf	"value"
s5	"discriminate literal"	rdfs:subClassOf	"literal"
s5	"discriminate literal value"	rdfs:member	"discriminate literal"
s5	"discriminate literal"	rdfs:member	"discriminate"
s5	"discriminate literal value"	rdfs:subClassOf	"literal value"
s5	"characterlevel similarity on discriminate literal value"	rdfs:member	"characterlevel similarity"
s5	"characterlevel similarity on discriminate literal value"	rdfs:member	"discriminate literal value"
s4.1	"literal values that using domainindependent unsupervised learning"
s4.1	"literal values that using domainindependent unsupervised learning"	rdf:subject	"literal value"
s4.1	"literal value"	rdfs:member	"literal"
s4.1	"literal value"	rdfs:subClassOf	"value"
s4.1	"literal values that using domainindependent unsupervised learning"	rdf:predicate	"use"
s4.1	"literal values that using domainindependent unsupervised learning"	rdf:object	"domainindependent unsupervised learn"
s4.1	"domainindependent unsupervised learn"	rdfs:member	"learn"
s4.1	"domainindependent unsupervised learn"	rdfs:member	"domainindependent"
s4.1	"domainindependent unsupervised"	rdfs:subClassOf	"unsupervised"
s4	"literal values that chosen using domainindependent unsupervised learning"
s4	"literal values that chosen using domainindependent unsupervised learning"	rdf:subject	"literal value"
s4	"literal value"	rdfs:member	"literal"
s4	"literal value"	rdfs:subClassOf	"value"
s4	"literal values that chosen using domainindependent unsupervised learning"	rdf:predicate	"choose"
s4	"literal values that chosen using domainindependent unsupervised learning"	local:AM-MNR	"use domainindependent unsupervised learn"
s4	"use domainindependent unsupervised learn"	rdfs:member	"learn"
s4	"use domainindependent unsupervised learn"	rdfs:member	"use domainindependent"
s4	"use domainindependent"	rdfs:subClassOf	"domainindependent"
s4	"use domainindependent"	rdfs:member	"use"
s4	"domainindependent unsupervised"	rdfs:subClassOf	"unsupervised"
s4	"use domainindependent unsupervised"	rdfs:subClassOf	"domainindependent unsupervised"
s3.1	"pruning the search space for entity coreference"
s3.1	"pruning the search space for entity coreference"	rdf:subject	"search space for entity coreference"
s3.1	"search space for entity coreference"	rdfs:member	"entity coreference"
s3.1	"search space for entity coreference"	rdfs:member	"search space"
s3.1	"search space"	rdfs:member	"search"
s3.1	"search space"	rdfs:subClassOf	"space"
s3.1	"entity coreference"	rdfs:member	"entity"
s3.1	"entity coreference"	rdfs:subClassOf	"coreference"
s3.1	"search space for entity coreference"	rdfs:member	"search space"
s3.1	"search space for entity coreference"	rdfs:member	"entity coreference"
s3.1	"pruning the search space for entity coreference"	rdf:predicate	"prune"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:subject	"we"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:predicate	"propose"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	rdf:object	"candidate selection algorithm for prune the search space for entity coreference"
s3	"candidate selection algorithm for prune the search space for entity coreference"	rdfs:member	"entity coreference"
s3	"candidate selection algorithm for prune the search space for entity coreference"	rdfs:member	"prune"
s3	"candidate selection algorithm for prune the search space for entity coreference"	rdfs:member	"candidate selection algorithm"
s3	"candidate selection algorithm for prune the search space for entity coreference"	rdfs:member	"search space"
s3	"candidate selection"	rdfs:member	"candidate"
s3	"candidate selection algorithm"	rdfs:subClassOf	"algorithm"
s3	"selection algorithm"	rdfs:subClassOf	"algorithm"
s3	"search space"	rdfs:subClassOf	"space"
s3	"entity coreference"	rdfs:subClassOf	"coreference"
s3	"search space"	rdfs:member	"search"
s3	"candidate selection"	rdfs:subClassOf	"selection"
s3	"entity coreference"	rdfs:member	"entity"
s3	"candidate selection algorithm"	rdfs:member	"candidate selection"
s3	"selection algorithm"	rdfs:member	"selection"
s3	"candidate selection algorithm"	rdfs:subClassOf	"selection algorithm"
s3	"prune for entity coreference"	rdfs:member	"prune"
s3	"prune for entity coreference"	rdfs:member	"entity coreference"
s3	"in this paper we propose a candidate selection algorithm for pruning the search space for entity coreference"	local:AM-LOC	"paper"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:subject	"traditional approach to this entity coreference problem"
s2.1	"traditional approach to this entity coreference problem"	rdfs:member	"entity coreference problem"
s2.1	"traditional approach to this entity coreference problem"	rdfs:member	"traditional approach"
s2.1	"entity coreference problem"	rdfs:member	"entity coreference"
s2.1	"traditional approach"	rdfs:subClassOf	"approach"
s2.1	"entity coreference problem"	rdfs:subClassOf	"problem"
s2.1	"coreference problem"	rdfs:subClassOf	"problem"
s2.1	"traditional approach"	rdfs:member	"traditional"
s2.1	"coreference problem"	rdfs:member	"coreference"
s2.1	"entity coreference"	rdfs:subClassOf	"coreference"
s2.1	"entity coreference"	rdfs:member	"entity"
s2.1	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2.1	"traditional approach to entity coreference problem"	rdfs:member	"traditional approach"
s2.1	"traditional approach to entity coreference problem"	rdfs:member	"entity coreference problem"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:predicate	"compare"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:object	"every pair of instance"
s2.1	"every pair of instance"	rdfs:member	"pair"
s2.1	"every pair of instance"	rdfs:member	"instance"
s2.1	"pair of instance"	rdfs:member	"pair"
s2.1	"pair of instance"	rdfs:member	"instance"
s2.1	"traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	local:AM-MNR	"exhaustively"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:subject	"traditional approach to this entity coreference problem"
s2	"traditional approach to this entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"traditional approach to this entity coreference problem"	rdfs:member	"traditional approach"
s2	"entity coreference problem"	rdfs:member	"entity coreference"
s2	"traditional approach"	rdfs:subClassOf	"approach"
s2	"entity coreference problem"	rdfs:subClassOf	"problem"
s2	"coreference problem"	rdfs:subClassOf	"problem"
s2	"traditional approach"	rdfs:member	"traditional"
s2	"coreference problem"	rdfs:member	"coreference"
s2	"entity coreference"	rdfs:subClassOf	"coreference"
s2	"entity coreference"	rdfs:member	"entity"
s2	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2	"traditional approach to entity coreference problem"	rdfs:member	"traditional approach"
s2	"traditional approach to entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	rdf:predicate	"not scale"
s2	"traditional approaches to this entity coreference problem not scale because traditional approaches to this entity coreference problem exhaustively compare every pair of instances"	local:AM-CAU	"traditional approach to this entity coreference problem exhaustively compare every pair of instance"
s2	"traditional approach to this entity coreference problem exhaustively compare every pair of instance"	rdfs:member	"pair"
s2	"traditional approach to this entity coreference problem exhaustively compare every pair of instance"	rdfs:member	"entity coreference problem"
s2	"traditional approach to this entity coreference problem exhaustively compare every pair of instance"	rdfs:member	"instance"
s2	"traditional approach to this entity coreference problem exhaustively compare every pair of instance"	rdfs:member	"traditional approach"
s2	"entity coreference problem"	rdfs:member	"entity coreference"
s2	"traditional approach"	rdfs:subClassOf	"approach"
s2	"entity coreference problem"	rdfs:subClassOf	"problem"
s2	"coreference problem"	rdfs:subClassOf	"problem"
s2	"traditional approach"	rdfs:member	"traditional"
s2	"coreference problem"	rdfs:member	"coreference"
s2	"entity coreference"	rdfs:subClassOf	"coreference"
s2	"entity coreference"	rdfs:member	"entity"
s2	"exhaustively compare"	rdfs:subClassOf	"compare"
s2	"entity coreference problem"	rdfs:subClassOf	"coreference problem"
s2	"traditional approach to entity coreference problem"	rdfs:member	"traditional approach"
s2	"traditional approach to entity coreference problem"	rdfs:member	"entity coreference problem"
s2	"pair of instance"	rdfs:member	"pair"
s2	"pair of instance"	rdfs:member	"instance"
s1.1	"scalably establishing highquality owl sameas links between eg people geographical locations publications"
s1.1	"scalably establishing highquality owl sameas links between eg people geographical locations publications"	rdf:subject	"highquality owl sameas link between eg people geographical location publication"
s1.1	"highquality owl sameas link between eg people geographical location publication"	rdfs:member	"highquality owl"
s1.1	"highquality owl sameas link between eg people geographical location publication"	rdfs:member	"eg people"
s1.1	"highquality owl sameas link between eg people geographical location publication"	rdfs:member	"geographical location publication"
s1.1	"highquality owl sameas link between eg people geographical location publication"	rdfs:member	"sameas link"
s1.1	"eg people"	rdfs:subClassOf	"people"
s1.1	"geographical location"	rdfs:subClassOf	"location"
s1.1	"geographical location"	rdfs:member	"geographical"
s1.1	"geographical location publication"	rdfs:subClassOf	"publication"
s1.1	"sameas link"	rdfs:member	"sameas"
s1.1	"highquality owl"	rdfs:member	"highquality"
s1.1	"location publication"	rdfs:subClassOf	"publication"
s1.1	"geographical location publication"	rdfs:member	"geographical location"
s1.1	"sameas link"	rdfs:subClassOf	"link"
s1.1	"location publication"	rdfs:member	"location"
s1.1	"highquality owl"	rdfs:subClassOf	"owl"
s1.1	"eg people"	rdfs:member	"eg"
s1.1	"geographical location publication"	rdfs:subClassOf	"location publication"
s1.1	"owl sameas"	rdfs:subClassOf	"sameas"
s1.1	"highquality owl sameas"	rdfs:subClassOf	"owl sameas"
s1.1	"link between eg people"	rdfs:member	"link"
s1.1	"link between eg people"	rdfs:member	"eg people"
s1.1	"scalably establishing highquality owl sameas links between eg people geographical locations publications"	rdf:predicate	"establish"
s1.1	"scalably establishing highquality owl sameas links between eg people geographical locations publications"	local:AM-MNR	"scalably"
s1	"linked data"
s1	"linked data"	rdf:subject	"data"
s1	"linked data"	rdf:predicate	"link"
s0.1	"scalably establishing highquality owl sameas links"
s0.1	"scalably establishing highquality owl sameas links"	rdf:subject	"highquality owl sameas link"
s0.1	"owl sameas"	rdfs:member	"owl"
s0.1	"highquality owl sameas"	rdfs:member	"highquality owl"
s0.1	"owl sameas"	rdfs:subClassOf	"sameas"
s0.1	"highquality owl"	rdfs:member	"highquality"
s0.1	"highquality owl sameas"	rdfs:subClassOf	"sameas"
s0.1	"highquality owl"	rdfs:subClassOf	"owl"
s0.1	"sameas link"	rdfs:subClassOf	"link"
s0.1	"owl sameas link"	rdfs:subClassOf	"sameas link"
s0.1	"highquality owl sameas link"	rdfs:subClassOf	"owl sameas link"
s0.1	"scalably establishing highquality owl sameas links"	rdf:predicate	"establish"
s0.1	"scalably establishing highquality owl sameas links"	local:AM-MNR	"scalably"
s0	"linked data"
s0	"linked data"	rdf:subject	"data"
s0	"linked data"	rdf:predicate	"link"
