triple stores are the backbone of increasingly many data web applications
it is thus evident that the performance of triple stores is mission critical for data integration on the data web in general
it is thus evident that the performance of triple stores is mission critical for individual projects on the data web in general
consequently it is of central importance during the implementation of any of these applications to have a clear picture of the weaknesses and strengths of current triple store implementations
in this paper we propose a generic sparql benchmark creation procedure
a generic sparql benchmark creation procedure which we apply to the dbpedia knowledge base
previous approaches often compared relational stores and thus settled on measuring performance against a relational database
previous approaches often compared triple stores and thus settled on measuring performance against a relational database
a relational database which had been converted to rdf by using sqllike queries
queries that were actually issued by humans against existing rdf data not resembling a relational schema
queries that were actually issued by applications against existing rdf data not resembling a relational schema
in contrast to previous approaches often compared triple stores and thus settled on measuring performance against a relational database we benchmark is based on queries
a relational database which had been converted to rdf by using sqllike queries
in contrast to previous approaches often compared relational stores and thus settled on measuring performance against a relational database we benchmark is based on queries
we generic procedure for benchmark creation is based on querylog mining
we generic procedure for benchmark creation is based on clustering
we generic procedure for benchmark creation is based on sparql feature analysis
we argue that a pure sparql benchmark is more useful to provide results for the popular triple store implementations bigowlim
we argue that a pure sparql benchmark is more useful to compare existing triple stores
we argue that a pure sparql benchmark is more useful to provide results for the popular triple store implementations virtuoso sesame jenatdb
the subsequent comparison of our results with other benchmark results indicates that the performance of triple stores is by far less homogeneous than suggested by previous benchmarks