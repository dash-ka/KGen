s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"
s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	rdf:subject	"one of the largest SNOMED CT"
s13	"largest snomed"	rdfs:subClassOf	"snomed"
s13	"snomed ct"	rdfs:subClassOf	"ct"
s13	"largest snomed ct"	rdfs:member	"largest snomed"
s13	"snomed ct"	rdfs:member	"snomed"
s13	"largest snomed"	rdfs:member	"largest"
s13	"largest snomed ct"	rdfs:subClassOf	"ct"
s13	"largest snomed ct"	rdfs:subClassOf	"snomed ct"
s13	"one largest snomed ct"	rdfs:subClassOf	"largest snomed ct"
s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	rdf:predicate	"classify"
s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	rdf:object	"little as 5 seconds"
s13	"5 seconds"	rdfs:subClassOf	"seconds"
s13	"as 5"	rdfs:subClassOf	"5"
s13	"little as 5"	rdfs:subClassOf	"as 5"
s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-DIS	"particular"
s13	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-MOD	"can"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:subject	"one of widelyused medical ontologies SNOMED CT"
s12	"widelyused medical ontologies snomed ct"	rdfs:subClassOf	"ct"
s12	"medical ontologies snomed"	rdfs:member	"medical ontologies"
s12	"snomed ct"	rdfs:subClassOf	"ct"
s12	"widelyused medical ontologies"	rdfs:subClassOf	"ontologies"
s12	"medical ontologies"	rdfs:subClassOf	"ontologies"
s12	"snomed ct"	rdfs:member	"snomed"
s12	"widelyused medical ontologies snomed"	rdfs:member	"widelyused medical ontologies"
s12	"widelyused medical ontologies"	rdfs:member	"widelyused medical"
s12	"ontologies snomed ct"	rdfs:member	"ontologies snomed"
s12	"ontologies snomed ct"	rdfs:subClassOf	"ct"
s12	"widelyused medical ontologies snomed ct"	rdfs:member	"widelyused medical ontologies snomed"
s12	"widelyused medical"	rdfs:subClassOf	"medical"
s12	"medical ontologies"	rdfs:member	"medical"
s12	"medical ontologies snomed ct"	rdfs:member	"medical ontologies snomed"
s12	"medical ontologies snomed ct"	rdfs:subClassOf	"ct"
s12	"medical ontologies snomed"	rdfs:subClassOf	"snomed"
s12	"ontologies snomed"	rdfs:member	"ontologies"
s12	"ontologies snomed"	rdfs:subClassOf	"snomed"
s12	"widelyused medical ontologies snomed"	rdfs:subClassOf	"snomed"
s12	"widelyused medical"	rdfs:member	"widelyused"
s12	"widelyused medical ontologies"	rdfs:subClassOf	"medical ontologies"
s12	"one of widelyused medical ontologies"	rdfs:member	"one"
s12	"one of widelyused medical ontologies"	rdfs:member	"widelyused medical ontologies"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:predicate	"classify"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:object	"little as 5 seconds"
s12	"5 seconds"	rdfs:subClassOf	"seconds"
s12	"as 5"	rdfs:subClassOf	"5"
s12	"little as 5"	rdfs:subClassOf	"as 5"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	local:AM-DIS	"particular"
s12	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	local:AM-MOD	"can"
s11	"we report on preliminary experimental results"
s11	"we report on preliminary experimental results"	rdf:subject	"We"
s11	"we report on preliminary experimental results"	rdf:predicate	"report"
s11	"we report on preliminary experimental results"	local:AM-LOC	"preliminary experimental results"
s11	"preliminary experimental"	rdfs:subClassOf	"experimental"
s11	"preliminary experimental"	rdfs:member	"preliminary"
s11	"experimental results"	rdfs:subClassOf	"results"
s11	"experimental results"	rdfs:member	"experimental"
s11	"preliminary experimental results"	rdfs:subClassOf	"results"
s11	"preliminary experimental results"	rdfs:member	"preliminary experimental"
s11	"preliminary experimental results"	rdfs:subClassOf	"experimental results"
s10	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"
s10	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:subject	"preliminary experimental results"
s10	"preliminary experimental"	rdfs:subClassOf	"experimental"
s10	"preliminary experimental"	rdfs:member	"preliminary"
s10	"experimental results"	rdfs:subClassOf	"results"
s10	"experimental results"	rdfs:member	"experimental"
s10	"preliminary experimental results"	rdfs:subClassOf	"results"
s10	"preliminary experimental results"	rdfs:member	"preliminary experimental"
s10	"preliminary experimental results"	rdfs:subClassOf	"experimental results"
s10	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:predicate	"demonstrate"
s10	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:object	"substantial speedup of ontology classification on multicore systems"
s10	"substantial speedup of ontology classification on multicore systems"	rdfs:member	"substantial speedup"
s10	"substantial speedup of ontology classification on multicore systems"	rdfs:member	"ontology classification"
s10	"substantial speedup of ontology classification on multicore systems"	rdfs:member	"multicore systems"
s10	"substantial speedup"	rdfs:member	"substantial"
s10	"ontology classification"	rdfs:subClassOf	"classification"
s10	"substantial speedup"	rdfs:subClassOf	"speedup"
s10	"multicore systems"	rdfs:member	"multicore"
s10	"ontology classification"	rdfs:member	"ontology"
s10	"multicore systems"	rdfs:subClassOf	"systems"
s10	"substantial speedup of ontology classification"	rdfs:member	"substantial speedup"
s10	"substantial speedup of ontology classification"	rdfs:member	"ontology classification"
s10	"substantial speedup of ontology classification on multicore systems"	rdfs:member	"substantial speedup of ontology classification"
s10	"substantial speedup of ontology classification on multicore systems"	rdfs:member	"multicore systems"
s9.1	"this employing lockfree data structures such as compareandswap"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:subject	"This"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:predicate	"employ"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:object	"lockfree data structures such as compareandswap"
s9.1	"lockfree data structures such as compareandswap"	rdfs:member	"compareandswap"
s9.1	"lockfree data structures such as compareandswap"	rdfs:member	"lockfree data structures"
s9.1	"lockfree data"	rdfs:subClassOf	"data"
s9.1	"lockfree data"	rdfs:member	"lockfree"
s9.1	"data structures"	rdfs:member	"data"
s9.1	"data structures"	rdfs:subClassOf	"structures"
s9.1	"lockfree data structures"	rdfs:member	"lockfree data"
s9.1	"lockfree data structures"	rdfs:subClassOf	"structures"
s9.1	"lockfree data structures"	rdfs:subClassOf	"data structures"
s9.1	"lockfree data structures such_as compareandswap"	rdfs:member	"lockfree data structures"
s9.1	"lockfree data structures such_as compareandswap"	rdfs:member	"compareandswap"
s9	"this achieved by employing lockfree data structures such as compareandswap"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:subject	"employing lockfree data structures such as compareandswap"
s9	"employing lockfree data structures such as compareandswap"	rdfs:member	"compareandswap"
s9	"employing lockfree data structures such as compareandswap"	rdfs:member	"lockfree data structures"
s9	"lockfree data"	rdfs:subClassOf	"data"
s9	"lockfree data"	rdfs:member	"lockfree"
s9	"data structures"	rdfs:member	"data"
s9	"data structures"	rdfs:subClassOf	"structures"
s9	"lockfree data structures"	rdfs:member	"lockfree data"
s9	"lockfree data structures"	rdfs:subClassOf	"structures"
s9	"lockfree data structures"	rdfs:subClassOf	"data structures"
s9	"lockfree data structures such_as compareandswap"	rdfs:member	"lockfree data structures"
s9	"lockfree data structures such_as compareandswap"	rdfs:member	"compareandswap"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:predicate	"achieve"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:object	"This"
s8.1	"this employing operations such as compareandswap"
s8.1	"this employing operations such as compareandswap"	rdf:subject	"This"
s8.1	"this employing operations such as compareandswap"	rdf:predicate	"employ"
s8.1	"this employing operations such as compareandswap"	rdf:object	"operations such as compareandswap"
s8.1	"operations such as compareandswap"	rdfs:member	"compareandswap"
s8.1	"operations such as compareandswap"	rdfs:member	"operations"
s8.1	"operations such_as compareandswap"	rdfs:member	"operations"
s8.1	"operations such_as compareandswap"	rdfs:member	"compareandswap"
s8	"this achieved by employing operations such as compareandswap"
s8	"this achieved by employing operations such as compareandswap"	rdf:subject	"employing operations such as compareandswap"
s8	"employing operations such as compareandswap"	rdfs:member	"compareandswap"
s8	"employing operations such as compareandswap"	rdfs:member	"operations"
s8	"operations such_as compareandswap"	rdfs:member	"operations"
s8	"operations such_as compareandswap"	rdfs:member	"compareandswap"
s8	"this achieved by employing operations such as compareandswap"	rdf:predicate	"achieve"
s8	"this achieved by employing operations such as compareandswap"	rdf:object	"This"
s7	"managing concurrent computations is minimal"
s7	"managing concurrent computations is minimal"	rdf:subject	"concurrent computations is minimal"
s7	"concurrent computations"	rdfs:subClassOf	"computations"
s7	"concurrent computations"	rdfs:member	"concurrent"
s7	"managing concurrent computations is minimal"	rdf:predicate	"manage"
s6	"we describe an implementation of we within the javabased reasoner elk"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:subject	"We"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:predicate	"describe"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:object	"implementation of We within the Javabased reasoner ELK"
s6	"implementation of we within the javabased reasoner elk"	rdfs:member	"javabased reasoner elk"
s6	"implementation of we within the javabased reasoner elk"	rdfs:member	"implementation"
s6	"javabased reasoner elk"	rdfs:subClassOf	"elk"
s6	"javabased reasoner"	rdfs:subClassOf	"reasoner"
s6	"reasoner elk"	rdfs:member	"reasoner"
s6	"javabased reasoner"	rdfs:member	"javabased"
s6	"javabased reasoner elk"	rdfs:member	"javabased reasoner"
s6	"reasoner elk"	rdfs:subClassOf	"elk"
s6	"javabased reasoner elk"	rdfs:subClassOf	"reasoner elk"
s6	"implementation of we"	rdfs:member	"implementation"
s6	"implementation of we"	rdfs:member	"we"
s6	"implementation of we within javabased reasoner elk"	rdfs:member	"implementation of we"
s6	"implementation of we within javabased reasoner elk"	rdfs:member	"javabased reasoner elk"
s5.5	"contexts within which can processed independently"
s5.5	"contexts within which can processed independently"	rdf:predicate	"process"
s5.5	"contexts within which can processed independently"	local:AM-MNR	"independently"
s5.5	"contexts within which can processed independently"	local:AM-MOD	"can"
s5.4	"derived axioms to contexts within which can be processed independently"
s5.4	"derived axioms to contexts within which can be processed independently"	rdf:subject	"axioms to contexts within which can be processed independently"
s5.4	"independently processed"	rdfs:subClassOf	"processed"
s5.4	"can independently processed"	rdfs:subClassOf	"independently processed"
s5.4	"axioms to contexts"	rdfs:member	"axioms"
s5.4	"axioms to contexts"	rdfs:member	"contexts"
s5.4	"can independently processed within contexts"	rdfs:member	"can independently processed"
s5.4	"can independently processed within contexts"	rdfs:member	"contexts"
s5.4	"derived axioms to contexts within which can be processed independently"	rdf:predicate	"derive"
s5.3	"we assign derived axioms to contexts within which can be processed independently"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"We"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"assign"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:object	"derived axioms contexts within which can be processed independently"
s5.3	"axioms contexts"	rdfs:member	"axioms"
s5.3	"axioms contexts"	rdfs:subClassOf	"contexts"
s5.3	"independently processed"	rdfs:subClassOf	"processed"
s5.3	"can independently processed"	rdfs:subClassOf	"independently processed"
s5.3	"derived axioms contexts"	rdfs:subClassOf	"axioms contexts"
s5.3	"can independently processed within derived axioms contexts"	rdfs:member	"can independently processed"
s5.3	"can independently processed within derived axioms contexts"	rdfs:member	"derived axioms contexts"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"variant of the given clause saturation algorithm for firstorder theorem"
s5.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"variant"
s5.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"clause saturation algorithm"
s5.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5.2	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.2	"firstorder theorem"	rdfs:member	"firstorder"
s5.2	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.2	"clause saturation"	rdfs:member	"clause"
s5.2	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5.2	"saturation algorithm"	rdfs:member	"saturation"
s5.2	"firstorder theorem"	rdfs:subClassOf	"theorem"
s5.2	"clause saturation"	rdfs:subClassOf	"saturation"
s5.2	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5.2	"given clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s5.2	"variant of given clause saturation algorithm"	rdfs:member	"variant"
s5.2	"variant of given clause saturation algorithm"	rdfs:member	"given clause saturation algorithm"
s5.2	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"given clause saturation algorithm"
s5.2	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"prove"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:object	"assign derived axioms to contexts within which can be processed independently"
s5.2	"assign derived axioms to contexts within which can be processed independently"	rdfs:member	"assign"
s5.2	"assign derived axioms to contexts within which can be processed independently"	rdfs:member	"axioms"
s5.2	"independently processed"	rdfs:subClassOf	"processed"
s5.2	"can independently processed"	rdfs:subClassOf	"independently processed"
s5.2	"derived axioms"	rdfs:subClassOf	"axioms"
s5.2	"assign to contexts"	rdfs:member	"assign"
s5.2	"assign to contexts"	rdfs:member	"contexts"
s5.2	"can independently processed within contexts"	rdfs:member	"can independently processed"
s5.2	"can independently processed within contexts"	rdfs:member	"contexts"
s5.1	"given clause saturation algorithm"
s5.1	"given clause saturation algorithm"	rdf:subject	"clause saturation algorithm"
s5.1	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.1	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.1	"clause saturation"	rdfs:member	"clause"
s5.1	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5.1	"saturation algorithm"	rdfs:member	"saturation"
s5.1	"clause saturation"	rdfs:subClassOf	"saturation"
s5.1	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5.1	"given clause saturation algorithm"	rdf:predicate	"give"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"solution"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"base"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:object	"variant of the given clause saturation algorithm for firstorder theorem proving where We assign derived axioms to contexts within which can be processed independently"
s5	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdfs:member	"variant"
s5	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdfs:member	"axioms"
s5	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdfs:member	"clause saturation algorithm"
s5	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdfs:member	"firstorder theorem"
s5	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5	"firstorder theorem"	rdfs:member	"firstorder"
s5	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5	"clause saturation"	rdfs:member	"clause"
s5	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5	"saturation algorithm"	rdfs:member	"saturation"
s5	"firstorder theorem"	rdfs:subClassOf	"theorem"
s5	"clause saturation"	rdfs:subClassOf	"saturation"
s5	"independently processed"	rdfs:subClassOf	"processed"
s5	"can independently processed"	rdfs:subClassOf	"independently processed"
s5	"derived axioms"	rdfs:subClassOf	"axioms"
s5	"where assign"	rdfs:subClassOf	"assign"
s5	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5	"given clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s5	"variant of given clause saturation algorithm"	rdfs:member	"variant"
s5	"variant of given clause saturation algorithm"	rdfs:member	"given clause saturation algorithm"
s5	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"given clause saturation algorithm"
s5	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5	"given clause saturation algorithm for firstorder theorem proving"	rdfs:member	"given clause saturation algorithm for firstorder theorem"
s5	"given clause saturation algorithm for firstorder theorem proving"	rdfs:member	"proving"
s5	"where assign to contexts"	rdfs:member	"where assign"
s5	"where assign to contexts"	rdfs:member	"contexts"
s5	"can independently processed within contexts"	rdfs:member	"can independently processed"
s5	"can independently processed within contexts"	rdfs:member	"contexts"
s4.5	"contexts within can used"
s4.5	"contexts within can used"	rdf:subject	"contexts"
s4.5	"contexts within can used"	rdf:predicate	"use"
s4.5	"contexts within can used"	local:AM-TMP	"within can"
s4.4	"derived axioms to contexts"
s4.4	"derived axioms to contexts"	rdf:subject	"axioms"
s4.4	"derived axioms to contexts"	rdf:predicate	"derive"
s4.4	"derived axioms to contexts"	rdf:object	"contexts"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"We"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"assign"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"derived axioms contexts"
s4.3	"axioms contexts"	rdfs:member	"axioms"
s4.3	"axioms contexts"	rdfs:subClassOf	"contexts"
s4.3	"derived axioms contexts"	rdfs:subClassOf	"axioms contexts"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	local:AM-LOC	"within which contexts within can be used"
s4.3	"can used"	rdfs:subClassOf	"used"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"variant of the given clause saturation algorithm for firstorder theorem"
s4.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"variant"
s4.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"clause saturation algorithm"
s4.2	"variant of the given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4.2	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.2	"firstorder theorem"	rdfs:member	"firstorder"
s4.2	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.2	"clause saturation"	rdfs:member	"clause"
s4.2	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4.2	"saturation algorithm"	rdfs:member	"saturation"
s4.2	"firstorder theorem"	rdfs:subClassOf	"theorem"
s4.2	"clause saturation"	rdfs:subClassOf	"saturation"
s4.2	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4.2	"given clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s4.2	"variant of given clause saturation algorithm"	rdfs:member	"variant"
s4.2	"variant of given clause saturation algorithm"	rdfs:member	"given clause saturation algorithm"
s4.2	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"given clause saturation algorithm"
s4.2	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"prove"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"assign derived axioms to contexts within which contexts within can be used"
s4.2	"assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"assign"
s4.2	"assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"axioms"
s4.2	"assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"contexts"
s4.2	"can used"	rdfs:subClassOf	"used"
s4.2	"derived axioms"	rdfs:subClassOf	"axioms"
s4.2	"assign to contexts"	rdfs:member	"assign"
s4.2	"assign to contexts"	rdfs:member	"contexts"
s4.2	"contexts within which"	rdfs:member	"contexts"
s4.2	"contexts within which"	rdfs:member	"which"
s4.1	"given clause saturation algorithm"
s4.1	"given clause saturation algorithm"	rdf:subject	"clause saturation algorithm"
s4.1	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"clause saturation"	rdfs:member	"clause"
s4.1	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4.1	"saturation algorithm"	rdfs:member	"saturation"
s4.1	"clause saturation"	rdfs:subClassOf	"saturation"
s4.1	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4.1	"given clause saturation algorithm"	rdf:predicate	"give"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"solution"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"base"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"variant of the given clause saturation algorithm for firstorder theorem proving where We assign derived axioms to contexts within which contexts within can be used"
s4	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"axioms"
s4	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"firstorder theorem"
s4	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"clause saturation algorithm"
s4	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"variant"
s4	"variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdfs:member	"contexts"
s4	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4	"firstorder theorem"	rdfs:member	"firstorder"
s4	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4	"clause saturation"	rdfs:member	"clause"
s4	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4	"saturation algorithm"	rdfs:member	"saturation"
s4	"firstorder theorem"	rdfs:subClassOf	"theorem"
s4	"clause saturation"	rdfs:subClassOf	"saturation"
s4	"can used"	rdfs:subClassOf	"used"
s4	"derived axioms"	rdfs:subClassOf	"axioms"
s4	"where assign"	rdfs:subClassOf	"assign"
s4	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4	"given clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s4	"variant of given clause saturation algorithm"	rdfs:member	"variant"
s4	"variant of given clause saturation algorithm"	rdfs:member	"given clause saturation algorithm"
s4	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"given clause saturation algorithm"
s4	"given clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4	"given clause saturation algorithm for firstorder theorem proving"	rdfs:member	"given clause saturation algorithm for firstorder theorem"
s4	"given clause saturation algorithm for firstorder theorem proving"	rdfs:member	"proving"
s4	"where assign to contexts"	rdfs:member	"where assign"
s4	"where assign to contexts"	rdfs:member	"contexts"
s4	"contexts within which"	rdfs:member	"contexts"
s4	"contexts within which"	rdfs:member	"which"
s3.1	"our procedure can take advantage of multiple processorscores"
s3.1	"our procedure can take advantage of multiple processorscores"	rdf:subject	"procedure"
s3.1	"our procedure can take advantage of multiple processorscores"	rdf:predicate	"take"
s3.1	"our procedure can take advantage of multiple processorscores"	rdf:object	"advantage multiple processorscores"
s3.1	"multiple processorscores"	rdfs:member	"multiple"
s3.1	"advantage multiple"	rdfs:member	"advantage"
s3.1	"multiple processorscores"	rdfs:subClassOf	"processorscores"
s3.1	"advantage multiple processorscores"	rdfs:subClassOf	"processorscores"
s3.1	"advantage multiple processorscores"	rdfs:member	"advantage multiple"
s3.1	"advantage multiple"	rdfs:subClassOf	"multiple"
s3.1	"advantage multiple processorscores"	rdfs:subClassOf	"multiple processorscores"
s3.1	"our procedure can take advantage of multiple processorscores"	local:AM-MOD	"can"
s3	"distinguishing property"
s3	"distinguishing property"	rdf:subject	"property"
s3	"distinguishing property"	rdf:predicate	"distinguish"
s2	"multiple processorscores which increasingly prevail in computer systems"
s2	"multiple processorscores which increasingly prevail in computer systems"	rdf:subject	"multiple processorscores"
s2	"multiple processorscores"	rdfs:subClassOf	"processorscores"
s2	"multiple processorscores"	rdfs:member	"multiple"
s2	"multiple processorscores which increasingly prevail in computer systems"	rdf:predicate	"prevail"
s2	"multiple processorscores which increasingly prevail in computer systems"	local:AM-ADV	"increasingly"
s2	"multiple processorscores which increasingly prevail in computer systems"	local:AM-LOC	"computer systems"
s2	"computer systems"	rdfs:subClassOf	"systems"
s2	"computer systems"	rdfs:member	"computer"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	rdf:subject	"ontologies"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	rdf:predicate	"express"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	local:AM-LOC	"polynomial fragment ELH R of the OWL 2 EL profile"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"owl"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"polynomial fragment elh r"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"el profile"
s1	"polynomial fragment elh r"	rdfs:subClassOf	"r"
s1	"polynomial fragment"	rdfs:member	"polynomial"
s1	"polynomial fragment"	rdfs:subClassOf	"fragment"
s1	"fragment elh r"	rdfs:member	"fragment elh"
s1	"polynomial fragment elh r"	rdfs:member	"polynomial fragment elh"
s1	"polynomial fragment elh"	rdfs:subClassOf	"elh"
s1	"fragment elh"	rdfs:member	"fragment"
s1	"fragment elh r"	rdfs:subClassOf	"r"
s1	"elh r"	rdfs:member	"elh"
s1	"el profile"	rdfs:subClassOf	"profile"
s1	"fragment elh"	rdfs:subClassOf	"elh"
s1	"el profile"	rdfs:member	"el"
s1	"polynomial fragment elh"	rdfs:member	"polynomial fragment"
s1	"elh r"	rdfs:subClassOf	"r"
s1	"2 el profile"	rdfs:subClassOf	"el profile"
s1	"owl 2 el profile"	rdfs:subClassOf	"2 el profile"
s1	"fragment elh r"	rdfs:subClassOf	"elh r"
s1	"polynomial fragment elh r"	rdfs:subClassOf	"fragment elh r"
s1	"polynomial fragment elh r of owl 2 el profile"	rdfs:member	"polynomial fragment elh r"
s1	"polynomial fragment elh r of owl 2 el profile"	rdfs:member	"owl 2 el profile"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:subject	"We"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:predicate	"describe"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:object	"optimised consequencebased procedure for classification of ontologies"
s0	"optimised consequencebased procedure for classification of ontologies"	rdfs:member	"classification"
s0	"optimised consequencebased procedure for classification of ontologies"	rdfs:member	"consequencebased procedure"
s0	"optimised consequencebased procedure for classification of ontologies"	rdfs:member	"ontologies"
s0	"consequencebased procedure"	rdfs:subClassOf	"procedure"
s0	"consequencebased procedure"	rdfs:member	"consequencebased"
s0	"optimised consequencebased procedure"	rdfs:subClassOf	"consequencebased procedure"
s0	"optimised consequencebased procedure for classification"	rdfs:member	"optimised consequencebased procedure"
s0	"optimised consequencebased procedure for classification"	rdfs:member	"classification"
s0	"classification of ontologies"	rdfs:member	"classification"
s0	"classification of ontologies"	rdfs:member	"ontologies"
