s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"
s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:subject	"one of widelyused medical ontology snomed ct"
s13	"one of widelyused medical ontology snomed ct"	rdfs:member	"widelyused medical ontology"
s13	"one of widelyused medical ontology snomed ct"	rdfs:member	"ct"
s13	"widelyused medical ontology"	rdfs:member	"widelyused medical"
s13	"widelyused medical ontology"	rdfs:subClassOf	"ontology"
s13	"medical ontology"	rdfs:subClassOf	"ontology"
s13	"widelyused medical"	rdfs:member	"widelyused"
s13	"widelyused medical"	rdfs:subClassOf	"medical"
s13	"medical ontology"	rdfs:member	"medical"
s13	"widelyused medical ontology"	rdfs:subClassOf	"medical ontology"
s13	"one of widelyused medical ontology"	rdfs:member	"one"
s13	"one of widelyused medical ontology"	rdfs:member	"widelyused medical ontology"
s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:predicate	"classify"
s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	rdf:object	"little a 5 second"
s13	"5 second"	rdfs:subClassOf	"second"
s13	"little 5 second"	rdfs:subClassOf	"5 second"
s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	local:AM-DIS	"particular"
s13	"in particular one of widelyused medical ontologies snomed ct can classified in as little as 5 seconds"	local:AM-MOD	"can"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	rdf:subject	"one of the largest snomed ct"
s12	"largest snomed"	rdfs:subClassOf	"snomed"
s12	"largest snomed"	rdfs:member	"largest"
s12	"largest snomed ct"	rdfs:member	"largest snomed"
s12	"snomed ct"	rdfs:subClassOf	"ct"
s12	"largest snomed ct"	rdfs:subClassOf	"ct"
s12	"snomed ct"	rdfs:member	"snomed"
s12	"largest snomed ct"	rdfs:subClassOf	"snomed ct"
s12	"one largest snomed ct"	rdfs:subClassOf	"largest snomed ct"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	rdf:predicate	"classify"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-DIS	"particular"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-MNR	"little"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-MOD	"can"
s12	"in particular one of the largest snomed ct can classified in as little as 5 seconds"	local:AM-TMP	"5 second"
s12	"5 second"	rdfs:subClassOf	"second"
s11	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"
s11	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:subject	"preliminary experimental result"
s11	"experimental result"	rdfs:member	"experimental"
s11	"experimental result"	rdfs:subClassOf	"result"
s11	"preliminary experimental"	rdfs:member	"preliminary"
s11	"preliminary experimental result"	rdfs:subClassOf	"result"
s11	"preliminary experimental result"	rdfs:member	"preliminary experimental"
s11	"preliminary experimental"	rdfs:subClassOf	"experimental"
s11	"preliminary experimental result"	rdfs:subClassOf	"experimental result"
s11	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:predicate	"demonstrate"
s11	"preliminary experimental results demonstrating a substantial speedup of ontology classification on multicore systems"	rdf:object	"substantial speedup of ontology classification on multicore system"
s11	"substantial speedup of ontology classification on multicore system"	rdfs:member	"ontology classification"
s11	"substantial speedup of ontology classification on multicore system"	rdfs:member	"multicore system"
s11	"substantial speedup of ontology classification on multicore system"	rdfs:member	"substantial speedup"
s11	"multicore system"	rdfs:member	"multicore"
s11	"ontology classification"	rdfs:subClassOf	"classification"
s11	"substantial speedup"	rdfs:member	"substantial"
s11	"ontology classification"	rdfs:member	"ontology"
s11	"multicore system"	rdfs:subClassOf	"system"
s11	"substantial speedup"	rdfs:subClassOf	"speedup"
s11	"substantial speedup of ontology classification"	rdfs:member	"substantial speedup"
s11	"substantial speedup of ontology classification"	rdfs:member	"ontology classification"
s11	"substantial speedup of ontology classification on multicore system"	rdfs:member	"substantial speedup of ontology classification"
s11	"substantial speedup of ontology classification on multicore system"	rdfs:member	"multicore system"
s10	"we report on preliminary experimental results"
s10	"we report on preliminary experimental results"	rdf:subject	"we"
s10	"we report on preliminary experimental results"	rdf:predicate	"report"
s10	"we report on preliminary experimental results"	local:AM-LOC	"preliminary experimental result"
s10	"experimental result"	rdfs:member	"experimental"
s10	"experimental result"	rdfs:subClassOf	"result"
s10	"preliminary experimental"	rdfs:member	"preliminary"
s10	"preliminary experimental result"	rdfs:subClassOf	"result"
s10	"preliminary experimental result"	rdfs:member	"preliminary experimental"
s10	"preliminary experimental"	rdfs:subClassOf	"experimental"
s10	"preliminary experimental result"	rdfs:subClassOf	"experimental result"
s9.1	"this employing lockfree data structures such as compareandswap"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:subject	"this"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:predicate	"employ"
s9.1	"this employing lockfree data structures such as compareandswap"	rdf:object	"lockfree data structure such a compareandswap"
s9.1	"lockfree data structure such a compareandswap"	rdfs:member	"lockfree data structure"
s9.1	"lockfree data structure such a compareandswap"	rdfs:member	"compareandswap"
s9.1	"lockfree data"	rdfs:member	"lockfree"
s9.1	"lockfree data structure"	rdfs:member	"lockfree data"
s9.1	"lockfree data"	rdfs:subClassOf	"data"
s9.1	"data structure"	rdfs:subClassOf	"structure"
s9.1	"data structure"	rdfs:member	"data"
s9.1	"lockfree data structure"	rdfs:subClassOf	"structure"
s9.1	"such compareandswap"	rdfs:subClassOf	"compareandswap"
s9.1	"lockfree data structure"	rdfs:subClassOf	"data structure"
s9	"this achieved by employing lockfree data structures such as compareandswap"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:subject	"employ lockfree data structure such a compareandswap"
s9	"employ lockfree data structure such a compareandswap"	rdfs:member	"employ lockfree data structure"
s9	"employ lockfree data structure such a compareandswap"	rdfs:member	"compareandswap"
s9	"lockfree data"	rdfs:member	"lockfree"
s9	"employ lockfree data"	rdfs:subClassOf	"data"
s9	"employ lockfree data structure"	rdfs:member	"employ lockfree data"
s9	"employ lockfree"	rdfs:subClassOf	"lockfree"
s9	"lockfree data structure"	rdfs:member	"lockfree data"
s9	"lockfree data"	rdfs:subClassOf	"data"
s9	"data structure"	rdfs:subClassOf	"structure"
s9	"data structure"	rdfs:member	"data"
s9	"employ lockfree"	rdfs:member	"employ"
s9	"employ lockfree data"	rdfs:member	"employ lockfree"
s9	"lockfree data structure"	rdfs:subClassOf	"structure"
s9	"employ lockfree data structure"	rdfs:subClassOf	"structure"
s9	"such compareandswap"	rdfs:subClassOf	"compareandswap"
s9	"lockfree data structure"	rdfs:subClassOf	"data structure"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:predicate	"achieve"
s9	"this achieved by employing lockfree data structures such as compareandswap"	rdf:object	"this"
s8.1	"this employing operations such as compareandswap"
s8.1	"this employing operations such as compareandswap"	rdf:subject	"this"
s8.1	"this employing operations such as compareandswap"	rdf:predicate	"employ"
s8.1	"this employing operations such as compareandswap"	rdf:object	"operation such a compareandswap"
s8.1	"operation such a compareandswap"	rdfs:member	"operation"
s8.1	"operation such a compareandswap"	rdfs:member	"compareandswap"
s8.1	"such compareandswap"	rdfs:subClassOf	"compareandswap"
s8	"this achieved by employing operations such as compareandswap"
s8	"this achieved by employing operations such as compareandswap"	rdf:subject	"employ operation such a compareandswap"
s8	"employ operation such a compareandswap"	rdfs:member	"employ operation"
s8	"employ operation such a compareandswap"	rdfs:member	"compareandswap"
s8	"employ operation"	rdfs:subClassOf	"operation"
s8	"employ operation"	rdfs:member	"employ"
s8	"such compareandswap"	rdfs:subClassOf	"compareandswap"
s8	"this achieved by employing operations such as compareandswap"	rdf:predicate	"achieve"
s8	"this achieved by employing operations such as compareandswap"	rdf:object	"this"
s7	"managing concurrent computations is minimal"
s7	"managing concurrent computations is minimal"	rdf:subject	"concurrent computation be minimal"
s7	"concurrent computation"	rdfs:member	"concurrent"
s7	"concurrent computation"	rdfs:subClassOf	"computation"
s7	"managing concurrent computations is minimal"	rdf:predicate	"manage"
s6	"we describe an implementation of we within the javabased reasoner elk"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:subject	"we"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:predicate	"describe"
s6	"we describe an implementation of we within the javabased reasoner elk"	rdf:object	"implementation of we within the javabased reasoner elk"
s6	"implementation of we within the javabased reasoner elk"	rdfs:member	"javabased reasoner elk"
s6	"implementation of we within the javabased reasoner elk"	rdfs:member	"implementation"
s6	"reasoner elk"	rdfs:subClassOf	"elk"
s6	"javabased reasoner"	rdfs:member	"javabased"
s6	"javabased reasoner elk"	rdfs:subClassOf	"elk"
s6	"javabased reasoner elk"	rdfs:member	"javabased reasoner"
s6	"reasoner elk"	rdfs:member	"reasoner"
s6	"javabased reasoner"	rdfs:subClassOf	"reasoner"
s6	"javabased reasoner elk"	rdfs:subClassOf	"reasoner elk"
s6	"implementation of we"	rdfs:member	"implementation"
s6	"implementation of we"	rdfs:member	"we"
s6	"implementation of we within javabased reasoner elk"	rdfs:member	"implementation of we"
s6	"implementation of we within javabased reasoner elk"	rdfs:member	"javabased reasoner elk"
s5.5	"contexts within which can processed independently"
s5.5	"contexts within which can processed independently"	rdf:predicate	"process"
s5.5	"contexts within which can processed independently"	local:AM-MNR	"independently"
s5.5	"contexts within which can processed independently"	local:AM-MOD	"can"
s5.4	"derived axioms to contexts"
s5.4	"derived axioms to contexts"	rdf:subject	"axiom"
s5.4	"derived axioms to contexts"	rdf:predicate	"derive"
s5.4	"derived axioms to contexts"	rdf:object	"context"
s5.3	"we assign derived axioms to contexts within which can be processed independently"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"we"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"assign"
s5.3	"we assign derived axioms to contexts within which can be processed independently"	rdf:object	"derive axiom context within which can be process independently"
s5.3	"axiom context"	rdfs:member	"axiom"
s5.3	"derive axiom"	rdfs:subClassOf	"axiom"
s5.3	"derive axiom"	rdfs:member	"derive"
s5.3	"derive axiom context"	rdfs:subClassOf	"context"
s5.3	"derive axiom context"	rdfs:member	"derive axiom"
s5.3	"axiom context"	rdfs:subClassOf	"context"
s5.3	"independently process"	rdfs:subClassOf	"process"
s5.3	"can independently process"	rdfs:subClassOf	"independently process"
s5.3	"can independently process within axiom context"	rdfs:member	"can independently process"
s5.3	"can independently process within axiom context"	rdfs:member	"axiom context"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"variant of the give clause saturation algorithm for firstorder theorem"
s5.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s5.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"variant"
s5.2	"firstorder theorem"	rdfs:subClassOf	"theorem"
s5.2	"give clause saturation"	rdfs:subClassOf	"saturation"
s5.2	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5.2	"give clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.2	"give clause"	rdfs:member	"give"
s5.2	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.2	"firstorder theorem"	rdfs:member	"firstorder"
s5.2	"saturation algorithm"	rdfs:member	"saturation"
s5.2	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.2	"clause saturation"	rdfs:member	"clause"
s5.2	"give clause"	rdfs:subClassOf	"clause"
s5.2	"give clause saturation algorithm"	rdfs:member	"give clause saturation"
s5.2	"give clause saturation"	rdfs:member	"give clause"
s5.2	"clause saturation"	rdfs:subClassOf	"saturation"
s5.2	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5.2	"give clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s5.2	"variant of give clause saturation algorithm"	rdfs:member	"variant"
s5.2	"variant of give clause saturation algorithm"	rdfs:member	"give clause saturation algorithm"
s5.2	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s5.2	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"prove"
s5.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:object	"assign derive axiom to context within which can be process independently"
s5.2	"assign derive"	rdfs:subClassOf	"derive"
s5.2	"assign derive axiom"	rdfs:subClassOf	"axiom"
s5.2	"assign derive axiom"	rdfs:member	"assign derive"
s5.2	"derive axiom"	rdfs:subClassOf	"axiom"
s5.2	"derive axiom"	rdfs:member	"derive"
s5.2	"assign derive"	rdfs:member	"assign"
s5.2	"independently process"	rdfs:subClassOf	"process"
s5.2	"can independently process"	rdfs:subClassOf	"independently process"
s5.2	"derive to context"	rdfs:member	"derive"
s5.2	"derive to context"	rdfs:member	"context"
s5.2	"can independently process within context"	rdfs:member	"can independently process"
s5.2	"can independently process within context"	rdfs:member	"context"
s5.1	"given clause saturation algorithm"
s5.1	"given clause saturation algorithm"	rdf:subject	"clause saturation algorithm"
s5.1	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5.1	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.1	"clause saturation"	rdfs:subClassOf	"saturation"
s5.1	"saturation algorithm"	rdfs:member	"saturation"
s5.1	"clause saturation"	rdfs:member	"clause"
s5.1	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5.1	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5.1	"given clause saturation algorithm"	rdf:predicate	"give"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:subject	"solution"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:predicate	"base"
s5	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which can be processed independently"	rdf:object	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which can be process independently"
s5	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which can be process independently"	rdfs:member	"firstorder theorem"
s5	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which can be process independently"	rdfs:member	"give clause saturation algorithm"
s5	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which can be process independently"	rdfs:member	"variant"
s5	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which can be process independently"	rdfs:member	"derive axiom"
s5	"firstorder theorem"	rdfs:subClassOf	"theorem"
s5	"give clause saturation"	rdfs:subClassOf	"saturation"
s5	"clause saturation algorithm"	rdfs:member	"clause saturation"
s5	"give clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5	"derive axiom"	rdfs:subClassOf	"axiom"
s5	"give clause"	rdfs:member	"give"
s5	"derive axiom"	rdfs:member	"derive"
s5	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s5	"firstorder theorem"	rdfs:member	"firstorder"
s5	"saturation algorithm"	rdfs:member	"saturation"
s5	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s5	"clause saturation"	rdfs:member	"clause"
s5	"give clause"	rdfs:subClassOf	"clause"
s5	"give clause saturation algorithm"	rdfs:member	"give clause saturation"
s5	"give clause saturation"	rdfs:member	"give clause"
s5	"clause saturation"	rdfs:subClassOf	"saturation"
s5	"independently process"	rdfs:subClassOf	"process"
s5	"can independently process"	rdfs:subClassOf	"independently process"
s5	"where assign"	rdfs:subClassOf	"assign"
s5	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s5	"give clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s5	"variant of give clause saturation algorithm"	rdfs:member	"variant"
s5	"variant of give clause saturation algorithm"	rdfs:member	"give clause saturation algorithm"
s5	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s5	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s5	"derive to context"	rdfs:member	"derive"
s5	"derive to context"	rdfs:member	"context"
s5	"can independently process within context"	rdfs:member	"can independently process"
s5	"can independently process within context"	rdfs:member	"context"
s4.5	"contexts within can used"
s4.5	"contexts within can used"	rdf:subject	"context"
s4.5	"contexts within can used"	rdf:predicate	"use"
s4.5	"contexts within can used"	local:AM-TMP	"within can"
s4.4	"derived axioms to contexts"
s4.4	"derived axioms to contexts"	rdf:subject	"axiom"
s4.4	"derived axioms to contexts"	rdf:predicate	"derive"
s4.4	"derived axioms to contexts"	rdf:object	"context"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"we"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"assign"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"derive axiom context"
s4.3	"axiom context"	rdfs:member	"axiom"
s4.3	"derive axiom"	rdfs:subClassOf	"axiom"
s4.3	"derive axiom"	rdfs:member	"derive"
s4.3	"derive axiom context"	rdfs:subClassOf	"context"
s4.3	"derive axiom context"	rdfs:member	"derive axiom"
s4.3	"axiom context"	rdfs:subClassOf	"context"
s4.3	"we assign derived axioms to contexts within which contexts within can be used"	local:AM-LOC	"within which context within can be use"
s4.3	"within which context within can be use"	rdfs:member	"context"
s4.3	"within which context within can be use"	rdfs:member	"use"
s4.3	"can use"	rdfs:subClassOf	"use"
s4.3	"can use within which"	rdfs:member	"can use"
s4.3	"can use within which"	rdfs:member	"which"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"variant of the give clause saturation algorithm for firstorder theorem"
s4.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s4.2	"variant of the give clause saturation algorithm for firstorder theorem"	rdfs:member	"variant"
s4.2	"firstorder theorem"	rdfs:subClassOf	"theorem"
s4.2	"give clause saturation"	rdfs:subClassOf	"saturation"
s4.2	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4.2	"give clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.2	"give clause"	rdfs:member	"give"
s4.2	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.2	"firstorder theorem"	rdfs:member	"firstorder"
s4.2	"saturation algorithm"	rdfs:member	"saturation"
s4.2	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.2	"clause saturation"	rdfs:member	"clause"
s4.2	"give clause"	rdfs:subClassOf	"clause"
s4.2	"give clause saturation algorithm"	rdfs:member	"give clause saturation"
s4.2	"give clause saturation"	rdfs:member	"give clause"
s4.2	"clause saturation"	rdfs:subClassOf	"saturation"
s4.2	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4.2	"give clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s4.2	"variant of give clause saturation algorithm"	rdfs:member	"variant"
s4.2	"variant of give clause saturation algorithm"	rdfs:member	"give clause saturation algorithm"
s4.2	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s4.2	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"prove"
s4.2	"a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"assign derive axiom to context within which context within can be use"
s4.2	"assign derive axiom to context within which context within can be use"	rdfs:member	"assign derive axiom"
s4.2	"assign derive axiom to context within which context within can be use"	rdfs:member	"use"
s4.2	"assign derive axiom to context within which context within can be use"	rdfs:member	"context"
s4.2	"assign derive"	rdfs:subClassOf	"derive"
s4.2	"assign derive axiom"	rdfs:subClassOf	"axiom"
s4.2	"assign derive axiom"	rdfs:member	"assign derive"
s4.2	"derive axiom"	rdfs:subClassOf	"axiom"
s4.2	"derive axiom"	rdfs:member	"derive"
s4.2	"assign derive"	rdfs:member	"assign"
s4.2	"can use"	rdfs:subClassOf	"use"
s4.2	"derive to context"	rdfs:member	"derive"
s4.2	"derive to context"	rdfs:member	"context"
s4.2	"can use within context"	rdfs:member	"can use"
s4.2	"can use within context"	rdfs:member	"context"
s4.1	"given clause saturation algorithm"
s4.1	"given clause saturation algorithm"	rdf:subject	"clause saturation algorithm"
s4.1	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4.1	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"clause saturation"	rdfs:subClassOf	"saturation"
s4.1	"saturation algorithm"	rdfs:member	"saturation"
s4.1	"clause saturation"	rdfs:member	"clause"
s4.1	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4.1	"given clause saturation algorithm"	rdf:predicate	"give"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:subject	"solution"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:predicate	"base"
s4	"we solution based on a variant of the given clause saturation algorithm for firstorder theorem proving where we assign derived axioms to contexts within which contexts within can be used"	rdf:object	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"context"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"firstorder theorem"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"variant"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"use"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"give clause saturation algorithm"
s4	"variant of the give clause saturation algorithm for firstorder theorem prove where we assign derive axiom to context within which context within can be use"	rdfs:member	"derive axiom"
s4	"firstorder theorem"	rdfs:subClassOf	"theorem"
s4	"give clause saturation"	rdfs:subClassOf	"saturation"
s4	"clause saturation algorithm"	rdfs:member	"clause saturation"
s4	"give clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4	"derive axiom"	rdfs:subClassOf	"axiom"
s4	"give clause"	rdfs:member	"give"
s4	"derive axiom"	rdfs:member	"derive"
s4	"clause saturation algorithm"	rdfs:subClassOf	"algorithm"
s4	"firstorder theorem"	rdfs:member	"firstorder"
s4	"saturation algorithm"	rdfs:member	"saturation"
s4	"saturation algorithm"	rdfs:subClassOf	"algorithm"
s4	"clause saturation"	rdfs:member	"clause"
s4	"give clause"	rdfs:subClassOf	"clause"
s4	"give clause saturation algorithm"	rdfs:member	"give clause saturation"
s4	"give clause saturation"	rdfs:member	"give clause"
s4	"clause saturation"	rdfs:subClassOf	"saturation"
s4	"can use"	rdfs:subClassOf	"use"
s4	"where assign"	rdfs:subClassOf	"assign"
s4	"clause saturation algorithm"	rdfs:subClassOf	"saturation algorithm"
s4	"give clause saturation algorithm"	rdfs:subClassOf	"clause saturation algorithm"
s4	"variant of give clause saturation algorithm"	rdfs:member	"variant"
s4	"variant of give clause saturation algorithm"	rdfs:member	"give clause saturation algorithm"
s4	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"give clause saturation algorithm"
s4	"give clause saturation algorithm for firstorder theorem"	rdfs:member	"firstorder theorem"
s4	"derive to context"	rdfs:member	"derive"
s4	"derive to context"	rdfs:member	"context"
s4	"can use within context"	rdfs:member	"can use"
s4	"can use within context"	rdfs:member	"context"
s3	"multiple processorscores which increasingly prevail in computer systems"
s3	"multiple processorscores which increasingly prevail in computer systems"	rdf:subject	"multiple processorscores"
s3	"multiple processorscores"	rdfs:subClassOf	"processorscores"
s3	"multiple processorscores"	rdfs:member	"multiple"
s3	"multiple processorscores which increasingly prevail in computer systems"	rdf:predicate	"prevail"
s3	"multiple processorscores which increasingly prevail in computer systems"	local:AM-ADV	"increasingly"
s3	"multiple processorscores which increasingly prevail in computer systems"	local:AM-LOC	"computer system"
s3	"computer system"	rdfs:member	"computer"
s3	"computer system"	rdfs:subClassOf	"system"
s2.1	"our procedure can take advantage of multiple processorscores"
s2.1	"our procedure can take advantage of multiple processorscores"	rdf:subject	"procedure"
s2.1	"our procedure can take advantage of multiple processorscores"	rdf:predicate	"take"
s2.1	"our procedure can take advantage of multiple processorscores"	rdf:object	"advantage multiple processorscores"
s2.1	"multiple processorscores"	rdfs:subClassOf	"processorscores"
s2.1	"advantage multiple"	rdfs:subClassOf	"multiple"
s2.1	"advantage multiple"	rdfs:member	"advantage"
s2.1	"multiple processorscores"	rdfs:member	"multiple"
s2.1	"advantage multiple processorscores"	rdfs:subClassOf	"processorscores"
s2.1	"advantage multiple processorscores"	rdfs:member	"advantage multiple"
s2.1	"advantage multiple processorscores"	rdfs:subClassOf	"multiple processorscores"
s2.1	"our procedure can take advantage of multiple processorscores"	local:AM-MOD	"can"
s2	"distinguishing property"
s2	"distinguishing property"	rdf:subject	"property"
s2	"distinguishing property"	rdf:predicate	"distinguish"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	rdf:subject	"ontology"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	rdf:predicate	"express"
s1	"ontologies expressed in a polynomial fragment elh r of the owl 2 el profile"	local:AM-LOC	"polynomial fragment elh r of the owl 2 el profile"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"el profile"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"polynomial fragment elh r"
s1	"polynomial fragment elh r of the owl 2 el profile"	rdfs:member	"owl"
s1	"elh r"	rdfs:member	"elh"
s1	"fragment elh r"	rdfs:member	"fragment elh"
s1	"polynomial fragment"	rdfs:subClassOf	"fragment"
s1	"polynomial fragment elh"	rdfs:member	"polynomial fragment"
s1	"polynomial fragment elh r"	rdfs:member	"polynomial fragment elh"
s1	"el profile"	rdfs:subClassOf	"profile"
s1	"elh r"	rdfs:subClassOf	"r"
s1	"fragment elh"	rdfs:member	"fragment"
s1	"polynomial fragment elh r"	rdfs:subClassOf	"r"
s1	"fragment elh r"	rdfs:subClassOf	"r"
s1	"el profile"	rdfs:member	"el"
s1	"polynomial fragment"	rdfs:member	"polynomial"
s1	"polynomial fragment elh"	rdfs:subClassOf	"elh"
s1	"fragment elh"	rdfs:subClassOf	"elh"
s1	"2 el profile"	rdfs:subClassOf	"el profile"
s1	"owl 2 el profile"	rdfs:subClassOf	"2 el profile"
s1	"fragment elh r"	rdfs:subClassOf	"elh r"
s1	"polynomial fragment elh r"	rdfs:subClassOf	"fragment elh r"
s1	"polynomial fragment elh r of owl 2 el profile"	rdfs:member	"polynomial fragment elh r"
s1	"polynomial fragment elh r of owl 2 el profile"	rdfs:member	"owl 2 el profile"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:subject	"we"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:predicate	"describe"
s0	"we describe an optimised consequencebased procedure for classification of ontologies"	rdf:object	"optimise consequencebased procedure for classification of ontology"
s0	"optimise consequencebased procedure for classification of ontology"	rdfs:member	"optimise"
s0	"optimise consequencebased procedure for classification of ontology"	rdfs:member	"consequencebased procedure"
s0	"optimise consequencebased procedure for classification of ontology"	rdfs:member	"classification"
s0	"optimise consequencebased procedure for classification of ontology"	rdfs:member	"ontology"
s0	"consequencebased procedure"	rdfs:subClassOf	"procedure"
s0	"consequencebased procedure"	rdfs:member	"consequencebased"
s0	"consequencebased procedure for classification"	rdfs:member	"consequencebased procedure"
s0	"consequencebased procedure for classification"	rdfs:member	"classification"
s0	"classification of ontology"	rdfs:member	"classification"
s0	"classification of ontology"	rdfs:member	"ontology"
