s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"
s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:subject	"approximate membership function"
s18.1	"approximate membership"	rdfs:subClassOf	"membership"
s18.1	"membership function"	rdfs:member	"membership"
s18.1	"membership function"	rdfs:subClassOf	"function"
s18.1	"approximate membership"	rdfs:member	"approximate"
s18.1	"approximate membership function"	rdfs:subClassOf	"function"
s18.1	"approximate membership function"	rdfs:member	"approximate membership"
s18.1	"approximate membership function"	rdfs:subClassOf	"membership function"
s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:predicate	"improve"
s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:object	"clientside query process with minimal impact on the server interface"
s18.1	"clientside query process with minimal impact on the server interface"	rdfs:member	"server interface"
s18.1	"clientside query process with minimal impact on the server interface"	rdfs:member	"minimal impact"
s18.1	"clientside query process with minimal impact on the server interface"	rdfs:member	"clientside query process"
s18.1	"query process"	rdfs:member	"query"
s18.1	"minimal impact"	rdfs:subClassOf	"impact"
s18.1	"clientside query"	rdfs:subClassOf	"query"
s18.1	"clientside query process"	rdfs:subClassOf	"process"
s18.1	"clientside query process"	rdfs:member	"clientside query"
s18.1	"clientside query"	rdfs:member	"clientside"
s18.1	"query process"	rdfs:subClassOf	"process"
s18.1	"server interface"	rdfs:member	"server"
s18.1	"server interface"	rdfs:subClassOf	"interface"
s18.1	"minimal impact"	rdfs:member	"minimal"
s18.1	"clientside query process"	rdfs:subClassOf	"query process"
s18.1	"clientside query process with minimal impact"	rdfs:member	"clientside query process"
s18.1	"clientside query process with minimal impact"	rdfs:member	"minimal impact"
s18.1	"minimal impact on server interface"	rdfs:member	"minimal impact"
s18.1	"minimal impact on server interface"	rdfs:member	"server interface"
s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	local:AM-ADV	"partly"
s18.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	local:AM-MOD	"can"
s18	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"
s18	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:subject	"this"
s18	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:predicate	"indicate"
s18	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server interface"	rdf:object	"approximate membership function can partly improve the clientside query process with minimal impact on the server interface"
s18	"approximate membership function can partly improve the clientside query process with minimal impact on the server interface"	rdfs:member	"server interface"
s18	"approximate membership function can partly improve the clientside query process with minimal impact on the server interface"	rdfs:member	"approximate membership function"
s18	"approximate membership function can partly improve the clientside query process with minimal impact on the server interface"	rdfs:member	"clientside query process"
s18	"approximate membership function can partly improve the clientside query process with minimal impact on the server interface"	rdfs:member	"minimal impact"
s18	"approximate membership"	rdfs:subClassOf	"membership"
s18	"query process"	rdfs:member	"query"
s18	"membership function"	rdfs:member	"membership"
s18	"minimal impact"	rdfs:subClassOf	"impact"
s18	"membership function"	rdfs:subClassOf	"function"
s18	"approximate membership"	rdfs:member	"approximate"
s18	"clientside query"	rdfs:subClassOf	"query"
s18	"clientside query process"	rdfs:subClassOf	"process"
s18	"approximate membership function"	rdfs:subClassOf	"function"
s18	"clientside query process"	rdfs:member	"clientside query"
s18	"clientside query"	rdfs:member	"clientside"
s18	"query process"	rdfs:subClassOf	"process"
s18	"server interface"	rdfs:member	"server"
s18	"approximate membership function"	rdfs:member	"approximate membership"
s18	"server interface"	rdfs:subClassOf	"interface"
s18	"minimal impact"	rdfs:member	"minimal"
s18	"clientside query process"	rdfs:subClassOf	"query process"
s18	"partly improve"	rdfs:subClassOf	"improve"
s18	"can partly improve"	rdfs:subClassOf	"partly improve"
s18	"approximate membership function"	rdfs:subClassOf	"membership function"
s18	"can partly improve with minimal impact"	rdfs:member	"can partly improve"
s18	"can partly improve with minimal impact"	rdfs:member	"minimal impact"
s18	"minimal impact on server interface"	rdfs:member	"minimal impact"
s18	"minimal impact on server interface"	rdfs:member	"server interface"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:subject	"approximate membership function"
s17.1	"approximate membership"	rdfs:subClassOf	"membership"
s17.1	"membership function"	rdfs:member	"membership"
s17.1	"membership function"	rdfs:subClassOf	"function"
s17.1	"approximate membership"	rdfs:member	"approximate"
s17.1	"approximate membership function"	rdfs:subClassOf	"function"
s17.1	"approximate membership function"	rdfs:member	"approximate membership"
s17.1	"approximate membership function"	rdfs:subClassOf	"membership function"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:predicate	"improve"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:object	"clientside query process with minimal impact on the server"
s17.1	"clientside query process with minimal impact on the server"	rdfs:member	"server"
s17.1	"clientside query process with minimal impact on the server"	rdfs:member	"minimal impact"
s17.1	"clientside query process with minimal impact on the server"	rdfs:member	"clientside query process"
s17.1	"query process"	rdfs:member	"query"
s17.1	"minimal impact"	rdfs:subClassOf	"impact"
s17.1	"clientside query"	rdfs:subClassOf	"query"
s17.1	"clientside query process"	rdfs:member	"clientside query"
s17.1	"clientside query"	rdfs:member	"clientside"
s17.1	"query process"	rdfs:subClassOf	"process"
s17.1	"clientside query process"	rdfs:subClassOf	"process"
s17.1	"minimal impact"	rdfs:member	"minimal"
s17.1	"clientside query process"	rdfs:subClassOf	"query process"
s17.1	"clientside query process with minimal impact"	rdfs:member	"clientside query process"
s17.1	"clientside query process with minimal impact"	rdfs:member	"minimal impact"
s17.1	"minimal impact on server"	rdfs:member	"minimal impact"
s17.1	"minimal impact on server"	rdfs:member	"server"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"	local:AM-ADV	"partly"
s17.1	"approximate membership functions can partly improve the clientside query process with minimal impact on the server"	local:AM-MOD	"can"
s17	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server"
s17	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:subject	"this"
s17	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:predicate	"indicate"
s17	"this indicates that approximate membership functions can partly improve the clientside query process with minimal impact on the server"	rdf:object	"approximate membership function can partly improve the clientside query process with minimal impact on the server"
s17	"approximate membership function can partly improve the clientside query process with minimal impact on the server"	rdfs:member	"server"
s17	"approximate membership function can partly improve the clientside query process with minimal impact on the server"	rdfs:member	"approximate membership function"
s17	"approximate membership function can partly improve the clientside query process with minimal impact on the server"	rdfs:member	"clientside query process"
s17	"approximate membership function can partly improve the clientside query process with minimal impact on the server"	rdfs:member	"minimal impact"
s17	"approximate membership"	rdfs:subClassOf	"membership"
s17	"query process"	rdfs:member	"query"
s17	"membership function"	rdfs:member	"membership"
s17	"minimal impact"	rdfs:subClassOf	"impact"
s17	"membership function"	rdfs:subClassOf	"function"
s17	"approximate membership"	rdfs:member	"approximate"
s17	"clientside query"	rdfs:subClassOf	"query"
s17	"approximate membership function"	rdfs:subClassOf	"function"
s17	"clientside query process"	rdfs:member	"clientside query"
s17	"clientside query"	rdfs:member	"clientside"
s17	"query process"	rdfs:subClassOf	"process"
s17	"approximate membership function"	rdfs:member	"approximate membership"
s17	"clientside query process"	rdfs:subClassOf	"process"
s17	"minimal impact"	rdfs:member	"minimal"
s17	"clientside query process"	rdfs:subClassOf	"query process"
s17	"partly improve"	rdfs:subClassOf	"improve"
s17	"can partly improve"	rdfs:subClassOf	"partly improve"
s17	"approximate membership function"	rdfs:subClassOf	"membership function"
s17	"can partly improve with minimal impact"	rdfs:member	"can partly improve"
s17	"can partly improve with minimal impact"	rdfs:member	"minimal impact"
s17	"minimal impact on server"	rdfs:member	"minimal impact"
s17	"minimal impact on server"	rdfs:member	"server"
s16	"query times however not improve likely due to slower metadata generation and transfer"
s16	"query times however not improve likely due to slower metadata generation and transfer"	rdf:subject	"query time however"
s16	"query time"	rdfs:subClassOf	"time"
s16	"query time"	rdfs:member	"query"
s16	"however time"	rdfs:subClassOf	"time"
s16	"query however time"	rdfs:subClassOf	"however time"
s16	"query times however not improve likely due to slower metadata generation and transfer"	rdf:predicate	"not improve"
s16	"query times however not improve likely due to slower metadata generation and transfer"	rdf:object	"likely due to slower metadata generation and transfer"
s16	"metadata generation"	rdfs:member	"metadata"
s16	"metadata generation"	rdfs:subClassOf	"generation"
s16	"slower metadata generation"	rdfs:subClassOf	"metadata generation"
s16	"likely slower metadata generation"	rdfs:subClassOf	"slower metadata generation"
s15.1	"half of the tested queries from a watdiv benchmark test set could executed with up to a third fewer http requests with only marginally higher server cost"
s15.1	"half of the tested queries from a watdiv benchmark test set could executed with up to a third fewer http requests with only marginally higher server cost"	rdf:subject	"half of the test query from a watdiv benchmark test set"
s15.1	"half of the test query from a watdiv benchmark test set"	rdfs:member	"watdiv benchmark test set"
s15.1	"half of the test query from a watdiv benchmark test set"	rdfs:member	"test query"
s15.1	"half of the test query from a watdiv benchmark test set"	rdfs:member	"half"
s15.1	"watdiv benchmark test"	rdfs:member	"watdiv benchmark"
s15.1	"test query"	rdfs:member	"test"
s15.1	"benchmark test"	rdfs:member	"benchmark"
s15.1	"watdiv benchmark test set"	rdfs:member	"watdiv benchmark test"
s15.1	"watdiv benchmark"	rdfs:member	"watdiv"
s15.1	"test set"	rdfs:member	"test"
s15.1	"watdiv benchmark test"	rdfs:subClassOf	"test"
s15.1	"benchmark test set"	rdfs:subClassOf	"set"
s15.1	"benchmark test set"	rdfs:member	"benchmark test"
s15.1	"test query"	rdfs:subClassOf	"query"
s15.1	"watdiv benchmark test set"	rdfs:subClassOf	"set"
s15.1	"benchmark test"	rdfs:subClassOf	"test"
s15.1	"watdiv benchmark"	rdfs:subClassOf	"benchmark"
s15.1	"test set"	rdfs:subClassOf	"set"
s15.1	"benchmark test set"	rdfs:subClassOf	"test set"
s15.1	"watdiv benchmark test set"	rdfs:subClassOf	"benchmark test set"
s15.1	"half of test query"	rdfs:member	"half"
s15.1	"half of test query"	rdfs:member	"test query"
s15.1	"half of test query from watdiv benchmark test set"	rdfs:member	"half of test query"
s15.1	"half of test query from watdiv benchmark test set"	rdfs:member	"watdiv benchmark test set"
s15.1	"half of the tested queries from a watdiv benchmark test set could executed with up to a third fewer http requests with only marginally higher server cost"	rdf:predicate	"execute"
s15.1	"half of the tested queries from a watdiv benchmark test set could executed with up to a third fewer http requests with only marginally higher server cost"	rdf:object	"third fewer http request with only marginally higher server cost"
s15.1	"third fewer http request with only marginally higher server cost"	rdfs:member	"only marginally higher server cost"
s15.1	"third fewer http request with only marginally higher server cost"	rdfs:member	"third fewer http request"
s15.1	"http request"	rdfs:member	"http"
s15.1	"fewer http"	rdfs:subClassOf	"http"
s15.1	"only marginally higher"	rdfs:member	"only marginally"
s15.1	"only marginally higher server cost"	rdfs:subClassOf	"cost"
s15.1	"only marginally"	rdfs:subClassOf	"marginally"
s15.1	"only marginally higher server"	rdfs:subClassOf	"server"
s15.1	"third fewer"	rdfs:member	"third"
s15.1	"third fewer http"	rdfs:subClassOf	"http"
s15.1	"server cost"	rdfs:member	"server"
s15.1	"fewer http"	rdfs:member	"fewer"
s15.1	"marginally higher server"	rdfs:subClassOf	"server"
s15.1	"higher server"	rdfs:subClassOf	"server"
s15.1	"only marginally higher server"	rdfs:member	"only marginally higher"
s15.1	"marginally higher"	rdfs:subClassOf	"higher"
s15.1	"marginally higher server"	rdfs:member	"marginally higher"
s15.1	"third fewer http"	rdfs:member	"third fewer"
s15.1	"third fewer http request"	rdfs:member	"third fewer http"
s15.1	"only marginally"	rdfs:member	"only"
s15.1	"fewer http request"	rdfs:subClassOf	"request"
s15.1	"fewer http request"	rdfs:member	"fewer http"
s15.1	"third fewer"	rdfs:subClassOf	"fewer"
s15.1	"server cost"	rdfs:subClassOf	"cost"
s15.1	"only marginally higher server cost"	rdfs:member	"only marginally higher server"
s15.1	"higher server"	rdfs:member	"higher"
s15.1	"only marginally higher"	rdfs:subClassOf	"higher"
s15.1	"marginally higher server cost"	rdfs:member	"marginally higher server"
s15.1	"higher server cost"	rdfs:member	"higher server"
s15.1	"marginally higher server cost"	rdfs:subClassOf	"cost"
s15.1	"marginally higher"	rdfs:member	"marginally"
s15.1	"higher server cost"	rdfs:subClassOf	"cost"
s15.1	"third fewer http request"	rdfs:subClassOf	"request"
s15.1	"http request"	rdfs:subClassOf	"request"
s15.1	"higher server cost"	rdfs:subClassOf	"server cost"
s15.1	"only higher server cost"	rdfs:subClassOf	"higher server cost"
s15.1	"fewer http request"	rdfs:subClassOf	"http request"
s15.1	"third fewer http request"	rdfs:subClassOf	"fewer http request"
s15.1	"third fewer http request with only higher server cost"	rdfs:member	"third fewer http request"
s15.1	"third fewer http request with only higher server cost"	rdfs:member	"only higher server cost"
s15.1	"half of the tested queries from a watdiv benchmark test set could executed with up to a third fewer http requests with only marginally higher server cost"	local:AM-MOD	"could"
s15	"tested queries"
s15	"tested queries"	rdf:subject	"query"
s15	"tested queries"	rdf:predicate	"test"
s14.4	"temporarily allowing lower precision"
s14.4	"temporarily allowing lower precision"	rdf:subject	"lower precision"
s14.4	"lower precision"	rdfs:subClassOf	"precision"
s14.4	"lower precision"	rdfs:member	"lower"
s14.4	"temporarily allowing lower precision"	rdf:predicate	"allow"
s14.4	"temporarily allowing lower precision"	local:AM-TMP	"temporarily"
s14.3	"in addition to reducing http requests such functions allow to achieve full result recall earlier when temporarily allowing lower precision"
s14.3	"in addition to reducing http requests such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	rdf:predicate	"recall"
s14.3	"in addition to reducing http requests such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	local:AM-ADV	"addition to reduce http request such function allow to achieve full result"
s14.3	"addition to reduce http request such function allow to achieve full result"	rdfs:member	"addition"
s14.3	"addition to reduce http request such function allow to achieve full result"	rdfs:member	"such function"
s14.3	"addition to reduce http request such function allow to achieve full result"	rdfs:member	"full result"
s14.3	"addition to reduce http request such function allow to achieve full result"	rdfs:member	"http request"
s14.3	"http request"	rdfs:member	"http"
s14.3	"such function"	rdfs:subClassOf	"function"
s14.3	"full result"	rdfs:member	"full"
s14.3	"such function"	rdfs:member	"such"
s14.3	"http request"	rdfs:subClassOf	"request"
s14.3	"full result"	rdfs:subClassOf	"result"
s14.3	"in addition to reducing http requests such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	local:AM-TMP	"earlier when temporarily allow lower precision"
s14.3	"lower precision"	rdfs:subClassOf	"precision"
s14.3	"lower precision"	rdfs:member	"lower"
s14.3	"temporarily allow"	rdfs:subClassOf	"allow"
s14.3	"when temporarily allow"	rdfs:subClassOf	"temporarily allow"
s14.3	"earlier when temporarily allow"	rdfs:subClassOf	"when temporarily allow"
s14.2	"such functions achieve full result"
s14.2	"such functions achieve full result"	rdf:subject	"function"
s14.2	"such functions achieve full result"	rdf:predicate	"achieve"
s14.2	"such functions achieve full result"	rdf:object	"full result"
s14.2	"full result"	rdfs:member	"full"
s14.2	"full result"	rdfs:subClassOf	"result"
s14.1	"such functions allow to achieve full result recall earlier when temporarily allowing lower precision"
s14.1	"such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	rdf:subject	"function"
s14.1	"such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	rdf:predicate	"allow"
s14.1	"such functions allow to achieve full result recall earlier when temporarily allowing lower precision"	rdf:object	"achieve full result recall earlier when temporarily allow lower precision"
s14.1	"achieve full result recall earlier when temporarily allow lower precision"	rdfs:member	"achieve full result recall"
s14.1	"achieve full result recall earlier when temporarily allow lower precision"	rdfs:member	"lower precision"
s14.1	"result recall"	rdfs:member	"result"
s14.1	"achieve full result recall"	rdfs:subClassOf	"recall"
s14.1	"lower precision"	rdfs:subClassOf	"precision"
s14.1	"achieve full result"	rdfs:subClassOf	"result"
s14.1	"achieve full result"	rdfs:member	"achieve full"
s14.1	"result recall"	rdfs:subClassOf	"recall"
s14.1	"achieve full result recall"	rdfs:member	"achieve full result"
s14.1	"lower precision"	rdfs:member	"lower"
s14.1	"full result recall"	rdfs:member	"full result"
s14.1	"full result recall"	rdfs:subClassOf	"recall"
s14.1	"full result"	rdfs:member	"full"
s14.1	"achieve full"	rdfs:subClassOf	"full"
s14.1	"achieve full"	rdfs:member	"achieve"
s14.1	"full result"	rdfs:subClassOf	"result"
s14.1	"temporarily allow"	rdfs:subClassOf	"allow"
s14.1	"when temporarily allow"	rdfs:subClassOf	"temporarily allow"
s14.1	"earlier when temporarily allow"	rdfs:subClassOf	"when temporarily allow"
s14.1	"full result recall"	rdfs:subClassOf	"result recall"
s14	"reducing http requests such functions"
s14	"reducing http requests such functions"	rdf:subject	"http request such function"
s14	"http request such function"	rdfs:member	"such function"
s14	"http request such function"	rdfs:member	"http request"
s14	"http request"	rdfs:member	"http"
s14	"such function"	rdfs:subClassOf	"function"
s14	"http request"	rdfs:subClassOf	"request"
s14	"such function"	rdfs:member	"such"
s14	"reducing http requests such functions"	rdf:predicate	"reduce"
s12.1	"providing approximate membership functions"
s12.1	"providing approximate membership functions"	rdf:subject	"approximate membership function"
s12.1	"approximate membership"	rdfs:subClassOf	"membership"
s12.1	"membership function"	rdfs:member	"membership"
s12.1	"membership function"	rdfs:subClassOf	"function"
s12.1	"approximate membership"	rdfs:member	"approximate"
s12.1	"approximate membership function"	rdfs:subClassOf	"function"
s12.1	"approximate membership function"	rdfs:member	"approximate membership"
s12.1	"approximate membership function"	rdfs:subClassOf	"membership function"
s12.1	"providing approximate membership functions"	rdf:predicate	"provide"
s12	"one of these interfaces studies the impact of providing approximate membership functions as extra metadata"
s12	"one of these interfaces studies the impact of providing approximate membership functions as extra metadata"	rdf:subject	"one of these interface"
s12	"one interface"	rdfs:subClassOf	"interface"
s12	"one of these interfaces studies the impact of providing approximate membership functions as extra metadata"	rdf:predicate	"study"
s12	"one of these interfaces studies the impact of providing approximate membership functions as extra metadata"	rdf:object	"impact of provide approximate membership function a extra metadata"
s12	"impact of provide approximate membership function a extra metadata"	rdfs:member	"impact"
s12	"impact of provide approximate membership function a extra metadata"	rdfs:member	"extra metadata"
s12	"impact of provide approximate membership function a extra metadata"	rdfs:member	"provide approximate membership function"
s12	"approximate membership"	rdfs:subClassOf	"membership"
s12	"provide approximate membership"	rdfs:subClassOf	"membership"
s12	"provide approximate membership function"	rdfs:subClassOf	"function"
s12	"membership function"	rdfs:member	"membership"
s12	"membership function"	rdfs:subClassOf	"function"
s12	"extra metadata"	rdfs:subClassOf	"metadata"
s12	"extra metadata"	rdfs:member	"extra"
s12	"approximate membership"	rdfs:member	"approximate"
s12	"provide approximate"	rdfs:subClassOf	"approximate"
s12	"provide approximate"	rdfs:member	"provide"
s12	"provide approximate membership"	rdfs:member	"provide approximate"
s12	"approximate membership function"	rdfs:subClassOf	"function"
s12	"provide approximate membership function"	rdfs:member	"provide approximate membership"
s12	"approximate membership function"	rdfs:member	"approximate membership"
s12	"approximate membership function"	rdfs:subClassOf	"membership function"
s11	"one of these interfaces studies bloom filters"
s11	"one of these interfaces studies bloom filters"	rdf:subject	"one of these interface study"
s11	"interface study"	rdfs:subClassOf	"study"
s11	"interface study"	rdfs:member	"interface"
s11	"one interface study"	rdfs:subClassOf	"interface study"
s11	"one of these interfaces studies bloom filters"	rdf:predicate	"bloom"
s11	"one of these interfaces studies bloom filters"	rdf:object	"filter"
s10	"membership subqueries which check the presence of a specific triple"
s10	"membership subqueries which check the presence of a specific triple"	rdf:subject	"membership subqueries"
s10	"membership subqueries"	rdfs:subClassOf	"subqueries"
s10	"membership subqueries"	rdfs:member	"membership"
s10	"membership subqueries which check the presence of a specific triple"	rdf:predicate	"check"
s10	"membership subqueries which check the presence of a specific triple"	rdf:object	"presence of a specific triple"
s10	"presence of a specific triple"	rdfs:member	"presence"
s10	"presence of a specific triple"	rdfs:member	"specific triple"
s10	"specific triple"	rdfs:subClassOf	"triple"
s10	"specific triple"	rdfs:member	"specific"
s10	"presence of specific triple"	rdfs:member	"presence"
s10	"presence of specific triple"	rdfs:member	"specific triple"
s9.1	"typical sparql query evaluations against triple pattern fragments require a variable pattern"
s9.1	"typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:subject	"typical sparql query evaluation against triple pattern fragment"
s9.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s9.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s9.1	"pattern fragment"	rdfs:subClassOf	"fragment"
s9.1	"typical sparql query"	rdfs:subClassOf	"query"
s9.1	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s9.1	"triple pattern fragment"	rdfs:member	"triple pattern"
s9.1	"typical sparql query"	rdfs:member	"typical sparql"
s9.1	"triple pattern"	rdfs:subClassOf	"pattern"
s9.1	"sparql query evaluation"	rdfs:member	"sparql query"
s9.1	"typical sparql query evaluation"	rdfs:subClassOf	"evaluation"
s9.1	"typical sparql query evaluation"	rdfs:member	"typical sparql query"
s9.1	"triple pattern fragment"	rdfs:subClassOf	"fragment"
s9.1	"sparql query"	rdfs:subClassOf	"query"
s9.1	"query evaluation"	rdfs:member	"query"
s9.1	"sparql query"	rdfs:member	"sparql"
s9.1	"triple pattern"	rdfs:member	"triple"
s9.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s9.1	"typical sparql"	rdfs:subClassOf	"sparql"
s9.1	"pattern fragment"	rdfs:member	"pattern"
s9.1	"typical sparql"	rdfs:member	"typical"
s9.1	"triple pattern fragment"	rdfs:subClassOf	"pattern fragment"
s9.1	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s9.1	"typical sparql query evaluation"	rdfs:subClassOf	"sparql query evaluation"
s9.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s9.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s9.1	"typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:predicate	"require"
s9.1	"typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:object	"variable pattern"
s9.1	"variable pattern"	rdfs:member	"variable"
s9.1	"variable pattern"	rdfs:subClassOf	"pattern"
s9	"we noted that typical sparql query evaluations against triple pattern fragments require a variable pattern"
s9	"we noted that typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:subject	"we"
s9	"we noted that typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:predicate	"note"
s9	"we noted that typical sparql query evaluations against triple pattern fragments require a variable pattern"	rdf:object	"typical sparql query evaluation against triple pattern fragment require a variable pattern"
s9	"typical sparql query evaluation against triple pattern fragment require a variable pattern"	rdfs:member	"typical sparql query evaluation"
s9	"typical sparql query evaluation against triple pattern fragment require a variable pattern"	rdfs:member	"triple pattern fragment"
s9	"typical sparql query evaluation against triple pattern fragment require a variable pattern"	rdfs:member	"variable pattern"
s9	"typical sparql query"	rdfs:subClassOf	"query"
s9	"triple pattern"	rdfs:subClassOf	"pattern"
s9	"sparql query evaluation"	rdfs:member	"sparql query"
s9	"typical sparql query evaluation"	rdfs:subClassOf	"evaluation"
s9	"triple pattern fragment"	rdfs:subClassOf	"fragment"
s9	"pattern fragment"	rdfs:member	"pattern"
s9	"variable pattern"	rdfs:subClassOf	"pattern"
s9	"triple pattern fragment"	rdfs:member	"triple pattern"
s9	"variable pattern"	rdfs:member	"variable"
s9	"typical sparql query"	rdfs:member	"typical sparql"
s9	"sparql query"	rdfs:subClassOf	"query"
s9	"triple pattern"	rdfs:member	"triple"
s9	"typical sparql"	rdfs:subClassOf	"sparql"
s9	"typical sparql"	rdfs:member	"typical"
s9	"pattern fragment"	rdfs:subClassOf	"fragment"
s9	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s9	"query evaluation"	rdfs:member	"query"
s9	"sparql query"	rdfs:member	"sparql"
s9	"typical sparql query evaluation"	rdfs:member	"typical sparql query"
s9	"query evaluation"	rdfs:subClassOf	"evaluation"
s9	"triple pattern fragment"	rdfs:subClassOf	"pattern fragment"
s9	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s9	"typical sparql query evaluation"	rdfs:subClassOf	"sparql query evaluation"
s9	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s9	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s8.1	"typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"
s8.1	"typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:subject	"typical sparql query evaluation against triple pattern fragment"
s8.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s8.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s8.1	"pattern fragment"	rdfs:subClassOf	"fragment"
s8.1	"typical sparql query"	rdfs:subClassOf	"query"
s8.1	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s8.1	"triple pattern fragment"	rdfs:member	"triple pattern"
s8.1	"typical sparql query"	rdfs:member	"typical sparql"
s8.1	"triple pattern"	rdfs:subClassOf	"pattern"
s8.1	"sparql query evaluation"	rdfs:member	"sparql query"
s8.1	"typical sparql query evaluation"	rdfs:subClassOf	"evaluation"
s8.1	"typical sparql query evaluation"	rdfs:member	"typical sparql query"
s8.1	"triple pattern fragment"	rdfs:subClassOf	"fragment"
s8.1	"sparql query"	rdfs:subClassOf	"query"
s8.1	"query evaluation"	rdfs:member	"query"
s8.1	"sparql query"	rdfs:member	"sparql"
s8.1	"triple pattern"	rdfs:member	"triple"
s8.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s8.1	"typical sparql"	rdfs:subClassOf	"sparql"
s8.1	"pattern fragment"	rdfs:member	"pattern"
s8.1	"typical sparql"	rdfs:member	"typical"
s8.1	"triple pattern fragment"	rdfs:subClassOf	"pattern fragment"
s8.1	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s8.1	"typical sparql query evaluation"	rdfs:subClassOf	"sparql query evaluation"
s8.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s8.1	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s8.1	"typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:predicate	"require"
s8.1	"typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:object	"significant portion of membership subqueries"
s8.1	"significant portion of membership subqueries"	rdfs:member	"significant portion"
s8.1	"significant portion of membership subqueries"	rdfs:member	"membership subqueries"
s8.1	"membership subqueries"	rdfs:subClassOf	"subqueries"
s8.1	"significant portion"	rdfs:subClassOf	"portion"
s8.1	"significant portion"	rdfs:member	"significant"
s8.1	"membership subqueries"	rdfs:member	"membership"
s8.1	"significant portion of membership subqueries"	rdfs:member	"significant portion"
s8.1	"significant portion of membership subqueries"	rdfs:member	"membership subqueries"
s8	"we noted that typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"
s8	"we noted that typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:subject	"we"
s8	"we noted that typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:predicate	"note"
s8	"we noted that typical sparql query evaluations against triple pattern fragments require a significant portion of membership subqueries"	rdf:object	"typical sparql query evaluation against triple pattern fragment require a significant portion of membership subqueries"
s8	"typical sparql query evaluation against triple pattern fragment require a significant portion of membership subqueries"	rdfs:member	"typical sparql query evaluation"
s8	"typical sparql query evaluation against triple pattern fragment require a significant portion of membership subqueries"	rdfs:member	"significant portion"
s8	"typical sparql query evaluation against triple pattern fragment require a significant portion of membership subqueries"	rdfs:member	"membership subqueries"
s8	"typical sparql query evaluation against triple pattern fragment require a significant portion of membership subqueries"	rdfs:member	"triple pattern fragment"
s8	"typical sparql query"	rdfs:subClassOf	"query"
s8	"triple pattern"	rdfs:subClassOf	"pattern"
s8	"sparql query evaluation"	rdfs:member	"sparql query"
s8	"typical sparql query evaluation"	rdfs:subClassOf	"evaluation"
s8	"triple pattern fragment"	rdfs:subClassOf	"fragment"
s8	"pattern fragment"	rdfs:member	"pattern"
s8	"triple pattern fragment"	rdfs:member	"triple pattern"
s8	"typical sparql query"	rdfs:member	"typical sparql"
s8	"significant portion"	rdfs:member	"significant"
s8	"sparql query"	rdfs:subClassOf	"query"
s8	"triple pattern"	rdfs:member	"triple"
s8	"typical sparql"	rdfs:subClassOf	"sparql"
s8	"typical sparql"	rdfs:member	"typical"
s8	"membership subqueries"	rdfs:subClassOf	"subqueries"
s8	"pattern fragment"	rdfs:subClassOf	"fragment"
s8	"sparql query evaluation"	rdfs:subClassOf	"evaluation"
s8	"query evaluation"	rdfs:member	"query"
s8	"sparql query"	rdfs:member	"sparql"
s8	"membership subqueries"	rdfs:member	"membership"
s8	"significant portion"	rdfs:subClassOf	"portion"
s8	"typical sparql query evaluation"	rdfs:member	"typical sparql query"
s8	"query evaluation"	rdfs:subClassOf	"evaluation"
s8	"triple pattern fragment"	rdfs:subClassOf	"pattern fragment"
s8	"sparql query evaluation"	rdfs:subClassOf	"query evaluation"
s8	"typical sparql query evaluation"	rdfs:subClassOf	"sparql query evaluation"
s8	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"typical sparql query evaluation"
s8	"typical sparql query evaluation against triple pattern fragment"	rdfs:member	"triple pattern fragment"
s8	"significant portion of membership subqueries"	rdfs:member	"significant portion"
s8	"significant portion of membership subqueries"	rdfs:member	"membership subqueries"
s7.2	"increasing a clients efficiency lowering the number of requests"
s7.2	"increasing a clients efficiency lowering the number of requests"	rdf:subject	"increase a client efficiency"
s7.2	"client efficiency"	rdfs:member	"client"
s7.2	"client efficiency"	rdfs:subClassOf	"efficiency"
s7.2	"increasing a clients efficiency lowering the number of requests"	rdf:predicate	"lower"
s7.2	"increasing a clients efficiency lowering the number of requests"	rdf:object	"number of request"
s7.2	"number of request"	rdfs:member	"number"
s7.2	"number of request"	rdfs:member	"request"
s7.2	"number of request"	rdfs:member	"number"
s7.2	"number of request"	rdfs:member	"request"
s7.1	"increasing a clients efficiency means lowering the number of requests"
s7.1	"increasing a clients efficiency means lowering the number of requests"	rdf:subject	"increase a client efficiency"
s7.1	"client efficiency"	rdfs:member	"client"
s7.1	"client efficiency"	rdfs:subClassOf	"efficiency"
s7.1	"increasing a clients efficiency means lowering the number of requests"	rdf:predicate	"mean"
s7.1	"increasing a clients efficiency means lowering the number of requests"	rdf:object	"lower the number of request"
s7.1	"lower the number of request"	rdfs:member	"number"
s7.1	"lower the number of request"	rdfs:member	"request"
s7.1	"lower number"	rdfs:subClassOf	"number"
s7.1	"lower number of request"	rdfs:member	"lower number"
s7.1	"lower number of request"	rdfs:member	"request"
s7	"increasing a clients efficiency"
s7	"increasing a clients efficiency"	rdf:subject	"client efficiency"
s7	"client efficiency"	rdfs:member	"client"
s7	"client efficiency"	rdfs:subClassOf	"efficiency"
s7	"increasing a clients efficiency"	rdf:predicate	"increase"
s6	"requests which can among others achieved through additional metadata in responses"
s6	"requests which can among others achieved through additional metadata in responses"	rdf:subject	"request which can among others"
s6	"request which can among others"	rdfs:member	"others"
s6	"request which can among others"	rdfs:member	"request"
s6	"can others"	rdfs:subClassOf	"others"
s6	"requests which can among others achieved through additional metadata in responses"	rdf:predicate	"achieve"
s6	"requests which can among others achieved through additional metadata in responses"	local:AM-LOC	"response"
s6	"requests which can among others achieved through additional metadata in responses"	local:AM-MNR	"additional metadata"
s6	"additional metadata"	rdfs:member	"additional"
s6	"additional metadata"	rdfs:subClassOf	"metadata"
s4.1	"clients execute sparql queries against lowcost servers at the cost of higher bandwidth"
s4.1	"clients execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:subject	"client"
s4.1	"clients execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:predicate	"execute"
s4.1	"clients execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:object	"sparql query against lowcost server"
s4.1	"sparql query against lowcost server"	rdfs:member	"lowcost server"
s4.1	"sparql query against lowcost server"	rdfs:member	"sparql query"
s4.1	"lowcost server"	rdfs:member	"lowcost"
s4.1	"lowcost server"	rdfs:subClassOf	"server"
s4.1	"sparql query"	rdfs:subClassOf	"query"
s4.1	"sparql query"	rdfs:member	"sparql"
s4.1	"sparql query against lowcost server"	rdfs:member	"sparql query"
s4.1	"sparql query against lowcost server"	rdfs:member	"lowcost server"
s4.1	"clients execute sparql queries against lowcost servers at the cost of higher bandwidth"	local:AM-MNR	"cost of higher bandwidth"
s4.1	"cost of higher bandwidth"	rdfs:member	"higher bandwidth"
s4.1	"cost of higher bandwidth"	rdfs:member	"cost"
s4.1	"higher bandwidth"	rdfs:member	"higher"
s4.1	"higher bandwidth"	rdfs:subClassOf	"bandwidth"
s4.1	"cost of higher bandwidth"	rdfs:member	"cost"
s4.1	"cost of higher bandwidth"	rdfs:member	"higher bandwidth"
s4	"triple pattern fragments which allows clients to execute sparql queries against lowcost servers at the cost of higher bandwidth"
s4	"triple pattern fragments which allows clients to execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:subject	"triple pattern fragment"
s4	"pattern fragment"	rdfs:subClassOf	"fragment"
s4	"triple pattern fragment"	rdfs:member	"triple pattern"
s4	"triple pattern"	rdfs:subClassOf	"pattern"
s4	"triple pattern fragment"	rdfs:subClassOf	"fragment"
s4	"triple pattern"	rdfs:member	"triple"
s4	"pattern fragment"	rdfs:member	"pattern"
s4	"triple pattern fragment"	rdfs:subClassOf	"pattern fragment"
s4	"triple pattern fragments which allows clients to execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:predicate	"allow"
s4	"triple pattern fragments which allows clients to execute sparql queries against lowcost servers at the cost of higher bandwidth"	rdf:object	"client to execute sparql query against lowcost server at the cost of higher bandwidth"
s4	"client to execute sparql query against lowcost server at the cost of higher bandwidth"	rdfs:member	"server"
s4	"client to execute sparql query against lowcost server at the cost of higher bandwidth"	rdfs:member	"higher bandwidth"
s4	"client to execute sparql query against lowcost server at the cost of higher bandwidth"	rdfs:member	"cost"
s4	"client to execute sparql query against lowcost server at the cost of higher bandwidth"	rdfs:member	"sparql query"
s4	"client to execute sparql query against lowcost server at the cost of higher bandwidth"	rdfs:member	"client"
s4	"sparql query"	rdfs:subClassOf	"query"
s4	"higher bandwidth"	rdfs:member	"higher"
s4	"higher bandwidth"	rdfs:subClassOf	"bandwidth"
s4	"sparql query"	rdfs:member	"sparql"
s4	"lowcost server"	rdfs:subClassOf	"server"
s4	"execute against lowcost server"	rdfs:member	"execute"
s4	"execute against lowcost server"	rdfs:member	"lowcost server"
s4	"execute against lowcost server at cost"	rdfs:member	"execute against lowcost server"
s4	"execute against lowcost server at cost"	rdfs:member	"cost"
s4	"cost of higher bandwidth"	rdfs:member	"cost"
s4	"cost of higher bandwidth"	rdfs:member	"higher bandwidth"
s3.1	"linked data own combination of tradeoffs"
s3.1	"linked data own combination of tradeoffs"	rdf:subject	"data own combination of tradeoff"
s3.1	"data own combination of tradeoff"	rdfs:member	"data"
s3.1	"data own combination of tradeoff"	rdfs:member	"own combination"
s3.1	"data own combination of tradeoff"	rdfs:member	"tradeoff"
s3.1	"own combination"	rdfs:subClassOf	"combination"
s3.1	"own combination"	rdfs:member	"own"
s3.1	"combination of tradeoff"	rdfs:member	"combination"
s3.1	"combination of tradeoff"	rdfs:member	"tradeoff"
s3.1	"linked data own combination of tradeoffs"	rdf:predicate	"link"
s3	"between the sparql protocol lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"
s3	"between the sparql protocol lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:subject	"largely unexplored axis of possible interface to link data own combination of tradeoff"
s3	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"data"
s3	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"largely unexplored axis"
s3	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"possible interface"
s3	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"own combination"
s3	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"tradeoff"
s3	"largely unexplored"	rdfs:subClassOf	"unexplored"
s3	"own combination"	rdfs:subClassOf	"combination"
s3	"largely unexplored axis"	rdfs:subClassOf	"axis"
s3	"unexplored axis"	rdfs:subClassOf	"axis"
s3	"unexplored axis"	rdfs:member	"unexplored"
s3	"possible interface"	rdfs:member	"possible"
s3	"own combination"	rdfs:member	"own"
s3	"largely unexplored"	rdfs:member	"largely"
s3	"possible interface"	rdfs:subClassOf	"interface"
s3	"largely unexplored axis"	rdfs:member	"largely unexplored"
s3	"data own combination"	rdfs:subClassOf	"own combination"
s3	"unexplored axis of possible interface"	rdfs:member	"unexplored axis"
s3	"unexplored axis of possible interface"	rdfs:member	"possible interface"
s3	"data own combination of tradeoff"	rdfs:member	"data own combination"
s3	"data own combination of tradeoff"	rdfs:member	"tradeoff"
s3	"between the sparql protocol lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:predicate	"lie"
s3	"between the sparql protocol lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:object	"sparql protocol"
s3	"sparql protocol"	rdfs:member	"sparql"
s3	"sparql protocol"	rdfs:subClassOf	"protocol"
s2.1	"linked data own combination of tradeoffs"
s2.1	"linked data own combination of tradeoffs"	rdf:subject	"data own combination of tradeoff"
s2.1	"data own combination of tradeoff"	rdfs:member	"data"
s2.1	"data own combination of tradeoff"	rdfs:member	"own combination"
s2.1	"data own combination of tradeoff"	rdfs:member	"tradeoff"
s2.1	"own combination"	rdfs:subClassOf	"combination"
s2.1	"own combination"	rdfs:member	"own"
s2.1	"combination of tradeoff"	rdfs:member	"combination"
s2.1	"combination of tradeoff"	rdfs:member	"tradeoff"
s2.1	"linked data own combination of tradeoffs"	rdf:predicate	"link"
s2	"between uri dereferencing lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"
s2	"between uri dereferencing lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:subject	"largely unexplored axis of possible interface to link data own combination of tradeoff"
s2	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"data"
s2	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"largely unexplored axis"
s2	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"possible interface"
s2	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"own combination"
s2	"largely unexplored axis of possible interface to link data own combination of tradeoff"	rdfs:member	"tradeoff"
s2	"largely unexplored"	rdfs:subClassOf	"unexplored"
s2	"own combination"	rdfs:subClassOf	"combination"
s2	"largely unexplored axis"	rdfs:subClassOf	"axis"
s2	"unexplored axis"	rdfs:subClassOf	"axis"
s2	"unexplored axis"	rdfs:member	"unexplored"
s2	"possible interface"	rdfs:member	"possible"
s2	"own combination"	rdfs:member	"own"
s2	"largely unexplored"	rdfs:member	"largely"
s2	"possible interface"	rdfs:subClassOf	"interface"
s2	"largely unexplored axis"	rdfs:member	"largely unexplored"
s2	"data own combination"	rdfs:subClassOf	"own combination"
s2	"unexplored axis of possible interface"	rdfs:member	"unexplored axis"
s2	"unexplored axis of possible interface"	rdfs:member	"possible interface"
s2	"data own combination of tradeoff"	rdfs:member	"data own combination"
s2	"data own combination of tradeoff"	rdfs:member	"tradeoff"
s2	"between uri dereferencing lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:predicate	"lie"
s2	"between uri dereferencing lies a largely unexplored axis of possible interfaces to linked data own combination of tradeoffs"	rdf:object	"uri dereferencing"
s2	"uri dereferencing"	rdfs:subClassOf	"dereferencing"
s2	"uri dereferencing"	rdfs:member	"uri"
s1	"between uri dereferencing lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"
s1	"between uri dereferencing lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:subject	"largely unexplored axis of possible interface"
s1	"largely unexplored axis of possible interface"	rdfs:member	"largely unexplored axis"
s1	"largely unexplored axis of possible interface"	rdfs:member	"possible interface"
s1	"largely unexplored"	rdfs:subClassOf	"unexplored"
s1	"largely unexplored axis"	rdfs:subClassOf	"axis"
s1	"unexplored axis"	rdfs:subClassOf	"axis"
s1	"unexplored axis"	rdfs:member	"unexplored"
s1	"possible interface"	rdfs:member	"possible"
s1	"largely unexplored"	rdfs:member	"largely"
s1	"possible interface"	rdfs:subClassOf	"interface"
s1	"largely unexplored axis"	rdfs:member	"largely unexplored"
s1	"unexplored axis of possible interface"	rdfs:member	"unexplored axis"
s1	"unexplored axis of possible interface"	rdfs:member	"possible interface"
s1	"between uri dereferencing lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:predicate	"lie"
s1	"between uri dereferencing lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:object	"sparql protocol own combination of tradeoff uri dereferencing each"
s1	"sparql protocol own combination of tradeoff uri dereferencing each"	rdfs:member	"own combination"
s1	"sparql protocol own combination of tradeoff uri dereferencing each"	rdfs:member	"tradeoff"
s1	"sparql protocol own combination of tradeoff uri dereferencing each"	rdfs:member	"sparql protocol"
s1	"sparql protocol"	rdfs:member	"sparql"
s1	"own combination"	rdfs:subClassOf	"combination"
s1	"sparql protocol"	rdfs:subClassOf	"protocol"
s1	"own combination"	rdfs:member	"own"
s1	"tradeoff uri"	rdfs:subClassOf	"uri"
s1	"protocol own combination"	rdfs:subClassOf	"own combination"
s1	"sparql protocol own combination"	rdfs:subClassOf	"protocol own combination"
s1	"sparql protocol own combination of tradeoff uri"	rdfs:member	"sparql protocol own combination"
s1	"sparql protocol own combination of tradeoff uri"	rdfs:member	"tradeoff uri"
s1	"tradeoff uri dereferencing"	rdfs:member	"tradeoff uri"
s1	"tradeoff uri dereferencing"	rdfs:member	"dereferencing"
s0	"between the sparql protocol lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"
s0	"between the sparql protocol lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:subject	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"
s0	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"	rdfs:member	"largely unexplored axis"
s0	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"	rdfs:member	"possible interface"
s0	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"	rdfs:member	"sparql protocol"
s0	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"	rdfs:member	"own combination"
s0	"largely unexplored axis of possible interface to each with the sparql protocol own combination of tradeoff"	rdfs:member	"tradeoff"
s0	"largely unexplored"	rdfs:subClassOf	"unexplored"
s0	"own combination"	rdfs:subClassOf	"combination"
s0	"largely unexplored axis"	rdfs:subClassOf	"axis"
s0	"sparql protocol"	rdfs:subClassOf	"protocol"
s0	"unexplored axis"	rdfs:subClassOf	"axis"
s0	"unexplored axis"	rdfs:member	"unexplored"
s0	"sparql protocol"	rdfs:member	"sparql"
s0	"possible interface"	rdfs:member	"possible"
s0	"own combination"	rdfs:member	"own"
s0	"largely unexplored"	rdfs:member	"largely"
s0	"possible interface"	rdfs:subClassOf	"interface"
s0	"largely unexplored axis"	rdfs:member	"largely unexplored"
s0	"protocol own combination"	rdfs:subClassOf	"own combination"
s0	"sparql protocol own combination"	rdfs:subClassOf	"protocol own combination"
s0	"unexplored axis of possible interface"	rdfs:member	"unexplored axis"
s0	"unexplored axis of possible interface"	rdfs:member	"possible interface"
s0	"possible interface to each"	rdfs:member	"possible interface"
s0	"possible interface to each"	rdfs:member	"each"
s0	"unexplored axis of possible interface with sparql protocol own combination"	rdfs:member	"unexplored axis of possible interface"
s0	"unexplored axis of possible interface with sparql protocol own combination"	rdfs:member	"sparql protocol own combination"
s0	"sparql protocol own combination of tradeoff"	rdfs:member	"sparql protocol own combination"
s0	"sparql protocol own combination of tradeoff"	rdfs:member	"tradeoff"
s0	"between the sparql protocol lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:predicate	"lie"
s0	"between the sparql protocol lies a largely unexplored axis of possible interfaces to each with the sparql protocol own combination of tradeoffs"	rdf:object	"sparql protocol"
s0	"sparql protocol"	rdfs:member	"sparql"
s0	"sparql protocol"	rdfs:subClassOf	"protocol"
