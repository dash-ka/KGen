@PREFIX	cso:	<https://cso.kmi.open.ac.uk/topics/>	
@LINK	develop	no_match	not_found	develop	
@LINK	have be implement	no_match	not_found	have be implement	
@LINK	reduce	no_match	not_found	reduce	
@LINK	provide	no_match	not_found	provide	
@LINK	be guide	no_match	not_found	be guide	
@LINK	improve	no_match	not_found	improve	
@LINK	relate forget	no_match	not_found	relate forget	
@LINK	compare	no_match	not_found	compare	
@LINK	exploit	no_match	not_found	exploit	
@LINK	be eliminate	no_match	not_found	be eliminate	
@LINK	logic	no_match	not_found	logic	
@LINK	description	no_match	not_found	description	
@LINK	affect	no_match	not_found	affect	
@LINK	be extend	no_match	not_found	be extend	
@LINK	handle	no_match	not_found	handle	
@LINK	be	no_match	not_found	be	
@LINK	relate	no_match	not_found	relate	
@LINK	follow	no_match	not_found	follow	
@LINK	be base	no_match	not_found	be base	
@LINK	present	no_match	not_found	present	
@LINK	use	no_match	not_found	use	
@LINK	new case split inference rule compare	no_match	not_found	new case split inference rule compare	
@LINK	adaptation	no_match	not_found	adaptation	
@LINK	secondorder	no_match	not_found	secondorder	
@LINK	java	sameas	cso:java	java	
@LINK	success rate	no_match	not_found	success rate	
@LINK	order	no_match	not_found	order	
@LINK	result	no_match	not_found	result	
@LINK	important feature	no_match	not_found	important feature	
@LINK	modal approach ackermann	no_match	not_found	modal approach ackermann	
@LINK	ontology ontology specify	no_match	not_found	ontology ontology specify	
@LINK	success rat compare	no_match	not_found	success rat compare	
@LINK	concept symbol	no_match	not_found	concept symbol	
@LINK	ackermann	no_match	not_found	ackermann	
@LINK	nondeterminism result	no_match	not_found	nondeterminism result	
@LINK	inference rule	no_match	not_found	inference rule	
@LINK	inference process	no_match	not_found	inference process	
@LINK	time	no_match	not_found	time	
@LINK	quantifier elimination method	no_match	not_found	quantifier elimination method	
@LINK	affect efficiency	no_match	not_found	affect efficiency	
@LINK	several simplification rule	no_match	not_found	several simplification rule	
@LINK	modal axiom	no_match	not_found	modal axiom	
@LINK	approach	no_match	not_found	approach	
@LINK	description	no_match	not_found	description	
@LINK	order compatible	no_match	not_found	order compatible	
@LINK	improvement	no_match	not_found	improvement	
@LINK	modal approach	no_match	not_found	modal approach	
@LINK	modal logic ackermann	no_match	not_found	modal logic ackermann	
@LINK	logic ackermann	no_match	not_found	logic ackermann	
@LINK	important feature inherit	no_match	not_found	important feature inherit	
@LINK	interpolation method	no_match	not_found	interpolation method	
@LINK	forget concept symbol	no_match	not_found	forget concept symbol	
@LINK	more control	no_match	not_found	more control	
@LINK	inverse role	no_match	not_found	inverse role	
@LINK	aboxes	no_match	not_found	aboxes	
@LINK	compute correspondence property	no_match	not_found	compute correspondence property	
@LINK	experimental result show	no_match	not_found	experimental result show	
@LINK	owl api	no_match	not_found	owl api	
@LINK	elimination order	no_match	not_found	elimination order	
@LINK	smaller search space	no_match	not_found	smaller search space	
@LINK	quantifier elimination method use	no_match	not_found	quantifier elimination method use	
@LINK	uniform interpolation method	no_match	not_found	uniform interpolation method	
@LINK	approach adapt	no_match	not_found	approach adapt	
@LINK	inference	sameas	cso:inference	inference	
@LINK	description logic	sameas	cso:description_logic	description logic	
@LINK	ontology	sameas	cso:ontology	ontology	
@LINK	owl	sameas	cso:owl	owl	
@LINK	modal logic	sameas	cso:modal_logic	modal logic	
