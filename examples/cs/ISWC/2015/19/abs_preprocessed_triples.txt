s14.1	"existing methods implemented in stateoftheart dl systems"
s14.1	"existing methods implemented in stateoftheart dl systems"	rdf:subject	"existing methods"
s14.1	"existing methods"	rdfs:subClassOf	"methods"
s14.1	"existing methods implemented in stateoftheart dl systems"	rdf:predicate	"implement"
s14.1	"existing methods implemented in stateoftheart dl systems"	local:AM-LOC	"stateoftheart DL systems"
s14.1	"stateoftheart dl systems"	rdfs:member	"stateoftheart dl"
s14.1	"stateoftheart dl systems"	rdfs:subClassOf	"systems"
s14.1	"dl systems"	rdfs:subClassOf	"systems"
s14.1	"stateoftheart dl"	rdfs:member	"stateoftheart"
s14.1	"dl systems"	rdfs:member	"dl"
s14.1	"stateoftheart dl"	rdfs:subClassOf	"dl"
s14.1	"stateoftheart dl systems"	rdfs:subClassOf	"dl systems"
s14	"existing methods"
s14	"existing methods"	rdf:subject	"methods"
s14	"existing methods"	rdf:predicate	"exist"
s13.2	"existing methods"
s13.2	"existing methods"	rdf:subject	"methods"
s13.2	"existing methods"	rdf:predicate	"exist"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:subject	"Preliminary experimental results on retrieving instances of all atomic negations"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations"	rdfs:member	"instances"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations"	rdfs:member	"atomic negations"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations"	rdfs:member	"preliminary experimental results"
s13.1	"atomic negations"	rdfs:member	"atomic"
s13.1	"preliminary experimental"	rdfs:subClassOf	"experimental"
s13.1	"experimental results"	rdfs:member	"experimental"
s13.1	"experimental results"	rdfs:subClassOf	"results"
s13.1	"preliminary experimental results"	rdfs:member	"preliminary experimental"
s13.1	"preliminary experimental results"	rdfs:subClassOf	"results"
s13.1	"atomic negations"	rdfs:subClassOf	"negations"
s13.1	"preliminary experimental"	rdfs:member	"preliminary"
s13.1	"retrieving instances"	rdfs:subClassOf	"instances"
s13.1	"preliminary experimental results"	rdfs:subClassOf	"experimental results"
s13.1	"preliminary experimental results on retrieving instances"	rdfs:member	"preliminary experimental results"
s13.1	"preliminary experimental results on retrieving instances"	rdfs:member	"retrieving instances"
s13.1	"retrieving instances of atomic negations"	rdfs:member	"retrieving instances"
s13.1	"retrieving instances of atomic negations"	rdfs:member	"atomic negations"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:predicate	"show"
s13.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:object	"rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"
s13.1	"rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdfs:member	"negated concept"
s13.1	"rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdfs:member	"instances"
s13.1	"rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdfs:member	"methods"
s13.1	"rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdfs:member	"method"
s13.1	"negated concept"	rdfs:member	"negated"
s13.1	"negated concept"	rdfs:subClassOf	"concept"
s13.1	"existing methods"	rdfs:subClassOf	"methods"
s13.1	"more efficient"	rdfs:subClassOf	"efficient"
s13.1	"significantly more efficient"	rdfs:subClassOf	"more efficient"
s13.1	"rewritingbased method"	rdfs:subClassOf	"method"
s13.1	"instances of negated concept"	rdfs:member	"instances"
s13.1	"instances of negated concept"	rdfs:member	"negated concept"
s13.1	"significantly more efficient than existing methods"	rdfs:member	"significantly more efficient"
s13.1	"significantly more efficient than existing methods"	rdfs:member	"existing methods"
s13	"retrieving instances of a negated concept"
s13	"retrieving instances of a negated concept"	rdf:subject	"instances of all atomic negations"
s13	"instances of all atomic negations"	rdfs:member	"instances"
s13	"instances of all atomic negations"	rdfs:member	"atomic negations"
s13	"atomic negations"	rdfs:member	"atomic"
s13	"atomic negations"	rdfs:subClassOf	"negations"
s13	"instances of atomic negations"	rdfs:member	"instances"
s13	"instances of atomic negations"	rdfs:member	"atomic negations"
s13	"retrieving instances of a negated concept"	rdf:predicate	"retrieve"
s13	"retrieving instances of a negated concept"	rdf:object	"instances of a negated concept"
s13	"instances of a negated concept"	rdfs:member	"negated concept"
s13	"instances of a negated concept"	rdfs:member	"instances"
s13	"negated concept"	rdfs:member	"negated"
s13	"negated concept"	rdfs:subClassOf	"concept"
s13	"instances of negated concept"	rdfs:member	"instances"
s13	"instances of negated concept"	rdfs:member	"negated concept"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	rdf:subject	"rewritingbased method for retrieving instances of a negated concept"
s12.1	"rewritingbased method for retrieving instances of a negated concept"	rdfs:member	"negated concept"
s12.1	"rewritingbased method for retrieving instances of a negated concept"	rdfs:member	"instances"
s12.1	"rewritingbased method for retrieving instances of a negated concept"	rdfs:member	"method"
s12.1	"negated concept"	rdfs:member	"negated"
s12.1	"negated concept"	rdfs:subClassOf	"concept"
s12.1	"rewritingbased method"	rdfs:subClassOf	"method"
s12.1	"instances of negated concept"	rdfs:member	"instances"
s12.1	"instances of negated concept"	rdfs:member	"negated concept"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	rdf:predicate	"propose"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	local:AM-PNC	"IFOrewritable ontologies"
s12.1	"iforewritable ontologies"	rdfs:member	"iforewritable"
s12.1	"iforewritable ontologies"	rdfs:subClassOf	"ontologies"
s12	"retrieving instances of a negated concept"
s12	"retrieving instances of a negated concept"	rdf:subject	"instances of a negated concept"
s12	"instances of a negated concept"	rdfs:member	"negated concept"
s12	"instances of a negated concept"	rdfs:member	"instances"
s12	"negated concept"	rdfs:member	"negated"
s12	"negated concept"	rdfs:subClassOf	"concept"
s12	"instances of negated concept"	rdfs:member	"instances"
s12	"instances of negated concept"	rdfs:member	"negated concept"
s12	"retrieving instances of a negated concept"	rdf:predicate	"retrieve"
s10.1	"two sufficient conditions detect iforewritable ontologies"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:subject	"Two sufficient conditions"
s10.1	"sufficient conditions"	rdfs:member	"sufficient"
s10.1	"sufficient conditions"	rdfs:subClassOf	"conditions"
s10.1	"two sufficient conditions"	rdfs:subClassOf	"sufficient conditions"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:predicate	"detect"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:object	"IFOrewritable ontologies"
s10.1	"iforewritable ontologies"	rdfs:member	"iforewritable"
s10.1	"iforewritable ontologies"	rdfs:subClassOf	"ontologies"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"	rdf:subject	"Two sufficient conditions"
s10	"sufficient conditions"	rdfs:member	"sufficient"
s10	"sufficient conditions"	rdfs:subClassOf	"conditions"
s10	"two sufficient conditions"	rdfs:subClassOf	"sufficient conditions"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"	rdf:predicate	"propose"
s8.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"
s8.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:subject	"CQ CQ"
s8.1	"cq cq"	rdfs:member	"cq"
s8.1	"cq cq"	rdfs:subClassOf	"cq"
s8.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:predicate	"answer"
s8.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:object	"disjunction of CQs over the ABox regardless of the TBox"
s8.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cqs"
s8.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"disjunction"
s8.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"abox regardless"
s8.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"tbox"
s8.1	"abox regardless"	rdfs:subClassOf	"regardless"
s8.1	"abox regardless"	rdfs:member	"abox"
s8.1	"disjunction of cqs"	rdfs:member	"disjunction"
s8.1	"disjunction of cqs"	rdfs:member	"cqs"
s8.1	"disjunction of cqs over abox"	rdfs:member	"disjunction of cqs"
s8.1	"disjunction of cqs over abox"	rdfs:member	"abox"
s8.1	"disjunction of cqs over abox regardless_of tbox"	rdfs:member	"disjunction of cqs over abox"
s8.1	"disjunction of cqs over abox regardless_of tbox"	rdfs:member	"tbox"
s8	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"
s8	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:subject	"firstorder rewritable class"
s8	"firstorder rewritable class"	rdfs:member	"firstorder rewritable"
s8	"rewritable class"	rdfs:subClassOf	"class"
s8	"firstorder rewritable"	rdfs:member	"firstorder"
s8	"firstorder rewritable"	rdfs:subClassOf	"rewritable"
s8	"rewritable class"	rdfs:member	"rewritable"
s8	"firstorder rewritable class"	rdfs:subClassOf	"class"
s8	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s8	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:predicate	"guarantee"
s8	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:object	"answering a CQ is reducible to answering a disjunction of CQs over the ABox regardless of the TBox"
s8	"answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"disjunction"
s8	"answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cqs"
s8	"answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cq"
s8	"answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"abox regardless"
s8	"answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"tbox"
s8	"abox regardless"	rdfs:subClassOf	"regardless"
s8	"abox regardless"	rdfs:member	"abox"
s8	"disjunction of cqs"	rdfs:member	"disjunction"
s8	"disjunction of cqs"	rdfs:member	"cqs"
s8	"disjunction of cqs over abox"	rdfs:member	"disjunction of cqs"
s8	"disjunction of cqs over abox"	rdfs:member	"abox"
s8	"answering regardless_of tbox"	rdfs:member	"answering"
s8	"answering regardless_of tbox"	rdfs:member	"tbox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"disjunction of conjunctive queries CQs over the ABox"
s7.2	"disjunction of conjunctive queries cqs over the abox"	rdfs:member	"disjunction"
s7.2	"disjunction of conjunctive queries cqs over the abox"	rdfs:member	"abox"
s7.2	"disjunction of conjunctive queries cqs over the abox"	rdfs:member	"conjunctive queries cqs"
s7.2	"conjunctive queries cqs"	rdfs:member	"conjunctive queries"
s7.2	"queries cqs"	rdfs:subClassOf	"cqs"
s7.2	"conjunctive queries cqs"	rdfs:subClassOf	"cqs"
s7.2	"conjunctive queries"	rdfs:subClassOf	"queries"
s7.2	"queries cqs"	rdfs:member	"queries"
s7.2	"conjunctive queries"	rdfs:member	"conjunctive"
s7.2	"conjunctive queries cqs"	rdfs:subClassOf	"queries cqs"
s7.2	"disjunction of conjunctive queries cqs"	rdfs:member	"disjunction"
s7.2	"disjunction of conjunctive queries cqs"	rdfs:member	"conjunctive queries cqs"
s7.2	"disjunction of conjunctive queries cqs over abox"	rdfs:member	"disjunction of conjunctive queries cqs"
s7.2	"disjunction of conjunctive queries cqs over abox"	rdfs:member	"abox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"answer"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"instance retrieval for an atomic negation"
s7.1	"instance retrieval for an atomic negation"	rdfs:member	"instance retrieval"
s7.1	"instance retrieval for an atomic negation"	rdfs:member	"atomic negation"
s7.1	"instance retrieval"	rdfs:member	"instance"
s7.1	"atomic negation"	rdfs:subClassOf	"negation"
s7.1	"instance retrieval"	rdfs:subClassOf	"retrieval"
s7.1	"atomic negation"	rdfs:member	"atomic"
s7.1	"instance retrieval for atomic negation"	rdfs:member	"instance retrieval"
s7.1	"instance retrieval for atomic negation"	rdfs:member	"atomic negation"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"reduce"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:object	"answering a disjunction of conjunctive queries CQs over the ABox"
s7.1	"answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"disjunction"
s7.1	"answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"abox"
s7.1	"answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"conjunctive queries cqs"
s7.1	"conjunctive queries cqs"	rdfs:member	"conjunctive queries"
s7.1	"queries cqs"	rdfs:subClassOf	"cqs"
s7.1	"conjunctive queries cqs"	rdfs:subClassOf	"cqs"
s7.1	"conjunctive queries"	rdfs:subClassOf	"queries"
s7.1	"queries cqs"	rdfs:member	"queries"
s7.1	"conjunctive queries"	rdfs:member	"conjunctive"
s7.1	"conjunctive queries cqs"	rdfs:subClassOf	"queries cqs"
s7.1	"disjunction of conjunctive queries cqs"	rdfs:member	"disjunction"
s7.1	"disjunction of conjunctive queries cqs"	rdfs:member	"conjunctive queries cqs"
s7.1	"answering over abox"	rdfs:member	"answering"
s7.1	"answering over abox"	rdfs:member	"abox"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	local:AM-MOD	"can"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"IFOrewritable class"
s7	"iforewritable class"	rdfs:subClassOf	"class"
s7	"iforewritable class"	rdfs:member	"iforewritable"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"guarantee"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:object	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries CQs over the ABox"
s7	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"disjunction"
s7	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"abox"
s7	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"instance retrieval"
s7	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"atomic negation"
s7	"instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdfs:member	"conjunctive queries cqs"
s7	"conjunctive queries cqs"	rdfs:member	"conjunctive queries"
s7	"queries cqs"	rdfs:subClassOf	"cqs"
s7	"instance retrieval"	rdfs:member	"instance"
s7	"atomic negation"	rdfs:subClassOf	"negation"
s7	"conjunctive queries cqs"	rdfs:subClassOf	"cqs"
s7	"conjunctive queries"	rdfs:subClassOf	"queries"
s7	"atomic negation"	rdfs:member	"atomic"
s7	"queries cqs"	rdfs:member	"queries"
s7	"instance retrieval"	rdfs:subClassOf	"retrieval"
s7	"conjunctive queries"	rdfs:member	"conjunctive"
s7	"conjunctive queries cqs"	rdfs:subClassOf	"queries cqs"
s7	"can reduced"	rdfs:subClassOf	"reduced"
s7	"instance retrieval for atomic negation"	rdfs:member	"instance retrieval"
s7	"instance retrieval for atomic negation"	rdfs:member	"atomic negation"
s7	"disjunction of conjunctive queries cqs"	rdfs:member	"disjunction"
s7	"disjunction of conjunctive queries cqs"	rdfs:member	"conjunctive queries cqs"
s7	"answering over abox"	rdfs:member	"answering"
s7	"answering over abox"	rdfs:member	"abox"
s6.1	"the iforewritable class called iforewritable class"
s6.1	"the iforewritable class called iforewritable class"	rdf:subject	"IFOrewritable class called IFOrewritable class"
s6.1	"iforewritable class"	rdfs:subClassOf	"class"
s6.1	"iforewritable class"	rdfs:member	"iforewritable"
s6.1	"iforewritable iforewritable class"	rdfs:subClassOf	"iforewritable class"
s6.1	"the iforewritable class called iforewritable class"	rdf:predicate	"identify"
s6	"the iforewritable class called iforewritable class"
s6	"the iforewritable class called iforewritable class"	rdf:subject	"IFOrewritable class"
s6	"iforewritable class"	rdfs:subClassOf	"class"
s6	"iforewritable class"	rdfs:member	"iforewritable"
s6	"the iforewritable class called iforewritable class"	rdf:predicate	"call"
s6	"the iforewritable class called iforewritable class"	rdf:object	"IFOrewritable class"
s6	"iforewritable class"	rdfs:subClassOf	"class"
s6	"iforewritable class"	rdfs:member	"iforewritable"
s5.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"
s5.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:subject	"IFOrewritable class called the inconsistencybased firstorder rewritable class"
s5.1	"iforewritable class called the inconsistencybased firstorder rewritable class"	rdfs:member	"iforewritable class"
s5.1	"iforewritable class called the inconsistencybased firstorder rewritable class"	rdfs:member	"rewritable class"
s5.1	"iforewritable class called the inconsistencybased firstorder rewritable class"	rdfs:member	"inconsistencybased firstorder"
s5.1	"inconsistencybased firstorder"	rdfs:subClassOf	"firstorder"
s5.1	"rewritable class"	rdfs:subClassOf	"class"
s5.1	"iforewritable class"	rdfs:member	"iforewritable"
s5.1	"inconsistencybased firstorder"	rdfs:member	"inconsistencybased"
s5.1	"rewritable class"	rdfs:member	"rewritable"
s5.1	"iforewritable class"	rdfs:subClassOf	"class"
s5.1	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s5.1	"inconsistencybased firstorder rewritable class"	rdfs:subClassOf	"firstorder rewritable class"
s5.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:predicate	"identify"
s5	"the iforewritable class called the inconsistencybased firstorder rewritable class"
s5	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:subject	"IFOrewritable class"
s5	"iforewritable class"	rdfs:subClassOf	"class"
s5	"iforewritable class"	rdfs:member	"iforewritable"
s5	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:predicate	"call"
s5	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:object	"inconsistencybased firstorder rewritable class"
s5	"inconsistencybased firstorder rewritable class"	rdfs:member	"rewritable class"
s5	"inconsistencybased firstorder rewritable class"	rdfs:member	"inconsistencybased firstorder"
s5	"inconsistencybased firstorder"	rdfs:member	"inconsistencybased"
s5	"inconsistencybased firstorder"	rdfs:subClassOf	"firstorder"
s5	"rewritable class"	rdfs:member	"rewritable"
s5	"rewritable class"	rdfs:subClassOf	"class"
s5	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s5	"inconsistencybased firstorder rewritable class"	rdfs:subClassOf	"firstorder rewritable class"
s4.2	"rewriting"
s4.2	"rewriting"	rdf:predicate	"rewrite"
s4.1	"based on query rewriting"
s4.1	"based on query rewriting"	rdf:predicate	"base"
s4.1	"based on query rewriting"	local:AM-LOC	"query rewriting"
s4.1	"query rewriting"	rdfs:member	"query"
s4.1	"query rewriting"	rdfs:subClassOf	"rewriting"
s4.1	"query rewriting"	rdfs:member	"query"
s4.1	"query rewriting"	rdfs:member	"rewriting"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:subject	"paper"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:predicate	"study"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:object	"new approach to instance retrieval"
s4	"new approach to instance retrieval"	rdfs:member	"instance retrieval"
s4	"new approach to instance retrieval"	rdfs:member	"new approach"
s4	"instance retrieval"	rdfs:member	"instance"
s4	"new approach"	rdfs:member	"new"
s4	"instance retrieval"	rdfs:subClassOf	"retrieval"
s4	"new approach"	rdfs:subClassOf	"approach"
s4	"new approach to instance"	rdfs:member	"new approach"
s4	"new approach to instance"	rdfs:member	"instance"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	local:AM-PNC	"negated concepts based on query rewriting"
s4	"negated concepts based on query rewriting"	rdfs:member	"query rewriting"
s4	"negated concepts based on query rewriting"	rdfs:member	"concepts"
s4	"query rewriting"	rdfs:member	"query"
s4	"query rewriting"	rdfs:subClassOf	"rewriting"
s4	"negated concepts"	rdfs:subClassOf	"concepts"
s4	"negated concepts based_on query"	rdfs:member	"negated concepts"
s4	"negated concepts based_on query"	rdfs:member	"query"
s4	"query rewriting"	rdfs:member	"query"
s4	"query rewriting"	rdfs:member	"rewriting"
s3	"this paper studies a new approach to instance retrieval for negated concepts"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:subject	"paper"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:predicate	"study"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:object	"new approach to instance retrieval for negated concepts"
s3	"new approach to instance retrieval for negated concepts"	rdfs:member	"instance retrieval"
s3	"new approach to instance retrieval for negated concepts"	rdfs:member	"negated concepts"
s3	"new approach to instance retrieval for negated concepts"	rdfs:member	"new approach"
s3	"instance retrieval"	rdfs:member	"instance"
s3	"negated concepts"	rdfs:member	"negated"
s3	"negated concepts"	rdfs:subClassOf	"concepts"
s3	"new approach"	rdfs:member	"new"
s3	"instance retrieval"	rdfs:subClassOf	"retrieval"
s3	"new approach"	rdfs:subClassOf	"approach"
s3	"new approach to instance retrieval"	rdfs:member	"new approach"
s3	"new approach to instance retrieval"	rdfs:member	"instance retrieval"
s3	"new approach to instance retrieval for negated concepts"	rdfs:member	"new approach to instance retrieval"
s3	"new approach to instance retrieval for negated concepts"	rdfs:member	"negated concepts"
s1.1	"given concept"
s1.1	"given concept"	rdf:subject	"concept"
s1.1	"given concept"	rdf:predicate	"give"
s1	"instance retrieval computes all instances of a given concept in dl ontology"
s1	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:subject	"Instance retrieval"
s1	"instance retrieval"	rdfs:member	"instance"
s1	"instance retrieval"	rdfs:subClassOf	"retrieval"
s1	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:predicate	"compute"
s1	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:object	"instances of a given concept in DL ontology"
s1	"instances of a given concept in dl ontology"	rdfs:member	"instances"
s1	"instances of a given concept in dl ontology"	rdfs:member	"dl ontology"
s1	"instances of a given concept in dl ontology"	rdfs:member	"concept"
s1	"dl ontology"	rdfs:subClassOf	"ontology"
s1	"dl ontology"	rdfs:member	"dl"
s1	"given concept"	rdfs:subClassOf	"concept"
s1	"instances of given concept"	rdfs:member	"instances"
s1	"instances of given concept"	rdfs:member	"given concept"
s1	"given concept in dl ontology"	rdfs:member	"given concept"
s1	"given concept in dl ontology"	rdfs:member	"dl ontology"
s0.1	"given concept"
s0.1	"given concept"	rdf:subject	"concept"
s0.1	"given concept"	rdf:predicate	"give"
s0	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"
s0	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:subject	"Instance retrieval"
s0	"instance retrieval"	rdfs:member	"instance"
s0	"instance retrieval"	rdfs:subClassOf	"retrieval"
s0	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:predicate	"compute"
s0	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:object	"instances of a given concept in a consistent description logic ontology"
s0	"instances of a given concept in a consistent description logic ontology"	rdfs:member	"instances"
s0	"instances of a given concept in a consistent description logic ontology"	rdfs:member	"consistent description logic ontology"
s0	"instances of a given concept in a consistent description logic ontology"	rdfs:member	"concept"
s0	"logic ontology"	rdfs:subClassOf	"ontology"
s0	"logic ontology"	rdfs:member	"logic"
s0	"consistent description"	rdfs:member	"consistent"
s0	"consistent description logic ontology"	rdfs:member	"consistent description logic"
s0	"description logic ontology"	rdfs:subClassOf	"ontology"
s0	"consistent description logic ontology"	rdfs:subClassOf	"ontology"
s0	"consistent description"	rdfs:subClassOf	"description"
s0	"description logic ontology"	rdfs:member	"description logic"
s0	"consistent description logic"	rdfs:member	"consistent description"
s0	"description logic"	rdfs:member	"description"
s0	"description logic"	rdfs:subClassOf	"logic"
s0	"consistent description logic"	rdfs:subClassOf	"logic"
s0	"description logic ontology"	rdfs:subClassOf	"logic ontology"
s0	"consistent description logic ontology"	rdfs:subClassOf	"description logic ontology"
s0	"given concept"	rdfs:subClassOf	"concept"
s0	"instances of given concept"	rdfs:member	"instances"
s0	"instances of given concept"	rdfs:member	"given concept"
s0	"given concept in consistent description logic ontology"	rdfs:member	"given concept"
s0	"given concept in consistent description logic ontology"	rdfs:member	"consistent description logic ontology"
