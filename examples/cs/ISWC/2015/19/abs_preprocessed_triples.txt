s14.2	"existing methods"
s14.2	"existing methods"	rdf:subject	"method"
s14.2	"existing methods"	rdf:predicate	"exist"
s14.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"
s14.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:subject	"preliminary experimental result on retrieve instance of all atomic negation"
s14.1	"preliminary experimental result on retrieve instance of all atomic negation"	rdfs:member	"atomic negation"
s14.1	"preliminary experimental result on retrieve instance of all atomic negation"	rdfs:member	"preliminary experimental result"
s14.1	"preliminary experimental result on retrieve instance of all atomic negation"	rdfs:member	"retrieve instance"
s14.1	"atomic negation"	rdfs:member	"atomic"
s14.1	"experimental result"	rdfs:subClassOf	"result"
s14.1	"retrieve instance"	rdfs:subClassOf	"instance"
s14.1	"atomic negation"	rdfs:subClassOf	"negation"
s14.1	"preliminary experimental result"	rdfs:member	"preliminary experimental"
s14.1	"experimental result"	rdfs:member	"experimental"
s14.1	"retrieve instance"	rdfs:member	"retrieve"
s14.1	"preliminary experimental result"	rdfs:subClassOf	"result"
s14.1	"preliminary experimental"	rdfs:member	"preliminary"
s14.1	"preliminary experimental"	rdfs:subClassOf	"experimental"
s14.1	"preliminary experimental result"	rdfs:subClassOf	"experimental result"
s14.1	"instance of atomic negation"	rdfs:member	"instance"
s14.1	"instance of atomic negation"	rdfs:member	"atomic negation"
s14.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:predicate	"show"
s14.1	"preliminary experimental results on retrieving instances of all atomic negations show that a rewritingbased method for retrieving instances of a negated concept is significantly more efficient than existing methods"	rdf:object	"rewritingbased method for retrieve instance of a negate concept be significantly more efficient than exist method"
s14.1	"rewritingbased method for retrieve instance of a negate concept be significantly more efficient than exist method"	rdfs:member	"method"
s14.1	"rewritingbased method for retrieve instance of a negate concept be significantly more efficient than exist method"	rdfs:member	"negate concept"
s14.1	"rewritingbased method for retrieve instance of a negate concept be significantly more efficient than exist method"	rdfs:member	"retrieve instance"
s14.1	"retrieve instance"	rdfs:subClassOf	"instance"
s14.1	"negate concept"	rdfs:member	"negate"
s14.1	"retrieve instance"	rdfs:member	"retrieve"
s14.1	"negate concept"	rdfs:subClassOf	"concept"
s14.1	"more efficient"	rdfs:subClassOf	"efficient"
s14.1	"significantly more efficient"	rdfs:subClassOf	"more efficient"
s14.1	"rewritingbased method"	rdfs:subClassOf	"method"
s14.1	"instance of negate concept"	rdfs:member	"instance"
s14.1	"instance of negate concept"	rdfs:member	"negate concept"
s14	"retrieving instances of a negated concept"
s14	"retrieving instances of a negated concept"	rdf:subject	"instance of all atomic negation"
s14	"instance of all atomic negation"	rdfs:member	"atomic negation"
s14	"instance of all atomic negation"	rdfs:member	"instance"
s14	"atomic negation"	rdfs:member	"atomic"
s14	"atomic negation"	rdfs:subClassOf	"negation"
s14	"instance of atomic negation"	rdfs:member	"instance"
s14	"instance of atomic negation"	rdfs:member	"atomic negation"
s14	"retrieving instances of a negated concept"	rdf:predicate	"retrieve"
s14	"retrieving instances of a negated concept"	rdf:object	"instance of a negate concept"
s14	"instance of a negate concept"	rdfs:member	"instance"
s14	"instance of a negate concept"	rdfs:member	"negate concept"
s14	"negate concept"	rdfs:member	"negate"
s14	"negate concept"	rdfs:subClassOf	"concept"
s14	"instance of negate concept"	rdfs:member	"instance"
s14	"instance of negate concept"	rdfs:member	"negate concept"
s13.1	"existing methods implemented in stateoftheart dl systems"
s13.1	"existing methods implemented in stateoftheart dl systems"	rdf:subject	"exist method"
s13.1	"exist method"	rdfs:subClassOf	"method"
s13.1	"exist method"	rdfs:member	"exist"
s13.1	"existing methods implemented in stateoftheart dl systems"	rdf:predicate	"implement"
s13.1	"existing methods implemented in stateoftheart dl systems"	local:AM-LOC	"stateoftheart dl system"
s13.1	"dl system"	rdfs:subClassOf	"system"
s13.1	"dl system"	rdfs:member	"dl"
s13.1	"stateoftheart dl"	rdfs:subClassOf	"dl"
s13.1	"stateoftheart dl"	rdfs:member	"stateoftheart"
s13.1	"stateoftheart dl system"	rdfs:member	"stateoftheart dl"
s13.1	"stateoftheart dl system"	rdfs:subClassOf	"system"
s13.1	"stateoftheart dl system"	rdfs:subClassOf	"dl system"
s13	"existing methods"
s13	"existing methods"	rdf:subject	"method"
s13	"existing methods"	rdf:predicate	"exist"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	rdf:subject	"rewritingbased method for retrieve instance of a negate concept"
s12.1	"rewritingbased method for retrieve instance of a negate concept"	rdfs:member	"method"
s12.1	"rewritingbased method for retrieve instance of a negate concept"	rdfs:member	"negate concept"
s12.1	"rewritingbased method for retrieve instance of a negate concept"	rdfs:member	"retrieve instance"
s12.1	"retrieve instance"	rdfs:subClassOf	"instance"
s12.1	"negate concept"	rdfs:member	"negate"
s12.1	"retrieve instance"	rdfs:member	"retrieve"
s12.1	"negate concept"	rdfs:subClassOf	"concept"
s12.1	"rewritingbased method"	rdfs:subClassOf	"method"
s12.1	"instance of negate concept"	rdfs:member	"instance"
s12.1	"instance of negate concept"	rdfs:member	"negate concept"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	rdf:predicate	"propose"
s12.1	"a rewritingbased method for retrieving instances of a negated concept proposed for iforewritable ontologies"	local:AM-PNC	"iforewritable ontology"
s12.1	"iforewritable ontology"	rdfs:subClassOf	"ontology"
s12.1	"iforewritable ontology"	rdfs:member	"iforewritable"
s12	"retrieving instances of a negated concept"
s12	"retrieving instances of a negated concept"	rdf:subject	"instance of a negate concept"
s12	"instance of a negate concept"	rdfs:member	"instance"
s12	"instance of a negate concept"	rdfs:member	"negate concept"
s12	"negate concept"	rdfs:member	"negate"
s12	"negate concept"	rdfs:subClassOf	"concept"
s12	"instance of negate concept"	rdfs:member	"instance"
s12	"instance of negate concept"	rdfs:member	"negate concept"
s12	"retrieving instances of a negated concept"	rdf:predicate	"retrieve"
s10.1	"two sufficient conditions detect iforewritable ontologies"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:subject	"two sufficient condition"
s10.1	"sufficient condition"	rdfs:subClassOf	"condition"
s10.1	"sufficient condition"	rdfs:member	"sufficient"
s10.1	"two sufficient condition"	rdfs:subClassOf	"sufficient condition"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:predicate	"detect"
s10.1	"two sufficient conditions detect iforewritable ontologies"	rdf:object	"iforewritable ontology"
s10.1	"iforewritable ontology"	rdfs:subClassOf	"ontology"
s10.1	"iforewritable ontology"	rdfs:member	"iforewritable"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"	rdf:subject	"two sufficient condition"
s10	"sufficient condition"	rdfs:subClassOf	"condition"
s10	"sufficient condition"	rdfs:member	"sufficient"
s10	"two sufficient condition"	rdfs:subClassOf	"sufficient condition"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"	rdf:predicate	"propose"
s10	"two sufficient conditions proposed to detect iforewritable ontologies"	local:AM-PNC	"detect iforewritable ontology"
s10	"detect iforewritable ontology"	rdfs:member	"detect"
s10	"detect iforewritable ontology"	rdfs:member	"iforewritable ontology"
s10	"iforewritable ontology"	rdfs:subClassOf	"ontology"
s10	"iforewritable ontology"	rdfs:member	"iforewritable"
s9.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"
s9.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:subject	"cq cq"
s9.1	"cq cq"	rdfs:subClassOf	"cq"
s9.1	"cq cq"	rdfs:member	"cq"
s9.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:predicate	"answer"
s9.1	"the firstorder rewritable class which guarantees that answering a cq answering a disjunction of cqs over the abox regardless of the tbox"	rdf:object	"disjunction of cqs over the abox regardless of the tbox"
s9.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"abox regardless"
s9.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"disjunction"
s9.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"tbox"
s9.1	"disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cqs"
s9.1	"abox regardless"	rdfs:member	"abox"
s9.1	"abox regardless"	rdfs:subClassOf	"regardless"
s9.1	"disjunction of cqs"	rdfs:member	"disjunction"
s9.1	"disjunction of cqs"	rdfs:member	"cqs"
s9.1	"disjunction of cqs over abox"	rdfs:member	"disjunction of cqs"
s9.1	"disjunction of cqs over abox"	rdfs:member	"abox"
s9.1	"disjunction of cqs over abox regardless_of tbox"	rdfs:member	"disjunction of cqs over abox"
s9.1	"disjunction of cqs over abox regardless_of tbox"	rdfs:member	"tbox"
s9	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"
s9	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:subject	"firstorder rewritable class"
s9	"firstorder rewritable"	rdfs:subClassOf	"rewritable"
s9	"rewritable class"	rdfs:member	"rewritable"
s9	"firstorder rewritable class"	rdfs:subClassOf	"class"
s9	"firstorder rewritable class"	rdfs:member	"firstorder rewritable"
s9	"rewritable class"	rdfs:subClassOf	"class"
s9	"firstorder rewritable"	rdfs:member	"firstorder"
s9	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s9	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:predicate	"guarantee"
s9	"the firstorder rewritable class which guarantees that answering a cq is reducible to answering a disjunction of cqs over the abox regardless of the tbox"	rdf:object	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"
s9	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cq"
s9	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"tbox"
s9	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"cqs"
s9	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"abox regardless"
s9	"answer a cq be reducible to answer a disjunction of cqs over the abox regardless of the tbox"	rdfs:member	"disjunction"
s9	"abox regardless"	rdfs:member	"abox"
s9	"abox regardless"	rdfs:subClassOf	"regardless"
s9	"disjunction of cqs"	rdfs:member	"disjunction"
s9	"disjunction of cqs"	rdfs:member	"cqs"
s9	"disjunction of cqs over abox"	rdfs:member	"disjunction of cqs"
s9	"disjunction of cqs over abox"	rdfs:member	"abox"
s9	"answer regardless_of tbox"	rdfs:member	"answer"
s9	"answer regardless_of tbox"	rdfs:member	"tbox"
s7.3	"a disjunction of conjunctive queries cqs over the abox"
s7.3	"a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"disjunction of conjunctive query"
s7.3	"disjunction of conjunctive query"	rdfs:member	"disjunction"
s7.3	"disjunction of conjunctive query"	rdfs:member	"conjunctive query"
s7.3	"conjunctive query"	rdfs:member	"conjunctive"
s7.3	"conjunctive query"	rdfs:subClassOf	"query"
s7.3	"disjunction of conjunctive query"	rdfs:member	"disjunction"
s7.3	"disjunction of conjunctive query"	rdfs:member	"conjunctive query"
s7.3	"a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"cqs"
s7.3	"a disjunction of conjunctive queries cqs over the abox"	local:AM-LOC	"abox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"disjunction of conjunctive query cqs over the abox"
s7.2	"disjunction of conjunctive query cqs over the abox"	rdfs:member	"conjunctive query cqs"
s7.2	"disjunction of conjunctive query cqs over the abox"	rdfs:member	"disjunction"
s7.2	"disjunction of conjunctive query cqs over the abox"	rdfs:member	"abox"
s7.2	"conjunctive query"	rdfs:subClassOf	"query"
s7.2	"conjunctive query cqs"	rdfs:member	"conjunctive query"
s7.2	"conjunctive query"	rdfs:member	"conjunctive"
s7.2	"query cqs"	rdfs:subClassOf	"cqs"
s7.2	"conjunctive query cqs"	rdfs:subClassOf	"cqs"
s7.2	"query cqs"	rdfs:member	"query"
s7.2	"conjunctive query cqs"	rdfs:subClassOf	"query cqs"
s7.2	"disjunction of conjunctive query cqs"	rdfs:member	"disjunction"
s7.2	"disjunction of conjunctive query cqs"	rdfs:member	"conjunctive query cqs"
s7.2	"disjunction of conjunctive query cqs over abox"	rdfs:member	"disjunction of conjunctive query cqs"
s7.2	"disjunction of conjunctive query cqs over abox"	rdfs:member	"abox"
s7.2	"answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"answer"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"instance retrieval for an atomic negation"
s7.1	"instance retrieval for an atomic negation"	rdfs:member	"atomic negation"
s7.1	"instance retrieval for an atomic negation"	rdfs:member	"instance retrieval"
s7.1	"atomic negation"	rdfs:member	"atomic"
s7.1	"instance retrieval"	rdfs:member	"instance"
s7.1	"instance retrieval"	rdfs:subClassOf	"retrieval"
s7.1	"atomic negation"	rdfs:subClassOf	"negation"
s7.1	"instance retrieval for atomic negation"	rdfs:member	"instance retrieval"
s7.1	"instance retrieval for atomic negation"	rdfs:member	"atomic negation"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"reduce"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:object	"answer a disjunction of conjunctive query cqs over the abox"
s7.1	"answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"conjunctive query cqs"
s7.1	"answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"disjunction"
s7.1	"answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"abox"
s7.1	"conjunctive query"	rdfs:subClassOf	"query"
s7.1	"conjunctive query cqs"	rdfs:member	"conjunctive query"
s7.1	"conjunctive query"	rdfs:member	"conjunctive"
s7.1	"query cqs"	rdfs:subClassOf	"cqs"
s7.1	"conjunctive query cqs"	rdfs:subClassOf	"cqs"
s7.1	"query cqs"	rdfs:member	"query"
s7.1	"conjunctive query cqs"	rdfs:subClassOf	"query cqs"
s7.1	"disjunction of conjunctive query cqs"	rdfs:member	"disjunction"
s7.1	"disjunction of conjunctive query cqs"	rdfs:member	"conjunctive query cqs"
s7.1	"disjunction of conjunctive query cqs over abox"	rdfs:member	"disjunction of conjunctive query cqs"
s7.1	"disjunction of conjunctive query cqs over abox"	rdfs:member	"abox"
s7.1	"instance retrieval for an atomic negation can reduced to answering a disjunction of conjunctive queries cqs over the abox"	local:AM-MOD	"can"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:subject	"iforewritable class"
s7	"iforewritable class"	rdfs:subClassOf	"class"
s7	"iforewritable class"	rdfs:member	"iforewritable"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:predicate	"guarantee"
s7	"the iforewritable class guarantees that instance retrieval for an atomic negation can be reduced to answering a disjunction of conjunctive queries cqs over the abox"	rdf:object	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"
s7	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"abox"
s7	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"atomic negation"
s7	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"conjunctive query cqs"
s7	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"instance retrieval"
s7	"instance retrieval for an atomic negation can be reduce to answer a disjunction of conjunctive query cqs over the abox"	rdfs:member	"disjunction"
s7	"atomic negation"	rdfs:member	"atomic"
s7	"conjunctive query"	rdfs:subClassOf	"query"
s7	"atomic negation"	rdfs:subClassOf	"negation"
s7	"conjunctive query cqs"	rdfs:member	"conjunctive query"
s7	"conjunctive query"	rdfs:member	"conjunctive"
s7	"query cqs"	rdfs:subClassOf	"cqs"
s7	"conjunctive query cqs"	rdfs:subClassOf	"cqs"
s7	"instance retrieval"	rdfs:member	"instance"
s7	"instance retrieval"	rdfs:subClassOf	"retrieval"
s7	"query cqs"	rdfs:member	"query"
s7	"conjunctive query cqs"	rdfs:subClassOf	"query cqs"
s7	"be reduce"	rdfs:subClassOf	"reduce"
s7	"can be reduce"	rdfs:subClassOf	"be reduce"
s7	"instance retrieval for atomic negation"	rdfs:member	"instance retrieval"
s7	"instance retrieval for atomic negation"	rdfs:member	"atomic negation"
s7	"disjunction of conjunctive query cqs"	rdfs:member	"disjunction"
s7	"disjunction of conjunctive query cqs"	rdfs:member	"conjunctive query cqs"
s7	"answer over abox"	rdfs:member	"answer"
s7	"answer over abox"	rdfs:member	"abox"
s6.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"
s6.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:subject	"iforewritable class call the inconsistencybased firstorder rewritable class"
s6.1	"iforewritable class call the inconsistencybased firstorder rewritable class"	rdfs:member	"iforewritable class call"
s6.1	"iforewritable class call the inconsistencybased firstorder rewritable class"	rdfs:member	"rewritable class"
s6.1	"iforewritable class call the inconsistencybased firstorder rewritable class"	rdfs:member	"inconsistencybased firstorder"
s6.1	"iforewritable class"	rdfs:subClassOf	"class"
s6.1	"rewritable class"	rdfs:member	"rewritable"
s6.1	"inconsistencybased firstorder"	rdfs:member	"inconsistencybased"
s6.1	"iforewritable class"	rdfs:member	"iforewritable"
s6.1	"class call"	rdfs:member	"class"
s6.1	"class call"	rdfs:subClassOf	"call"
s6.1	"inconsistencybased firstorder"	rdfs:subClassOf	"firstorder"
s6.1	"rewritable class"	rdfs:subClassOf	"class"
s6.1	"iforewritable class call"	rdfs:member	"iforewritable class"
s6.1	"iforewritable class call"	rdfs:subClassOf	"call"
s6.1	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s6.1	"inconsistencybased firstorder rewritable class"	rdfs:subClassOf	"firstorder rewritable class"
s6.1	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:predicate	"identify"
s6	"the iforewritable class called the inconsistencybased firstorder rewritable class"
s6	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:subject	"iforewritable class"
s6	"iforewritable class"	rdfs:subClassOf	"class"
s6	"iforewritable class"	rdfs:member	"iforewritable"
s6	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:predicate	"call"
s6	"the iforewritable class called the inconsistencybased firstorder rewritable class"	rdf:object	"inconsistencybased firstorder rewritable class"
s6	"inconsistencybased firstorder rewritable class"	rdfs:member	"rewritable class"
s6	"inconsistencybased firstorder rewritable class"	rdfs:member	"inconsistencybased firstorder"
s6	"rewritable class"	rdfs:subClassOf	"class"
s6	"rewritable class"	rdfs:member	"rewritable"
s6	"inconsistencybased firstorder"	rdfs:member	"inconsistencybased"
s6	"inconsistencybased firstorder"	rdfs:subClassOf	"firstorder"
s6	"firstorder rewritable class"	rdfs:subClassOf	"rewritable class"
s6	"inconsistencybased firstorder rewritable class"	rdfs:subClassOf	"firstorder rewritable class"
s5.1	"the iforewritable class called iforewritable class"
s5.1	"the iforewritable class called iforewritable class"	rdf:subject	"iforewritable class call iforewritable class"
s5.1	"iforewritable class call iforewritable class"	rdfs:member	"iforewritable class call"
s5.1	"iforewritable class call iforewritable class"	rdfs:member	"iforewritable class"
s5.1	"iforewritable class"	rdfs:subClassOf	"class"
s5.1	"iforewritable class"	rdfs:member	"iforewritable"
s5.1	"class call"	rdfs:member	"class"
s5.1	"class call"	rdfs:subClassOf	"call"
s5.1	"iforewritable class call"	rdfs:member	"iforewritable class"
s5.1	"iforewritable class call"	rdfs:subClassOf	"call"
s5.1	"call iforewritable class"	rdfs:subClassOf	"iforewritable class"
s5.1	"class call iforewritable class"	rdfs:subClassOf	"call iforewritable class"
s5.1	"iforewritable class call iforewritable class"	rdfs:subClassOf	"class call iforewritable class"
s5.1	"the iforewritable class called iforewritable class"	rdf:predicate	"identify"
s5	"the iforewritable class called iforewritable class"
s5	"the iforewritable class called iforewritable class"	rdf:subject	"iforewritable class"
s5	"iforewritable class"	rdfs:subClassOf	"class"
s5	"iforewritable class"	rdfs:member	"iforewritable"
s5	"the iforewritable class called iforewritable class"	rdf:predicate	"call"
s5	"the iforewritable class called iforewritable class"	rdf:object	"iforewritable class"
s5	"iforewritable class"	rdfs:subClassOf	"class"
s5	"iforewritable class"	rdfs:member	"iforewritable"
s4.2	"rewriting"
s4.2	"rewriting"	rdf:predicate	"rewrite"
s4.1	"based on query rewriting"
s4.1	"based on query rewriting"	rdf:predicate	"base"
s4.1	"based on query rewriting"	local:AM-LOC	"query rewrite"
s4.1	"query rewrite"	rdfs:subClassOf	"rewrite"
s4.1	"query rewrite"	rdfs:member	"query"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:subject	"paper"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:predicate	"study"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	rdf:object	"new approach to instance retrieval"
s4	"new approach to instance retrieval"	rdfs:member	"new approach"
s4	"new approach to instance retrieval"	rdfs:member	"instance retrieval"
s4	"new approach"	rdfs:member	"new"
s4	"new approach"	rdfs:subClassOf	"approach"
s4	"instance retrieval"	rdfs:subClassOf	"retrieval"
s4	"instance retrieval"	rdfs:member	"instance"
s4	"new approach to instance"	rdfs:member	"new approach"
s4	"new approach to instance"	rdfs:member	"instance"
s4	"this paper studies a new approach to instance retrieval for negated concepts based on query rewriting"	local:AM-PNC	"negate concept base on query rewrite"
s4	"negate concept base on query rewrite"	rdfs:member	"negate concept base"
s4	"negate concept base on query rewrite"	rdfs:member	"query rewrite"
s4	"negate concept base"	rdfs:subClassOf	"base"
s4	"concept base"	rdfs:subClassOf	"base"
s4	"negate concept"	rdfs:member	"negate"
s4	"negate concept"	rdfs:subClassOf	"concept"
s4	"query rewrite"	rdfs:member	"query"
s4	"negate concept base"	rdfs:member	"negate concept"
s4	"query rewrite"	rdfs:subClassOf	"rewrite"
s4	"concept base"	rdfs:member	"concept"
s4	"concept base on query"	rdfs:member	"concept base"
s4	"concept base on query"	rdfs:member	"query"
s3	"this paper studies a new approach to instance retrieval for negated concepts"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:subject	"paper"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:predicate	"study"
s3	"this paper studies a new approach to instance retrieval for negated concepts"	rdf:object	"new approach to instance retrieval for negate concept"
s3	"new approach to instance retrieval for negate concept"	rdfs:member	"new approach"
s3	"new approach to instance retrieval for negate concept"	rdfs:member	"negate concept"
s3	"new approach to instance retrieval for negate concept"	rdfs:member	"instance retrieval"
s3	"new approach"	rdfs:member	"new"
s3	"new approach"	rdfs:subClassOf	"approach"
s3	"negate concept"	rdfs:member	"negate"
s3	"negate concept"	rdfs:subClassOf	"concept"
s3	"instance retrieval"	rdfs:member	"instance"
s3	"instance retrieval"	rdfs:subClassOf	"retrieval"
s3	"new approach to instance retrieval"	rdfs:member	"new approach"
s3	"new approach to instance retrieval"	rdfs:member	"instance retrieval"
s3	"new approach to instance retrieval for negate concept"	rdfs:member	"new approach to instance retrieval"
s3	"new approach to instance retrieval for negate concept"	rdfs:member	"negate concept"
s1.1	"given concept"
s1.1	"given concept"	rdf:subject	"concept"
s1.1	"given concept"	rdf:predicate	"give"
s1	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"
s1	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:subject	"instance retrieval"
s1	"instance retrieval"	rdfs:subClassOf	"retrieval"
s1	"instance retrieval"	rdfs:member	"instance"
s1	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:predicate	"compute"
s1	"instance retrieval computes all instances of a given concept in a consistent description logic ontology"	rdf:object	"instance of a give concept in a consistent description logic ontology"
s1	"instance of a give concept in a consistent description logic ontology"	rdfs:member	"consistent description logic ontology"
s1	"instance of a give concept in a consistent description logic ontology"	rdfs:member	"instance"
s1	"instance of a give concept in a consistent description logic ontology"	rdfs:member	"give concept"
s1	"consistent description logic ontology"	rdfs:subClassOf	"ontology"
s1	"consistent description logic ontology"	rdfs:member	"consistent description logic"
s1	"give concept"	rdfs:subClassOf	"concept"
s1	"consistent description"	rdfs:member	"consistent"
s1	"description logic"	rdfs:subClassOf	"logic"
s1	"logic ontology"	rdfs:member	"logic"
s1	"give concept"	rdfs:member	"give"
s1	"consistent description"	rdfs:subClassOf	"description"
s1	"logic ontology"	rdfs:subClassOf	"ontology"
s1	"description logic ontology"	rdfs:subClassOf	"ontology"
s1	"consistent description logic"	rdfs:subClassOf	"logic"
s1	"description logic"	rdfs:member	"description"
s1	"description logic ontology"	rdfs:member	"description logic"
s1	"consistent description logic"	rdfs:member	"consistent description"
s1	"description logic ontology"	rdfs:subClassOf	"logic ontology"
s1	"consistent description logic ontology"	rdfs:subClassOf	"description logic ontology"
s1	"instance of give concept"	rdfs:member	"instance"
s1	"instance of give concept"	rdfs:member	"give concept"
s1	"give concept in consistent description logic ontology"	rdfs:member	"give concept"
s1	"give concept in consistent description logic ontology"	rdfs:member	"consistent description logic ontology"
s0.1	"given concept"
s0.1	"given concept"	rdf:subject	"concept"
s0.1	"given concept"	rdf:predicate	"give"
s0	"instance retrieval computes all instances of a given concept in dl ontology"
s0	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:subject	"instance retrieval"
s0	"instance retrieval"	rdfs:subClassOf	"retrieval"
s0	"instance retrieval"	rdfs:member	"instance"
s0	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:predicate	"compute"
s0	"instance retrieval computes all instances of a given concept in dl ontology"	rdf:object	"instance of a give concept in dl ontology"
s0	"instance of a give concept in dl ontology"	rdfs:member	"instance"
s0	"instance of a give concept in dl ontology"	rdfs:member	"give concept"
s0	"instance of a give concept in dl ontology"	rdfs:member	"dl ontology"
s0	"give concept"	rdfs:member	"give"
s0	"dl ontology"	rdfs:member	"dl"
s0	"dl ontology"	rdfs:subClassOf	"ontology"
s0	"give concept"	rdfs:subClassOf	"concept"
s0	"instance of give concept"	rdfs:member	"instance"
s0	"instance of give concept"	rdfs:member	"give concept"
s0	"give concept in dl ontology"	rdfs:member	"give concept"
s0	"give concept in dl ontology"	rdfs:member	"dl ontology"
