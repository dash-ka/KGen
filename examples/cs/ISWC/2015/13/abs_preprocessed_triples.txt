s10.1	"the formal semantics for the defeasible mappings strongly related to the idea of answer sets for logic programs"
s10.1	"the formal semantics for the defeasible mappings strongly related to the idea of answer sets for logic programs"	rdf:subject	"formal semantics for the defeasible mappings"
s10.1	"formal semantics for the defeasible mappings"	rdfs:member	"formal semantics"
s10.1	"formal semantics for the defeasible mappings"	rdfs:member	"defeasible mappings"
s10.1	"formal semantics"	rdfs:subClassOf	"semantics"
s10.1	"formal semantics"	rdfs:member	"formal"
s10.1	"defeasible mappings"	rdfs:member	"defeasible"
s10.1	"defeasible mappings"	rdfs:subClassOf	"mappings"
s10.1	"formal semantics for defeasible mappings"	rdfs:member	"formal semantics"
s10.1	"formal semantics for defeasible mappings"	rdfs:member	"defeasible mappings"
s10.1	"the formal semantics for the defeasible mappings strongly related to the idea of answer sets for logic programs"	rdf:predicate	"relate"
s10.1	"the formal semantics for the defeasible mappings strongly related to the idea of answer sets for logic programs"	rdf:object	"idea of answer sets for logic programs"
s10.1	"idea of answer sets for logic programs"	rdfs:member	"logic programs"
s10.1	"idea of answer sets for logic programs"	rdfs:member	"idea"
s10.1	"idea of answer sets for logic programs"	rdfs:member	"answer sets"
s10.1	"logic programs"	rdfs:member	"logic"
s10.1	"answer sets"	rdfs:subClassOf	"sets"
s10.1	"answer sets"	rdfs:member	"answer"
s10.1	"logic programs"	rdfs:subClassOf	"programs"
s10.1	"idea of answer sets"	rdfs:member	"idea"
s10.1	"idea of answer sets"	rdfs:member	"answer sets"
s10.1	"answer sets for logic programs"	rdfs:member	"answer sets"
s10.1	"answer sets for logic programs"	rdfs:member	"logic programs"
s10.1	"the formal semantics for the defeasible mappings strongly related to the idea of answer sets for logic programs"	local:AM-MNR	"strongly"
s10	"furthermore we show that the formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"
s10	"furthermore we show that the formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdf:subject	"We"
s10	"furthermore we show that the formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdf:predicate	"show"
s10	"furthermore we show that the formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdf:object	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"
s10	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdfs:member	"formal semantics"
s10	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdfs:member	"logic programs"
s10	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdfs:member	"defeasible mappings"
s10	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdfs:member	"idea"
s10	"formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	rdfs:member	"answer sets"
s10	"defeasible mappings"	rdfs:member	"defeasible"
s10	"logic programs"	rdfs:member	"logic"
s10	"answer sets"	rdfs:subClassOf	"sets"
s10	"formal semantics"	rdfs:subClassOf	"semantics"
s10	"defeasible mappings"	rdfs:subClassOf	"mappings"
s10	"formal semantics"	rdfs:member	"formal"
s10	"answer sets"	rdfs:member	"answer"
s10	"logic programs"	rdfs:subClassOf	"programs"
s10	"strongly related"	rdfs:subClassOf	"related"
s10	"actually strongly related"	rdfs:subClassOf	"strongly related"
s10	"formal semantics for defeasible mappings"	rdfs:member	"formal semantics"
s10	"formal semantics for defeasible mappings"	rdfs:member	"defeasible mappings"
s10	"actually strongly related to idea"	rdfs:member	"actually strongly related"
s10	"actually strongly related to idea"	rdfs:member	"idea"
s10	"idea of answer sets"	rdfs:member	"idea"
s10	"idea of answer sets"	rdfs:member	"answer sets"
s10	"answer sets for logic programs"	rdfs:member	"answer sets"
s10	"answer sets for logic programs"	rdfs:member	"logic programs"
s10	"furthermore we show that the formal semantics for the defeasible mappings actually is strongly related to the idea of answer sets for logic programs"	local:AM-DIS	"Furthermore"
s9	"we provide the formal semantics for the defeasible mappings"
s9	"we provide the formal semantics for the defeasible mappings"	rdf:subject	"We"
s9	"we provide the formal semantics for the defeasible mappings"	rdf:predicate	"provide"
s9	"we provide the formal semantics for the defeasible mappings"	rdf:object	"formal semantics for the defeasible mappings"
s9	"formal semantics for the defeasible mappings"	rdfs:member	"formal semantics"
s9	"formal semantics for the defeasible mappings"	rdfs:member	"defeasible mappings"
s9	"formal semantics"	rdfs:subClassOf	"semantics"
s9	"formal semantics"	rdfs:member	"formal"
s9	"defeasible mappings"	rdfs:member	"defeasible"
s9	"defeasible mappings"	rdfs:subClassOf	"mappings"
s9	"formal semantics for defeasible mappings"	rdfs:member	"formal semantics"
s9	"formal semantics for defeasible mappings"	rdfs:member	"defeasible mappings"
s8.1	"the defeasible axioms apply to unknowns"
s8.1	"the defeasible axioms apply to unknowns"	rdf:subject	"defeasible axioms"
s8.1	"defeasible axioms"	rdfs:subClassOf	"axioms"
s8.1	"defeasible axioms"	rdfs:member	"defeasible"
s8.1	"the defeasible axioms apply to unknowns"	rdf:predicate	"apply"
s8.1	"the defeasible axioms apply to unknowns"	rdf:object	"unknowns"
s8	"we show that reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"
s8	"we show that reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"	rdf:subject	"We"
s8	"we show that reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"	rdf:predicate	"show"
s8	"we show that reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"	rdf:object	"reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"
s8	"reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"	rdfs:member	"defeasible axioms"
s8	"reasoning under such a setting is decidable even when the defeasible axioms apply to unknowns"	rdfs:member	"setting"
s8	"defeasible axioms"	rdfs:subClassOf	"axioms"
s8	"defeasible axioms"	rdfs:member	"defeasible"
s8	"when apply"	rdfs:subClassOf	"apply"
s8	"even when"	rdfs:subClassOf	"when"
s8	"reasoning under setting"	rdfs:member	"reasoning"
s8	"reasoning under setting"	rdfs:member	"setting"
s8	"when apply to unknowns"	rdfs:member	"when apply"
s8	"when apply to unknowns"	rdfs:member	"unknowns"
s7	"questions can then asked in terms of the concepts in the overarching ontology"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	rdf:subject	"Questions"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	rdf:predicate	"ask"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	rdf:object	"concepts terms"
s7	"concepts terms"	rdfs:member	"concepts"
s7	"concepts terms"	rdfs:subClassOf	"terms"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	local:AM-LOC	"overarching ontology"
s7	"overarching ontology"	rdfs:subClassOf	"ontology"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	local:AM-MOD	"can"
s7	"questions can then asked in terms of the concepts in the overarching ontology"	local:AM-TMP	"then"
s5	"we consider the case"
s5	"we consider the case"	rdf:subject	"We"
s5	"we consider the case"	rdf:predicate	"consider"
s5	"we consider the case"	rdf:object	"case"
s4	"logical inconsistencies that may caused due to the traditional type of mappings"
s4	"logical inconsistencies that may caused due to the traditional type of mappings"	rdf:subject	"logical inconsistencies"
s4	"logical inconsistencies"	rdfs:subClassOf	"inconsistencies"
s4	"logical inconsistencies"	rdfs:member	"logical"
s4	"logical inconsistencies that may caused due to the traditional type of mappings"	rdf:predicate	"cause"
s4	"logical inconsistencies that may caused due to the traditional type of mappings"	local:AM-CAU	"due to the traditional type of mappings"
s4	"due to the traditional type of mappings"	rdfs:member	"traditional type"
s4	"due to the traditional type of mappings"	rdfs:member	"mappings"
s4	"traditional type"	rdfs:member	"traditional"
s4	"traditional type"	rdfs:subClassOf	"type"
s4	"traditional type of mappings"	rdfs:member	"traditional type"
s4	"traditional type of mappings"	rdfs:member	"mappings"
s4	"logical inconsistencies that may caused due to the traditional type of mappings"	local:AM-MOD	"may"
s3.1	"this avoiding logical inconsistencies"
s3.1	"this avoiding logical inconsistencies"	rdf:subject	"this"
s3.1	"this avoiding logical inconsistencies"	rdf:predicate	"avoid"
s3.1	"this avoiding logical inconsistencies"	rdf:object	"logical inconsistencies"
s3.1	"logical inconsistencies"	rdfs:subClassOf	"inconsistencies"
s3.1	"logical inconsistencies"	rdfs:member	"logical"
s3	"this provides the advantage of avoiding logical inconsistencies"
s3	"this provides the advantage of avoiding logical inconsistencies"	rdf:subject	"this"
s3	"this provides the advantage of avoiding logical inconsistencies"	rdf:predicate	"provide"
s3	"this provides the advantage of avoiding logical inconsistencies"	rdf:object	"advantage avoiding logical inconsistencies"
s3	"advantage avoiding logical inconsistencies"	rdfs:member	"advantage"
s3	"advantage avoiding logical inconsistencies"	rdfs:member	"logical inconsistencies"
s3	"logical inconsistencies"	rdfs:subClassOf	"inconsistencies"
s3	"logical inconsistencies"	rdfs:member	"logical"
s3	"advantage avoiding"	rdfs:member	"advantage"
s3	"advantage avoiding"	rdfs:member	"avoiding"
s2.1	"handling exceptions automatically"
s2.1	"handling exceptions automatically"	rdf:subject	"exceptions automatically"
s2.1	"automatically exceptions"	rdfs:subClassOf	"exceptions"
s2.1	"handling exceptions automatically"	rdf:predicate	"handle"
s2	"this provides the advantage of handling exceptions automatically"
s2	"this provides the advantage of handling exceptions automatically"	rdf:subject	"this"
s2	"this provides the advantage of handling exceptions automatically"	rdf:predicate	"provide"
s2	"this provides the advantage of handling exceptions automatically"	rdf:object	"advantage of handling exceptions automatically"
s2	"advantage of handling exceptions automatically"	rdfs:member	"advantage"
s2	"advantage of handling exceptions automatically"	rdfs:member	"exceptions"
s2	"automatically advantage"	rdfs:subClassOf	"advantage"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"	rdf:subject	"mapping"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"	rdf:predicate	"apply"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"	rdf:object	"individuals"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"	local:AM-ADV	"only"
s1	"such a mapping only applies to individuals if this does not because an inconsistency"	local:AM-ADV	"inconsistency"
s0.1	"we a novel approach denote mappings between elbased ontologies"
s0.1	"we a novel approach denote mappings between elbased ontologies"	rdf:subject	"novel approach"
s0.1	"novel approach"	rdfs:subClassOf	"approach"
s0.1	"novel approach"	rdfs:member	"novel"
s0.1	"we a novel approach denote mappings between elbased ontologies"	rdf:predicate	"denote"
s0.1	"we a novel approach denote mappings between elbased ontologies"	rdf:object	"mappings between ELbased ontologies"
s0.1	"mappings between elbased ontologies"	rdfs:member	"elbased ontologies"
s0.1	"mappings between elbased ontologies"	rdfs:member	"mappings"
s0.1	"elbased ontologies"	rdfs:member	"elbased"
s0.1	"elbased ontologies"	rdfs:subClassOf	"ontologies"
s0.1	"mappings between elbased ontologies"	rdfs:member	"mappings"
s0.1	"mappings between elbased ontologies"	rdfs:member	"elbased ontologies"
s0	"we present a novel approach to denote mappings between elbased ontologies"
s0	"we present a novel approach to denote mappings between elbased ontologies"	rdf:subject	"We"
s0	"we present a novel approach to denote mappings between elbased ontologies"	rdf:predicate	"present"
s0	"we present a novel approach to denote mappings between elbased ontologies"	rdf:object	"novel approach to denote mappings between ELbased ontologies"
s0	"novel approach to denote mappings between elbased ontologies"	rdfs:member	"novel approach"
s0	"novel approach to denote mappings between elbased ontologies"	rdfs:member	"elbased ontologies"
s0	"novel approach to denote mappings between elbased ontologies"	rdfs:member	"mappings"
s0	"novel approach"	rdfs:subClassOf	"approach"
s0	"elbased ontologies"	rdfs:subClassOf	"ontologies"
s0	"novel approach"	rdfs:member	"novel"
s0	"elbased ontologies"	rdfs:member	"elbased"
s0	"mappings between elbased ontologies"	rdfs:member	"mappings"
s0	"mappings between elbased ontologies"	rdfs:member	"elbased ontologies"
