s12	"we evaluation shows encouraging results"
s12	"we evaluation shows encouraging results"	rdf:subject	"evaluation"
s12	"we evaluation shows encouraging results"	rdf:predicate	"show"
s12	"we evaluation shows encouraging results"	rdf:object	"encourage result"
s12	"encourage result"	rdfs:member	"encourage"
s12	"encourage result"	rdfs:subClassOf	"result"
s11.1	"we"
s11.1	"we"	rdf:subject	"we"
s11.1	"we"	rdf:predicate	"approach"
s11	"we implemented we"
s11	"we implemented we"	rdf:subject	"we"
s11	"we implemented we"	rdf:predicate	"implement"
s11	"we implemented we"	rdf:object	"we"
s10.1	"directly translating the ontology into rules without any prior classification"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:subject	"ontology"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:predicate	"translate"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:object	"rule"
s10.1	"directly translating the ontology into rules without any prior classification"	local:AM-MNR	"directly"
s10.1	"directly translating the ontology into rules without any prior classification"	local:AM-MNR	"without any prior classification"
s10.1	"prior classification"	rdfs:member	"prior"
s10.1	"prior classification"	rdfs:subClassOf	"classification"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:subject	"we"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:predicate	"provide"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:object	"nontrivial solution for the extension of nohr to owl 2 ql"
s10	"nontrivial solution for the extension of nohr to owl 2 ql"	rdfs:member	"ql"
s10	"nontrivial solution for the extension of nohr to owl 2 ql"	rdfs:member	"extension"
s10	"nontrivial solution for the extension of nohr to owl 2 ql"	rdfs:member	"nohr"
s10	"nontrivial solution for the extension of nohr to owl 2 ql"	rdfs:member	"nontrivial solution"
s10	"nontrivial solution"	rdfs:member	"nontrivial"
s10	"nontrivial solution"	rdfs:subClassOf	"solution"
s10	"2 ql"	rdfs:subClassOf	"ql"
s10	"owl 2 ql"	rdfs:subClassOf	"2 ql"
s10	"nontrivial solution for extension"	rdfs:member	"nontrivial solution"
s10	"nontrivial solution for extension"	rdfs:member	"extension"
s10	"extension of nohr"	rdfs:member	"extension"
s10	"extension of nohr"	rdfs:member	"nohr"
s10	"extension of nohr to owl 2 ql"	rdfs:member	"extension of nohr"
s10	"extension of nohr to owl 2 ql"	rdfs:member	"owl 2 ql"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	local:AM-LOC	"paper"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	local:AM-MNR	"directly translate the ontology into rule without any prior classification"
s10	"directly translate the ontology into rule without any prior classification"	rdfs:member	"prior classification"
s10	"directly translate the ontology into rule without any prior classification"	rdfs:member	"ontology"
s10	"directly translate the ontology into rule without any prior classification"	rdfs:member	"rule"
s10	"prior classification"	rdfs:member	"prior"
s10	"prior classification"	rdfs:subClassOf	"classification"
s10	"directly translate"	rdfs:subClassOf	"translate"
s10	"directly translate into rule"	rdfs:member	"directly translate"
s10	"directly translate into rule"	rdfs:member	"rule"
s10	"directly translate into rule without prior classification"	rdfs:member	"directly translate into rule"
s10	"directly translate into rule without prior classification"	rdfs:member	"prior classification"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	rdf:subject	"yet a straightforward adaptation of the exist approach to owl 2 ql"
s9.1	"yet a straightforward adaptation of the exist approach to owl 2 ql"	rdfs:member	"ql"
s9.1	"yet a straightforward adaptation of the exist approach to owl 2 ql"	rdfs:member	"exist approach"
s9.1	"yet a straightforward adaptation of the exist approach to owl 2 ql"	rdfs:member	"straightforward adaptation"
s9.1	"exist approach"	rdfs:subClassOf	"approach"
s9.1	"straightforward adaptation"	rdfs:member	"straightforward"
s9.1	"exist approach"	rdfs:member	"exist"
s9.1	"straightforward adaptation"	rdfs:subClassOf	"adaptation"
s9.1	"2 ql"	rdfs:subClassOf	"ql"
s9.1	"owl 2 ql"	rdfs:subClassOf	"2 ql"
s9.1	"straightforward adaptation of exist approach"	rdfs:member	"straightforward adaptation"
s9.1	"straightforward adaptation of exist approach"	rdfs:member	"exist approach"
s9.1	"exist approach to owl 2 ql"	rdfs:member	"exist approach"
s9.1	"exist approach to owl 2 ql"	rdfs:member	"owl 2 ql"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	rdf:predicate	"turn"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	local:AM-PNC	"viable"
s9	"existing approach"
s9	"existing approach"	rdf:subject	"approach"
s9	"existing approach"	rdf:predicate	"exist"
s8.3	"combined formalism"
s8.3	"combined formalism"	rdf:predicate	"combine"
s8.3	"combined formalism"	rdf:object	"formalism"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:subject	"profile"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:predicate	"preserve"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:object	"polynomial data complexity of the combine formalism"
s8.2	"polynomial data complexity of the combine formalism"	rdfs:member	"combine formalism"
s8.2	"polynomial data complexity of the combine formalism"	rdfs:member	"polynomial data complexity"
s8.2	"combine formalism"	rdfs:subClassOf	"formalism"
s8.2	"polynomial data"	rdfs:member	"polynomial"
s8.2	"polynomial data complexity"	rdfs:member	"polynomial data"
s8.2	"combine formalism"	rdfs:member	"combine"
s8.2	"polynomial data"	rdfs:subClassOf	"data"
s8.2	"data complexity"	rdfs:member	"data"
s8.2	"data complexity"	rdfs:subClassOf	"complexity"
s8.2	"polynomial data complexity"	rdfs:subClassOf	"complexity"
s8.2	"polynomial data complexity"	rdfs:subClassOf	"data complexity"
s8.2	"polynomial data complexity of combine formalism"	rdfs:member	"polynomial data complexity"
s8.2	"polynomial data complexity of combine formalism"	rdfs:member	"combine formalism"
s8.1	"different application cases extending the tool to the other profiles"
s8.1	"different application cases extending the tool to the other profiles"	rdf:subject	"different application case"
s8.1	"different application"	rdfs:member	"different"
s8.1	"different application"	rdfs:subClassOf	"application"
s8.1	"different application case"	rdfs:member	"different application"
s8.1	"application case"	rdfs:member	"application"
s8.1	"application case"	rdfs:subClassOf	"case"
s8.1	"different application case"	rdfs:subClassOf	"case"
s8.1	"different application case"	rdfs:subClassOf	"application case"
s8.1	"different application cases extending the tool to the other profiles"	rdf:predicate	"extend"
s8.1	"different application cases extending the tool to the other profiles"	rdf:object	"tool profile"
s8.1	"tool profile"	rdfs:subClassOf	"profile"
s8.1	"tool profile"	rdfs:member	"tool"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:subject	"different application case extend the tool to the other profile"
s8	"different application case extend the tool to the other profile"	rdfs:member	"different application case"
s8	"different application case extend the tool to the other profile"	rdfs:member	"other profile"
s8	"different application case extend the tool to the other profile"	rdfs:member	"tool"
s8	"different application"	rdfs:member	"different"
s8	"other profile"	rdfs:subClassOf	"profile"
s8	"different application"	rdfs:subClassOf	"application"
s8	"different application case"	rdfs:member	"different application"
s8	"other profile"	rdfs:member	"other"
s8	"application case"	rdfs:member	"application"
s8	"application case"	rdfs:subClassOf	"case"
s8	"different application case"	rdfs:subClassOf	"case"
s8	"different application case"	rdfs:subClassOf	"application case"
s8	"extend to other profile"	rdfs:member	"extend"
s8	"extend to other profile"	rdfs:member	"other profile"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:predicate	"motivate"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:object	"tractable owl profile"
s8	"tractable owl profile"	rdfs:member	"tractable owl"
s8	"owl profile"	rdfs:member	"owl"
s8	"tractable owl"	rdfs:subClassOf	"owl"
s8	"tractable owl"	rdfs:member	"tractable"
s8	"tractable owl profile"	rdfs:subClassOf	"profile"
s8	"owl profile"	rdfs:subClassOf	"profile"
s8	"tractable owl profile"	rdfs:subClassOf	"owl profile"
s7	"the formal approach realized in nohr"
s7	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s7	"formal approach"	rdfs:member	"formal"
s7	"formal approach"	rdfs:subClassOf	"approach"
s7	"the formal approach realized in nohr"	rdf:predicate	"realize"
s7	"the formal approach realized in nohr"	local:AM-LOC	"nohr"
s6	"the formal approach realized in nohr"
s6	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s6	"formal approach"	rdfs:member	"formal"
s6	"formal approach"	rdfs:subClassOf	"approach"
s6	"the formal approach realized in nohr"	rdf:predicate	"realize"
s6	"the formal approach realized in nohr"	local:AM-LOC	"nohr"
s5.2	"even very large health care ontologies such as snomed ct can"
s5.2	"even very large health care ontologies such as snomed ct can"	rdf:subject	"even very large health care ontology such a snomed ct"
s5.2	"even very large health care ontology such a snomed ct"	rdfs:member	"snomed ct"
s5.2	"even very large health care ontology such a snomed ct"	rdfs:member	"even very large health care ontology"
s5.2	"health care ontology"	rdfs:member	"health care"
s5.2	"very large health"	rdfs:member	"very large"
s5.2	"even very large health care"	rdfs:member	"even very large health"
s5.2	"very large health care"	rdfs:member	"very large health"
s5.2	"care ontology"	rdfs:member	"care"
s5.2	"very large health care"	rdfs:subClassOf	"care"
s5.2	"large health"	rdfs:member	"large"
s5.2	"very large health care ontology"	rdfs:subClassOf	"ontology"
s5.2	"even very"	rdfs:member	"even"
s5.2	"very large health"	rdfs:subClassOf	"health"
s5.2	"large health"	rdfs:subClassOf	"health"
s5.2	"snomed ct"	rdfs:subClassOf	"ct"
s5.2	"even very large health care ontology"	rdfs:subClassOf	"ontology"
s5.2	"health care"	rdfs:member	"health"
s5.2	"even very large"	rdfs:member	"even very"
s5.2	"even very"	rdfs:subClassOf	"very"
s5.2	"large health care ontology"	rdfs:member	"large health care"
s5.2	"large health care ontology"	rdfs:subClassOf	"ontology"
s5.2	"health care"	rdfs:subClassOf	"care"
s5.2	"care ontology"	rdfs:subClassOf	"ontology"
s5.2	"large health care"	rdfs:member	"large health"
s5.2	"even very large health care ontology"	rdfs:member	"even very large health care"
s5.2	"even very large health"	rdfs:member	"even very large"
s5.2	"snomed ct"	rdfs:member	"snomed"
s5.2	"large health care"	rdfs:subClassOf	"care"
s5.2	"very large"	rdfs:subClassOf	"large"
s5.2	"very large"	rdfs:member	"very"
s5.2	"even very large health care"	rdfs:subClassOf	"care"
s5.2	"even very large"	rdfs:subClassOf	"large"
s5.2	"very large health care ontology"	rdfs:member	"very large health care"
s5.2	"even very large health"	rdfs:subClassOf	"health"
s5.2	"health care ontology"	rdfs:subClassOf	"ontology"
s5.2	"such snomed ct"	rdfs:subClassOf	"snomed ct"
s5.2	"health care ontology"	rdfs:subClassOf	"care ontology"
s5.2	"large health care ontology"	rdfs:subClassOf	"health care ontology"
s5.2	"even large health care ontology"	rdfs:subClassOf	"large health care ontology"
s5.2	"even very large health care ontologies such as snomed ct can"	rdf:predicate	"handle"
s5.2	"even very large health care ontologies such as snomed ct can"	local:AM-MOD	"can"
s5.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"
s5.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:subject	"formal approach realize in nohr"
s5.1	"formal approach realize in nohr"	rdfs:member	"nohr"
s5.1	"formal approach realize in nohr"	rdfs:member	"formal approach realize"
s5.1	"approach realize"	rdfs:member	"approach"
s5.1	"formal approach realize"	rdfs:subClassOf	"realize"
s5.1	"formal approach"	rdfs:member	"formal"
s5.1	"approach realize"	rdfs:subClassOf	"realize"
s5.1	"formal approach realize"	rdfs:member	"formal approach"
s5.1	"formal approach"	rdfs:subClassOf	"approach"
s5.1	"realize in nohr"	rdfs:member	"realize"
s5.1	"realize in nohr"	rdfs:member	"nohr"
s5.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:predicate	"show"
s5.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:object	"even very large health care ontology such a snomed ct can be handle"
s5.1	"even very large health care ontology such a snomed ct can be handle"	rdfs:member	"snomed ct"
s5.1	"even very large health care ontology such a snomed ct can be handle"	rdfs:member	"even very large health care ontology"
s5.1	"health care ontology"	rdfs:member	"health care"
s5.1	"very large health"	rdfs:member	"very large"
s5.1	"even very large health care"	rdfs:member	"even very large health"
s5.1	"very large health care"	rdfs:member	"very large health"
s5.1	"care ontology"	rdfs:member	"care"
s5.1	"very large health care"	rdfs:subClassOf	"care"
s5.1	"large health"	rdfs:member	"large"
s5.1	"very large health care ontology"	rdfs:subClassOf	"ontology"
s5.1	"even very"	rdfs:member	"even"
s5.1	"very large health"	rdfs:subClassOf	"health"
s5.1	"large health"	rdfs:subClassOf	"health"
s5.1	"snomed ct"	rdfs:subClassOf	"ct"
s5.1	"even very large health care ontology"	rdfs:subClassOf	"ontology"
s5.1	"health care"	rdfs:member	"health"
s5.1	"even very large"	rdfs:member	"even very"
s5.1	"even very"	rdfs:subClassOf	"very"
s5.1	"large health care ontology"	rdfs:member	"large health care"
s5.1	"large health care ontology"	rdfs:subClassOf	"ontology"
s5.1	"health care"	rdfs:subClassOf	"care"
s5.1	"care ontology"	rdfs:subClassOf	"ontology"
s5.1	"large health care"	rdfs:member	"large health"
s5.1	"even very large health care ontology"	rdfs:member	"even very large health care"
s5.1	"even very large health"	rdfs:member	"even very large"
s5.1	"snomed ct"	rdfs:member	"snomed"
s5.1	"large health care"	rdfs:subClassOf	"care"
s5.1	"very large"	rdfs:subClassOf	"large"
s5.1	"very large"	rdfs:member	"very"
s5.1	"even very large health care"	rdfs:subClassOf	"care"
s5.1	"even very large"	rdfs:subClassOf	"large"
s5.1	"very large health care ontology"	rdfs:member	"very large health care"
s5.1	"even very large health"	rdfs:subClassOf	"health"
s5.1	"health care ontology"	rdfs:subClassOf	"ontology"
s5.1	"be handle"	rdfs:subClassOf	"handle"
s5.1	"can be handle"	rdfs:subClassOf	"be handle"
s5.1	"such snomed ct"	rdfs:subClassOf	"snomed ct"
s5.1	"ontology can be handle"	rdfs:subClassOf	"can be handle"
s5.1	"health care ontology"	rdfs:subClassOf	"care ontology"
s5.1	"large health care ontology"	rdfs:subClassOf	"health care ontology"
s5.1	"even large health care ontology"	rdfs:subClassOf	"large health care ontology"
s5	"the formal approach realized in nohr"
s5	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s5	"formal approach"	rdfs:member	"formal"
s5	"formal approach"	rdfs:subClassOf	"approach"
s5	"the formal approach realized in nohr"	rdf:predicate	"realize"
s5	"the formal approach realized in nohr"	local:AM-LOC	"nohr"
s4.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"
s4.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:subject	"user"
s4.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:predicate	"combine"
s4.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:object	"owl 2 el ontology set of logic program rule suitable"
s4.1	"owl 2 el ontology set of logic program rule suitable"	rdfs:member	"el ontology set"
s4.1	"owl 2 el ontology set of logic program rule suitable"	rdfs:member	"logic program rule"
s4.1	"ontology set"	rdfs:subClassOf	"set"
s4.1	"program rule"	rdfs:member	"program"
s4.1	"el ontology"	rdfs:subClassOf	"ontology"
s4.1	"ontology set"	rdfs:member	"ontology"
s4.1	"logic program"	rdfs:member	"logic"
s4.1	"logic program rule"	rdfs:member	"logic program"
s4.1	"el ontology set"	rdfs:member	"el ontology"
s4.1	"el ontology set"	rdfs:subClassOf	"set"
s4.1	"el ontology"	rdfs:member	"el"
s4.1	"program rule"	rdfs:subClassOf	"rule"
s4.1	"logic program rule"	rdfs:subClassOf	"rule"
s4.1	"logic program"	rdfs:subClassOf	"program"
s4.1	"logic program rule"	rdfs:subClassOf	"program rule"
s4.1	"el ontology set"	rdfs:subClassOf	"ontology set"
s4.1	"2 el ontology set"	rdfs:subClassOf	"el ontology set"
s4.1	"owl 2 el ontology set"	rdfs:subClassOf	"2 el ontology set"
s4.1	"owl 2 el ontology set of logic program rule"	rdfs:member	"owl 2 el ontology set"
s4.1	"owl 2 el ontology set of logic program rule"	rdfs:member	"logic program rule"
s4	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"
s4	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:subject	"nohr"
s4	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:predicate	"allow"
s4	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:object	"user to combine an owl 2 el ontology with a set of logic program rule suitable"
s4	"user to combine an owl 2 el ontology with a set of logic program rule suitable"	rdfs:member	"el ontology"
s4	"user to combine an owl 2 el ontology with a set of logic program rule suitable"	rdfs:member	"set"
s4	"user to combine an owl 2 el ontology with a set of logic program rule suitable"	rdfs:member	"owl"
s4	"user to combine an owl 2 el ontology with a set of logic program rule suitable"	rdfs:member	"user"
s4	"user to combine an owl 2 el ontology with a set of logic program rule suitable"	rdfs:member	"logic program rule"
s4	"program rule"	rdfs:member	"program"
s4	"logic program"	rdfs:member	"logic"
s4	"el ontology"	rdfs:subClassOf	"ontology"
s4	"logic program rule"	rdfs:member	"logic program"
s4	"el ontology"	rdfs:member	"el"
s4	"program rule"	rdfs:subClassOf	"rule"
s4	"logic program rule"	rdfs:subClassOf	"rule"
s4	"logic program"	rdfs:subClassOf	"program"
s4	"suitable set"	rdfs:subClassOf	"set"
s4	"logic program rule"	rdfs:subClassOf	"program rule"
s4	"2 el ontology"	rdfs:subClassOf	"el ontology"
s4	"owl 2 el ontology"	rdfs:subClassOf	"2 el ontology"
s4	"combine with suitable set"	rdfs:member	"combine"
s4	"combine with suitable set"	rdfs:member	"suitable set"
s4	"suitable set of logic program rule"	rdfs:member	"suitable set"
s4	"suitable set of logic program rule"	rdfs:member	"logic program rule"
s3.1	"the user express defaults"
s3.1	"the user express defaults"	rdf:subject	"user"
s3.1	"the user express defaults"	rdf:predicate	"express"
s3.1	"the user express defaults"	rdf:object	"default"
s3	"nohr allows the user to express defaults"
s3	"nohr allows the user to express defaults"	rdf:subject	"nohr"
s3	"nohr allows the user to express defaults"	rdf:predicate	"allow"
s3	"nohr allows the user to express defaults"	rdf:object	"user to express default"
s3	"user to express default"	rdfs:member	"user"
s3	"user to express default"	rdfs:member	"default"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:subject	"user"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:predicate	"combine"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:object	"owl 2 el ontology set of nonmonotonic rule suitable"
s2.1	"owl 2 el ontology set of nonmonotonic rule suitable"	rdfs:member	"el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rule suitable"	rdfs:member	"nonmonotonic rule"
s2.1	"ontology set"	rdfs:subClassOf	"set"
s2.1	"el ontology"	rdfs:subClassOf	"ontology"
s2.1	"ontology set"	rdfs:member	"ontology"
s2.1	"el ontology set"	rdfs:member	"el ontology"
s2.1	"el ontology set"	rdfs:subClassOf	"set"
s2.1	"el ontology"	rdfs:member	"el"
s2.1	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s2.1	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s2.1	"el ontology set"	rdfs:subClassOf	"ontology set"
s2.1	"2 el ontology set"	rdfs:subClassOf	"el ontology set"
s2.1	"owl 2 el ontology set"	rdfs:subClassOf	"2 el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rule"	rdfs:member	"owl 2 el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:subject	"nohr"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:predicate	"allow"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:object	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"	rdfs:member	"el ontology"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"	rdfs:member	"set"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"	rdfs:member	"owl"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"	rdfs:member	"user"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rule suitable"	rdfs:member	"nonmonotonic rule"
s2	"nonmonotonic rule"	rdfs:subClassOf	"rule"
s2	"el ontology"	rdfs:member	"el"
s2	"el ontology"	rdfs:subClassOf	"ontology"
s2	"nonmonotonic rule"	rdfs:member	"nonmonotonic"
s2	"suitable set"	rdfs:subClassOf	"set"
s2	"2 el ontology"	rdfs:subClassOf	"el ontology"
s2	"owl 2 el ontology"	rdfs:subClassOf	"2 el ontology"
s2	"combine with suitable set"	rdfs:member	"combine"
s2	"combine with suitable set"	rdfs:member	"suitable set"
s2	"suitable set of nonmonotonic rule"	rdfs:member	"suitable set"
s2	"suitable set of nonmonotonic rule"	rdfs:member	"nonmonotonic rule"
s1.2	"combined knowledge base"
s1.2	"combined knowledge base"	rdf:subject	"knowledge base"
s1.2	"knowledge base"	rdfs:subClassOf	"base"
s1.2	"knowledge base"	rdfs:member	"knowledge"
s1.2	"combined knowledge base"	rdf:predicate	"combine"
s1.1	"the user query the combined knowledge base"
s1.1	"the user query the combined knowledge base"	rdf:subject	"user"
s1.1	"the user query the combined knowledge base"	rdf:predicate	"query"
s1.1	"the user query the combined knowledge base"	rdf:object	"combine knowledge base"
s1.1	"knowledge base"	rdfs:subClassOf	"base"
s1.1	"knowledge base"	rdfs:member	"knowledge"
s1.1	"combine knowledge"	rdfs:member	"combine"
s1.1	"combine knowledge"	rdfs:subClassOf	"knowledge"
s1.1	"combine knowledge base"	rdfs:subClassOf	"base"
s1.1	"combine knowledge base"	rdfs:member	"combine knowledge"
s1	"nohr allows the user to query the combined knowledge base"
s1	"nohr allows the user to query the combined knowledge base"	rdf:subject	"nohr"
s1	"nohr allows the user to query the combined knowledge base"	rdf:predicate	"allow"
s1	"nohr allows the user to query the combined knowledge base"	rdf:object	"user to query the combine knowledge base"
s1	"user to query the combine knowledge base"	rdfs:member	"user"
s1	"user to query the combine knowledge base"	rdfs:member	"combine knowledge base"
s1	"knowledge base"	rdfs:subClassOf	"base"
s1	"knowledge base"	rdfs:member	"knowledge"
s1	"combine knowledge"	rdfs:member	"combine"
s1	"combine knowledge"	rdfs:subClassOf	"knowledge"
s1	"combine knowledge base"	rdfs:subClassOf	"base"
s1	"combine knowledge base"	rdfs:member	"combine knowledge"
s1	"combine knowledge base"	rdfs:subClassOf	"knowledge base"
s0.1	"the user express exceptions"
s0.1	"the user express exceptions"	rdf:subject	"user"
s0.1	"the user express exceptions"	rdf:predicate	"express"
s0.1	"the user express exceptions"	rdf:object	"exception"
s0	"nohr allows the user to express exceptions"
s0	"nohr allows the user to express exceptions"	rdf:subject	"nohr"
s0	"nohr allows the user to express exceptions"	rdf:predicate	"allow"
s0	"nohr allows the user to express exceptions"	rdf:object	"user to express exception"
s0	"user to express exception"	rdfs:member	"user"
s0	"user to express exception"	rdfs:member	"exception"
