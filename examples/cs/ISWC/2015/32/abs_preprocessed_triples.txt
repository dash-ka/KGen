s12.1	"we"
s12.1	"we"	rdf:subject	"we"
s12.1	"we"	rdf:predicate	"approach"
s12	"we implemented we"
s12	"we implemented we"	rdf:subject	"we"
s12	"we implemented we"	rdf:predicate	"implement"
s12	"we implemented we"	rdf:object	"we"
s11	"we evaluation shows encouraging results"
s11	"we evaluation shows encouraging results"	rdf:subject	"evaluation"
s11	"we evaluation shows encouraging results"	rdf:predicate	"show"
s11	"we evaluation shows encouraging results"	rdf:object	"encouraging results"
s11	"encouraging results"	rdfs:member	"encouraging"
s11	"encouraging results"	rdfs:subClassOf	"results"
s10.1	"directly translating the ontology into rules without any prior classification"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:subject	"ontology"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:predicate	"translate"
s10.1	"directly translating the ontology into rules without any prior classification"	rdf:object	"rules"
s10.1	"directly translating the ontology into rules without any prior classification"	local:AM-MNR	"directly"
s10.1	"directly translating the ontology into rules without any prior classification"	local:AM-MNR	"without any prior classification"
s10.1	"prior classification"	rdfs:subClassOf	"classification"
s10.1	"prior classification"	rdfs:member	"prior"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:subject	"we"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:predicate	"provide"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	rdf:object	"nontrivial solution for the extension of NoHR OWL 2 QL"
s10	"nontrivial solution for the extension of nohr owl 2 ql"	rdfs:member	"nohr owl"
s10	"nontrivial solution for the extension of nohr owl 2 ql"	rdfs:member	"extension"
s10	"nontrivial solution for the extension of nohr owl 2 ql"	rdfs:member	"nontrivial solution"
s10	"nontrivial solution for the extension of nohr owl 2 ql"	rdfs:member	"ql"
s10	"nontrivial solution"	rdfs:subClassOf	"solution"
s10	"nohr owl"	rdfs:subClassOf	"owl"
s10	"nontrivial solution"	rdfs:member	"nontrivial"
s10	"nohr owl"	rdfs:member	"nohr"
s10	"2 ql"	rdfs:subClassOf	"ql"
s10	"owl 2 ql"	rdfs:subClassOf	"2 ql"
s10	"nohr owl 2 ql"	rdfs:subClassOf	"owl 2 ql"
s10	"nontrivial solution for extension"	rdfs:member	"nontrivial solution"
s10	"nontrivial solution for extension"	rdfs:member	"extension"
s10	"extension of nohr owl 2 ql"	rdfs:member	"extension"
s10	"extension of nohr owl 2 ql"	rdfs:member	"nohr owl 2 ql"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	local:AM-LOC	"paper"
s10	"in this paper we provide the nontrivial solution for the extension of nohr to owl 2 ql by directly translating the ontology into rules without any prior classification"	local:AM-MNR	"directly translating the ontology into rules without any prior classification"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	rdf:subject	"straightforward adaptation of the existing approach to OWL 2 QL"
s9.1	"straightforward adaptation of the existing approach to owl 2 ql"	rdfs:member	"ql"
s9.1	"straightforward adaptation of the existing approach to owl 2 ql"	rdfs:member	"straightforward adaptation"
s9.1	"straightforward adaptation of the existing approach to owl 2 ql"	rdfs:member	"owl"
s9.1	"straightforward adaptation of the existing approach to owl 2 ql"	rdfs:member	"approach"
s9.1	"straightforward adaptation"	rdfs:subClassOf	"adaptation"
s9.1	"straightforward adaptation"	rdfs:member	"straightforward"
s9.1	"2 ql"	rdfs:subClassOf	"ql"
s9.1	"owl 2 ql"	rdfs:subClassOf	"2 ql"
s9.1	"existing approach"	rdfs:subClassOf	"approach"
s9.1	"straightforward adaptation of existing approach"	rdfs:member	"straightforward adaptation"
s9.1	"straightforward adaptation of existing approach"	rdfs:member	"existing approach"
s9.1	"existing approach to owl 2 ql"	rdfs:member	"existing approach"
s9.1	"existing approach to owl 2 ql"	rdfs:member	"owl 2 ql"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	rdf:predicate	"turn"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	local:AM-DIS	"Yet"
s9.1	"yet a straightforward adaptation of the existing approach to owl 2 ql turns out to not be viable"	local:AM-PNC	"viable"
s9	"existing approach"
s9	"existing approach"	rdf:subject	"approach"
s9	"existing approach"	rdf:predicate	"exist"
s8.3	"combined formalism"
s8.3	"combined formalism"	rdf:predicate	"combine"
s8.3	"combined formalism"	rdf:object	"formalism"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:subject	"profiles"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:predicate	"preserve"
s8.2	"the other profiles preserve the polynomial data complexity of the combined formalism"	rdf:object	"polynomial data complexity of the combined formalism"
s8.2	"polynomial data complexity of the combined formalism"	rdfs:member	"polynomial data complexity"
s8.2	"polynomial data complexity of the combined formalism"	rdfs:member	"combined formalism"
s8.2	"combined formalism"	rdfs:member	"combined"
s8.2	"polynomial data"	rdfs:member	"polynomial"
s8.2	"combined formalism"	rdfs:subClassOf	"formalism"
s8.2	"polynomial data"	rdfs:subClassOf	"data"
s8.2	"polynomial data complexity"	rdfs:subClassOf	"complexity"
s8.2	"polynomial data complexity"	rdfs:member	"polynomial data"
s8.2	"data complexity"	rdfs:subClassOf	"complexity"
s8.2	"data complexity"	rdfs:member	"data"
s8.2	"polynomial data complexity"	rdfs:subClassOf	"data complexity"
s8.2	"polynomial data complexity of combined formalism"	rdfs:member	"polynomial data complexity"
s8.2	"polynomial data complexity of combined formalism"	rdfs:member	"combined formalism"
s8.1	"different application cases extending the tool to the other profiles"
s8.1	"different application cases extending the tool to the other profiles"	rdf:subject	"different application cases"
s8.1	"different application"	rdfs:subClassOf	"application"
s8.1	"different application cases"	rdfs:member	"different application"
s8.1	"application cases"	rdfs:member	"application"
s8.1	"different application"	rdfs:member	"different"
s8.1	"different application cases"	rdfs:subClassOf	"cases"
s8.1	"application cases"	rdfs:subClassOf	"cases"
s8.1	"different application cases"	rdfs:subClassOf	"application cases"
s8.1	"different application cases extending the tool to the other profiles"	rdf:predicate	"extend"
s8.1	"different application cases extending the tool to the other profiles"	rdf:object	"tool profiles"
s8.1	"tool profiles"	rdfs:subClassOf	"profiles"
s8.1	"tool profiles"	rdfs:member	"tool"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:subject	"different application cases extending the tool to the other profiles"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:predicate	"motivate"
s8	"each of the tractable owl profiles motivated by different application cases extending the tool to the other profiles"	rdf:object	"tractable OWL profiles"
s8	"tractable owl"	rdfs:member	"tractable"
s8	"tractable owl profiles"	rdfs:member	"tractable owl"
s8	"owl profiles"	rdfs:subClassOf	"profiles"
s8	"tractable owl profiles"	rdfs:subClassOf	"profiles"
s8	"owl profiles"	rdfs:member	"owl"
s8	"tractable owl"	rdfs:subClassOf	"owl"
s8	"tractable owl profiles"	rdfs:subClassOf	"owl profiles"
s7.2	"even very large health care ontologies such as snomed ct can"
s7.2	"even very large health care ontologies such as snomed ct can"	rdf:subject	"even very large health care ontologies such as SNOMED CT"
s7.2	"even very large health care ontologies such as snomed ct"	rdfs:member	"snomed ct"
s7.2	"even very large health care ontologies such as snomed ct"	rdfs:member	"even very large health care ontologies"
s7.2	"even very large"	rdfs:subClassOf	"large"
s7.2	"large health care ontologies"	rdfs:member	"large health care"
s7.2	"large health"	rdfs:subClassOf	"health"
s7.2	"very large"	rdfs:subClassOf	"large"
s7.2	"even very large health care"	rdfs:subClassOf	"care"
s7.2	"very large health"	rdfs:member	"very large"
s7.2	"very large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.2	"health care ontologies"	rdfs:subClassOf	"ontologies"
s7.2	"even very large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.2	"health care"	rdfs:subClassOf	"care"
s7.2	"even very large"	rdfs:member	"even very"
s7.2	"very large health"	rdfs:subClassOf	"health"
s7.2	"very large health care"	rdfs:subClassOf	"care"
s7.2	"very large"	rdfs:member	"very"
s7.2	"snomed ct"	rdfs:member	"snomed"
s7.2	"even very"	rdfs:subClassOf	"very"
s7.2	"health care"	rdfs:member	"health"
s7.2	"large health"	rdfs:member	"large"
s7.2	"even very large health care"	rdfs:member	"even very large health"
s7.2	"even very large health care ontologies"	rdfs:member	"even very large health care"
s7.2	"even very"	rdfs:member	"even"
s7.2	"care ontologies"	rdfs:subClassOf	"ontologies"
s7.2	"even very large health"	rdfs:subClassOf	"health"
s7.2	"even very large health"	rdfs:member	"even very large"
s7.2	"care ontologies"	rdfs:member	"care"
s7.2	"large health care"	rdfs:subClassOf	"care"
s7.2	"large health care"	rdfs:member	"large health"
s7.2	"large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.2	"snomed ct"	rdfs:subClassOf	"ct"
s7.2	"very large health care"	rdfs:member	"very large health"
s7.2	"very large health care ontologies"	rdfs:member	"very large health care"
s7.2	"health care ontologies"	rdfs:member	"health care"
s7.2	"health care ontologies"	rdfs:subClassOf	"care ontologies"
s7.2	"large health care ontologies"	rdfs:subClassOf	"health care ontologies"
s7.2	"even large health care ontologies"	rdfs:subClassOf	"large health care ontologies"
s7.2	"even large health care ontologies such_as snomed ct"	rdfs:member	"even large health care ontologies"
s7.2	"even large health care ontologies such_as snomed ct"	rdfs:member	"snomed ct"
s7.2	"even very large health care ontologies such as snomed ct can"	rdf:predicate	"handle"
s7.2	"even very large health care ontologies such as snomed ct can"	local:AM-MOD	"can"
s7.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"
s7.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:subject	"formal approach realized in NoHR"
s7.1	"formal approach realized in nohr"	rdfs:member	"nohr"
s7.1	"formal approach realized in nohr"	rdfs:member	"formal approach"
s7.1	"formal approach"	rdfs:subClassOf	"approach"
s7.1	"formal approach"	rdfs:member	"formal"
s7.1	"realized in nohr"	rdfs:member	"realized"
s7.1	"realized in nohr"	rdfs:member	"nohr"
s7.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:predicate	"show"
s7.1	"the formal approach realized in nohr shown that even very large health care ontologies such as snomed ct can be handled"	rdf:object	"even very large health care ontologies such as SNOMED CT can be handled"
s7.1	"even very large health care ontologies such as snomed ct can be handled"	rdfs:member	"snomed ct"
s7.1	"even very large health care ontologies such as snomed ct can be handled"	rdfs:member	"even very large health care ontologies"
s7.1	"even very large"	rdfs:subClassOf	"large"
s7.1	"large health care ontologies"	rdfs:member	"large health care"
s7.1	"large health"	rdfs:subClassOf	"health"
s7.1	"very large"	rdfs:subClassOf	"large"
s7.1	"even very large health care"	rdfs:subClassOf	"care"
s7.1	"very large health"	rdfs:member	"very large"
s7.1	"very large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.1	"health care ontologies"	rdfs:subClassOf	"ontologies"
s7.1	"even very large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.1	"health care"	rdfs:subClassOf	"care"
s7.1	"even very large"	rdfs:member	"even very"
s7.1	"very large health"	rdfs:subClassOf	"health"
s7.1	"very large health care"	rdfs:subClassOf	"care"
s7.1	"very large"	rdfs:member	"very"
s7.1	"snomed ct"	rdfs:member	"snomed"
s7.1	"even very"	rdfs:subClassOf	"very"
s7.1	"health care"	rdfs:member	"health"
s7.1	"large health"	rdfs:member	"large"
s7.1	"even very large health care"	rdfs:member	"even very large health"
s7.1	"even very large health care ontologies"	rdfs:member	"even very large health care"
s7.1	"even very"	rdfs:member	"even"
s7.1	"care ontologies"	rdfs:subClassOf	"ontologies"
s7.1	"even very large health"	rdfs:subClassOf	"health"
s7.1	"even very large health"	rdfs:member	"even very large"
s7.1	"care ontologies"	rdfs:member	"care"
s7.1	"large health care"	rdfs:subClassOf	"care"
s7.1	"large health care"	rdfs:member	"large health"
s7.1	"large health care ontologies"	rdfs:subClassOf	"ontologies"
s7.1	"snomed ct"	rdfs:subClassOf	"ct"
s7.1	"very large health care"	rdfs:member	"very large health"
s7.1	"very large health care ontologies"	rdfs:member	"very large health care"
s7.1	"health care ontologies"	rdfs:member	"health care"
s7.1	"can handled"	rdfs:subClassOf	"handled"
s7.1	"health care ontologies"	rdfs:subClassOf	"care ontologies"
s7.1	"large health care ontologies"	rdfs:subClassOf	"health care ontologies"
s7.1	"even large health care ontologies"	rdfs:subClassOf	"large health care ontologies"
s7.1	"even large health care ontologies such_as snomed ct"	rdfs:member	"even large health care ontologies"
s7.1	"even large health care ontologies such_as snomed ct"	rdfs:member	"snomed ct"
s7	"the formal approach realized in nohr"
s7	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s7	"formal approach"	rdfs:subClassOf	"approach"
s7	"formal approach"	rdfs:member	"formal"
s7	"the formal approach realized in nohr"	rdf:predicate	"realize"
s7	"the formal approach realized in nohr"	local:AM-LOC	"NoHR"
s6	"the formal approach realized in nohr"
s6	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s6	"formal approach"	rdfs:subClassOf	"approach"
s6	"formal approach"	rdfs:member	"formal"
s6	"the formal approach realized in nohr"	rdf:predicate	"realize"
s6	"the formal approach realized in nohr"	local:AM-LOC	"NoHR"
s5	"the formal approach realized in nohr"
s5	"the formal approach realized in nohr"	rdf:subject	"formal approach"
s5	"formal approach"	rdfs:subClassOf	"approach"
s5	"formal approach"	rdfs:member	"formal"
s5	"the formal approach realized in nohr"	rdf:predicate	"realize"
s5	"the formal approach realized in nohr"	local:AM-LOC	"NoHR"
s4.1	"the user express defaults"
s4.1	"the user express defaults"	rdf:subject	"user"
s4.1	"the user express defaults"	rdf:predicate	"express"
s4.1	"the user express defaults"	rdf:object	"defaults"
s4	"nohr allows the user to express defaults"
s4	"nohr allows the user to express defaults"	rdf:subject	"NoHR"
s4	"nohr allows the user to express defaults"	rdf:predicate	"allow"
s4	"nohr allows the user to express defaults"	rdf:object	"user to express defaults"
s4	"user to express defaults"	rdfs:member	"user"
s4	"user to express defaults"	rdfs:member	"defaults"
s3.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"
s3.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:subject	"user"
s3.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:predicate	"combine"
s3.1	"the user combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:object	"OWL 2 EL ontology set of logic programming rules suitable"
s3.1	"owl 2 el ontology set of logic programming rules suitable"	rdfs:member	"el ontology set"
s3.1	"owl 2 el ontology set of logic programming rules suitable"	rdfs:member	"logic programming rules"
s3.1	"programming rules"	rdfs:subClassOf	"rules"
s3.1	"logic programming"	rdfs:member	"logic"
s3.1	"el ontology"	rdfs:subClassOf	"ontology"
s3.1	"programming rules"	rdfs:member	"programming"
s3.1	"ontology set"	rdfs:subClassOf	"set"
s3.1	"logic programming rules"	rdfs:subClassOf	"rules"
s3.1	"logic programming"	rdfs:subClassOf	"programming"
s3.1	"el ontology set"	rdfs:member	"el ontology"
s3.1	"logic programming rules"	rdfs:member	"logic programming"
s3.1	"el ontology set"	rdfs:subClassOf	"set"
s3.1	"el ontology"	rdfs:member	"el"
s3.1	"ontology set"	rdfs:member	"ontology"
s3.1	"logic programming rules"	rdfs:subClassOf	"programming rules"
s3.1	"el ontology set"	rdfs:subClassOf	"ontology set"
s3.1	"2 el ontology set"	rdfs:subClassOf	"el ontology set"
s3.1	"owl 2 el ontology set"	rdfs:subClassOf	"2 el ontology set"
s3.1	"owl 2 el ontology set of logic programming rules"	rdfs:member	"owl 2 el ontology set"
s3.1	"owl 2 el ontology set of logic programming rules"	rdfs:member	"logic programming rules"
s3	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"
s3	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:subject	"NoHR"
s3	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:predicate	"allow"
s3	"nohr allows the user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdf:object	"user to combine an OWL 2 EL ontology with a set of logic programming rules suitable"
s3	"user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdfs:member	"logic programming rules"
s3	"user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdfs:member	"owl"
s3	"user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdfs:member	"user"
s3	"user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdfs:member	"set"
s3	"user to combine an owl 2 el ontology with a set of logic programming rules suitable"	rdfs:member	"el ontology"
s3	"programming rules"	rdfs:subClassOf	"rules"
s3	"logic programming"	rdfs:member	"logic"
s3	"el ontology"	rdfs:subClassOf	"ontology"
s3	"programming rules"	rdfs:member	"programming"
s3	"logic programming rules"	rdfs:subClassOf	"rules"
s3	"logic programming rules"	rdfs:member	"logic programming"
s3	"logic programming"	rdfs:subClassOf	"programming"
s3	"el ontology"	rdfs:member	"el"
s3	"suitable set"	rdfs:subClassOf	"set"
s3	"logic programming rules"	rdfs:subClassOf	"programming rules"
s3	"2 el ontology"	rdfs:subClassOf	"el ontology"
s3	"owl 2 el ontology"	rdfs:subClassOf	"2 el ontology"
s3	"combine with suitable set"	rdfs:member	"combine"
s3	"combine with suitable set"	rdfs:member	"suitable set"
s3	"suitable set of logic programming rules"	rdfs:member	"suitable set"
s3	"suitable set of logic programming rules"	rdfs:member	"logic programming rules"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:subject	"user"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:predicate	"combine"
s2.1	"the user combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:object	"OWL 2 EL ontology set of nonmonotonic rules suitable"
s2.1	"owl 2 el ontology set of nonmonotonic rules suitable"	rdfs:member	"el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rules suitable"	rdfs:member	"nonmonotonic rules"
s2.1	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s2.1	"el ontology"	rdfs:subClassOf	"ontology"
s2.1	"ontology set"	rdfs:subClassOf	"set"
s2.1	"el ontology set"	rdfs:member	"el ontology"
s2.1	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s2.1	"el ontology set"	rdfs:subClassOf	"set"
s2.1	"el ontology"	rdfs:member	"el"
s2.1	"ontology set"	rdfs:member	"ontology"
s2.1	"el ontology set"	rdfs:subClassOf	"ontology set"
s2.1	"2 el ontology set"	rdfs:subClassOf	"el ontology set"
s2.1	"owl 2 el ontology set"	rdfs:subClassOf	"2 el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rules"	rdfs:member	"owl 2 el ontology set"
s2.1	"owl 2 el ontology set of nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:subject	"NoHR"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:predicate	"allow"
s2	"nohr allows the user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdf:object	"user to combine an OWL 2 EL ontology with a set of nonmonotonic rules suitable"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdfs:member	"owl"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdfs:member	"user"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdfs:member	"set"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdfs:member	"nonmonotonic rules"
s2	"user to combine an owl 2 el ontology with a set of nonmonotonic rules suitable"	rdfs:member	"el ontology"
s2	"el ontology"	rdfs:subClassOf	"ontology"
s2	"nonmonotonic rules"	rdfs:subClassOf	"rules"
s2	"nonmonotonic rules"	rdfs:member	"nonmonotonic"
s2	"el ontology"	rdfs:member	"el"
s2	"suitable set"	rdfs:subClassOf	"set"
s2	"2 el ontology"	rdfs:subClassOf	"el ontology"
s2	"owl 2 el ontology"	rdfs:subClassOf	"2 el ontology"
s2	"combine with suitable set"	rdfs:member	"combine"
s2	"combine with suitable set"	rdfs:member	"suitable set"
s2	"suitable set of nonmonotonic rules"	rdfs:member	"suitable set"
s2	"suitable set of nonmonotonic rules"	rdfs:member	"nonmonotonic rules"
s1.1	"the user express exceptions"
s1.1	"the user express exceptions"	rdf:subject	"user"
s1.1	"the user express exceptions"	rdf:predicate	"express"
s1.1	"the user express exceptions"	rdf:object	"exceptions"
s1	"nohr allows the user to express exceptions"
s1	"nohr allows the user to express exceptions"	rdf:subject	"NoHR"
s1	"nohr allows the user to express exceptions"	rdf:predicate	"allow"
s1	"nohr allows the user to express exceptions"	rdf:object	"user to express exceptions"
s1	"user to express exceptions"	rdfs:member	"user"
s1	"user to express exceptions"	rdfs:member	"exceptions"
s0.2	"combined knowledge base"
s0.2	"combined knowledge base"	rdf:subject	"knowledge base"
s0.2	"knowledge base"	rdfs:member	"knowledge"
s0.2	"knowledge base"	rdfs:subClassOf	"base"
s0.2	"combined knowledge base"	rdf:predicate	"combine"
s0.1	"the user query the combined knowledge base"
s0.1	"the user query the combined knowledge base"	rdf:subject	"user"
s0.1	"the user query the combined knowledge base"	rdf:predicate	"query"
s0.1	"the user query the combined knowledge base"	rdf:object	"combined knowledge base"
s0	"nohr allows the user to query the combined knowledge base"
s0	"nohr allows the user to query the combined knowledge base"	rdf:subject	"NoHR"
s0	"nohr allows the user to query the combined knowledge base"	rdf:predicate	"allow"
s0	"nohr allows the user to query the combined knowledge base"	rdf:object	"user to query the combined knowledge base"
s0	"user to query the combined knowledge base"	rdfs:member	"user"
s0	"user to query the combined knowledge base"	rdfs:member	"knowledge base"
s0	"knowledge base"	rdfs:member	"knowledge"
s0	"knowledge base"	rdfs:subClassOf	"base"
s0	"combined knowledge base"	rdfs:subClassOf	"knowledge base"
