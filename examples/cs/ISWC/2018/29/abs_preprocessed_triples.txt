s17.1	"our framework can significantly improve the quality of approximate answers"
s17.1	"our framework can significantly improve the quality of approximate answers"	rdf:subject	"framework"
s17.1	"our framework can significantly improve the quality of approximate answers"	rdf:predicate	"improve"
s17.1	"our framework can significantly improve the quality of approximate answers"	rdf:object	"quality of approximate answers"
s17.1	"quality of approximate answers"	rdfs:member	"quality"
s17.1	"quality of approximate answers"	rdfs:member	"approximate answers"
s17.1	"approximate answers"	rdfs:subClassOf	"answers"
s17.1	"approximate answers"	rdfs:member	"approximate"
s17.1	"quality of approximate answers"	rdfs:member	"quality"
s17.1	"quality of approximate answers"	rdfs:member	"approximate answers"
s17.1	"our framework can significantly improve the quality of approximate answers"	local:AM-MNR	"significantly"
s17.1	"our framework can significantly improve the quality of approximate answers"	local:AM-MOD	"can"
s17	"the results show that our framework can significantly improve the quality of approximate answers"
s17	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:subject	"results"
s17	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:predicate	"show"
s17	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:object	"framework can significantly improve the quality of approximate answers"
s17	"framework can significantly improve the quality of approximate answers"	rdfs:member	"framework"
s17	"framework can significantly improve the quality of approximate answers"	rdfs:member	"approximate answers"
s17	"framework can significantly improve the quality of approximate answers"	rdfs:member	"quality"
s17	"approximate answers"	rdfs:subClassOf	"answers"
s17	"approximate answers"	rdfs:member	"approximate"
s17	"significantly improve"	rdfs:subClassOf	"improve"
s17	"can significantly improve"	rdfs:subClassOf	"significantly improve"
s17	"quality of approximate answers"	rdfs:member	"quality"
s17	"quality of approximate answers"	rdfs:member	"approximate answers"
s16.1	"our framework can significantly speed up the generation of alternative queries"
s16.1	"our framework can significantly speed up the generation of alternative queries"	rdf:subject	"framework"
s16.1	"our framework can significantly speed up the generation of alternative queries"	rdf:predicate	"speed"
s16.1	"our framework can significantly speed up the generation of alternative queries"	rdf:object	"generation of alternative queries"
s16.1	"generation of alternative queries"	rdfs:member	"alternative queries"
s16.1	"generation of alternative queries"	rdfs:member	"generation"
s16.1	"alternative queries"	rdfs:subClassOf	"queries"
s16.1	"alternative queries"	rdfs:member	"alternative"
s16.1	"generation of alternative queries"	rdfs:member	"generation"
s16.1	"generation of alternative queries"	rdfs:member	"alternative queries"
s16.1	"our framework can significantly speed up the generation of alternative queries"	local:AM-MNR	"significantly"
s16.1	"our framework can significantly speed up the generation of alternative queries"	local:AM-MOD	"can"
s16	"the results show that our framework can significantly speed up the generation of alternative queries"
s16	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:subject	"results"
s16	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:predicate	"show"
s16	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:object	"framework can significantly speed up the generation of alternative queries"
s16	"framework can significantly speed up the generation of alternative queries"	rdfs:member	"alternative queries"
s16	"framework can significantly speed up the generation of alternative queries"	rdfs:member	"framework"
s16	"framework can significantly speed up the generation of alternative queries"	rdfs:member	"generation"
s16	"alternative queries"	rdfs:subClassOf	"queries"
s16	"alternative queries"	rdfs:member	"alternative"
s16	"significantly speed"	rdfs:subClassOf	"speed"
s16	"can significantly speed"	rdfs:subClassOf	"significantly speed"
s16	"generation of alternative queries"	rdfs:member	"generation"
s16	"generation of alternative queries"	rdfs:member	"alternative queries"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdf:subject	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld RDF dataset"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"framework"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"realworld rdf dataset"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"extensive experiments"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"effectiveness"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"conduct"
s15	"effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdfs:member	"efficiency"
s15	"realworld rdf dataset"	rdfs:subClassOf	"dataset"
s15	"rdf dataset"	rdfs:subClassOf	"dataset"
s15	"extensive experiments"	rdfs:member	"extensive"
s15	"realworld rdf"	rdfs:member	"realworld"
s15	"realworld rdf dataset"	rdfs:member	"realworld rdf"
s15	"extensive experiments"	rdfs:subClassOf	"experiments"
s15	"realworld rdf"	rdfs:subClassOf	"rdf"
s15	"rdf dataset"	rdfs:member	"rdf"
s15	"realworld rdf dataset"	rdfs:subClassOf	"rdf dataset"
s15	"our conduct"	rdfs:subClassOf	"conduct"
s15	"our framework"	rdfs:subClassOf	"framework"
s15	"effectiveness of our framework"	rdfs:member	"effectiveness"
s15	"effectiveness of our framework"	rdfs:member	"our framework"
s15	"our conduct on realworld rdf dataset"	rdfs:member	"our conduct"
s15	"our conduct on realworld rdf dataset"	rdfs:member	"realworld rdf dataset"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdf:predicate	"validate"
s14.2	"users recognize users expectations"
s14.2	"users recognize users expectations"	rdf:subject	"users"
s14.2	"users recognize users expectations"	rdf:predicate	"recognize"
s14.2	"users recognize users expectations"	rdf:object	"users expectations"
s14.2	"users expectations"	rdfs:subClassOf	"expectations"
s14.2	"users expectations"	rdfs:member	"users"
s14.1	"answers which helps users recognize users expectations"
s14.1	"answers which helps users recognize users expectations"	rdf:subject	"answers"
s14.1	"answers which helps users recognize users expectations"	rdf:predicate	"help"
s14.1	"answers which helps users recognize users expectations"	rdf:object	"users recognize users expectations"
s14	"returned answers which helps users recognize users expectations"
s14	"returned answers which helps users recognize users expectations"	rdf:subject	"answers which helps users recognize users expectations"
s14	"returned answers which helps users recognize users expectations"	rdf:predicate	"return"
s13.2	"users refine the original query"
s13.2	"users refine the original query"	rdf:subject	"users"
s13.2	"users refine the original query"	rdf:predicate	"refine"
s13.2	"users refine the original query"	rdf:object	"original query"
s13.2	"original query"	rdfs:member	"original"
s13.2	"original query"	rdfs:subClassOf	"query"
s13.1	"answers which helps users refine the original query finally"
s13.1	"answers which helps users refine the original query finally"	rdf:subject	"answers"
s13.1	"answers which helps users refine the original query finally"	rdf:predicate	"help"
s13.1	"answers which helps users refine the original query finally"	rdf:object	"users refine the original query finally"
s13.1	"users refine the original query finally"	rdfs:member	"users"
s13.1	"users refine the original query finally"	rdfs:member	"original query"
s13.1	"original query"	rdfs:member	"original"
s13.1	"original query"	rdfs:subClassOf	"query"
s13.1	"finally refine"	rdfs:subClassOf	"refine"
s13	"returned answers which helps users refine the original query"
s13	"returned answers which helps users refine the original query"	rdf:subject	"answers which helps users refine the original query"
s13	"answers which helps users refine the original query"	rdfs:member	"answers"
s13	"answers which helps users refine the original query"	rdfs:member	"users"
s13	"answers which helps users refine the original query"	rdfs:member	"original query"
s13	"original query"	rdfs:member	"original"
s13	"original query"	rdfs:subClassOf	"query"
s13	"returned answers which helps users refine the original query"	rdf:predicate	"return"
s12	"we also generate alternative queries for returned answers"
s12	"we also generate alternative queries for returned answers"	rdf:subject	"We"
s12	"we also generate alternative queries for returned answers"	rdf:predicate	"generate"
s12	"we also generate alternative queries for returned answers"	rdf:object	"alternative queries for returned answers"
s12	"alternative queries for returned answers"	rdfs:member	"alternative queries"
s12	"alternative queries for returned answers"	rdfs:member	"returned answers"
s12	"returned answers"	rdfs:member	"returned"
s12	"returned answers"	rdfs:subClassOf	"answers"
s12	"alternative queries"	rdfs:subClassOf	"queries"
s12	"alternative queries"	rdfs:member	"alternative"
s12	"alternative queries for returned answers"	rdfs:member	"alternative queries"
s12	"alternative queries for returned answers"	rdfs:member	"returned answers"
s12	"we also generate alternative queries for returned answers"	local:AM-DIS	"also"
s11	"then given a sparql query"
s11	"then given a sparql query"	rdf:subject	"SPARQL query"
s11	"sparql query"	rdfs:subClassOf	"query"
s11	"sparql query"	rdfs:member	"sparql"
s11	"then given a sparql query"	rdf:predicate	"give"
s11	"then given a sparql query"	local:AM-TMP	"Then"
s10.1	"a sparql query that leveraging the translation mechanism"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:subject	"SPARQL query"
s10.1	"sparql query"	rdfs:subClassOf	"query"
s10.1	"sparql query"	rdfs:member	"sparql"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:predicate	"leverage"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:object	"translation mechanism"
s10.1	"translation mechanism"	rdfs:member	"translation"
s10.1	"translation mechanism"	rdfs:subClassOf	"mechanism"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:subject	"SPARQL query"
s10	"sparql query"	rdfs:subClassOf	"query"
s10	"sparql query"	rdfs:member	"sparql"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:predicate	"compute"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:object	"approximate answers"
s10	"approximate answers"	rdfs:subClassOf	"answers"
s10	"approximate answers"	rdfs:member	"approximate"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	local:AM-MNR	"leveraging the translation mechanism"
s10	"translation mechanism"	rdfs:member	"translation"
s10	"translation mechanism"	rdfs:subClassOf	"mechanism"
s9.1	"a sparql query that returns an empty set we partition an empty set into several parts"
s9.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:subject	"we"
s9.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:predicate	"partition"
s9.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:object	"empty set into several parts"
s9.1	"several parts"	rdfs:subClassOf	"parts"
s9.1	"several parts"	rdfs:member	"several"
s9.1	"empty set"	rdfs:member	"empty"
s9.1	"empty set"	rdfs:member	"set"
s9.1	"set into several parts"	rdfs:member	"set"
s9.1	"set into several parts"	rdfs:member	"several parts"
s9	"a sparql query that returns an empty set we partition an empty set into several parts"
s9	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:subject	"SPARQL query"
s9	"sparql query"	rdfs:subClassOf	"query"
s9	"sparql query"	rdfs:member	"sparql"
s9	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:predicate	"return"
s9	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:object	"empty set partition an empty set into several parts"
s9	"empty set partition an empty set into several parts"	rdfs:member	"partition"
s9	"empty set partition an empty set into several parts"	rdfs:member	"several parts"
s9	"empty set partition an empty set into several parts"	rdfs:member	"empty set"
s9	"empty set"	rdfs:subClassOf	"set"
s9	"several parts"	rdfs:subClassOf	"parts"
s9	"empty set"	rdfs:member	"empty"
s9	"several parts"	rdfs:member	"several"
s9	"set partition"	rdfs:subClassOf	"partition"
s9	"empty set partition"	rdfs:subClassOf	"set partition"
s9	"empty set into several parts"	rdfs:member	"empty set"
s9	"empty set into several parts"	rdfs:member	"several parts"
s8.1	"a sparql query that leveraging rdf embeddings"
s8.1	"a sparql query that leveraging rdf embeddings"	rdf:subject	"SPARQL query"
s8.1	"sparql query"	rdfs:subClassOf	"query"
s8.1	"sparql query"	rdfs:member	"sparql"
s8.1	"a sparql query that leveraging rdf embeddings"	rdf:predicate	"leverage"
s8.1	"a sparql query that leveraging rdf embeddings"	rdf:object	"RDF embeddings"
s8.1	"rdf embeddings"	rdfs:member	"rdf"
s8.1	"rdf embeddings"	rdfs:subClassOf	"embeddings"
s8	"a sparql query that compute approximate answers by leveraging rdf embeddings"
s8	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:subject	"SPARQL query"
s8	"sparql query"	rdfs:subClassOf	"query"
s8	"sparql query"	rdfs:member	"sparql"
s8	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:predicate	"compute"
s8	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:object	"approximate answers"
s8	"approximate answers"	rdfs:subClassOf	"answers"
s8	"approximate answers"	rdfs:member	"approximate"
s8	"a sparql query that compute approximate answers by leveraging rdf embeddings"	local:AM-MNR	"leveraging RDF embeddings"
s8	"rdf embeddings"	rdfs:member	"rdf"
s8	"rdf embeddings"	rdfs:subClassOf	"embeddings"
s7	"translational embedding model which specially designed for sparql queries"
s7	"translational embedding model which specially designed for sparql queries"	rdf:subject	"translational embedding model"
s7	"translational embedding"	rdfs:subClassOf	"embedding"
s7	"translational embedding model"	rdfs:member	"translational embedding"
s7	"translational embedding"	rdfs:member	"translational"
s7	"embedding model"	rdfs:subClassOf	"model"
s7	"embedding model"	rdfs:member	"embedding"
s7	"translational embedding model"	rdfs:subClassOf	"model"
s7	"translational embedding model"	rdfs:subClassOf	"embedding model"
s7	"translational embedding model which specially designed for sparql queries"	rdf:predicate	"design"
s7	"translational embedding model which specially designed for sparql queries"	rdf:object	"SPARQL queries"
s7	"sparql queries"	rdfs:subClassOf	"queries"
s7	"sparql queries"	rdfs:member	"sparql"
s7	"translational embedding model which specially designed for sparql queries"	local:AM-MNR	"specially"
s6	"an entity context preserving translational embedding model"
s6	"an entity context preserving translational embedding model"	rdf:subject	"entity context"
s6	"entity context"	rdfs:member	"entity"
s6	"entity context"	rdfs:subClassOf	"context"
s6	"an entity context preserving translational embedding model"	rdf:predicate	"preserve"
s6	"an entity context preserving translational embedding model"	rdf:object	"translational embedding model"
s6	"translational embedding"	rdfs:subClassOf	"embedding"
s6	"translational embedding model"	rdfs:member	"translational embedding"
s6	"translational embedding"	rdfs:member	"translational"
s6	"embedding model"	rdfs:subClassOf	"model"
s6	"embedding model"	rdfs:member	"embedding"
s6	"translational embedding model"	rdfs:subClassOf	"model"
s6	"translational embedding model"	rdfs:subClassOf	"embedding model"
s5	"we first project the rdf graph into a continuous vector space by an entity context"
s5	"we first project the rdf graph into a continuous vector space by an entity context"	rdf:subject	"We"
s5	"we first project the rdf graph into a continuous vector space by an entity context"	rdf:predicate	"project"
s5	"we first project the rdf graph into a continuous vector space by an entity context"	rdf:object	"RDF graph continuous vector space by an entity context"
s5	"rdf graph continuous vector space by an entity context"	rdfs:member	"continuous vector space"
s5	"rdf graph continuous vector space by an entity context"	rdfs:member	"entity context"
s5	"rdf graph continuous vector space by an entity context"	rdfs:member	"rdf"
s5	"vector space"	rdfs:member	"vector"
s5	"entity context"	rdfs:subClassOf	"context"
s5	"continuous vector"	rdfs:member	"continuous"
s5	"continuous vector"	rdfs:subClassOf	"vector"
s5	"vector space"	rdfs:subClassOf	"space"
s5	"continuous vector space"	rdfs:subClassOf	"space"
s5	"continuous vector space"	rdfs:member	"continuous vector"
s5	"entity context"	rdfs:member	"entity"
s5	"continuous vector space"	rdfs:subClassOf	"vector space"
s5	"graph continuous vector space"	rdfs:subClassOf	"continuous vector space"
s5	"rdf graph continuous vector space"	rdfs:subClassOf	"graph continuous vector space"
s5	"rdf graph continuous vector space by entity context"	rdfs:member	"rdf graph continuous vector space"
s5	"rdf graph continuous vector space by entity context"	rdfs:member	"entity context"
s5	"we first project the rdf graph into a continuous vector space by an entity context"	local:AM-TMP	"first"
s4	"in this paper we propose an rdf graph embedding"
s4	"in this paper we propose an rdf graph embedding"	rdf:subject	"we"
s4	"in this paper we propose an rdf graph embedding"	rdf:predicate	"propose"
s4	"in this paper we propose an rdf graph embedding"	rdf:object	"RDF graph embedding"
s4	"rdf graph"	rdfs:subClassOf	"graph"
s4	"rdf graph"	rdfs:member	"rdf"
s4	"graph embedding"	rdfs:subClassOf	"embedding"
s4	"rdf graph embedding"	rdfs:subClassOf	"graph embedding"
s4	"in this paper we propose an rdf graph embedding"	local:AM-LOC	"paper"
s3.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"
s3.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:subject	"RDF graph embedding based framework"
s3.1	"rdf graph embedding based framework"	rdfs:member	"framework"
s3.1	"rdf graph embedding based framework"	rdfs:member	"rdf graph"
s3.1	"rdf graph"	rdfs:subClassOf	"graph"
s3.1	"rdf graph"	rdfs:member	"rdf"
s3.1	"based framework"	rdfs:subClassOf	"framework"
s3.1	"embedding based framework"	rdfs:subClassOf	"based framework"
s3.1	"graph embedding"	rdfs:subClassOf	"embedding"
s3.1	"rdf graph embedding"	rdfs:subClassOf	"graph embedding"
s3.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:predicate	"solve"
s3.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:object	"SPARQL emptyanswer problem in terms of a continuous vector space"
s3.1	"sparql emptyanswer problem in terms of a continuous vector space"	rdfs:member	"sparql emptyanswer problem"
s3.1	"sparql emptyanswer problem in terms of a continuous vector space"	rdfs:member	"continuous vector space"
s3.1	"sparql emptyanswer problem in terms of a continuous vector space"	rdfs:member	"terms"
s3.1	"vector space"	rdfs:member	"vector"
s3.1	"emptyanswer problem"	rdfs:member	"emptyanswer"
s3.1	"continuous vector"	rdfs:member	"continuous"
s3.1	"sparql emptyanswer problem"	rdfs:subClassOf	"problem"
s3.1	"sparql emptyanswer"	rdfs:subClassOf	"emptyanswer"
s3.1	"continuous vector"	rdfs:subClassOf	"vector"
s3.1	"vector space"	rdfs:subClassOf	"space"
s3.1	"continuous vector space"	rdfs:subClassOf	"space"
s3.1	"sparql emptyanswer"	rdfs:member	"sparql"
s3.1	"continuous vector space"	rdfs:member	"continuous vector"
s3.1	"sparql emptyanswer problem"	rdfs:member	"sparql emptyanswer"
s3.1	"emptyanswer problem"	rdfs:subClassOf	"problem"
s3.1	"continuous vector space"	rdfs:subClassOf	"vector space"
s3.1	"sparql emptyanswer problem"	rdfs:subClassOf	"emptyanswer problem"
s3.1	"sparql emptyanswer problem in terms"	rdfs:member	"sparql emptyanswer problem"
s3.1	"sparql emptyanswer problem in terms"	rdfs:member	"terms"
s3.1	"terms of continuous vector space"	rdfs:member	"terms"
s3.1	"terms of continuous vector space"	rdfs:member	"continuous vector space"
s3	"based framework"
s3	"based framework"	rdf:subject	"framework"
s3	"based framework"	rdf:predicate	"base"
s2.1	"empty answers given a sparql query"
s2.1	"empty answers given a sparql query"	rdf:subject	"SPARQL query"
s2.1	"sparql query"	rdfs:subClassOf	"query"
s2.1	"sparql query"	rdfs:member	"sparql"
s2.1	"empty answers given a sparql query"	rdf:predicate	"give"
s2.1	"empty answers given a sparql query"	rdf:object	"empty answers"
s2.1	"empty answers"	rdfs:subClassOf	"answers"
s2.1	"empty answers"	rdfs:member	"empty"
s2	"a common query problem for users face with empty answers given a sparql query"
s2	"a common query problem for users face with empty answers given a sparql query"	rdf:subject	"common query problem for users"
s2	"common query problem for users"	rdfs:member	"users"
s2	"common query problem for users"	rdfs:member	"common query problem"
s2	"common query"	rdfs:member	"common"
s2	"common query problem"	rdfs:member	"common query"
s2	"common query problem"	rdfs:subClassOf	"problem"
s2	"common query"	rdfs:subClassOf	"query"
s2	"query problem"	rdfs:member	"query"
s2	"query problem"	rdfs:subClassOf	"problem"
s2	"common query problem"	rdfs:subClassOf	"query problem"
s2	"common query problem for users"	rdfs:member	"common query problem"
s2	"common query problem for users"	rdfs:member	"users"
s2	"a common query problem for users face with empty answers given a sparql query"	rdf:predicate	"face"
s2	"a common query problem for users face with empty answers given a sparql query"	local:AM-MNR	"empty answers given a SPARQL query"
s2	"empty answers given a sparql query"	rdfs:member	"empty answers"
s2	"empty answers given a sparql query"	rdfs:member	"sparql query"
s2	"empty answers"	rdfs:subClassOf	"answers"
s2	"empty answers"	rdfs:member	"empty"
s2	"sparql query"	rdfs:subClassOf	"query"
s2	"sparql query"	rdfs:member	"sparql"
s2	"empty answers given sparql query"	rdfs:member	"empty answers"
s2	"empty answers given sparql query"	rdfs:member	"sparql query"
s1.2	"a sparql query that obtain a nonempty set"
s1.2	"a sparql query that obtain a nonempty set"	rdf:subject	"SPARQL query"
s1.2	"sparql query"	rdfs:subClassOf	"query"
s1.2	"sparql query"	rdfs:member	"sparql"
s1.2	"a sparql query that obtain a nonempty set"	rdf:predicate	"obtain"
s1.2	"a sparql query that obtain a nonempty set"	rdf:object	"nonempty set"
s1.2	"nonempty set"	rdfs:subClassOf	"set"
s1.2	"nonempty set"	rdfs:member	"nonempty"
s1.1	"a sparql query that refine the query to obtain a nonempty set"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:subject	"SPARQL query"
s1.1	"sparql query"	rdfs:subClassOf	"query"
s1.1	"sparql query"	rdfs:member	"sparql"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:predicate	"refine"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:object	"query"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	local:AM-PNC	"obtain a nonempty set"
s1.1	"nonempty set"	rdfs:subClassOf	"set"
s1.1	"nonempty set"	rdfs:member	"nonempty"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:subject	"SPARQL query"
s1	"sparql query"	rdfs:subClassOf	"query"
s1	"sparql query"	rdfs:member	"sparql"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:predicate	"return"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:object	"nothing how to refine the query to obtain a nonempty set"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"nothing"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"nonempty set"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"query"
s1	"nonempty set"	rdfs:subClassOf	"set"
s1	"nonempty set"	rdfs:member	"nonempty"
s1	"how refine"	rdfs:subClassOf	"refine"
s0.2	"users issuing sparql queries"
s0.2	"users issuing sparql queries"	rdf:subject	"users"
s0.2	"users issuing sparql queries"	rdf:predicate	"issue"
s0.2	"users issuing sparql queries"	rdf:object	"SPARQL queries"
s0.2	"sparql queries"	rdfs:subClassOf	"queries"
s0.2	"sparql queries"	rdfs:member	"sparql"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:subject	"users"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:predicate	"discover"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:object	"items of interest"
s0.1	"items of interest"	rdfs:member	"interest"
s0.1	"items of interest"	rdfs:member	"items"
s0.1	"items of interest"	rdfs:member	"items"
s0.1	"items of interest"	rdfs:member	"interest"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-LOC	"RDF data sources"
s0.1	"rdf data"	rdfs:subClassOf	"data"
s0.1	"rdf data sources"	rdfs:subClassOf	"sources"
s0.1	"rdf data"	rdfs:member	"rdf"
s0.1	"rdf data sources"	rdfs:member	"rdf data"
s0.1	"data sources"	rdfs:member	"data"
s0.1	"data sources"	rdfs:subClassOf	"sources"
s0.1	"rdf data sources"	rdfs:subClassOf	"data sources"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-MNR	"issuing SPARQL queries"
s0.1	"sparql queries"	rdfs:subClassOf	"queries"
s0.1	"sparql queries"	rdfs:member	"sparql"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:subject	"LOD cloud"
s0	"lod cloud"	rdfs:member	"lod"
s0	"lod cloud"	rdfs:subClassOf	"cloud"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:predicate	"offer"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:object	"plethora of RDF data sources where users discover items of interest"
s0	"plethora of rdf data sources where users discover items of interest"	rdfs:member	"users"
s0	"plethora of rdf data sources where users discover items of interest"	rdfs:member	"interest"
s0	"plethora of rdf data sources where users discover items of interest"	rdfs:member	"rdf data sources"
s0	"plethora of rdf data sources where users discover items of interest"	rdfs:member	"plethora"
s0	"plethora of rdf data sources where users discover items of interest"	rdfs:member	"items"
s0	"rdf data"	rdfs:subClassOf	"data"
s0	"rdf data sources"	rdfs:subClassOf	"sources"
s0	"rdf data"	rdfs:member	"rdf"
s0	"rdf data sources"	rdfs:member	"rdf data"
s0	"data sources"	rdfs:member	"data"
s0	"data sources"	rdfs:subClassOf	"sources"
s0	"where discover"	rdfs:subClassOf	"discover"
s0	"rdf data sources"	rdfs:subClassOf	"data sources"
s0	"plethora of rdf data sources"	rdfs:member	"plethora"
s0	"plethora of rdf data sources"	rdfs:member	"rdf data sources"
s0	"items of interest"	rdfs:member	"items"
s0	"items of interest"	rdfs:member	"interest"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-MNR	"issuing SPARQL queries"
s0	"sparql queries"	rdfs:subClassOf	"queries"
s0	"sparql queries"	rdfs:member	"sparql"
