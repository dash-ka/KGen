s17.1	"our framework can significantly speed up the generation of alternative queries"
s17.1	"our framework can significantly speed up the generation of alternative queries"	rdf:subject	"framework"
s17.1	"our framework can significantly speed up the generation of alternative queries"	rdf:predicate	"speed"
s17.1	"our framework can significantly speed up the generation of alternative queries"	rdf:object	"generation of alternative query"
s17.1	"generation of alternative query"	rdfs:member	"generation"
s17.1	"generation of alternative query"	rdfs:member	"alternative query"
s17.1	"alternative query"	rdfs:member	"alternative"
s17.1	"alternative query"	rdfs:subClassOf	"query"
s17.1	"generation of alternative query"	rdfs:member	"generation"
s17.1	"generation of alternative query"	rdfs:member	"alternative query"
s17.1	"our framework can significantly speed up the generation of alternative queries"	local:AM-MNR	"significantly"
s17.1	"our framework can significantly speed up the generation of alternative queries"	local:AM-MOD	"can"
s17	"the results show that our framework can significantly speed up the generation of alternative queries"
s17	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:subject	"result"
s17	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:predicate	"show"
s17	"the results show that our framework can significantly speed up the generation of alternative queries"	rdf:object	"framework can significantly speed up the generation of alternative query"
s17	"framework can significantly speed up the generation of alternative query"	rdfs:member	"generation"
s17	"framework can significantly speed up the generation of alternative query"	rdfs:member	"alternative query"
s17	"framework can significantly speed up the generation of alternative query"	rdfs:member	"framework"
s17	"alternative query"	rdfs:member	"alternative"
s17	"alternative query"	rdfs:subClassOf	"query"
s17	"significantly speed"	rdfs:subClassOf	"speed"
s17	"can significantly speed"	rdfs:subClassOf	"significantly speed"
s17	"generation of alternative query"	rdfs:member	"generation"
s17	"generation of alternative query"	rdfs:member	"alternative query"
s16.1	"our framework can significantly improve the quality of approximate answers"
s16.1	"our framework can significantly improve the quality of approximate answers"	rdf:subject	"framework"
s16.1	"our framework can significantly improve the quality of approximate answers"	rdf:predicate	"improve"
s16.1	"our framework can significantly improve the quality of approximate answers"	rdf:object	"quality of approximate answer"
s16.1	"quality of approximate answer"	rdfs:member	"quality"
s16.1	"quality of approximate answer"	rdfs:member	"approximate answer"
s16.1	"approximate answer"	rdfs:subClassOf	"answer"
s16.1	"approximate answer"	rdfs:member	"approximate"
s16.1	"quality of approximate answer"	rdfs:member	"quality"
s16.1	"quality of approximate answer"	rdfs:member	"approximate answer"
s16.1	"our framework can significantly improve the quality of approximate answers"	local:AM-MNR	"significantly"
s16.1	"our framework can significantly improve the quality of approximate answers"	local:AM-MOD	"can"
s16	"the results show that our framework can significantly improve the quality of approximate answers"
s16	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:subject	"result"
s16	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:predicate	"show"
s16	"the results show that our framework can significantly improve the quality of approximate answers"	rdf:object	"framework can significantly improve the quality of approximate answer"
s16	"framework can significantly improve the quality of approximate answer"	rdfs:member	"quality"
s16	"framework can significantly improve the quality of approximate answer"	rdfs:member	"approximate answer"
s16	"framework can significantly improve the quality of approximate answer"	rdfs:member	"framework"
s16	"approximate answer"	rdfs:subClassOf	"answer"
s16	"approximate answer"	rdfs:member	"approximate"
s16	"significantly improve"	rdfs:subClassOf	"improve"
s16	"can significantly improve"	rdfs:subClassOf	"significantly improve"
s16	"quality of approximate answer"	rdfs:member	"quality"
s16	"quality of approximate answer"	rdfs:member	"approximate answer"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdf:subject	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"conduct"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"efficiency"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"framework"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"effectiveness"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"realworld rdf dataset"
s15	"effectiveness and efficiency of our framework our conduct extensive experiment on the realworld rdf dataset"	rdfs:member	"extensive experiment"
s15	"extensive experiment"	rdfs:subClassOf	"experiment"
s15	"rdf dataset"	rdfs:subClassOf	"dataset"
s15	"rdf dataset"	rdfs:member	"rdf"
s15	"realworld rdf"	rdfs:member	"realworld"
s15	"realworld rdf"	rdfs:subClassOf	"rdf"
s15	"realworld rdf dataset"	rdfs:member	"realworld rdf"
s15	"realworld rdf dataset"	rdfs:subClassOf	"dataset"
s15	"extensive experiment"	rdfs:member	"extensive"
s15	"realworld rdf dataset"	rdfs:subClassOf	"rdf dataset"
s15	"our conduct"	rdfs:subClassOf	"conduct"
s15	"our framework"	rdfs:subClassOf	"framework"
s15	"effectiveness of our framework"	rdfs:member	"effectiveness"
s15	"effectiveness of our framework"	rdfs:member	"our framework"
s15	"extensive experiment on realworld rdf dataset"	rdfs:member	"extensive experiment"
s15	"extensive experiment on realworld rdf dataset"	rdfs:member	"realworld rdf dataset"
s15	"validate the effectiveness and efficiency of our framework our conduct extensive experiments on the realworld rdf dataset"	rdf:predicate	"validate"
s14	"we also generate alternative queries for returned answers"
s14	"we also generate alternative queries for returned answers"	rdf:subject	"we"
s14	"we also generate alternative queries for returned answers"	rdf:predicate	"generate"
s14	"we also generate alternative queries for returned answers"	rdf:object	"alternative query for return answer"
s14	"alternative query for return answer"	rdfs:member	"return answer"
s14	"alternative query for return answer"	rdfs:member	"alternative query"
s14	"return answer"	rdfs:member	"return"
s14	"alternative query"	rdfs:member	"alternative"
s14	"alternative query"	rdfs:subClassOf	"query"
s14	"return answer"	rdfs:subClassOf	"answer"
s14	"alternative query for return"	rdfs:member	"alternative query"
s14	"alternative query for return"	rdfs:member	"return"
s14	"we also generate alternative queries for returned answers"	local:AM-DIS	"also"
s13.2	"users refine the original query"
s13.2	"users refine the original query"	rdf:subject	"user"
s13.2	"users refine the original query"	rdf:predicate	"refine"
s13.2	"users refine the original query"	rdf:object	"original query"
s13.2	"original query"	rdfs:member	"original"
s13.2	"original query"	rdfs:subClassOf	"query"
s13.1	"answers which helps users refine the original query finally"
s13.1	"answers which helps users refine the original query finally"	rdf:subject	"answer"
s13.1	"answers which helps users refine the original query finally"	rdf:predicate	"help"
s13.1	"answers which helps users refine the original query finally"	rdf:object	"user refine the original query finally"
s13.1	"original query"	rdfs:member	"original"
s13.1	"original query"	rdfs:subClassOf	"query"
s13.1	"finally refine"	rdfs:subClassOf	"refine"
s13	"returned answers which helps users refine the original query"
s13	"returned answers which helps users refine the original query"	rdf:subject	"answer which help user refine the original query"
s13	"answer which help user refine the original query"	rdfs:member	"answer"
s13	"answer which help user refine the original query"	rdfs:member	"original query"
s13	"original query"	rdfs:member	"original"
s13	"original query"	rdfs:subClassOf	"query"
s13	"returned answers which helps users refine the original query"	rdf:predicate	"return"
s12.2	"users recognize users expectations"
s12.2	"users recognize users expectations"	rdf:subject	"user"
s12.2	"users recognize users expectations"	rdf:predicate	"recognize"
s12.2	"users recognize users expectations"	rdf:object	"user expectation"
s12.2	"user expectation"	rdfs:member	"user"
s12.2	"user expectation"	rdfs:subClassOf	"expectation"
s12.1	"answers which helps users recognize users expectations"
s12.1	"answers which helps users recognize users expectations"	rdf:subject	"answer"
s12.1	"answers which helps users recognize users expectations"	rdf:predicate	"help"
s12.1	"answers which helps users recognize users expectations"	rdf:object	"user recognize user expectation"
s12.1	"user recognize user expectation"	rdfs:member	"user"
s12.1	"user recognize user expectation"	rdfs:member	"user expectation"
s12.1	"user expectation"	rdfs:member	"user"
s12.1	"user expectation"	rdfs:subClassOf	"expectation"
s12	"returned answers which helps users recognize users expectations"
s12	"returned answers which helps users recognize users expectations"	rdf:subject	"answer which help user recognize user expectation"
s12	"answer which help user recognize user expectation"	rdfs:member	"answer"
s12	"answer which help user recognize user expectation"	rdfs:member	"user expectation"
s12	"user expectation"	rdfs:member	"user"
s12	"user expectation"	rdfs:subClassOf	"expectation"
s12	"returned answers which helps users recognize users expectations"	rdf:predicate	"return"
s11	"then given a sparql query"
s11	"then given a sparql query"	rdf:subject	"sparql query"
s11	"sparql query"	rdfs:subClassOf	"query"
s11	"sparql query"	rdfs:member	"sparql"
s11	"then given a sparql query"	rdf:predicate	"give"
s11	"then given a sparql query"	local:AM-TMP	"then"
s10.1	"a sparql query that leveraging the translation mechanism"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:subject	"sparql query"
s10.1	"sparql query"	rdfs:subClassOf	"query"
s10.1	"sparql query"	rdfs:member	"sparql"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:predicate	"leverage"
s10.1	"a sparql query that leveraging the translation mechanism"	rdf:object	"translation mechanism"
s10.1	"translation mechanism"	rdfs:member	"translation"
s10.1	"translation mechanism"	rdfs:subClassOf	"mechanism"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:subject	"sparql query"
s10	"sparql query"	rdfs:subClassOf	"query"
s10	"sparql query"	rdfs:member	"sparql"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:predicate	"compute"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	rdf:object	"approximate answer"
s10	"approximate answer"	rdfs:subClassOf	"answer"
s10	"approximate answer"	rdfs:member	"approximate"
s10	"a sparql query that compute approximate answers by leveraging the translation mechanism"	local:AM-MNR	"leverage the translation mechanism"
s10	"leverage the translation mechanism"	rdfs:member	"translation mechanism"
s10	"leverage the translation mechanism"	rdfs:member	"leverage"
s10	"translation mechanism"	rdfs:member	"translation"
s10	"translation mechanism"	rdfs:subClassOf	"mechanism"
s9.1	"a sparql query that leveraging rdf embeddings"
s9.1	"a sparql query that leveraging rdf embeddings"	rdf:subject	"sparql query"
s9.1	"sparql query"	rdfs:subClassOf	"query"
s9.1	"sparql query"	rdfs:member	"sparql"
s9.1	"a sparql query that leveraging rdf embeddings"	rdf:predicate	"leverage"
s9.1	"a sparql query that leveraging rdf embeddings"	rdf:object	"rdf embeddings"
s9.1	"rdf embeddings"	rdfs:member	"rdf"
s9.1	"rdf embeddings"	rdfs:subClassOf	"embeddings"
s9	"a sparql query that compute approximate answers by leveraging rdf embeddings"
s9	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:subject	"sparql query"
s9	"sparql query"	rdfs:subClassOf	"query"
s9	"sparql query"	rdfs:member	"sparql"
s9	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:predicate	"compute"
s9	"a sparql query that compute approximate answers by leveraging rdf embeddings"	rdf:object	"approximate answer"
s9	"approximate answer"	rdfs:subClassOf	"answer"
s9	"approximate answer"	rdfs:member	"approximate"
s9	"a sparql query that compute approximate answers by leveraging rdf embeddings"	local:AM-MNR	"leverage rdf embeddings"
s9	"leverage rdf embeddings"	rdfs:member	"embeddings"
s9	"leverage rdf embeddings"	rdfs:member	"leverage"
s9	"rdf embeddings"	rdfs:subClassOf	"embeddings"
s9	"leverage rdf embeddings"	rdfs:subClassOf	"rdf embeddings"
s8.1	"a sparql query that returns an empty set we partition an empty set into several parts"
s8.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:subject	"we"
s8.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:predicate	"partition"
s8.1	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:object	"empty set into several part"
s8.1	"several part"	rdfs:subClassOf	"part"
s8.1	"several part"	rdfs:member	"several"
s8.1	"empty set"	rdfs:member	"empty"
s8.1	"empty set"	rdfs:member	"set"
s8.1	"set into several part"	rdfs:member	"set"
s8.1	"set into several part"	rdfs:member	"several part"
s8	"a sparql query that returns an empty set we partition an empty set into several parts"
s8	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:subject	"sparql query"
s8	"sparql query"	rdfs:subClassOf	"query"
s8	"sparql query"	rdfs:member	"sparql"
s8	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:predicate	"return"
s8	"a sparql query that returns an empty set we partition an empty set into several parts"	rdf:object	"empty set partition an empty set into several part"
s8	"empty set partition an empty set into several part"	rdfs:member	"empty set"
s8	"empty set partition an empty set into several part"	rdfs:member	"partition"
s8	"empty set partition an empty set into several part"	rdfs:member	"several part"
s8	"several part"	rdfs:member	"several"
s8	"several part"	rdfs:subClassOf	"part"
s8	"empty set"	rdfs:subClassOf	"set"
s8	"empty set"	rdfs:member	"empty"
s8	"set partition"	rdfs:subClassOf	"partition"
s8	"empty set partition"	rdfs:subClassOf	"set partition"
s8	"empty set into several part"	rdfs:member	"empty set"
s8	"empty set into several part"	rdfs:member	"several part"
s6	"translational embedding model which specially designed for sparql queries"
s6	"translational embedding model which specially designed for sparql queries"	rdf:subject	"translational embed model"
s6	"embed model"	rdfs:subClassOf	"model"
s6	"translational embed model"	rdfs:subClassOf	"embed model"
s6	"translational embedding model which specially designed for sparql queries"	rdf:predicate	"design"
s6	"translational embedding model which specially designed for sparql queries"	rdf:object	"sparql query"
s6	"sparql query"	rdfs:subClassOf	"query"
s6	"sparql query"	rdfs:member	"sparql"
s6	"translational embedding model which specially designed for sparql queries"	local:AM-MNR	"specially"
s5	"an entity context preserving translational embedding model"
s5	"an entity context preserving translational embedding model"	rdf:subject	"entity context"
s5	"entity context"	rdfs:subClassOf	"context"
s5	"entity context"	rdfs:member	"entity"
s5	"an entity context preserving translational embedding model"	rdf:predicate	"preserve"
s5	"an entity context preserving translational embedding model"	rdf:object	"translational embed model"
s5	"embed model"	rdfs:subClassOf	"model"
s5	"translational embed model"	rdfs:subClassOf	"embed model"
s4.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"
s4.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:subject	"rdf graph embed base framework"
s4.1	"rdf graph embed base framework"	rdfs:member	"base framework"
s4.1	"rdf graph embed base framework"	rdfs:member	"rdf graph"
s4.1	"rdf graph"	rdfs:subClassOf	"graph"
s4.1	"base framework"	rdfs:subClassOf	"framework"
s4.1	"base framework"	rdfs:member	"base"
s4.1	"rdf graph"	rdfs:member	"rdf"
s4.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:predicate	"solve"
s4.1	"an rdf graph embedding based framework solve the sparql emptyanswer problem in terms of a continuous vector space"	rdf:object	"sparql emptyanswer problem in term of a continuous vector space"
s4.1	"sparql emptyanswer problem in term of a continuous vector space"	rdfs:member	"continuous vector space"
s4.1	"sparql emptyanswer problem in term of a continuous vector space"	rdfs:member	"term"
s4.1	"sparql emptyanswer problem in term of a continuous vector space"	rdfs:member	"sparql emptyanswer problem"
s4.1	"emptyanswer problem"	rdfs:subClassOf	"problem"
s4.1	"sparql emptyanswer"	rdfs:subClassOf	"emptyanswer"
s4.1	"continuous vector space"	rdfs:member	"continuous vector"
s4.1	"sparql emptyanswer"	rdfs:member	"sparql"
s4.1	"vector space"	rdfs:subClassOf	"space"
s4.1	"vector space"	rdfs:member	"vector"
s4.1	"continuous vector space"	rdfs:subClassOf	"space"
s4.1	"continuous vector"	rdfs:member	"continuous"
s4.1	"emptyanswer problem"	rdfs:member	"emptyanswer"
s4.1	"sparql emptyanswer problem"	rdfs:member	"sparql emptyanswer"
s4.1	"sparql emptyanswer problem"	rdfs:subClassOf	"problem"
s4.1	"continuous vector"	rdfs:subClassOf	"vector"
s4.1	"continuous vector space"	rdfs:subClassOf	"vector space"
s4.1	"sparql emptyanswer problem"	rdfs:subClassOf	"emptyanswer problem"
s4.1	"sparql emptyanswer problem in term"	rdfs:member	"sparql emptyanswer problem"
s4.1	"sparql emptyanswer problem in term"	rdfs:member	"term"
s4.1	"term of continuous vector space"	rdfs:member	"term"
s4.1	"term of continuous vector space"	rdfs:member	"continuous vector space"
s4	"based framework"
s4	"based framework"	rdf:subject	"framework"
s4	"based framework"	rdf:predicate	"base"
s3	"in this paper we propose an rdf graph embedding"
s3	"in this paper we propose an rdf graph embedding"	rdf:subject	"we"
s3	"in this paper we propose an rdf graph embedding"	rdf:predicate	"propose"
s3	"in this paper we propose an rdf graph embedding"	rdf:object	"rdf graph embed"
s3	"rdf graph"	rdfs:subClassOf	"graph"
s3	"rdf graph"	rdfs:member	"rdf"
s3	"in this paper we propose an rdf graph embedding"	local:AM-LOC	"paper"
s2.1	"empty answers given a sparql query"
s2.1	"empty answers given a sparql query"	rdf:subject	"sparql query"
s2.1	"sparql query"	rdfs:subClassOf	"query"
s2.1	"sparql query"	rdfs:member	"sparql"
s2.1	"empty answers given a sparql query"	rdf:predicate	"give"
s2.1	"empty answers given a sparql query"	rdf:object	"empty answer"
s2.1	"empty answer"	rdfs:member	"empty"
s2.1	"empty answer"	rdfs:subClassOf	"answer"
s2	"a common query problem for users face with empty answers"
s2	"a common query problem for users face with empty answers"	rdf:subject	"common query problem for user"
s2	"common query problem for user"	rdfs:member	"common query problem"
s2	"common query problem for user"	rdfs:member	"user"
s2	"common query"	rdfs:subClassOf	"query"
s2	"query problem"	rdfs:member	"query"
s2	"common query problem"	rdfs:subClassOf	"problem"
s2	"query problem"	rdfs:subClassOf	"problem"
s2	"common query"	rdfs:member	"common"
s2	"common query problem"	rdfs:member	"common query"
s2	"common query problem"	rdfs:subClassOf	"query problem"
s2	"common query problem for user"	rdfs:member	"common query problem"
s2	"common query problem for user"	rdfs:member	"user"
s2	"a common query problem for users face with empty answers"	rdf:predicate	"face"
s2	"a common query problem for users face with empty answers"	local:AM-MNR	"empty answer"
s2	"empty answer"	rdfs:member	"empty"
s2	"empty answer"	rdfs:subClassOf	"answer"
s1.2	"a sparql query that obtain a nonempty set"
s1.2	"a sparql query that obtain a nonempty set"	rdf:subject	"sparql query"
s1.2	"sparql query"	rdfs:subClassOf	"query"
s1.2	"sparql query"	rdfs:member	"sparql"
s1.2	"a sparql query that obtain a nonempty set"	rdf:predicate	"obtain"
s1.2	"a sparql query that obtain a nonempty set"	rdf:object	"nonempty set"
s1.2	"nonempty set"	rdfs:subClassOf	"set"
s1.2	"nonempty set"	rdfs:member	"nonempty"
s1.1	"a sparql query that refine the query to obtain a nonempty set"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:subject	"sparql query"
s1.1	"sparql query"	rdfs:subClassOf	"query"
s1.1	"sparql query"	rdfs:member	"sparql"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:predicate	"refine"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	rdf:object	"query"
s1.1	"a sparql query that refine the query to obtain a nonempty set"	local:AM-PNC	"obtain a nonempty set"
s1.1	"nonempty set"	rdfs:subClassOf	"set"
s1.1	"nonempty set"	rdfs:member	"nonempty"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:subject	"sparql query"
s1	"sparql query"	rdfs:subClassOf	"query"
s1	"sparql query"	rdfs:member	"sparql"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:predicate	"return"
s1	"a sparql query that returns nothing how to refine the query to obtain a nonempty set"	rdf:object	"nothing how to refine the query to obtain a nonempty set"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"nonempty set"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"nothing"
s1	"nothing how to refine the query to obtain a nonempty set"	rdfs:member	"query"
s1	"nonempty set"	rdfs:subClassOf	"set"
s1	"nonempty set"	rdfs:member	"nonempty"
s1	"how refine"	rdfs:subClassOf	"refine"
s0.2	"users issuing sparql queries"
s0.2	"users issuing sparql queries"	rdf:subject	"user"
s0.2	"users issuing sparql queries"	rdf:predicate	"issue"
s0.2	"users issuing sparql queries"	rdf:object	"sparql query"
s0.2	"sparql query"	rdfs:subClassOf	"query"
s0.2	"sparql query"	rdfs:member	"sparql"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:subject	"user"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:predicate	"discover"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	rdf:object	"item of interest"
s0.1	"item of interest"	rdfs:member	"item"
s0.1	"item of interest"	rdfs:member	"interest"
s0.1	"item of interest"	rdfs:member	"item"
s0.1	"item of interest"	rdfs:member	"interest"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-LOC	"rdf data source"
s0.1	"rdf data"	rdfs:member	"rdf"
s0.1	"rdf data source"	rdfs:member	"rdf data"
s0.1	"data source"	rdfs:member	"data"
s0.1	"rdf data source"	rdfs:subClassOf	"source"
s0.1	"rdf data"	rdfs:subClassOf	"data"
s0.1	"data source"	rdfs:subClassOf	"source"
s0.1	"rdf data source"	rdfs:subClassOf	"data source"
s0.1	"rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-MNR	"issue sparql query"
s0.1	"sparql query"	rdfs:subClassOf	"query"
s0.1	"issue sparql query"	rdfs:subClassOf	"sparql query"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:subject	"lod cloud"
s0	"lod cloud"	rdfs:member	"lod"
s0	"lod cloud"	rdfs:subClassOf	"cloud"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:predicate	"offer"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	rdf:object	"plethora of rdf data source where user discover item of interest"
s0	"plethora of rdf data source where user discover item of interest"	rdfs:member	"plethora"
s0	"plethora of rdf data source where user discover item of interest"	rdfs:member	"user discover item"
s0	"plethora of rdf data source where user discover item of interest"	rdfs:member	"rdf data source"
s0	"plethora of rdf data source where user discover item of interest"	rdfs:member	"interest"
s0	"user discover"	rdfs:member	"user"
s0	"rdf data"	rdfs:member	"rdf"
s0	"discover item"	rdfs:subClassOf	"item"
s0	"user discover item"	rdfs:member	"user discover"
s0	"rdf data source"	rdfs:member	"rdf data"
s0	"data source"	rdfs:member	"data"
s0	"discover item"	rdfs:member	"discover"
s0	"rdf data source"	rdfs:subClassOf	"source"
s0	"rdf data"	rdfs:subClassOf	"data"
s0	"data source"	rdfs:subClassOf	"source"
s0	"user discover"	rdfs:subClassOf	"discover"
s0	"user discover item"	rdfs:subClassOf	"item"
s0	"where discover"	rdfs:subClassOf	"discover"
s0	"rdf data source"	rdfs:subClassOf	"data source"
s0	"plethora of rdf data source"	rdfs:member	"plethora"
s0	"plethora of rdf data source"	rdfs:member	"rdf data source"
s0	"item of interest"	rdfs:member	"item"
s0	"item of interest"	rdfs:member	"interest"
s0	"the lod cloud offers a plethora of rdf data sources where users discover items of interest by issuing sparql queries"	local:AM-MNR	"issue sparql query"
s0	"sparql query"	rdfs:subClassOf	"query"
s0	"issue sparql query"	rdfs:subClassOf	"sparql query"
