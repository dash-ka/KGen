s26	""
s26	""	rdf:predicate	"link"
s25	""
s25	""	rdf:predicate	"link"
s24	"we compare the strategies"
s24	"we compare the strategies"	rdf:subject	"We"
s24	"we compare the strategies"	rdf:predicate	"compare"
s24	"we compare the strategies"	rdf:object	"strategies"
s23	"we evaluate the strategies on a dataset with 5000 questions"
s23	"we evaluate the strategies on a dataset with 5000 questions"	rdf:subject	"We"
s23	"we evaluate the strategies on a dataset with 5000 questions"	rdf:predicate	"evaluate"
s23	"we evaluate the strategies on a dataset with 5000 questions"	rdf:object	"strategies on a dataset"
s23	"strategies on a dataset"	rdfs:member	"dataset"
s23	"strategies on a dataset"	rdfs:member	"strategies"
s23	"strategies on dataset"	rdfs:member	"strategies"
s23	"strategies on dataset"	rdfs:member	"dataset"
s23	"we evaluate the strategies on a dataset with 5000 questions"	local:AM-MNR	"5000 questions"
s23	"5000 questions"	rdfs:subClassOf	"questions"
s22.1	"predict relations"
s22.1	"predict relations"	rdf:subject	"relations"
s22.1	"predict relations"	rdf:predicate	"predict"
s22	"the first strategy relies on reranking steps in order to predict relations"
s22	"the first strategy relies on reranking steps in order to predict relations"	rdf:subject	"first strategy"
s22	"first strategy"	rdfs:subClassOf	"strategy"
s22	"first strategy"	rdfs:member	"first"
s22	"the first strategy relies on reranking steps in order to predict relations"	rdf:predicate	"rely"
s22	"the first strategy relies on reranking steps in order to predict relations"	rdf:object	"reranking steps"
s22	"the first strategy relies on reranking steps in order to predict relations"	local:AM-PNC	"order to predict relations"
s22	"order to predict relations"	rdfs:member	"order"
s22	"order to predict relations"	rdfs:member	"relations"
s21.1	"the first strategy predict relations"
s21.1	"the first strategy predict relations"	rdf:subject	"first strategy"
s21.1	"first strategy"	rdfs:subClassOf	"strategy"
s21.1	"first strategy"	rdfs:member	"first"
s21.1	"the first strategy predict relations"	rdf:predicate	"predict"
s21.1	"the first strategy predict relations"	rdf:object	"relations"
s21	"the first strategy relies on three base features in order to predict relations"
s21	"the first strategy relies on three base features in order to predict relations"	rdf:subject	"first strategy"
s21	"first strategy"	rdfs:subClassOf	"strategy"
s21	"first strategy"	rdfs:member	"first"
s21	"the first strategy relies on three base features in order to predict relations"	rdf:predicate	"rely"
s21	"the first strategy relies on three base features in order to predict relations"	rdf:object	"three base features"
s21	"base features"	rdfs:member	"base"
s21	"base features"	rdfs:subClassOf	"features"
s21	"three base features"	rdfs:subClassOf	"base features"
s21	"the first strategy relies on three base features in order to predict relations"	local:AM-PNC	"order to predict relations"
s21	"order to predict relations"	rdfs:member	"order"
s21	"order to predict relations"	rdfs:member	"relations"
s20.1	"predict entities"
s20.1	"predict entities"	rdf:subject	"entities"
s20.1	"predict entities"	rdf:predicate	"predict"
s20	"the first strategy relies on reranking steps in order to predict entities"
s20	"the first strategy relies on reranking steps in order to predict entities"	rdf:subject	"first strategy"
s20	"first strategy"	rdfs:subClassOf	"strategy"
s20	"first strategy"	rdfs:member	"first"
s20	"the first strategy relies on reranking steps in order to predict entities"	rdf:predicate	"rely"
s20	"the first strategy relies on reranking steps in order to predict entities"	rdf:object	"reranking steps"
s20	"the first strategy relies on reranking steps in order to predict entities"	local:AM-PNC	"order to predict entities"
s20	"order to predict entities"	rdfs:member	"entities"
s20	"order to predict entities"	rdfs:member	"order"
s19.1	"the first strategy predict entities"
s19.1	"the first strategy predict entities"	rdf:subject	"first strategy"
s19.1	"first strategy"	rdfs:subClassOf	"strategy"
s19.1	"first strategy"	rdfs:member	"first"
s19.1	"the first strategy predict entities"	rdf:predicate	"predict"
s19.1	"the first strategy predict entities"	rdf:object	"entities"
s19	"the first strategy relies on three base features in order to predict entities"
s19	"the first strategy relies on three base features in order to predict entities"	rdf:subject	"first strategy"
s19	"first strategy"	rdfs:subClassOf	"strategy"
s19	"first strategy"	rdfs:member	"first"
s19	"the first strategy relies on three base features in order to predict entities"	rdf:predicate	"rely"
s19	"the first strategy relies on three base features in order to predict entities"	rdf:object	"three base features"
s19	"base features"	rdfs:member	"base"
s19	"base features"	rdfs:subClassOf	"features"
s19	"three base features"	rdfs:subClassOf	"base features"
s19	"the first strategy relies on three base features in order to predict entities"	local:AM-PNC	"order to predict entities"
s19	"order to predict entities"	rdfs:member	"entities"
s19	"order to predict entities"	rdfs:member	"order"
s18.2	"the first strategy exploit the connection density between nodes in the knowledge graph"
s18.2	"the first strategy exploit the connection density between nodes in the knowledge graph"	rdf:subject	"first strategy"
s18.2	"first strategy"	rdfs:subClassOf	"strategy"
s18.2	"first strategy"	rdfs:member	"first"
s18.2	"the first strategy exploit the connection density between nodes in the knowledge graph"	rdf:predicate	"exploit"
s18.2	"the first strategy exploit the connection density between nodes in the knowledge graph"	rdf:object	"connection density between nodes in the knowledge graph"
s18.2	"connection density between nodes in the knowledge graph"	rdfs:member	"connection density"
s18.2	"connection density between nodes in the knowledge graph"	rdfs:member	"nodes"
s18.2	"connection density between nodes in the knowledge graph"	rdfs:member	"knowledge graph"
s18.2	"connection density"	rdfs:member	"connection"
s18.2	"knowledge graph"	rdfs:member	"knowledge"
s18.2	"knowledge graph"	rdfs:subClassOf	"graph"
s18.2	"connection density"	rdfs:subClassOf	"density"
s18.2	"connection density between nodes"	rdfs:member	"connection density"
s18.2	"connection density between nodes"	rdfs:member	"nodes"
s18.2	"nodes in knowledge graph"	rdfs:member	"nodes"
s18.2	"nodes in knowledge graph"	rdfs:member	"knowledge graph"
s18.1	"the first strategy machine learning"
s18.1	"the first strategy machine learning"	rdf:subject	"machine"
s18.1	"the first strategy machine learning"	rdf:predicate	"learn"
s18	"the first strategy uses machine learning in order to exploit the connection density between nodes in the knowledge graph"
s18	"the first strategy uses machine learning in order to exploit the connection density between nodes in the knowledge graph"	rdf:subject	"first strategy"
s18	"first strategy"	rdfs:subClassOf	"strategy"
s18	"first strategy"	rdfs:member	"first"
s18	"the first strategy uses machine learning in order to exploit the connection density between nodes in the knowledge graph"	rdf:predicate	"use"
s18	"the first strategy uses machine learning in order to exploit the connection density between nodes in the knowledge graph"	rdf:object	"machine learning"
s18	"machine learning"	rdfs:member	"machine"
s18	"machine learning"	rdfs:subClassOf	"learning"
s18	"the first strategy uses machine learning in order to exploit the connection density between nodes in the knowledge graph"	local:AM-PNC	"order to exploit the connection density between nodes in the knowledge graph"
s18	"order to exploit the connection density between nodes in the knowledge graph"	rdfs:member	"connection density"
s18	"order to exploit the connection density between nodes in the knowledge graph"	rdfs:member	"nodes"
s18	"order to exploit the connection density between nodes in the knowledge graph"	rdfs:member	"knowledge graph"
s18	"order to exploit the connection density between nodes in the knowledge graph"	rdfs:member	"order"
s18	"connection density"	rdfs:member	"connection"
s18	"knowledge graph"	rdfs:member	"knowledge"
s18	"knowledge graph"	rdfs:subClassOf	"graph"
s18	"connection density"	rdfs:subClassOf	"density"
s18	"connection density between nodes"	rdfs:member	"connection density"
s18	"connection density between nodes"	rdfs:member	"nodes"
s18	"nodes in knowledge graph"	rdfs:member	"nodes"
s18	"nodes in knowledge graph"	rdfs:member	"knowledge graph"
s17	"in order to be computationally feasible we employ approximate gtsp solvers"
s17	"in order to be computationally feasible we employ approximate gtsp solvers"	rdf:subject	"we"
s17	"in order to be computationally feasible we employ approximate gtsp solvers"	rdf:predicate	"employ"
s17	"in order to be computationally feasible we employ approximate gtsp solvers"	rdf:object	"approximate GTSP solvers"
s17	"gtsp solvers"	rdfs:subClassOf	"solvers"
s17	"approximate gtsp"	rdfs:member	"approximate"
s17	"approximate gtsp solvers"	rdfs:member	"approximate gtsp"
s17	"approximate gtsp solvers"	rdfs:subClassOf	"solvers"
s17	"gtsp solvers"	rdfs:member	"gtsp"
s17	"approximate gtsp"	rdfs:subClassOf	"gtsp"
s17	"in order to be computationally feasible we employ approximate gtsp solvers"	local:AM-ADV	"order to be computationally feasible"
s17	"computationally feasible"	rdfs:subClassOf	"feasible"
s16	"two different solution strategies for which we provide a comparative analysis in this paper"
s16	"two different solution strategies for which we provide a comparative analysis in this paper"	rdf:subject	"we"
s16	"two different solution strategies for which we provide a comparative analysis in this paper"	rdf:predicate	"provide"
s16	"two different solution strategies for which we provide a comparative analysis in this paper"	rdf:object	"comparative analysis two different solution strategies"
s16	"comparative analysis two different solution strategies"	rdfs:member	"comparative analysis"
s16	"comparative analysis two different solution strategies"	rdfs:member	"different solution strategies"
s16	"different solution strategies"	rdfs:member	"different solution"
s16	"comparative analysis"	rdfs:subClassOf	"analysis"
s16	"different solution strategies"	rdfs:subClassOf	"strategies"
s16	"comparative analysis"	rdfs:member	"comparative"
s16	"different solution"	rdfs:subClassOf	"solution"
s16	"solution strategies"	rdfs:member	"solution"
s16	"different solution"	rdfs:member	"different"
s16	"solution strategies"	rdfs:subClassOf	"strategies"
s16	"different solution strategies"	rdfs:subClassOf	"solution strategies"
s16	"two different solution strategies"	rdfs:subClassOf	"different solution strategies"
s16	"two different solution strategies for which we provide a comparative analysis in this paper"	local:AM-LOC	"paper"
s15	"the joint entity and relation linking tasks as an instance of the generalised travelling salesman problem"
s15	"the joint entity and relation linking tasks as an instance of the generalised travelling salesman problem"	rdf:subject	"joint entity and relation"
s15	"joint entity and relation"	rdfs:member	"joint entity"
s15	"joint entity and relation"	rdfs:member	"relation"
s15	"joint entity"	rdfs:member	"joint"
s15	"joint entity"	rdfs:subClassOf	"entity"
s15	"the joint entity and relation linking tasks as an instance of the generalised travelling salesman problem"	rdf:predicate	"link"
s15	"the joint entity and relation linking tasks as an instance of the generalised travelling salesman problem"	rdf:object	"tasks as an instance of the Generalised Travelling Salesman Problem"
s15	"tasks as an instance of the generalised travelling salesman problem"	rdfs:member	"instance"
s15	"tasks as an instance of the generalised travelling salesman problem"	rdfs:member	"generalised travelling salesman problem"
s15	"tasks as an instance of the generalised travelling salesman problem"	rdfs:member	"tasks"
s15	"travelling salesman"	rdfs:member	"travelling"
s15	"generalised travelling salesman"	rdfs:member	"generalised travelling"
s15	"travelling salesman problem"	rdfs:subClassOf	"problem"
s15	"generalised travelling salesman"	rdfs:subClassOf	"salesman"
s15	"generalised travelling"	rdfs:member	"generalised"
s15	"generalised travelling salesman problem"	rdfs:member	"generalised travelling salesman"
s15	"generalised travelling"	rdfs:subClassOf	"travelling"
s15	"travelling salesman problem"	rdfs:member	"travelling salesman"
s15	"generalised travelling salesman problem"	rdfs:subClassOf	"problem"
s15	"travelling salesman"	rdfs:subClassOf	"salesman"
s15	"salesman problem"	rdfs:member	"salesman"
s15	"salesman problem"	rdfs:subClassOf	"problem"
s15	"travelling salesman problem"	rdfs:subClassOf	"salesman problem"
s15	"generalised travelling salesman problem"	rdfs:subClassOf	"travelling salesman problem"
s15	"tasks as instance"	rdfs:member	"tasks"
s15	"tasks as instance"	rdfs:member	"instance"
s15	"instance of generalised travelling salesman problem"	rdfs:member	"instance"
s15	"instance of generalised travelling salesman problem"	rdfs:member	"generalised travelling salesman problem"
s14	"earl implements two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"
s14	"earl implements two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdf:subject	"EARL"
s14	"earl implements two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdf:predicate	"implement"
s14	"earl implements two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdf:object	"two different solution strategies The first strategy is a formalisation of the joint entity and relation GTSP"
s14	"two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdfs:member	"different solution"
s14	"two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdfs:member	"formalisation"
s14	"two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdfs:member	"first strategy"
s14	"two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdfs:member	"relation gtsp"
s14	"two different solution strategies the first strategy is a formalisation of the joint entity and relation gtsp"	rdfs:member	"joint entity"
s14	"joint entity"	rdfs:subClassOf	"entity"
s14	"different solution"	rdfs:subClassOf	"solution"
s14	"first strategy"	rdfs:subClassOf	"strategy"
s14	"relation gtsp"	rdfs:subClassOf	"gtsp"
s14	"first strategy"	rdfs:member	"first"
s14	"relation gtsp"	rdfs:member	"relation"
s14	"different solution"	rdfs:member	"different"
s14	"joint entity"	rdfs:member	"joint"
s14	"solution strategies"	rdfs:subClassOf	"strategies"
s14	"different solution strategies"	rdfs:subClassOf	"solution strategies"
s14	"two different solution strategies"	rdfs:subClassOf	"different solution strategies"
s14	"formalisation of joint entity"	rdfs:member	"formalisation"
s14	"formalisation of joint entity"	rdfs:member	"joint entity"
s14	"formalisation of joint entity of relation gtsp"	rdfs:member	"formalisation of joint entity"
s14	"formalisation of joint entity of relation gtsp"	rdfs:member	"relation gtsp"
s13	"in this paper we propose relation"
s13	"in this paper we propose relation"	rdf:subject	"we"
s13	"in this paper we propose relation"	rdf:predicate	"propose"
s13	"in this paper we propose relation"	rdf:object	"relation"
s13	"in this paper we propose relation"	local:AM-LOC	"paper"
s12	"a framework called earl"
s12	"a framework called earl"	rdf:subject	"framework"
s12	"a framework called earl"	rdf:predicate	"call"
s12	"a framework called earl"	rdf:object	"EARL"
s11	"earl which performs entity"
s11	"earl which performs entity"	rdf:subject	"EARL"
s11	"earl which performs entity"	rdf:predicate	"perform"
s11	"earl which performs entity"	rdf:object	"entity"
s10	"entity"
s10	"entity"	rdf:subject	"entity"
s10	"entity"	rdf:predicate	"link"
s9	"linking as a joint task"
s9	"linking as a joint task"	rdf:subject	"joint task"
s9	"joint task"	rdfs:subClassOf	"task"
s9	"joint task"	rdfs:member	"joint"
s9	"linking as a joint task"	rdf:predicate	"link"
s8	"in this paper we propose a framework"
s8	"in this paper we propose a framework"	rdf:subject	"we"
s8	"in this paper we propose a framework"	rdf:predicate	"propose"
s8	"in this paper we propose a framework"	rdf:object	"framework"
s8	"in this paper we propose a framework"	local:AM-LOC	"paper"
s7	""
s7	""	rdf:predicate	"link"
s6	"entity"
s6	"entity"	rdf:subject	"entity"
s6	"entity"	rdf:predicate	"link"
s5	"traditionally relation performed either as dependent sequential tasks"
s5	"traditionally relation performed either as dependent sequential tasks"	rdf:predicate	"perform"
s5	"traditionally relation performed either as dependent sequential tasks"	local:AM-ADV	"Traditionally relation"
s5	"traditionally relation"	rdfs:member	"traditionally"
s5	"traditionally relation"	rdfs:subClassOf	"relation"
s5	"traditionally relation performed either as dependent sequential tasks"	local:AM-MNR	"either as dependent sequential tasks"
s5	"dependent sequential tasks"	rdfs:member	"dependent sequential"
s5	"dependent sequential"	rdfs:subClassOf	"sequential"
s5	"dependent sequential tasks"	rdfs:subClassOf	"tasks"
s5	"sequential tasks"	rdfs:subClassOf	"tasks"
s5	"sequential tasks"	rdfs:member	"sequential"
s5	"dependent sequential"	rdfs:member	"dependent"
s5	"dependent sequential tasks"	rdfs:subClassOf	"sequential tasks"
s4	"traditionally relation performed either as independent parallel tasks"
s4	"traditionally relation performed either as independent parallel tasks"	rdf:predicate	"perform"
s4	"traditionally relation performed either as independent parallel tasks"	local:AM-ADV	"Traditionally relation"
s4	"traditionally relation"	rdfs:member	"traditionally"
s4	"traditionally relation"	rdfs:subClassOf	"relation"
s4	"traditionally relation performed either as independent parallel tasks"	local:AM-MNR	"either as independent parallel tasks"
s4	"parallel tasks"	rdfs:subClassOf	"tasks"
s4	"independent parallel"	rdfs:subClassOf	"parallel"
s4	"independent parallel"	rdfs:member	"independent"
s4	"independent parallel tasks"	rdfs:member	"independent parallel"
s4	"parallel tasks"	rdfs:member	"parallel"
s4	"independent parallel tasks"	rdfs:subClassOf	"tasks"
s4	"independent parallel tasks"	rdfs:subClassOf	"parallel tasks"
s3	"traditionally entity performed either as independent parallel tasks"
s3	"traditionally entity performed either as independent parallel tasks"	rdf:subject	"entity"
s3	"traditionally entity performed either as independent parallel tasks"	rdf:predicate	"perform"
s3	"traditionally entity performed either as independent parallel tasks"	local:AM-ADV	"Traditionally"
s3	"traditionally entity performed either as independent parallel tasks"	local:AM-MNR	"either as independent parallel tasks"
s3	"parallel tasks"	rdfs:subClassOf	"tasks"
s3	"independent parallel"	rdfs:subClassOf	"parallel"
s3	"independent parallel"	rdfs:member	"independent"
s3	"independent parallel tasks"	rdfs:member	"independent parallel"
s3	"parallel tasks"	rdfs:member	"parallel"
s3	"independent parallel tasks"	rdfs:subClassOf	"tasks"
s3	"independent parallel tasks"	rdfs:subClassOf	"parallel tasks"
s2	"traditionally entity performed either as dependent sequential tasks"
s2	"traditionally entity performed either as dependent sequential tasks"	rdf:subject	"entity"
s2	"traditionally entity performed either as dependent sequential tasks"	rdf:predicate	"perform"
s2	"traditionally entity performed either as dependent sequential tasks"	local:AM-ADV	"Traditionally"
s2	"traditionally entity performed either as dependent sequential tasks"	local:AM-MNR	"either as dependent sequential tasks"
s2	"dependent sequential tasks"	rdfs:member	"dependent sequential"
s2	"dependent sequential"	rdfs:subClassOf	"sequential"
s2	"dependent sequential tasks"	rdfs:subClassOf	"tasks"
s2	"sequential tasks"	rdfs:subClassOf	"tasks"
s2	"sequential tasks"	rdfs:member	"sequential"
s2	"dependent sequential"	rdfs:member	"dependent"
s2	"dependent sequential tasks"	rdfs:subClassOf	"sequential tasks"
s1.3	"many question answering systems over knowledge graphs connect the natural language input to the underlying knowledge graph"
s1.3	"many question answering systems over knowledge graphs connect the natural language input to the underlying knowledge graph"	rdf:subject	"Many question answering systems over knowledge graphs"
s1.3	"many question answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s1.3	"many question answering systems over knowledge graphs"	rdfs:member	"many question"
s1.3	"many question answering systems over knowledge graphs"	rdfs:member	"systems"
s1.3	"many question"	rdfs:subClassOf	"question"
s1.3	"many question"	rdfs:member	"many"
s1.3	"knowledge graphs"	rdfs:member	"knowledge"
s1.3	"knowledge graphs"	rdfs:subClassOf	"graphs"
s1.3	"answering systems"	rdfs:subClassOf	"systems"
s1.3	"answering systems over knowledge graphs"	rdfs:member	"answering systems"
s1.3	"answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s1.3	"many question answering systems over knowledge graphs connect the natural language input to the underlying knowledge graph"	rdf:predicate	"connect"
s1.3	"many question answering systems over knowledge graphs connect the natural language input to the underlying knowledge graph"	rdf:object	"natural language input underlying knowledge graph"
s1.3	"natural language input underlying knowledge graph"	rdfs:member	"natural language input"
s1.3	"natural language input underlying knowledge graph"	rdfs:member	"knowledge graph"
s1.3	"language input"	rdfs:subClassOf	"input"
s1.3	"knowledge graph"	rdfs:subClassOf	"graph"
s1.3	"natural language"	rdfs:member	"natural"
s1.3	"natural language input"	rdfs:subClassOf	"input"
s1.3	"natural language input"	rdfs:member	"natural language"
s1.3	"natural language"	rdfs:subClassOf	"language"
s1.3	"knowledge graph"	rdfs:member	"knowledge"
s1.3	"language input"	rdfs:member	"language"
s1.3	"natural language input"	rdfs:subClassOf	"language input"
s1.3	"natural language input underlying"	rdfs:member	"natural language input"
s1.3	"natural language input underlying"	rdfs:member	"underlying"
s1.2	"linking components"
s1.2	"linking components"	rdf:subject	"components"
s1.2	"linking components"	rdf:predicate	"link"
s1.1	"many question answering systems over knowledge graphs rely on relation linking components in order to connect the natural language input to the underlying knowledge graph"
s1.1	"many question answering systems over knowledge graphs rely on relation linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:subject	"Many question answering systems over knowledge graphs"
s1.1	"many question answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s1.1	"many question answering systems over knowledge graphs"	rdfs:member	"many question"
s1.1	"many question answering systems over knowledge graphs"	rdfs:member	"systems"
s1.1	"many question"	rdfs:subClassOf	"question"
s1.1	"many question"	rdfs:member	"many"
s1.1	"knowledge graphs"	rdfs:member	"knowledge"
s1.1	"knowledge graphs"	rdfs:subClassOf	"graphs"
s1.1	"answering systems"	rdfs:subClassOf	"systems"
s1.1	"answering systems over knowledge graphs"	rdfs:member	"answering systems"
s1.1	"answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s1.1	"many question answering systems over knowledge graphs rely on relation linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:predicate	"rely"
s1.1	"many question answering systems over knowledge graphs rely on relation linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:object	"relation linking components"
s1.1	"relation linking components"	rdfs:member	"components"
s1.1	"relation linking components"	rdfs:member	"relation"
s1.1	"relation linking"	rdfs:member	"relation"
s1.1	"relation linking"	rdfs:member	"linking"
s1.1	"many question answering systems over knowledge graphs rely on relation linking components in order to connect the natural language input to the underlying knowledge graph"	local:AM-PNC	"order to connect the natural language input to the underlying knowledge graph"
s1.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"natural language input"
s1.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"knowledge graph"
s1.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"order"
s1.1	"language input"	rdfs:subClassOf	"input"
s1.1	"knowledge graph"	rdfs:subClassOf	"graph"
s1.1	"natural language"	rdfs:member	"natural"
s1.1	"natural language input"	rdfs:subClassOf	"input"
s1.1	"natural language input"	rdfs:member	"natural language"
s1.1	"natural language"	rdfs:subClassOf	"language"
s1.1	"knowledge graph"	rdfs:member	"knowledge"
s1.1	"language input"	rdfs:member	"language"
s1.1	"underlying knowledge graph"	rdfs:subClassOf	"knowledge graph"
s1.1	"natural language input"	rdfs:subClassOf	"language input"
s1.1	"connect to underlying knowledge graph"	rdfs:member	"connect"
s1.1	"connect to underlying knowledge graph"	rdfs:member	"underlying knowledge graph"
s1	"answering systems"
s1	"answering systems"	rdf:subject	"systems"
s1	"answering systems"	rdf:predicate	"answer"
s0.3	"connect the natural language input to the underlying knowledge graph"
s0.3	"connect the natural language input to the underlying knowledge graph"	rdf:subject	"natural language input"
s0.3	"language input"	rdfs:subClassOf	"input"
s0.3	"natural language"	rdfs:member	"natural"
s0.3	"natural language input"	rdfs:subClassOf	"input"
s0.3	"natural language input"	rdfs:member	"natural language"
s0.3	"natural language"	rdfs:subClassOf	"language"
s0.3	"language input"	rdfs:member	"language"
s0.3	"natural language input"	rdfs:subClassOf	"language input"
s0.3	"connect the natural language input to the underlying knowledge graph"	rdf:predicate	"connect"
s0.3	"connect the natural language input to the underlying knowledge graph"	rdf:object	"underlying knowledge graph"
s0.3	"knowledge graph"	rdfs:subClassOf	"graph"
s0.3	"knowledge graph"	rdfs:member	"knowledge"
s0.2	"linking components in order to connect the natural language input to the underlying knowledge graph"
s0.2	"linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:subject	"components"
s0.2	"linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:predicate	"link"
s0.2	"linking components in order to connect the natural language input to the underlying knowledge graph"	local:AM-PNC	"order to connect the natural language input to the underlying knowledge graph"
s0.2	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"natural language input"
s0.2	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"knowledge graph"
s0.2	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"order"
s0.2	"language input"	rdfs:subClassOf	"input"
s0.2	"knowledge graph"	rdfs:subClassOf	"graph"
s0.2	"natural language"	rdfs:member	"natural"
s0.2	"natural language input"	rdfs:subClassOf	"input"
s0.2	"natural language input"	rdfs:member	"natural language"
s0.2	"natural language"	rdfs:subClassOf	"language"
s0.2	"knowledge graph"	rdfs:member	"knowledge"
s0.2	"language input"	rdfs:member	"language"
s0.2	"underlying knowledge graph"	rdfs:subClassOf	"knowledge graph"
s0.2	"natural language input"	rdfs:subClassOf	"language input"
s0.2	"connect to underlying knowledge graph"	rdfs:member	"connect"
s0.2	"connect to underlying knowledge graph"	rdfs:member	"underlying knowledge graph"
s0.1	"many question answering systems over knowledge graphs rely on entity linking components in order to connect the natural language input to the underlying knowledge graph"
s0.1	"many question answering systems over knowledge graphs rely on entity linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:subject	"Many question answering systems over knowledge graphs"
s0.1	"many question answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s0.1	"many question answering systems over knowledge graphs"	rdfs:member	"many question"
s0.1	"many question answering systems over knowledge graphs"	rdfs:member	"systems"
s0.1	"many question"	rdfs:subClassOf	"question"
s0.1	"many question"	rdfs:member	"many"
s0.1	"knowledge graphs"	rdfs:member	"knowledge"
s0.1	"knowledge graphs"	rdfs:subClassOf	"graphs"
s0.1	"answering systems"	rdfs:subClassOf	"systems"
s0.1	"answering systems over knowledge graphs"	rdfs:member	"answering systems"
s0.1	"answering systems over knowledge graphs"	rdfs:member	"knowledge graphs"
s0.1	"many question answering systems over knowledge graphs rely on entity linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:predicate	"rely"
s0.1	"many question answering systems over knowledge graphs rely on entity linking components in order to connect the natural language input to the underlying knowledge graph"	rdf:object	"entity linking components"
s0.1	"entity linking components"	rdfs:member	"entity"
s0.1	"entity linking components"	rdfs:member	"components"
s0.1	"entity linking"	rdfs:member	"entity"
s0.1	"entity linking"	rdfs:member	"linking"
s0.1	"many question answering systems over knowledge graphs rely on entity linking components in order to connect the natural language input to the underlying knowledge graph"	local:AM-PNC	"order to connect the natural language input to the underlying knowledge graph"
s0.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"natural language input"
s0.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"knowledge graph"
s0.1	"order to connect the natural language input to the underlying knowledge graph"	rdfs:member	"order"
s0.1	"language input"	rdfs:subClassOf	"input"
s0.1	"knowledge graph"	rdfs:subClassOf	"graph"
s0.1	"natural language"	rdfs:member	"natural"
s0.1	"natural language input"	rdfs:subClassOf	"input"
s0.1	"natural language input"	rdfs:member	"natural language"
s0.1	"natural language"	rdfs:subClassOf	"language"
s0.1	"knowledge graph"	rdfs:member	"knowledge"
s0.1	"language input"	rdfs:member	"language"
s0.1	"underlying knowledge graph"	rdfs:subClassOf	"knowledge graph"
s0.1	"natural language input"	rdfs:subClassOf	"language input"
s0.1	"connect to underlying knowledge graph"	rdfs:member	"connect"
s0.1	"connect to underlying knowledge graph"	rdfs:member	"underlying knowledge graph"
s0	"answering systems"
s0	"answering systems"	rdf:subject	"systems"
s0	"answering systems"	rdf:predicate	"answer"
