process natural language questions that can not be answered by factual question answering querying requiring instead adhoc code generation and execution
We present an unsupervised approach to process natural language questions
process natural language questions that can not be answered by advanced data querying requiring instead adhoc code generation and execution
a SPARQL query that is run against a large RDF repository
a SPARQL query that is run against CodeOntology
triples representing Java code constructs
a large RDF repository containing millions of triples
To address this challenging task our system Open image in new window performs languagetocode translation by generating a SPARQL query
To address this challenging task our system Open image in new window performs languagetocode translation by interpreting the natural language question
a SPARQL query that is run against a large RDF repository
a SPARQL query that is run against CodeOntology
a large RDF repository containing millions of triples
triples representing Java code constructs
the best candidate that is then executed to get the correct answer
a SPARQL query retrieves a number of Java source code snippets and methods ranked by Open image in new window on both syntactic to find the best candidate
a SPARQL query retrieves a number of Java source code snippets and methods ranked by Open image in new window on semantic features to find the best candidate
The evaluation of our system is based on a dataset
experimental results show that our approach is comparable with other stateoftheart proprietary systems such as the closedsource WolframAlpha computational knowledge engine
a dataset extracted from StackOverflow