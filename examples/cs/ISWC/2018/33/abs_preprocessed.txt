cloudbased systems provide a rich platform for managing largescale rdf data
however the distributed nature of cloudbased systems introduces several performance challenges especially for rdf queries
rdf queries that involve multiple join operations
several optimization techniques that enhance the performance of rdf queries
to alleviate these challenges this paper studies the effect of several optimization techniques
intermediate results that are common for certain
based on the query workload reduced sets of intermediate results join patterns are computed
furthermore these reductions are not computed beforehand
furthermore these reductions are rather computed only for the frequent join patterns in an online fashion
an online fashion using bloom filters
rather than caching the final results of each query we show that caching these reductions allows reusing intermediate results across multiple queries
multiple queries that share the same join patterns
in addition we introduce an efficient solution for rdf queries with unbound properties
based on a realization of the proposed optimizations on top of spark extensive experimentation demonstrates how the proposed optimizations on top of spark lead to an order of magnitude enhancement in terms of storage compared to the stateoftheart solutions
based on a realization of the proposed optimizations on top of spark extensive experimentation demonstrates how the proposed optimizations on top of spark lead to an order of magnitude enhancement in terms of preprocessing compared to the stateoftheart solutions
extensive experimentation using two synthetic benchmarks
based on a realization of the proposed optimizations on top of spark extensive experimentation demonstrates how the proposed optimizations on top of spark lead to an order of magnitude enhancement in terms of query performance compared to the stateoftheart solutions
extensive experimentation using a real dataset