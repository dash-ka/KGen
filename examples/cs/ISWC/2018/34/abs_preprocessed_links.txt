@PREFIX	cso:	<https://cso.kmi.open.ac.uk/topics/>	
@LINK	change	no_match	not_found	change	
@LINK	present	no_match	not_found	present	
@LINK	be complicate	no_match	not_found	be complicate	
@LINK	be	no_match	not_found	be	
@LINK	guarantee	no_match	not_found	guarantee	
@LINK	make	no_match	not_found	make	
@LINK	perform	no_match	not_found	perform	
@LINK	support	no_match	not_found	support	
@LINK	stresstest	no_match	not_found	stresstest	
@LINK	propose	no_match	not_found	propose	
@LINK	show	no_match	not_found	show	
@LINK	add	no_match	not_found	add	
@LINK	sparql query	no_match	not_found	sparql query	
@LINK	paper	no_match	not_found	paper	
@LINK	realworld query	no_match	not_found	realworld query	
@LINK	conjunctive query	no_match	not_found	conjunctive query	
@LINK	further query feature	no_match	not_found	further query feature	
@LINK	result	no_match	not_found	result	
@LINK	canonicalisation	no_match	not_found	canonicalisation	
@LINK	complexity	no_match	not_found	complexity	
@LINK	answer	no_match	not_found	answer	
@LINK	input	no_match	not_found	input	
@LINK	sparql endpoint log	no_match	not_found	sparql endpoint log	
@LINK	syntactic canonicalisation	no_match	not_found	syntactic canonicalisation	
@LINK	compare	no_match	not_found	compare	
@LINK	detect equivalent query	no_match	not_found	detect equivalent query	
@LINK	context	no_match	not_found	context	
@LINK	core fragment	no_match	not_found	core fragment	
@LINK	cache	sameas	cso:cache	cache	
@LINK	canonicalisation method highlight	no_match	not_found	canonicalisation method highlight	
@LINK	algorithm	no_match	not_found	algorithm	
@LINK	purely syntactic method	no_match	not_found	purely syntactic method	
@LINK	problem	no_match	not_found	problem	
@LINK	more equivalent query	no_match	not_found	more equivalent query	
@LINK	original realworld query take	no_match	not_found	original realworld query take	
@LINK	expressive query language	no_match	not_found	expressive query language	
@LINK	difficult case	no_match	not_found	difficult case	
@LINK	sparql	sameas	cso:sparql	sparql	
@LINK	fact	no_match	not_found	fact	
@LINK	equivalence problem	sameas	cso:equivalence_problem	equivalence problem	
@LINK	synthetic query design	no_match	not_found	synthetic query design	
@LINK	algorithm detect	no_match	not_found	algorithm detect	
@LINK	experiment	no_match	not_found	experiment	
@LINK	query	no_match	not_found	query	
@LINK	canonicalised query	no_match	not_found	canonicalised query	
@LINK	weaker soundness guarantee	no_match	not_found	weaker soundness guarantee	
@LINK	difficulty	no_match	not_found	difficulty	
@LINK	other sparql feature	no_match	not_found	other sparql feature	
@LINK	syntactic	sameas	cso:syntactics	syntactic	
@LINK	query language	sameas	cso:query_languages	query language	
