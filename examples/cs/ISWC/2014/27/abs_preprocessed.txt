updates in rdf stores have recently been standardised in the sparql 11 update specification
computing entailed answers by ontologies
however computing is usually treated orthogonally to updates in triple stores
sparql 11 entailment regimes specifications explicitly exclude a standard behaviour for entailment regimes other than simple entailment in the context of updates
even the w3c sparql 11 update explicitly exclude a standard behaviour for entailment regimes other than simple entailment in the context of updates
in this paper we take a first step to close this gap
language dealing with updates both of abox and of tbox statements
we define a fragment of sparql basic graph patterns corresponding to dllite
the corresponding sparql update language
we discuss possible semantics along with potential strategies for implementing potential strategies
in particular we reduced rdf stores that is redundancyfree rdf stores
in particular we treat both redundancyfree rdf stores
in particular we materialised rdf stores redundancyfree rdf stores
redundancyfree rdf stores that do not store any rdf triples
all entailed triples explicitly
any rdf triples entailed by others already
rdf stores which store all
we have present some indications on practical feasibility
we have implemented all semantics prototypically on top of an offtheshelf triple store