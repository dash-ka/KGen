s10.1	"us query rdf data under owl ql entailment without preprocessing owl axioms"
s10.1	"us query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:subject	"u"
s10.1	"us query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:predicate	"query"
s10.1	"us query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:object	"rdf data owl ql entailment"
s10.1	"rdf data owl"	rdfs:subClassOf	"owl"
s10.1	"ql entailment"	rdfs:subClassOf	"entailment"
s10.1	"data owl"	rdfs:subClassOf	"owl"
s10.1	"data owl ql entailment"	rdfs:member	"data owl ql"
s10.1	"ql entailment"	rdfs:member	"ql"
s10.1	"data owl ql entailment"	rdfs:subClassOf	"entailment"
s10.1	"rdf data owl ql"	rdfs:subClassOf	"ql"
s10.1	"owl ql entailment"	rdfs:member	"owl ql"
s10.1	"owl ql"	rdfs:subClassOf	"ql"
s10.1	"data owl"	rdfs:member	"data"
s10.1	"rdf data owl ql entailment"	rdfs:member	"rdf data owl ql"
s10.1	"rdf data owl ql entailment"	rdfs:subClassOf	"entailment"
s10.1	"data owl ql"	rdfs:member	"data owl"
s10.1	"data owl ql"	rdfs:subClassOf	"ql"
s10.1	"rdf data owl ql"	rdfs:member	"rdf data owl"
s10.1	"rdf data"	rdfs:member	"rdf"
s10.1	"rdf data owl"	rdfs:member	"rdf data"
s10.1	"owl ql"	rdfs:member	"owl"
s10.1	"rdf data"	rdfs:subClassOf	"data"
s10.1	"owl ql entailment"	rdfs:subClassOf	"entailment"
s10.1	"owl ql entailment"	rdfs:subClassOf	"ql entailment"
s10.1	"data owl ql entailment"	rdfs:subClassOf	"owl ql entailment"
s10.1	"rdf data owl ql entailment"	rdfs:subClassOf	"data owl ql entailment"
s10.1	"us query rdf data under owl ql entailment without preprocessing owl axioms"	local:AM-MNR	"without preprocessing owl axiom"
s10.1	"owl axiom"	rdfs:subClassOf	"axiom"
s10.1	"owl axiom"	rdfs:member	"owl"
s10	"this allows us to query rdf data under owl ql entailment without preprocessing owl axioms"
s10	"this allows us to query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:subject	"this"
s10	"this allows us to query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:predicate	"allow"
s10	"this allows us to query rdf data under owl ql entailment without preprocessing owl axioms"	rdf:object	"u to query rdf data under owl ql entailment without preprocessing owl axiom"
s10	"u to query rdf data under owl ql entailment without preprocessing owl axiom"	rdfs:member	"owl"
s10	"u to query rdf data under owl ql entailment without preprocessing owl axiom"	rdfs:member	"rdf data"
s10	"u to query rdf data under owl ql entailment without preprocessing owl axiom"	rdfs:member	"ql entailment"
s10	"u to query rdf data under owl ql entailment without preprocessing owl axiom"	rdfs:member	"owl axiom"
s10	"u to query rdf data under owl ql entailment without preprocessing owl axiom"	rdfs:member	"u"
s10	"ql entailment"	rdfs:member	"ql"
s10	"ql entailment"	rdfs:subClassOf	"entailment"
s10	"owl axiom"	rdfs:subClassOf	"axiom"
s10	"rdf data"	rdfs:member	"rdf"
s10	"owl axiom"	rdfs:member	"owl"
s10	"rdf data"	rdfs:subClassOf	"data"
s10	"owl ql entailment"	rdfs:subClassOf	"ql entailment"
s10	"query under owl ql entailment"	rdfs:member	"query"
s10	"query under owl ql entailment"	rdfs:member	"owl ql entailment"
s9.2	"us extracting owl axioms"
s9.2	"us extracting owl axioms"	rdf:subject	"u"
s9.2	"us extracting owl axioms"	rdf:predicate	"extract"
s9.2	"us extracting owl axioms"	rdf:object	"owl axiom"
s9.2	"owl axiom"	rdfs:subClassOf	"axiom"
s9.2	"owl axiom"	rdfs:member	"owl"
s9.1	"us query rdf data under owl ql entailment without extracting owl axioms"
s9.1	"us query rdf data under owl ql entailment without extracting owl axioms"	rdf:subject	"u"
s9.1	"us query rdf data under owl ql entailment without extracting owl axioms"	rdf:predicate	"query"
s9.1	"us query rdf data under owl ql entailment without extracting owl axioms"	rdf:object	"rdf data owl ql entailment"
s9.1	"rdf data owl"	rdfs:subClassOf	"owl"
s9.1	"ql entailment"	rdfs:subClassOf	"entailment"
s9.1	"data owl"	rdfs:subClassOf	"owl"
s9.1	"data owl ql entailment"	rdfs:member	"data owl ql"
s9.1	"ql entailment"	rdfs:member	"ql"
s9.1	"data owl ql entailment"	rdfs:subClassOf	"entailment"
s9.1	"rdf data owl ql"	rdfs:subClassOf	"ql"
s9.1	"owl ql entailment"	rdfs:member	"owl ql"
s9.1	"owl ql"	rdfs:subClassOf	"ql"
s9.1	"data owl"	rdfs:member	"data"
s9.1	"rdf data owl ql entailment"	rdfs:member	"rdf data owl ql"
s9.1	"rdf data owl ql entailment"	rdfs:subClassOf	"entailment"
s9.1	"data owl ql"	rdfs:member	"data owl"
s9.1	"data owl ql"	rdfs:subClassOf	"ql"
s9.1	"rdf data owl ql"	rdfs:member	"rdf data owl"
s9.1	"rdf data"	rdfs:member	"rdf"
s9.1	"rdf data owl"	rdfs:member	"rdf data"
s9.1	"owl ql"	rdfs:member	"owl"
s9.1	"rdf data"	rdfs:subClassOf	"data"
s9.1	"owl ql entailment"	rdfs:subClassOf	"entailment"
s9.1	"owl ql entailment"	rdfs:subClassOf	"ql entailment"
s9.1	"data owl ql entailment"	rdfs:subClassOf	"owl ql entailment"
s9.1	"rdf data owl ql entailment"	rdfs:subClassOf	"data owl ql entailment"
s9.1	"us query rdf data under owl ql entailment without extracting owl axioms"	local:AM-MNR	"without extract owl axiom"
s9.1	"extract owl"	rdfs:member	"extract"
s9.1	"extract owl axiom"	rdfs:subClassOf	"axiom"
s9.1	"owl axiom"	rdfs:subClassOf	"axiom"
s9.1	"owl axiom"	rdfs:member	"owl"
s9.1	"extract owl axiom"	rdfs:member	"extract owl"
s9.1	"extract owl"	rdfs:subClassOf	"owl"
s9.1	"extract owl axiom"	rdfs:subClassOf	"owl axiom"
s9	"this allows us to query rdf data under owl ql entailment without extracting owl axioms"
s9	"this allows us to query rdf data under owl ql entailment without extracting owl axioms"	rdf:subject	"this"
s9	"this allows us to query rdf data under owl ql entailment without extracting owl axioms"	rdf:predicate	"allow"
s9	"this allows us to query rdf data under owl ql entailment without extracting owl axioms"	rdf:object	"u to query rdf data under owl ql entailment without extract owl axiom"
s9	"u to query rdf data under owl ql entailment without extract owl axiom"	rdfs:member	"owl"
s9	"u to query rdf data under owl ql entailment without extract owl axiom"	rdfs:member	"extract owl axiom"
s9	"u to query rdf data under owl ql entailment without extract owl axiom"	rdfs:member	"rdf data"
s9	"u to query rdf data under owl ql entailment without extract owl axiom"	rdfs:member	"ql entailment"
s9	"u to query rdf data under owl ql entailment without extract owl axiom"	rdfs:member	"u"
s9	"rdf data"	rdfs:subClassOf	"data"
s9	"ql entailment"	rdfs:member	"ql"
s9	"extract owl"	rdfs:member	"extract"
s9	"ql entailment"	rdfs:subClassOf	"entailment"
s9	"extract owl axiom"	rdfs:subClassOf	"axiom"
s9	"owl axiom"	rdfs:subClassOf	"axiom"
s9	"owl axiom"	rdfs:member	"owl"
s9	"rdf data"	rdfs:member	"rdf"
s9	"extract owl axiom"	rdfs:member	"extract owl"
s9	"extract owl"	rdfs:subClassOf	"owl"
s9	"extract owl axiom"	rdfs:subClassOf	"owl axiom"
s9	"owl ql entailment"	rdfs:subClassOf	"ql entailment"
s9	"query under owl ql entailment"	rdfs:member	"query"
s9	"query under owl ql entailment"	rdfs:member	"owl ql entailment"
s9	"query under owl ql entailment without extract owl axiom"	rdfs:member	"query under owl ql entailment"
s9	"query under owl ql entailment without extract owl axiom"	rdfs:member	"extract owl axiom"
s7.2	"schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"
s7.2	"schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:subject	"schemaagnostic query"
s7.2	"schemaagnostic query"	rdfs:subClassOf	"query"
s7.2	"schemaagnostic query"	rdfs:member	"schemaagnostic"
s7.2	"schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:predicate	"rewrite"
s7.2	"schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:object	"arbitrary conjunctive query over owl ql"
s7.2	"arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7.2	"arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7.2	"arbitrary conjunctive query"	rdfs:member	"arbitrary conjunctive"
s7.2	"arbitrary conjunctive"	rdfs:subClassOf	"conjunctive"
s7.2	"arbitrary conjunctive query"	rdfs:subClassOf	"query"
s7.2	"conjunctive query"	rdfs:member	"conjunctive"
s7.2	"owl ql"	rdfs:member	"owl"
s7.2	"owl ql"	rdfs:subClassOf	"ql"
s7.2	"conjunctive query"	rdfs:subClassOf	"query"
s7.2	"arbitrary conjunctive"	rdfs:member	"arbitrary"
s7.2	"arbitrary conjunctive query"	rdfs:subClassOf	"conjunctive query"
s7.2	"arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7.2	"arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7.1	"using additional sparql 11 features we develop a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"
s7.1	"using additional sparql 11 features we develop a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:subject	"we"
s7.1	"using additional sparql 11 features we develop a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:predicate	"develop"
s7.1	"using additional sparql 11 features we develop a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:object	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"
s7.1	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"new method"
s7.1	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7.1	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7.1	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"schemaagnostic query rewrite"
s7.1	"new method"	rdfs:member	"new"
s7.1	"arbitrary conjunctive query"	rdfs:member	"arbitrary conjunctive"
s7.1	"arbitrary conjunctive"	rdfs:subClassOf	"conjunctive"
s7.1	"query rewrite"	rdfs:member	"query"
s7.1	"schemaagnostic query"	rdfs:subClassOf	"query"
s7.1	"arbitrary conjunctive query"	rdfs:subClassOf	"query"
s7.1	"query rewrite"	rdfs:subClassOf	"rewrite"
s7.1	"schemaagnostic query rewrite"	rdfs:subClassOf	"rewrite"
s7.1	"conjunctive query"	rdfs:member	"conjunctive"
s7.1	"new method"	rdfs:subClassOf	"method"
s7.1	"owl ql"	rdfs:member	"owl"
s7.1	"schemaagnostic query"	rdfs:member	"schemaagnostic"
s7.1	"owl ql"	rdfs:subClassOf	"ql"
s7.1	"schemaagnostic query rewrite"	rdfs:member	"schemaagnostic query"
s7.1	"conjunctive query"	rdfs:subClassOf	"query"
s7.1	"arbitrary conjunctive"	rdfs:member	"arbitrary"
s7.1	"arbitrary conjunctive query"	rdfs:subClassOf	"conjunctive query"
s7.1	"new method of schemaagnostic query"	rdfs:member	"new method"
s7.1	"new method of schemaagnostic query"	rdfs:member	"schemaagnostic query"
s7.1	"arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7.1	"arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7.1	"using additional sparql 11 features we develop a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	local:AM-MNR	"use additional sparql 11 feature"
s7.1	"use additional sparql 11 feature"	rdfs:member	"additional sparql"
s7.1	"use additional sparql 11 feature"	rdfs:member	"feature"
s7.1	"additional sparql"	rdfs:subClassOf	"sparql"
s7.1	"additional sparql"	rdfs:member	"additional"
s7.1	"11 feature"	rdfs:subClassOf	"feature"
s7.1	"sparql 11 feature"	rdfs:subClassOf	"11 feature"
s7.1	"additional sparql 11 feature"	rdfs:subClassOf	"sparql 11 feature"
s7	"using additional sparql 11 features we a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"
s7	"using additional sparql 11 features we a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:subject	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"
s7	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"new method"
s7	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7	"new method of schemaagnostic query rewrite where arbitrary conjunctive query over owl ql"	rdfs:member	"schemaagnostic query rewrite"
s7	"new method"	rdfs:member	"new"
s7	"arbitrary conjunctive query"	rdfs:member	"arbitrary conjunctive"
s7	"arbitrary conjunctive"	rdfs:subClassOf	"conjunctive"
s7	"query rewrite"	rdfs:member	"query"
s7	"schemaagnostic query"	rdfs:subClassOf	"query"
s7	"arbitrary conjunctive query"	rdfs:subClassOf	"query"
s7	"query rewrite"	rdfs:subClassOf	"rewrite"
s7	"schemaagnostic query rewrite"	rdfs:subClassOf	"rewrite"
s7	"conjunctive query"	rdfs:member	"conjunctive"
s7	"new method"	rdfs:subClassOf	"method"
s7	"owl ql"	rdfs:member	"owl"
s7	"schemaagnostic query"	rdfs:member	"schemaagnostic"
s7	"owl ql"	rdfs:subClassOf	"ql"
s7	"schemaagnostic query rewrite"	rdfs:member	"schemaagnostic query"
s7	"conjunctive query"	rdfs:subClassOf	"query"
s7	"arbitrary conjunctive"	rdfs:member	"arbitrary"
s7	"arbitrary conjunctive query"	rdfs:subClassOf	"conjunctive query"
s7	"new method of schemaagnostic query"	rdfs:member	"new method"
s7	"new method of schemaagnostic query"	rdfs:member	"schemaagnostic query"
s7	"arbitrary conjunctive query over owl ql"	rdfs:member	"arbitrary conjunctive query"
s7	"arbitrary conjunctive query over owl ql"	rdfs:member	"owl ql"
s7	"using additional sparql 11 features we a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:predicate	"use"
s7	"using additional sparql 11 features we a new method of schemaagnostic query rewriting where arbitrary conjunctive queries over owl ql"	rdf:object	"additional sparql 11 feature"
s7	"additional sparql 11 feature"	rdfs:member	"additional sparql"
s7	"additional sparql 11 feature"	rdfs:member	"feature"
s7	"additional sparql"	rdfs:subClassOf	"sparql"
s7	"additional sparql"	rdfs:member	"additional"
s7	"11 feature"	rdfs:subClassOf	"feature"
s7	"sparql 11 feature"	rdfs:subClassOf	"11 feature"
s7	"additional sparql 11 feature"	rdfs:subClassOf	"sparql 11 feature"
s6.1	"implement a fullfledged owl ql reasoner in a single query"
s6.1	"implement a fullfledged owl ql reasoner in a single query"	rdf:subject	"fullfledged owl ql reasoner"
s6.1	"owl ql reasoner"	rdfs:subClassOf	"reasoner"
s6.1	"owl ql reasoner"	rdfs:member	"owl ql"
s6.1	"owl ql"	rdfs:member	"owl"
s6.1	"owl ql"	rdfs:subClassOf	"ql"
s6.1	"ql reasoner"	rdfs:subClassOf	"reasoner"
s6.1	"ql reasoner"	rdfs:member	"ql"
s6.1	"owl ql reasoner"	rdfs:subClassOf	"ql reasoner"
s6.1	"fullfledged owl ql reasoner"	rdfs:subClassOf	"owl ql reasoner"
s6.1	"implement a fullfledged owl ql reasoner in a single query"	rdf:predicate	"implement"
s6.1	"implement a fullfledged owl ql reasoner in a single query"	local:AM-LOC	"single query"
s6.1	"single query"	rdfs:member	"single"
s6.1	"single query"	rdfs:subClassOf	"query"
s6	"we find that sparql 11"
s6	"we find that sparql 11"	rdf:subject	"we"
s6	"we find that sparql 11"	rdf:predicate	"find"
s6	"we find that sparql 11"	rdf:object	"sparql 11"
s6	"11 sparql"	rdfs:subClassOf	"sparql"
s5	"rdf databases answering much more expressive queries directly"
s5	"rdf databases answering much more expressive queries directly"	rdf:subject	"rdf database"
s5	"rdf database"	rdfs:subClassOf	"database"
s5	"rdf database"	rdfs:member	"rdf"
s5	"rdf databases answering much more expressive queries directly"	rdf:predicate	"answer"
s5	"rdf databases answering much more expressive queries directly"	rdf:object	"much more expressive query"
s5	"much more expressive query"	rdfs:member	"much more expressive"
s5	"more expressive query"	rdfs:subClassOf	"query"
s5	"much more expressive"	rdfs:member	"much more"
s5	"much more expressive query"	rdfs:subClassOf	"query"
s5	"more expressive query"	rdfs:member	"more expressive"
s5	"expressive query"	rdfs:subClassOf	"query"
s5	"much more"	rdfs:member	"much"
s5	"expressive query"	rdfs:member	"expressive"
s5	"much more"	rdfs:subClassOf	"more"
s5	"more expressive"	rdfs:subClassOf	"expressive"
s5	"more expressive"	rdfs:member	"more"
s5	"much more expressive"	rdfs:subClassOf	"expressive"
s5	"rdf databases answering much more expressive queries directly"	local:AM-MNR	"directly"
s3.2	""
s3.2	""	rdf:predicate	"rewrite"
s3.1	"how this can exploited in query rewriting"
s3.1	"how this can exploited in query rewriting"	rdf:subject	"this"
s3.1	"how this can exploited in query rewriting"	rdf:predicate	"exploit"
s3.1	"how this can exploited in query rewriting"	rdf:object	"query rewrite"
s3.1	"query rewrite"	rdfs:subClassOf	"rewrite"
s3.1	"query rewrite"	rdfs:member	"query"
s3.1	"how this can exploited in query rewriting"	local:AM-MOD	"can"
s3	"we ask how this can be exploited in query rewriting"
s3	"we ask how this can be exploited in query rewriting"	rdf:subject	"we"
s3	"we ask how this can be exploited in query rewriting"	rdf:predicate	"ask"
s3	"we ask how this can be exploited in query rewriting"	rdf:object	"exploit in query rewrite"
s3	"exploit in query rewrite"	rdfs:member	"query rewrite"
s3	"exploit in query rewrite"	rdfs:member	"exploit"
s3	"query rewrite"	rdfs:subClassOf	"rewrite"
s3	"query rewrite"	rdfs:member	"query"
s3	"exploit in query"	rdfs:member	"exploit"
s3	"exploit in query"	rdfs:member	"query"
s2.2	"queries answered against the nonschema part of the data"
s2.2	"queries answered against the nonschema part of the data"	rdf:subject	"query"
s2.2	"queries answered against the nonschema part of the data"	rdf:predicate	"answer"
s2.2	"queries answered against the nonschema part of the data"	local:AM-MNR	"nonschema part of the data"
s2.2	"nonschema part of the data"	rdfs:member	"data"
s2.2	"nonschema part of the data"	rdfs:member	"nonschema part"
s2.2	"nonschema part"	rdfs:member	"nonschema"
s2.2	"nonschema part"	rdfs:subClassOf	"part"
s2.2	"nonschema part of data"	rdfs:member	"nonschema part"
s2.2	"nonschema part of data"	rdfs:member	"data"
s2.1	"rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"
s2.1	"rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	rdf:subject	"conjunctive query"
s2.1	"conjunctive query"	rdfs:member	"conjunctive"
s2.1	"conjunctive query"	rdfs:subClassOf	"query"
s2.1	"rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	rdf:predicate	"rewrite"
s2.1	"rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	local:AM-PNC	"equivalent set of query to be answer against the nonschema part of the data"
s2.1	"equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"query"
s2.1	"equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"data"
s2.1	"equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"equivalent set"
s2.1	"equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"nonschema part"
s2.1	"equivalent set"	rdfs:member	"equivalent"
s2.1	"equivalent set"	rdfs:subClassOf	"set"
s2.1	"nonschema part"	rdfs:member	"nonschema"
s2.1	"nonschema part"	rdfs:subClassOf	"part"
s2.1	"equivalent set of query"	rdfs:member	"equivalent set"
s2.1	"equivalent set of query"	rdfs:member	"query"
s2.1	"answer against nonschema part"	rdfs:member	"answer"
s2.1	"answer against nonschema part"	rdfs:member	"nonschema part"
s2.1	"nonschema part of data"	rdfs:member	"nonschema part"
s2.1	"nonschema part of data"	rdfs:member	"data"
s2	"typical implementations use the owl ql schema to rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"
s2	"typical implementations use the owl ql schema to rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	rdf:subject	"typical implementation"
s2	"typical implementation"	rdfs:member	"typical"
s2	"typical implementation"	rdfs:subClassOf	"implementation"
s2	"typical implementations use the owl ql schema to rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	rdf:predicate	"use"
s2	"typical implementations use the owl ql schema to rewrite a conjunctive query into an equivalent set of queries to be answered against the nonschema part of the data"	rdf:object	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"owl ql schema"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"equivalent set"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"query"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"nonschema part"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"data"
s2	"owl ql schema rewrite a conjunctive query into an equivalent set of query to be answer against the nonschema part of the data"	rdfs:member	"conjunctive query"
s2	"equivalent set"	rdfs:member	"equivalent"
s2	"ql schema"	rdfs:member	"ql"
s2	"equivalent set"	rdfs:subClassOf	"set"
s2	"nonschema part"	rdfs:subClassOf	"part"
s2	"owl ql schema"	rdfs:subClassOf	"schema"
s2	"ql schema"	rdfs:subClassOf	"schema"
s2	"owl ql"	rdfs:member	"owl"
s2	"conjunctive query"	rdfs:member	"conjunctive"
s2	"owl ql"	rdfs:subClassOf	"ql"
s2	"nonschema part"	rdfs:member	"nonschema"
s2	"conjunctive query"	rdfs:subClassOf	"query"
s2	"owl ql schema"	rdfs:member	"owl ql"
s2	"owl ql schema"	rdfs:subClassOf	"ql schema"
s2	"rewrite into equivalent set"	rdfs:member	"rewrite"
s2	"rewrite into equivalent set"	rdfs:member	"equivalent set"
s2	"equivalent set of query"	rdfs:member	"equivalent set"
s2	"equivalent set of query"	rdfs:member	"query"
s2	"answer against nonschema part"	rdfs:member	"answer"
s2	"answer against nonschema part"	rdfs:member	"nonschema part"
s2	"nonschema part of data"	rdfs:member	"nonschema part"
s2	"nonschema part of data"	rdfs:member	"data"
s1	"owl 2 provides a dedicated fragment owl ql for this purpose"
s1	"owl 2 provides a dedicated fragment owl ql for this purpose"	rdf:subject	"owl 2"
s1	"2 owl"	rdfs:subClassOf	"owl"
s1	"owl 2 provides a dedicated fragment owl ql for this purpose"	rdf:predicate	"provide"
s1	"owl 2 provides a dedicated fragment owl ql for this purpose"	rdf:object	"dedicate fragment owl ql"
s1	"fragment owl"	rdfs:member	"fragment"
s1	"dedicate fragment owl"	rdfs:subClassOf	"owl"
s1	"dedicate fragment owl ql"	rdfs:member	"dedicate fragment owl"
s1	"fragment owl ql"	rdfs:subClassOf	"ql"
s1	"fragment owl"	rdfs:subClassOf	"owl"
s1	"dedicate fragment owl ql"	rdfs:subClassOf	"ql"
s1	"dedicate fragment owl"	rdfs:member	"dedicate fragment"
s1	"owl ql"	rdfs:member	"owl"
s1	"owl ql"	rdfs:subClassOf	"ql"
s1	"fragment owl ql"	rdfs:member	"fragment owl"
s1	"dedicate fragment"	rdfs:subClassOf	"fragment"
s1	"dedicate fragment"	rdfs:member	"dedicate"
s1	"fragment owl ql"	rdfs:subClassOf	"owl ql"
s1	"owl 2 provides a dedicated fragment owl ql for this purpose"	local:AM-PNC	"purpose"
s0.1	"enrich query results with logical entailments"
s0.1	"enrich query results with logical entailments"	rdf:subject	"query result with logical entailment"
s0.1	"query result with logical entailment"	rdfs:member	"logical entailment"
s0.1	"query result with logical entailment"	rdfs:member	"query result"
s0.1	"logical entailment"	rdfs:member	"logical"
s0.1	"query result"	rdfs:subClassOf	"result"
s0.1	"query result"	rdfs:member	"query"
s0.1	"logical entailment"	rdfs:subClassOf	"entailment"
s0.1	"result with logical entailment"	rdfs:member	"result"
s0.1	"result with logical entailment"	rdfs:member	"logical entailment"
s0.1	"enrich query results with logical entailments"	rdf:predicate	"enrich"
s0	"sparql 11 supports the use of ontologies to enrich query results with logical entailments"
s0	"sparql 11 supports the use of ontologies to enrich query results with logical entailments"	rdf:subject	"sparql 11"
s0	"11 sparql"	rdfs:subClassOf	"sparql"
s0	"sparql 11 supports the use of ontologies to enrich query results with logical entailments"	rdf:predicate	"support"
s0	"sparql 11 supports the use of ontologies to enrich query results with logical entailments"	rdf:object	"use of ontology"
s0	"use of ontology"	rdfs:member	"ontology"
s0	"use of ontology"	rdfs:member	"use"
s0	"use of ontology"	rdfs:member	"use"
s0	"use of ontology"	rdfs:member	"ontology"
s0	"sparql 11 supports the use of ontologies to enrich query results with logical entailments"	local:AM-PNC	"enrich query result with logical entailment"
s0	"enrich query result with logical entailment"	rdfs:member	"logical entailment"
s0	"enrich query result with logical entailment"	rdfs:member	"enrich query result"
s0	"query result"	rdfs:member	"query"
s0	"enrich query"	rdfs:subClassOf	"query"
s0	"logical entailment"	rdfs:member	"logical"
s0	"enrich query result"	rdfs:subClassOf	"result"
s0	"query result"	rdfs:subClassOf	"result"
s0	"enrich query"	rdfs:member	"enrich"
s0	"enrich query result"	rdfs:member	"enrich query"
s0	"logical entailment"	rdfs:subClassOf	"entailment"
s0	"result with logical entailment"	rdfs:member	"result"
s0	"result with logical entailment"	rdfs:member	"logical entailment"
