@PREFIX	cso:	<https://cso.kmi.open.ac.uk/topics/>	
@LINK	find	no_match	not_found	find	
@LINK	be exploit	no_match	not_found	be exploit	
@LINK	query	no_match	not_found	query	
@LINK	implement	no_match	not_found	implement	
@LINK	preprocessing	no_match	not_found	preprocessing	
@LINK	ask	no_match	not_found	ask	
@LINK	be answer	no_match	not_found	be answer	
@LINK	enrich	no_match	not_found	enrich	
@LINK	be	no_match	not_found	be	
@LINK	rewrite	no_match	not_found	rewrite	
@LINK	be rewrite	no_match	not_found	be rewrite	
@LINK	develop	no_match	not_found	develop	
@LINK	standard	no_match	not_found	standard	
@LINK	query result	sameas	cso:query_results	query result	
@LINK	ql entailment	no_match	not_found	ql entailment	
@LINK	allow u	no_match	not_found	allow u	
@LINK	owl ql schema	no_match	not_found	owl ql schema	
@LINK	much more expressive query	no_match	not_found	much more expressive query	
@LINK	equivalent set	no_match	not_found	equivalent set	
@LINK	purpose typical implementation	no_match	not_found	purpose typical implementation	
@LINK	nonschema part	no_match	not_found	nonschema part	
@LINK	data	no_match	not_found	data	
@LINK	schemaagnostic query rewrite	no_match	not_found	schemaagnostic query rewrite	
@LINK	however rdf database	no_match	not_found	however rdf database	
@LINK	owl axiom	no_match	not_found	owl axiom	
@LINK	adoption	no_match	not_found	adoption	
@LINK	single query use	no_match	not_found	single query use	
@LINK	arbitrary conjunctive query	no_match	not_found	arbitrary conjunctive query	
@LINK	way	no_match	not_found	way	
@LINK	conjunctive query	no_match	not_found	conjunctive query	
@LINK	query rewrite	no_match	not_found	query rewrite	
@LINK	support	no_match	not_found	support	
@LINK	sparql	sameas	cso:sparql	sparql	
@LINK	rdf data	sameas	cso:rdf_data	rdf data	
@LINK	query	no_match	not_found	query	
@LINK	recent sparql	no_match	not_found	recent sparql	
@LINK	feature	no_match	not_found	feature	
@LINK	answer	no_match	not_found	answer	
@LINK	ontology	sameas	cso:ontology	ontology	
@LINK	fullfledged owl ql reasoner	no_match	not_found	fullfledged owl ql reasoner	
@LINK	new method	no_match	not_found	new method	
@LINK	owl	sameas	cso:owl	owl	
@LINK	extract owl axiom	no_match	not_found	extract owl axiom	
@LINK	use	no_match	not_found	use	
@LINK	actual schema	no_match	not_found	actual schema	
@LINK	additional sparql	no_match	not_found	additional sparql	
@LINK	logical entailment owl	no_match	not_found	logical entailment owl	
@LINK	dedicate fragment owl ql	no_match	not_found	dedicate fragment owl ql	
@LINK	equivalent sparql	no_match	not_found	equivalent sparql	
@LINK	rdf	sameas	cso:rdf	rdf	
@LINK	database	sameas	cso:database	database	
@LINK	reasoner	sameas	cso:reasoner	reasoner	
