s18.1	"discovering almost keys"
s18.1	"discovering almost keys"	rdf:subject	"almost key"
s18.1	"almost key"	rdfs:member	"almost"
s18.1	"almost key"	rdfs:subClassOf	"key"
s18.1	"discovering almost keys"	rdf:predicate	"discover"
s18	"the results show both the relevance of the efficiency of discovering almost keys"
s18	"the results show both the relevance of the efficiency of discovering almost keys"	rdf:subject	"result"
s18	"the results show both the relevance of the efficiency of discovering almost keys"	rdf:predicate	"show"
s18	"the results show both the relevance of the efficiency of discovering almost keys"	rdf:object	"relevance of the efficiency of discover almost key"
s18	"relevance of the efficiency of discover almost key"	rdfs:member	"relevance"
s18	"relevance of the efficiency of discover almost key"	rdfs:member	"discover"
s18	"relevance of the efficiency of discover almost key"	rdfs:member	"efficiency"
s18	"almost key"	rdfs:subClassOf	"key"
s18	"relevance of efficiency"	rdfs:member	"relevance"
s18	"relevance of efficiency"	rdfs:member	"efficiency"
s17	"the results show both the relevance of almost keys"
s17	"the results show both the relevance of almost keys"	rdf:subject	"result"
s17	"the results show both the relevance of almost keys"	rdf:predicate	"show"
s17	"the results show both the relevance of almost keys"	rdf:object	"relevance of almost key"
s17	"almost key"	rdfs:subClassOf	"key"
s17	"relevance of almost key"	rdfs:member	"relevance"
s17	"relevance of almost key"	rdfs:member	"almost key"
s16	"our approach evaluated on real datasets"
s16	"our approach evaluated on real datasets"	rdf:subject	"approach"
s16	"our approach evaluated on real datasets"	rdf:predicate	"evaluate"
s16	"our approach evaluated on real datasets"	rdf:object	"real datasets"
s16	"real datasets"	rdfs:member	"real"
s16	"real datasets"	rdfs:subClassOf	"datasets"
s15	"our approach evaluated on different synthetic"
s15	"our approach evaluated on different synthetic"	rdf:subject	"approach"
s15	"our approach evaluated on different synthetic"	rdf:predicate	"evaluate"
s15	"our approach evaluated on different synthetic"	local:AM-MNR	"different synthetic"
s14.1	"we can discover keys in datasets ie almost keys"
s14.1	"we can discover keys in datasets ie almost keys"	rdf:subject	"we"
s14.1	"we can discover keys in datasets ie almost keys"	rdf:predicate	"discover"
s14.1	"we can discover keys in datasets ie almost keys"	rdf:object	"key"
s14.1	"we can discover keys in datasets ie almost keys"	local:AM-LOC	"datasets ie almost key"
s14.1	"almost key"	rdfs:subClassOf	"key"
s14.1	"we can discover keys in datasets ie almost keys"	local:AM-MOD	"can"
s14	"we approach can discover keys in datasets ie almost keys"
s14	"we approach can discover keys in datasets ie almost keys"	rdf:subject	"we"
s14	"we approach can discover keys in datasets ie almost keys"	rdf:predicate	"approach"
s14	"we approach can discover keys in datasets ie almost keys"	rdf:object	"discover key in datasets ie almost key"
s14	"discover key in datasets ie almost key"	rdfs:member	"datasets"
s14	"discover key in datasets ie almost key"	rdfs:member	"discover key"
s14	"discover key"	rdfs:member	"discover"
s14	"discover key"	rdfs:subClassOf	"key"
s14	"almost key"	rdfs:subClassOf	"key"
s14	"key in datasets"	rdfs:member	"key"
s14	"key in datasets"	rdfs:member	"datasets"
s13	"datasets where erroneous data or duplicates"
s13	"datasets where erroneous data or duplicates"	rdf:predicate	"exist"
s13	"datasets where erroneous data or duplicates"	local:AM-LOC	"datasets where erroneous data or duplicate"
s13	"datasets where erroneous data or duplicate"	rdfs:member	"datasets"
s13	"datasets where erroneous data or duplicate"	rdfs:member	"erroneous data"
s13	"datasets where erroneous data or duplicate"	rdfs:member	"duplicate"
s13	"erroneous data"	rdfs:member	"erroneous"
s13	"erroneous data"	rdfs:subClassOf	"data"
s12	"the data that dynamically detected during the process"
s12	"the data that dynamically detected during the process"	rdf:subject	"data"
s12	"the data that dynamically detected during the process"	rdf:predicate	"detect"
s12	"the data that dynamically detected during the process"	local:AM-MNR	"dynamically"
s12	"the data that dynamically detected during the process"	local:AM-TMP	"process"
s11.1	"to prune the search space exploits characteristics of the data"
s11.1	"to prune the search space exploits characteristics of the data"	rdf:subject	"prune the search space"
s11.1	"search space"	rdfs:subClassOf	"space"
s11.1	"search space"	rdfs:member	"search"
s11.1	"to prune the search space exploits characteristics of the data"	rdf:predicate	"exploit"
s11.1	"to prune the search space exploits characteristics of the data"	rdf:object	"characteristic of the data"
s11.1	"characteristic of the data"	rdfs:member	"data"
s11.1	"characteristic of the data"	rdfs:member	"characteristic"
s11.1	"characteristic of data"	rdfs:member	"characteristic"
s11.1	"characteristic of data"	rdfs:member	"data"
s11	"prune the search space"
s11	"prune the search space"	rdf:subject	"search space"
s11	"search space"	rdfs:subClassOf	"space"
s11	"search space"	rdfs:member	"search"
s11	"prune the search space"	rdf:predicate	"prune"
s10	"we present sakey"
s10	"we present sakey"	rdf:subject	"we"
s10	"we present sakey"	rdf:predicate	"present"
s10	"we present sakey"	rdf:object	"sakey"
s9	"an approach that discovers keys in rdf data in an efficient way"
s9	"an approach that discovers keys in rdf data in an efficient way"	rdf:subject	"approach"
s9	"an approach that discovers keys in rdf data in an efficient way"	rdf:predicate	"discover"
s9	"an approach that discovers keys in rdf data in an efficient way"	rdf:object	"key in rdf data"
s9	"key in rdf data"	rdfs:member	"key"
s9	"key in rdf data"	rdfs:member	"rdf data"
s9	"rdf data"	rdfs:subClassOf	"data"
s9	"rdf data"	rdfs:member	"rdf"
s9	"key in rdf data"	rdfs:member	"key"
s9	"key in rdf data"	rdfs:member	"rdf data"
s9	"an approach that discovers keys in rdf data in an efficient way"	local:AM-LOC	"efficient way"
s9	"efficient way"	rdfs:member	"efficient"
s9	"efficient way"	rdfs:subClassOf	"way"
s8	"we present an approach"
s8	"we present an approach"	rdf:subject	"we"
s8	"we present an approach"	rdf:predicate	"present"
s8	"we present an approach"	rdf:object	"approach"
s7	"the approaches can easily overwhelmed by the size of the data"
s7	"the approaches can easily overwhelmed by the size of the data"	rdf:subject	"size of the data"
s7	"size of the data"	rdfs:member	"data"
s7	"size of the data"	rdfs:member	"size"
s7	"size of data"	rdfs:member	"size"
s7	"size of data"	rdfs:member	"data"
s7	"the approaches can easily overwhelmed by the size of the data"	rdf:predicate	"overwhelm"
s7	"the approaches can easily overwhelmed by the size of the data"	rdf:object	"approach"
s7	"the approaches can easily overwhelmed by the size of the data"	local:AM-MNR	"easily"
s7	"the approaches can easily overwhelmed by the size of the data"	local:AM-MOD	"can"
s6.1	"the approaches that automatically discover keys"
s6.1	"the approaches that automatically discover keys"	rdf:subject	"approach"
s6.1	"the approaches that automatically discover keys"	rdf:predicate	"discover"
s6.1	"the approaches that automatically discover keys"	rdf:object	"key"
s6.1	"the approaches that automatically discover keys"	local:AM-MNR	"automatically"
s6	"the approaches that attempt to automatically discover keys"
s6	"the approaches that attempt to automatically discover keys"	rdf:subject	"approach"
s6	"the approaches that attempt to automatically discover keys"	rdf:predicate	"attempt"
s6	"the approaches that attempt to automatically discover keys"	rdf:object	"automatically discover key"
s6	"automatically discover"	rdfs:subClassOf	"discover"
s5	"the approaches can easily require clean data"
s5	"the approaches can easily require clean data"	rdf:subject	"approach"
s5	"the approaches can easily require clean data"	rdf:predicate	"require"
s5	"the approaches can easily require clean data"	rdf:object	"clean data"
s5	"clean data"	rdfs:subClassOf	"data"
s5	"clean data"	rdfs:member	"clean"
s5	"the approaches can easily require clean data"	local:AM-MNR	"easily"
s5	"the approaches can easily require clean data"	local:AM-MOD	"can"
s3	"a set of properties considered as a key"
s3	"a set of properties considered as a key"	rdf:subject	"set of property"
s3	"set of property"	rdfs:member	"property"
s3	"set of property"	rdfs:member	"set"
s3	"set of property"	rdfs:member	"set"
s3	"set of property"	rdfs:member	"property"
s3	"a set of properties considered as a key"	rdf:predicate	"consider"
s3	"a set of properties considered as a key"	rdf:object	"key"
s2	"a key when a set of properties values uniquely identify resources"
s2	"a key when a set of properties values uniquely identify resources"	rdf:subject	"key when a set of property value"
s2	"key when a set of property value"	rdfs:member	"key"
s2	"key when a set of property value"	rdfs:member	"property value"
s2	"key when a set of property value"	rdfs:member	"set"
s2	"property value"	rdfs:subClassOf	"value"
s2	"property value"	rdfs:member	"property"
s2	"set of property value"	rdfs:member	"set"
s2	"set of property value"	rdfs:member	"property value"
s2	"a key when a set of properties values uniquely identify resources"	rdf:predicate	"identify"
s2	"a key when a set of properties values uniquely identify resources"	rdf:object	"resource"
s2	"a key when a set of properties values uniquely identify resources"	local:AM-MNR	"uniquely"
s1	"discover these identity links"
s1	"discover these identity links"	rdf:subject	"identity link"
s1	"identity link"	rdfs:member	"identity"
s1	"identity link"	rdfs:subClassOf	"link"
s1	"discover these identity links"	rdf:predicate	"discover"
s0.2	"applications efficiently integrate data"
s0.2	"applications efficiently integrate data"	rdf:subject	"application"
s0.2	"applications efficiently integrate data"	rdf:predicate	"integrate"
s0.2	"applications efficiently integrate data"	rdf:object	"data"
s0.2	"applications efficiently integrate data"	local:AM-MNR	"efficiently"
s0.1	"exploiting identity links among rdf resources allows applications to efficiently integrate data"
s0.1	"exploiting identity links among rdf resources allows applications to efficiently integrate data"	rdf:subject	"exploit identity link among rdf resource"
s0.1	"exploit identity link among rdf resource"	rdfs:member	"rdf resource"
s0.1	"exploit identity link among rdf resource"	rdfs:member	"exploit identity"
s0.1	"exploit identity"	rdfs:subClassOf	"identity"
s0.1	"exploit identity"	rdfs:member	"exploit"
s0.1	"rdf resource"	rdfs:member	"rdf"
s0.1	"rdf resource"	rdfs:subClassOf	"resource"
s0.1	"identity link"	rdfs:subClassOf	"link"
s0.1	"identity link among rdf resource"	rdfs:member	"identity link"
s0.1	"identity link among rdf resource"	rdfs:member	"rdf resource"
s0.1	"exploiting identity links among rdf resources allows applications to efficiently integrate data"	rdf:predicate	"allow"
s0.1	"exploiting identity links among rdf resources allows applications to efficiently integrate data"	rdf:object	"application to efficiently integrate data"
s0.1	"application to efficiently integrate data"	rdfs:member	"application"
s0.1	"application to efficiently integrate data"	rdfs:member	"data"
s0.1	"efficiently integrate"	rdfs:subClassOf	"integrate"
s0	"exploiting identity links among rdf resources"
s0	"exploiting identity links among rdf resources"	rdf:subject	"identity link among rdf resource"
s0	"identity link among rdf resource"	rdfs:member	"rdf resource"
s0	"identity link among rdf resource"	rdfs:member	"identity link"
s0	"rdf resource"	rdfs:member	"rdf"
s0	"identity link"	rdfs:member	"identity"
s0	"rdf resource"	rdfs:subClassOf	"resource"
s0	"identity link"	rdfs:subClassOf	"link"
s0	"identity link among rdf resource"	rdfs:member	"identity link"
s0	"identity link among rdf resource"	rdfs:member	"rdf resource"
s0	"exploiting identity links among rdf resources"	rdf:predicate	"exploit"
