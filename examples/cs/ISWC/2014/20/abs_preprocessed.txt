linked open data faces severe issues of scalability quality
linked open data faces severe issues of data quality
linked open data faces severe issues of availability quality
severe issues of scalability are observed by data consumers sparql endpoints results can be outofdate
severe issues of availability are observed by data consumers sparql endpoints do not respond can be outofdate
severe issues of scalability are observed by data consumers sparql endpoints do not respond can be outofdate
severe issues of data are observed by data consumers sparql endpoints results can be wrong
severe issues of scalability are observed by data consumers sparql endpoints results can be wrong
severe issues of availability are observed by data consumers sparql endpoints results can be outofdate
severe issues of data are observed by data consumers sparql endpoints do not respond can be wrong
severe issues of availability are observed by data consumers sparql endpoints results can be wrong
severe issues of data are observed by data consumers sparql endpoints do not respond can be outofdate
data consumers performing federated queries
severe issues of availability are observed by data consumers sparql endpoints do not respond can be wrong
severe issues of data are observed by data consumers sparql endpoints results can be outofdate
severe issues of scalability are observed by data consumers sparql endpoints do not respond can be wrong
if a data consumer finds an error how can a data consumer fix a data consumer
this paper raises the issue of the writability of linked data
in this paper we devise an extension of the federation of linked data to data consumers
a data consumer can make partial copies of different datasets
a data consumer can make a data consumer available through a sparql endpoint
a data consumer can update a data consumer share updates with data providers
a data consumer can update a data consumer local copy with consumers
a data consumer can update a data consumer share updates with consumers
a data consumer can update a data consumer local copy with data providers
update improves general data replicated data creates opportunities for federated query engines to improve availability
update sharing
update improves general data quality
however when updates occur in an uncontrolled way consistency issues arise
in this paper we define these fragments as sparql construct federated queries
in this paper we define these fragments as sparql construct propose a correction criterion to maintain these fragments incrementally without reevaluating the query
we define a coordination free protocol based on the counting of triples derivations
we define a coordination free protocol based on the counting of provenance
we analyze the theoretical complexity of the protocol in space
we analyze the theoretical complexity of the protocol in time
we analyze the theoretical complexity of the protocol in traffic
experimental results suggest the scalability of we approach to linked data