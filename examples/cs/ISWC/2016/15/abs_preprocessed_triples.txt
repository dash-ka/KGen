s18.5	"we can result freshness by 93"
s18.5	"we can result freshness by 93"	rdf:subject	"freshness"
s18.5	"we can result freshness by 93"	rdf:predicate	"result"
s18.5	"we can result freshness by 93"	rdf:object	"we"
s18.5	"we can result freshness by 93"	local:AM-MNR	"93"
s18.5	"we can result freshness by 93"	local:AM-MOD	"can"
s18.4	"we can improve result freshness by 93"
s18.4	"we can improve result freshness by 93"	rdf:subject	"93"
s18.4	"we can improve result freshness by 93"	rdf:predicate	"improve"
s18.4	"we can improve result freshness by 93"	rdf:object	"result freshness"
s18.4	"result freshness"	rdfs:subClassOf	"freshness"
s18.4	"result freshness"	rdfs:member	"result"
s18.4	"we can improve result freshness by 93"	local:AM-MOD	"can"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"	rdf:subject	"we"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"	rdf:predicate	"show"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"	rdf:object	"improve result freshness by 93"
s18.3	"result freshness"	rdfs:subClassOf	"freshness"
s18.3	"result freshness"	rdfs:member	"result"
s18.3	"improve by 93"	rdfs:member	"improve"
s18.3	"improve by 93"	rdfs:member	"93"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"	local:AM-MNR	"extend an exist stream processor with the propose policy"
s18.3	"extend an exist stream processor with the propose policy"	rdfs:member	"exist stream processor"
s18.3	"extend an exist stream processor with the propose policy"	rdfs:member	"propose policy"
s18.3	"exist stream processor"	rdfs:member	"exist stream"
s18.3	"stream processor"	rdfs:member	"stream"
s18.3	"exist stream"	rdfs:member	"exist"
s18.3	"propose policy"	rdfs:member	"propose"
s18.3	"exist stream processor"	rdfs:subClassOf	"processor"
s18.3	"propose policy"	rdfs:subClassOf	"policy"
s18.3	"exist stream"	rdfs:subClassOf	"stream"
s18.3	"stream processor"	rdfs:subClassOf	"processor"
s18.3	"exist stream processor"	rdfs:subClassOf	"stream processor"
s18.3	"extend with propose policy"	rdfs:member	"extend"
s18.3	"extend with propose policy"	rdfs:member	"propose policy"
s18.3	"by extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness by 93"	local:AM-MNR	"empirically"
s18.2	"proposed policies"
s18.2	"proposed policies"	rdf:subject	"policy"
s18.2	"proposed policies"	rdf:predicate	"propose"
s18.1	"existing stream processor"
s18.1	"existing stream processor"	rdf:subject	"stream processor"
s18.1	"stream processor"	rdfs:member	"stream"
s18.1	"stream processor"	rdfs:subClassOf	"processor"
s18.1	"existing stream processor"	rdf:predicate	"exist"
s18	"extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness"
s18	"extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness"	rdf:subject	"propose policy we empirically show that we can improve result freshness"
s18	"propose policy we empirically show that we can improve result freshness"	rdfs:member	"result freshness"
s18	"propose policy we empirically show that we can improve result freshness"	rdfs:member	"propose policy"
s18	"propose policy"	rdfs:member	"propose"
s18	"propose policy"	rdfs:subClassOf	"policy"
s18	"result freshness"	rdfs:subClassOf	"freshness"
s18	"result freshness"	rdfs:member	"result"
s18	"can improve"	rdfs:subClassOf	"improve"
s18	"empirically show"	rdfs:subClassOf	"show"
s18	"extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness"	rdf:predicate	"extend"
s18	"extending an existing stream processor with the proposed policies we empirically show that we can improve result freshness"	rdf:object	"exist stream processor"
s18	"exist stream processor"	rdfs:member	"exist stream"
s18	"stream processor"	rdfs:member	"stream"
s18	"exist stream"	rdfs:member	"exist"
s18	"exist stream processor"	rdfs:subClassOf	"processor"
s18	"exist stream"	rdfs:subClassOf	"stream"
s18	"stream processor"	rdfs:subClassOf	"processor"
s17.3	"some updates provide fresher answers in future"
s17.3	"some updates provide fresher answers in future"	rdf:subject	"update"
s17.3	"some updates provide fresher answers in future"	rdf:predicate	"provide"
s17.3	"some updates provide fresher answers in future"	rdf:object	"fresher answer"
s17.3	"fresher answer"	rdfs:member	"fresher"
s17.3	"fresher answer"	rdfs:subClassOf	"answer"
s17.3	"some updates provide fresher answers in future"	local:AM-TMP	"future"
s17.2	"we delay some updates to provide fresher answers in future"
s17.2	"we delay some updates to provide fresher answers in future"	rdf:subject	"we"
s17.2	"we delay some updates to provide fresher answers in future"	rdf:predicate	"delay"
s17.2	"we delay some updates to provide fresher answers in future"	rdf:object	"update to provide fresher answer in future"
s17.2	"update to provide fresher answer in future"	rdfs:member	"fresher answer"
s17.2	"update to provide fresher answer in future"	rdfs:member	"update"
s17.2	"fresher answer"	rdfs:member	"fresher"
s17.2	"fresher answer"	rdfs:subClassOf	"answer"
s17.2	"fresher answer in future"	rdfs:member	"fresher answer"
s17.2	"fresher answer in future"	rdfs:member	"future"
s17.1	"proposing to delay some updates to provide fresher answers in future"
s17.1	"proposing to delay some updates to provide fresher answers in future"	rdf:subject	"delay some update to provide fresher answer in future"
s17.1	"fresher answer"	rdfs:member	"fresher"
s17.1	"fresher answer"	rdfs:subClassOf	"answer"
s17.1	"fresher answer in future"	rdfs:member	"fresher answer"
s17.1	"fresher answer in future"	rdfs:member	"future"
s17.1	"proposing to delay some updates to provide fresher answers in future"	rdf:predicate	"propose"
s17	"second we consider the future impact of a query to the original some background data by proposing to delay some updates to provide fresher answers in future"
s17	"second we consider the future impact of a query to the original some background data by proposing to delay some updates to provide fresher answers in future"	rdf:subject	"we"
s17	"second we consider the future impact of a query to the original some background data by proposing to delay some updates to provide fresher answers in future"	rdf:predicate	"consider"
s17	"second we consider the future impact of a query to the original some background data by proposing to delay some updates to provide fresher answers in future"	rdf:object	"future impact of a query to the original some background data propose to delay some update to provide fresher answer in future"
s17	"future impact of a query to the original some background data propose to delay some update to provide fresher answer in future"	rdfs:member	"future impact"
s17	"future impact of a query to the original some background data propose to delay some update to provide fresher answer in future"	rdfs:member	"query"
s17	"future impact of a query to the original some background data propose to delay some update to provide fresher answer in future"	rdfs:member	"fresher answer"
s17	"future impact of a query to the original some background data propose to delay some update to provide fresher answer in future"	rdfs:member	"background data"
s17	"fresher answer"	rdfs:member	"fresher"
s17	"background data"	rdfs:subClassOf	"data"
s17	"background data"	rdfs:member	"background"
s17	"future impact"	rdfs:subClassOf	"impact"
s17	"fresher answer"	rdfs:subClassOf	"answer"
s17	"future impact"	rdfs:member	"future"
s17	"original background data"	rdfs:subClassOf	"background data"
s17	"future impact of query"	rdfs:member	"future impact"
s17	"future impact of query"	rdfs:member	"query"
s17	"future impact of query to original background data"	rdfs:member	"future impact of query"
s17	"future impact of query to original background data"	rdfs:member	"original background data"
s17	"fresher answer in future"	rdfs:member	"fresher answer"
s17	"fresher answer in future"	rdfs:member	"future"
s17	"second we consider the future impact of a query to the original some background data by proposing to delay some updates to provide fresher answers in future"	local:AM-DIS	"second"
s16.2	"focus on updates"
s16.2	"focus on updates"	rdf:predicate	"focus"
s16.2	"focus on updates"	rdf:object	"update"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:subject	"we"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:predicate	"consider"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:object	"continuous join"
s16.1	"continuous join"	rdfs:subClassOf	"join"
s16.1	"continuous join"	rdfs:member	"continuous"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"	local:AM-TMP	"first"
s16.1	"first we consider a continuous join between recent portions of a data stream to focus on updates"	local:AM-TMP	"recent portion of a data stream to focus on update"
s16.1	"recent portion of a data stream to focus on update"	rdfs:member	"data stream"
s16.1	"recent portion of a data stream to focus on update"	rdfs:member	"update"
s16.1	"recent portion of a data stream to focus on update"	rdfs:member	"recent portion"
s16.1	"data stream"	rdfs:subClassOf	"stream"
s16.1	"recent portion"	rdfs:member	"recent"
s16.1	"recent portion"	rdfs:subClassOf	"portion"
s16.1	"data stream"	rdfs:member	"data"
s16.1	"on focus"	rdfs:subClassOf	"focus"
s16.1	"recent portion of data stream"	rdfs:member	"recent portion"
s16.1	"recent portion of data stream"	rdfs:member	"data stream"
s16	"we also introduce two extensions to this method first we consider a continuous join between recent portions of a data stream to focus on updates"
s16	"we also introduce two extensions to this method first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:subject	"we"
s16	"we also introduce two extensions to this method first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:predicate	"introduce"
s16	"we also introduce two extensions to this method first we consider a continuous join between recent portions of a data stream to focus on updates"	rdf:object	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"
s16	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"	rdfs:member	"continuous join"
s16	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"	rdfs:member	"extension method"
s16	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"	rdfs:member	"update"
s16	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"	rdfs:member	"recent portion"
s16	"two extension method first we consider a continuous join between recent portion of a data stream to focus on update"	rdfs:member	"data stream"
s16	"extension method"	rdfs:subClassOf	"method"
s16	"recent portion"	rdfs:member	"recent"
s16	"extension method"	rdfs:member	"extension"
s16	"data stream"	rdfs:subClassOf	"stream"
s16	"recent portion"	rdfs:subClassOf	"portion"
s16	"data stream"	rdfs:member	"data"
s16	"continuous join"	rdfs:subClassOf	"join"
s16	"continuous join"	rdfs:member	"continuous"
s16	"first consider"	rdfs:subClassOf	"consider"
s16	"two extension method"	rdfs:subClassOf	"extension method"
s16	"continuous join between recent portion"	rdfs:member	"continuous join"
s16	"continuous join between recent portion"	rdfs:member	"recent portion"
s16	"recent portion of data stream"	rdfs:member	"recent portion"
s16	"recent portion of data stream"	rdfs:member	"data stream"
s16	"we also introduce two extensions to this method first we consider a continuous join between recent portions of a data stream to focus on updates"	local:AM-DIS	"also"
s15.2	"focus on updates"
s15.2	"focus on updates"	rdf:predicate	"focus"
s15.2	"focus on updates"	rdf:object	"update"
s15.1	"first we consider a continuous join between some some background data to focus on updates"
s15.1	"first we consider a continuous join between some some background data to focus on updates"	rdf:subject	"we"
s15.1	"first we consider a continuous join between some some background data to focus on updates"	rdf:predicate	"consider"
s15.1	"first we consider a continuous join between some some background data to focus on updates"	rdf:object	"continuous join between some some background data"
s15.1	"continuous join between some some background data"	rdfs:member	"continuous join"
s15.1	"continuous join between some some background data"	rdfs:member	"background data"
s15.1	"background data"	rdfs:subClassOf	"data"
s15.1	"background data"	rdfs:member	"background"
s15.1	"continuous join"	rdfs:subClassOf	"join"
s15.1	"continuous join"	rdfs:member	"continuous"
s15.1	"continuous join between background data"	rdfs:member	"continuous join"
s15.1	"continuous join between background data"	rdfs:member	"background data"
s15.1	"first we consider a continuous join between some some background data to focus on updates"	local:AM-PNC	"focus on update"
s15.1	"focus on update"	rdfs:member	"focus"
s15.1	"focus on update"	rdfs:member	"update"
s15.1	"focus on"	rdfs:member	"focus"
s15.1	"focus on"	rdfs:member	"on"
s15.1	"first we consider a continuous join between some some background data to focus on updates"	local:AM-TMP	"first"
s15	"we also introduce two extensions to this method first we consider a continuous join between some some background data to focus on updates"
s15	"we also introduce two extensions to this method first we consider a continuous join between some some background data to focus on updates"	rdf:subject	"we"
s15	"we also introduce two extensions to this method first we consider a continuous join between some some background data to focus on updates"	rdf:predicate	"introduce"
s15	"we also introduce two extensions to this method first we consider a continuous join between some some background data to focus on updates"	rdf:object	"two extension method first we consider a continuous join between some some background data to focus on update"
s15	"two extension method first we consider a continuous join between some some background data to focus on update"	rdfs:member	"update"
s15	"two extension method first we consider a continuous join between some some background data to focus on update"	rdfs:member	"extension method"
s15	"two extension method first we consider a continuous join between some some background data to focus on update"	rdfs:member	"continuous join"
s15	"two extension method first we consider a continuous join between some some background data to focus on update"	rdfs:member	"background data"
s15	"extension method"	rdfs:subClassOf	"method"
s15	"extension method"	rdfs:member	"extension"
s15	"background data"	rdfs:subClassOf	"data"
s15	"continuous join"	rdfs:subClassOf	"join"
s15	"background data"	rdfs:member	"background"
s15	"continuous join"	rdfs:member	"continuous"
s15	"first consider"	rdfs:subClassOf	"consider"
s15	"two extension method"	rdfs:subClassOf	"extension method"
s15	"continuous join between background data"	rdfs:member	"continuous join"
s15	"continuous join between background data"	rdfs:member	"background data"
s15	"we also introduce two extensions to this method first we consider a continuous join between some some background data to focus on updates"	local:AM-DIS	"also"
s14	"updates that have the longest effect"
s14	"updates that have the longest effect"	rdf:subject	"update"
s14	"updates that have the longest effect"	rdf:predicate	"have"
s14	"updates that have the longest effect"	rdf:object	"longest effect"
s14	"longest effect"	rdfs:subClassOf	"effect"
s14	"longest effect"	rdfs:member	"longest"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"	rdf:subject	"we"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"	rdf:predicate	"keep"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"	rdf:object	"quality of result good enough"
s13.1	"quality of result good enough"	rdfs:member	"result"
s13.1	"quality of result good enough"	rdfs:member	"quality"
s13.1	"enough good"	rdfs:subClassOf	"good"
s13.1	"quality of result"	rdfs:member	"quality"
s13.1	"quality of result"	rdfs:member	"result"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"	local:AM-MNR	"exploit the graph structure"
s13.1	"graph structure"	rdfs:subClassOf	"structure"
s13.1	"graph structure"	rdfs:member	"graph"
s13.1	"by exploiting the graph structure we keep the quality of results good enough without refreshing the entire cache for each evaluation"	local:AM-MNR	"without refresh the entire cache for each evaluation"
s13.1	"without refresh the entire cache for each evaluation"	rdfs:member	"evaluation"
s13.1	"without refresh the entire cache for each evaluation"	rdfs:member	"entire cache"
s13.1	"entire cache"	rdfs:subClassOf	"cache"
s13.1	"entire cache"	rdfs:member	"entire"
s13.1	"entire cache for evaluation"	rdfs:member	"entire cache"
s13.1	"entire cache for evaluation"	rdfs:member	"evaluation"
s13	"exploiting the graph structure we"
s13	"exploiting the graph structure we"	rdf:subject	"we"
s13	"exploiting the graph structure we"	rdf:predicate	"exploit"
s13	"exploiting the graph structure we"	rdf:object	"graph structure"
s13	"graph structure"	rdfs:subClassOf	"structure"
s13	"graph structure"	rdfs:member	"graph"
s12.1	"this paper model the join between streams as a bipartite graph"
s12.1	"this paper model the join between streams as a bipartite graph"	rdf:subject	"paper"
s12.1	"this paper model the join between streams as a bipartite graph"	rdf:predicate	"model"
s12.1	"this paper model the join between streams as a bipartite graph"	rdf:object	"join between stream a a bipartite graph"
s12.1	"join between stream a a bipartite graph"	rdfs:member	"bipartite graph"
s12.1	"join between stream a a bipartite graph"	rdfs:member	"stream"
s12.1	"join between stream a a bipartite graph"	rdfs:member	"join"
s12.1	"bipartite graph"	rdfs:subClassOf	"graph"
s12.1	"bipartite graph"	rdfs:member	"bipartite"
s12.1	"join between stream"	rdfs:member	"join"
s12.1	"join between stream"	rdfs:member	"stream"
s12	"this paper proposes to model the join between streams as a bipartite graph"
s12	"this paper proposes to model the join between streams as a bipartite graph"	rdf:subject	"paper"
s12	"this paper proposes to model the join between streams as a bipartite graph"	rdf:predicate	"propose"
s12	"this paper proposes to model the join between streams as a bipartite graph"	rdf:object	"model the join between stream a a bipartite graph"
s12	"model the join between stream a a bipartite graph"	rdfs:member	"bipartite graph"
s12	"model the join between stream a a bipartite graph"	rdfs:member	"model"
s12	"model the join between stream a a bipartite graph"	rdfs:member	"stream"
s12	"model the join between stream a a bipartite graph"	rdfs:member	"join"
s12	"bipartite graph"	rdfs:subClassOf	"graph"
s12	"bipartite graph"	rdfs:member	"bipartite"
s12	"join between stream"	rdfs:member	"join"
s12	"join between stream"	rdfs:member	"stream"
s11.1	"this paper model the join between the original some background data as a bipartite graph"
s11.1	"this paper model the join between the original some background data as a bipartite graph"	rdf:subject	"paper"
s11.1	"this paper model the join between the original some background data as a bipartite graph"	rdf:predicate	"model"
s11.1	"this paper model the join between the original some background data as a bipartite graph"	rdf:object	"join between the original some background data a a bipartite graph"
s11.1	"join between the original some background data a a bipartite graph"	rdfs:member	"bipartite graph"
s11.1	"join between the original some background data a a bipartite graph"	rdfs:member	"background"
s11.1	"join between the original some background data a a bipartite graph"	rdfs:member	"join"
s11.1	"bipartite graph"	rdfs:subClassOf	"graph"
s11.1	"bipartite graph"	rdfs:member	"bipartite"
s11.1	"background data"	rdfs:subClassOf	"data"
s11.1	"original background data"	rdfs:subClassOf	"background data"
s11.1	"join between original background data"	rdfs:member	"join"
s11.1	"join between original background data"	rdfs:member	"original background data"
s11	"this paper proposes to model the join between the original some background data as a bipartite graph"
s11	"this paper proposes to model the join between the original some background data as a bipartite graph"	rdf:subject	"paper"
s11	"this paper proposes to model the join between the original some background data as a bipartite graph"	rdf:predicate	"propose"
s11	"this paper proposes to model the join between the original some background data as a bipartite graph"	rdf:object	"model the join between the original some background data a a bipartite graph"
s11	"model the join between the original some background data a a bipartite graph"	rdfs:member	"bipartite graph"
s11	"model the join between the original some background data a a bipartite graph"	rdfs:member	"background"
s11	"model the join between the original some background data a a bipartite graph"	rdfs:member	"model"
s11	"model the join between the original some background data a a bipartite graph"	rdfs:member	"join"
s11	"bipartite graph"	rdfs:subClassOf	"graph"
s11	"bipartite graph"	rdfs:member	"bipartite"
s11	"background data"	rdfs:subClassOf	"data"
s11	"original background data"	rdfs:subClassOf	"background data"
s11	"join between original background data"	rdfs:member	"join"
s11	"join between original background data"	rdfs:member	"original background data"
s10.3	"avoid stale data"
s10.3	"avoid stale data"	rdf:subject	"stale data"
s10.3	"stale data"	rdfs:subClassOf	"data"
s10.3	"stale data"	rdfs:member	"stale"
s10.3	"avoid stale data"	rdf:predicate	"avoid"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	rdf:subject	"original some background data these cache"
s10.2	"original some background data these cache"	rdfs:member	"cache"
s10.2	"original some background data these cache"	rdfs:member	"background data"
s10.2	"background data"	rdfs:subClassOf	"data"
s10.2	"background data"	rdfs:member	"background"
s10.2	"original background data"	rdfs:subClassOf	"background data"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	rdf:predicate	"refresh"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	local:AM-MNR	"realistic budget constraint"
s10.2	"realistic budget constraint"	rdfs:member	"realistic budget"
s10.2	"realistic budget"	rdfs:member	"realistic"
s10.2	"realistic budget"	rdfs:subClassOf	"budget"
s10.2	"budget constraint"	rdfs:subClassOf	"constraint"
s10.2	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s10.2	"budget constraint"	rdfs:member	"budget"
s10.2	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	local:AM-MOD	"should"
s10.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	local:AM-PNC	"term of possibly financial cost to avoid stale data"
s10.2	"term of possibly financial cost to avoid stale data"	rdfs:member	"term"
s10.2	"term of possibly financial cost to avoid stale data"	rdfs:member	"possibly financial cost"
s10.2	"term of possibly financial cost to avoid stale data"	rdfs:member	"stale data"
s10.2	"possibly financial cost"	rdfs:member	"possibly financial"
s10.2	"financial cost"	rdfs:member	"financial"
s10.2	"stale data"	rdfs:subClassOf	"data"
s10.2	"possibly financial"	rdfs:member	"possibly"
s10.2	"possibly financial cost"	rdfs:subClassOf	"cost"
s10.2	"financial cost"	rdfs:subClassOf	"cost"
s10.2	"possibly financial"	rdfs:subClassOf	"financial"
s10.2	"stale data"	rdfs:member	"stale"
s10.2	"possibly financial cost"	rdfs:subClassOf	"financial cost"
s10.2	"term of possibly financial cost"	rdfs:member	"term"
s10.2	"term of possibly financial cost"	rdfs:member	"possibly financial cost"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	rdf:subject	"cache"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	rdf:predicate	"not update"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	rdf:object	"cache"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	local:AM-MNR	"original some background data"
s10.1	"background data"	rdfs:subClassOf	"data"
s10.1	"background data"	rdfs:member	"background"
s10.1	"original background data"	rdfs:subClassOf	"background data"
s10.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost to avoid stale data"	local:AM-PNC	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"
s10.1	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"	rdfs:member	"refresh"
s10.1	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"	rdfs:member	"possibly financial cost"
s10.1	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"	rdfs:member	"stale data"
s10.1	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"	rdfs:member	"term"
s10.1	"refresh under realistic budget constraint in term of possibly financial cost to avoid stale data"	rdfs:member	"realistic budget constraint"
s10.1	"possibly financial cost"	rdfs:member	"possibly financial"
s10.1	"financial cost"	rdfs:member	"financial"
s10.1	"stale data"	rdfs:subClassOf	"data"
s10.1	"possibly financial"	rdfs:member	"possibly"
s10.1	"possibly financial cost"	rdfs:subClassOf	"cost"
s10.1	"realistic budget constraint"	rdfs:member	"realistic budget"
s10.1	"financial cost"	rdfs:subClassOf	"cost"
s10.1	"possibly financial"	rdfs:subClassOf	"financial"
s10.1	"realistic budget"	rdfs:member	"realistic"
s10.1	"realistic budget"	rdfs:subClassOf	"budget"
s10.1	"budget constraint"	rdfs:subClassOf	"constraint"
s10.1	"stale data"	rdfs:member	"stale"
s10.1	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s10.1	"budget constraint"	rdfs:member	"budget"
s10.1	"possibly financial cost"	rdfs:subClassOf	"financial cost"
s10.1	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s10.1	"refresh under realistic budget constraint"	rdfs:member	"refresh"
s10.1	"refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s10.1	"refresh under realistic budget constraint in term"	rdfs:member	"refresh under realistic budget constraint"
s10.1	"refresh under realistic budget constraint in term"	rdfs:member	"term"
s10.1	"term of possibly financial cost"	rdfs:member	"term"
s10.1	"term of possibly financial cost"	rdfs:member	"possibly financial cost"
s10	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost"
s10	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost"	rdf:subject	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"
s10	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"	rdfs:member	"possibly financial cost"
s10	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"	rdfs:member	"realistic budget constraint"
s10	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"	rdfs:member	"term"
s10	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"	rdfs:member	"cache"
s10	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint in term of possibly financial cost"	rdfs:member	"background data"
s10	"possibly financial cost"	rdfs:member	"possibly financial"
s10	"financial cost"	rdfs:member	"financial"
s10	"possibly financial"	rdfs:member	"possibly"
s10	"possibly financial cost"	rdfs:subClassOf	"cost"
s10	"background data"	rdfs:subClassOf	"data"
s10	"realistic budget constraint"	rdfs:member	"realistic budget"
s10	"financial cost"	rdfs:subClassOf	"cost"
s10	"possibly financial"	rdfs:subClassOf	"financial"
s10	"realistic budget"	rdfs:member	"realistic"
s10	"realistic budget"	rdfs:subClassOf	"budget"
s10	"budget constraint"	rdfs:subClassOf	"constraint"
s10	"background data"	rdfs:member	"background"
s10	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s10	"budget constraint"	rdfs:member	"budget"
s10	"possibly financial cost"	rdfs:subClassOf	"financial cost"
s10	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s10	"be refresh"	rdfs:subClassOf	"refresh"
s10	"should be refresh"	rdfs:subClassOf	"be refresh"
s10	"original background data"	rdfs:subClassOf	"background data"
s10	"not update"	rdfs:subClassOf	"update"
s10	"be not update"	rdfs:subClassOf	"not update"
s10	"should be refresh under realistic budget constraint"	rdfs:member	"should be refresh"
s10	"should be refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s10	"should be refresh under realistic budget constraint in term"	rdfs:member	"should be refresh under realistic budget constraint"
s10	"should be refresh under realistic budget constraint in term"	rdfs:member	"term"
s10	"term of possibly financial cost"	rdfs:member	"term"
s10	"term of possibly financial cost"	rdfs:member	"possibly financial cost"
s10	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of possibly financial cost"	rdf:predicate	"give"
s9	"stale data leading to wrong answers"
s9	"stale data leading to wrong answers"	rdf:subject	"stale data"
s9	"stale data"	rdfs:subClassOf	"data"
s9	"stale data"	rdfs:member	"stale"
s9	"stale data leading to wrong answers"	rdf:predicate	"lead"
s9	"stale data leading to wrong answers"	rdf:object	"wrong answer"
s9	"wrong answer"	rdfs:subClassOf	"answer"
s9	"wrong answer"	rdfs:member	"wrong"
s8.3	"avoid stale data"
s8.3	"avoid stale data"	rdf:subject	"stale data"
s8.3	"stale data"	rdfs:subClassOf	"data"
s8.3	"stale data"	rdfs:member	"stale"
s8.3	"avoid stale data"	rdf:predicate	"avoid"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"	rdf:subject	"original some background data these cache"
s8.2	"original some background data these cache"	rdfs:member	"cache"
s8.2	"original some background data these cache"	rdfs:member	"background data"
s8.2	"background data"	rdfs:subClassOf	"data"
s8.2	"background data"	rdfs:member	"background"
s8.2	"original background data"	rdfs:subClassOf	"background data"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"	rdf:predicate	"refresh"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"	local:AM-MNR	"realistic budget constraint"
s8.2	"realistic budget constraint"	rdfs:member	"realistic budget"
s8.2	"realistic budget"	rdfs:member	"realistic"
s8.2	"realistic budget"	rdfs:subClassOf	"budget"
s8.2	"budget constraint"	rdfs:subClassOf	"constraint"
s8.2	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s8.2	"budget constraint"	rdfs:member	"budget"
s8.2	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"	local:AM-MOD	"should"
s8.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of latency to avoid stale data"	local:AM-PNC	"term of latency to avoid stale data"
s8.2	"term of latency to avoid stale data"	rdfs:member	"term"
s8.2	"term of latency to avoid stale data"	rdfs:member	"latency"
s8.2	"term of latency to avoid stale data"	rdfs:member	"stale data"
s8.2	"stale data"	rdfs:subClassOf	"data"
s8.2	"stale data"	rdfs:member	"stale"
s8.2	"term of latency"	rdfs:member	"term"
s8.2	"term of latency"	rdfs:member	"latency"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"	rdf:subject	"cache"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"	rdf:predicate	"not update"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"	rdf:object	"cache"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"	local:AM-MNR	"original some background data"
s8.1	"background data"	rdfs:subClassOf	"data"
s8.1	"background data"	rdfs:member	"background"
s8.1	"original background data"	rdfs:subClassOf	"background data"
s8.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of latency to avoid stale data"	local:AM-PNC	"refresh under realistic budget constraint in term of latency to avoid stale data"
s8.1	"refresh under realistic budget constraint in term of latency to avoid stale data"	rdfs:member	"refresh"
s8.1	"refresh under realistic budget constraint in term of latency to avoid stale data"	rdfs:member	"latency"
s8.1	"refresh under realistic budget constraint in term of latency to avoid stale data"	rdfs:member	"stale data"
s8.1	"refresh under realistic budget constraint in term of latency to avoid stale data"	rdfs:member	"term"
s8.1	"refresh under realistic budget constraint in term of latency to avoid stale data"	rdfs:member	"realistic budget constraint"
s8.1	"stale data"	rdfs:subClassOf	"data"
s8.1	"realistic budget constraint"	rdfs:member	"realistic budget"
s8.1	"realistic budget"	rdfs:member	"realistic"
s8.1	"realistic budget"	rdfs:subClassOf	"budget"
s8.1	"budget constraint"	rdfs:subClassOf	"constraint"
s8.1	"stale data"	rdfs:member	"stale"
s8.1	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s8.1	"budget constraint"	rdfs:member	"budget"
s8.1	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s8.1	"refresh under realistic budget constraint"	rdfs:member	"refresh"
s8.1	"refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s8.1	"refresh under realistic budget constraint in term"	rdfs:member	"refresh under realistic budget constraint"
s8.1	"refresh under realistic budget constraint in term"	rdfs:member	"term"
s8.1	"term of latency"	rdfs:member	"term"
s8.1	"term of latency"	rdfs:member	"latency"
s8	"given that these caches are not updated as the original some background data these caches"
s8	"given that these caches are not updated as the original some background data these caches"	rdf:subject	"cache be not update a the original some background data these cache"
s8	"cache be not update a the original some background data these cache"	rdfs:member	"cache"
s8	"cache be not update a the original some background data these cache"	rdfs:member	"background data"
s8	"background data"	rdfs:subClassOf	"data"
s8	"background data"	rdfs:member	"background"
s8	"original background data"	rdfs:subClassOf	"background data"
s8	"not update"	rdfs:subClassOf	"update"
s8	"be not update"	rdfs:subClassOf	"not update"
s8	"given that these caches are not updated as the original some background data these caches"	rdf:predicate	"give"
s7.3	"avoid stale data"
s7.3	"avoid stale data"	rdf:subject	"stale data"
s7.3	"stale data"	rdfs:subClassOf	"data"
s7.3	"stale data"	rdfs:member	"stale"
s7.3	"avoid stale data"	rdf:predicate	"avoid"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"	rdf:subject	"original some background data these cache"
s7.2	"original some background data these cache"	rdfs:member	"cache"
s7.2	"original some background data these cache"	rdfs:member	"background data"
s7.2	"background data"	rdfs:subClassOf	"data"
s7.2	"background data"	rdfs:member	"background"
s7.2	"original background data"	rdfs:subClassOf	"background data"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"	rdf:predicate	"refresh"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"	local:AM-MNR	"realistic budget constraint"
s7.2	"realistic budget constraint"	rdfs:member	"realistic budget"
s7.2	"realistic budget"	rdfs:member	"realistic"
s7.2	"realistic budget"	rdfs:subClassOf	"budget"
s7.2	"budget constraint"	rdfs:subClassOf	"constraint"
s7.2	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s7.2	"budget constraint"	rdfs:member	"budget"
s7.2	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"	local:AM-MOD	"should"
s7.2	"the original some background data these caches should refreshed under realistic budget constraints in terms of computation time to avoid stale data"	local:AM-PNC	"term of computation time to avoid stale data"
s7.2	"term of computation time to avoid stale data"	rdfs:member	"term"
s7.2	"term of computation time to avoid stale data"	rdfs:member	"computation time"
s7.2	"term of computation time to avoid stale data"	rdfs:member	"stale data"
s7.2	"computation time"	rdfs:subClassOf	"time"
s7.2	"stale data"	rdfs:subClassOf	"data"
s7.2	"computation time"	rdfs:member	"computation"
s7.2	"stale data"	rdfs:member	"stale"
s7.2	"term of computation time"	rdfs:member	"term"
s7.2	"term of computation time"	rdfs:member	"computation time"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"	rdf:subject	"cache"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"	rdf:predicate	"not update"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"	rdf:object	"cache"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"	local:AM-MNR	"original some background data"
s7.1	"background data"	rdfs:subClassOf	"data"
s7.1	"background data"	rdfs:member	"background"
s7.1	"original background data"	rdfs:subClassOf	"background data"
s7.1	"these caches not updated as the original some background data these caches should be refreshed under realistic budget constraints in terms of computation time to avoid stale data"	local:AM-PNC	"refresh under realistic budget constraint in term of computation time to avoid stale data"
s7.1	"refresh under realistic budget constraint in term of computation time to avoid stale data"	rdfs:member	"refresh"
s7.1	"refresh under realistic budget constraint in term of computation time to avoid stale data"	rdfs:member	"computation time"
s7.1	"refresh under realistic budget constraint in term of computation time to avoid stale data"	rdfs:member	"stale data"
s7.1	"refresh under realistic budget constraint in term of computation time to avoid stale data"	rdfs:member	"term"
s7.1	"refresh under realistic budget constraint in term of computation time to avoid stale data"	rdfs:member	"realistic budget constraint"
s7.1	"stale data"	rdfs:subClassOf	"data"
s7.1	"computation time"	rdfs:subClassOf	"time"
s7.1	"realistic budget constraint"	rdfs:member	"realistic budget"
s7.1	"computation time"	rdfs:member	"computation"
s7.1	"realistic budget"	rdfs:member	"realistic"
s7.1	"realistic budget"	rdfs:subClassOf	"budget"
s7.1	"budget constraint"	rdfs:subClassOf	"constraint"
s7.1	"stale data"	rdfs:member	"stale"
s7.1	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s7.1	"budget constraint"	rdfs:member	"budget"
s7.1	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s7.1	"refresh under realistic budget constraint"	rdfs:member	"refresh"
s7.1	"refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s7.1	"refresh under realistic budget constraint in term"	rdfs:member	"refresh under realistic budget constraint"
s7.1	"refresh under realistic budget constraint in term"	rdfs:member	"term"
s7.1	"term of computation time"	rdfs:member	"term"
s7.1	"term of computation time"	rdfs:member	"computation time"
s7	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints"
s7	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints"	rdf:subject	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint"
s7	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint"	rdfs:member	"cache"
s7	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint"	rdfs:member	"background data"
s7	"cache be not update a the original some background data these cache should be refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s7	"background data"	rdfs:subClassOf	"data"
s7	"realistic budget constraint"	rdfs:member	"realistic budget"
s7	"realistic budget"	rdfs:member	"realistic"
s7	"realistic budget"	rdfs:subClassOf	"budget"
s7	"budget constraint"	rdfs:subClassOf	"constraint"
s7	"background data"	rdfs:member	"background"
s7	"realistic budget constraint"	rdfs:subClassOf	"constraint"
s7	"budget constraint"	rdfs:member	"budget"
s7	"realistic budget constraint"	rdfs:subClassOf	"budget constraint"
s7	"be refresh"	rdfs:subClassOf	"refresh"
s7	"should be refresh"	rdfs:subClassOf	"be refresh"
s7	"original background data"	rdfs:subClassOf	"background data"
s7	"not update"	rdfs:subClassOf	"update"
s7	"be not update"	rdfs:subClassOf	"not update"
s7	"should be refresh under realistic budget constraint"	rdfs:member	"should be refresh"
s7	"should be refresh under realistic budget constraint"	rdfs:member	"realistic budget constraint"
s7	"given that these caches are not updated as the original some background data these caches should be refreshed under realistic budget constraints"	rdf:predicate	"give"
s6	"hence practical applications usually maintain a local cached view of the original some background data"
s6	"hence practical applications usually maintain a local cached view of the original some background data"	rdf:subject	"practical application"
s6	"practical application"	rdfs:subClassOf	"application"
s6	"practical application"	rdfs:member	"practical"
s6	"hence practical applications usually maintain a local cached view of the original some background data"	rdf:predicate	"maintain"
s6	"hence practical applications usually maintain a local cached view of the original some background data"	rdf:object	"local cache view of the original some background data"
s6	"local cache view of the original some background data"	rdfs:member	"local cache view"
s6	"local cache view of the original some background data"	rdfs:member	"background data"
s6	"local cache"	rdfs:subClassOf	"cache"
s6	"background data"	rdfs:subClassOf	"data"
s6	"local cache"	rdfs:member	"local"
s6	"cache view"	rdfs:subClassOf	"view"
s6	"local cache view"	rdfs:member	"local cache"
s6	"cache view"	rdfs:member	"cache"
s6	"background data"	rdfs:member	"background"
s6	"local cache view"	rdfs:subClassOf	"view"
s6	"original background data"	rdfs:subClassOf	"background data"
s6	"local cache view"	rdfs:subClassOf	"cache view"
s6	"local cache view of original background data"	rdfs:member	"local cache view"
s6	"local cache view of original background data"	rdfs:member	"original background data"
s6	"hence practical applications usually maintain a local cached view of the original some background data"	local:AM-DIS	"hence"
s6	"hence practical applications usually maintain a local cached view of the original some background data"	local:AM-TMP	"usually"
s5.1	"the target some background data externally changing slowly"
s5.1	"the target some background data externally changing slowly"	rdf:subject	"target some background data"
s5.1	"background data"	rdfs:subClassOf	"data"
s5.1	"background data"	rdfs:member	"background"
s5.1	"the target some background data externally changing slowly"	rdf:predicate	"change"
s5.1	"the target some background data externally changing slowly"	local:AM-MNR	"externally"
s5.1	"the target some background data externally changing slowly"	local:AM-MNR	"slowly"
s5	"oftentimes the target some background data maintained externally changing slowly"
s5	"oftentimes the target some background data maintained externally changing slowly"	rdf:predicate	"maintain"
s5	"oftentimes the target some background data maintained externally changing slowly"	local:AM-MNR	"oftentimes the target some background data"
s5	"oftentimes the target some background data"	rdfs:member	"background data"
s5	"oftentimes the target some background data"	rdfs:member	"target"
s5	"background data"	rdfs:subClassOf	"data"
s5	"background data"	rdfs:member	"background"
s5	"oftentimes target"	rdfs:subClassOf	"target"
s5	"oftentimes the target some background data maintained externally changing slowly"	local:AM-MNR	"externally change slowly"
s5	"slowly change"	rdfs:subClassOf	"change"
s5	"externally slowly change"	rdfs:subClassOf	"slowly change"
s4.1	"query both in terms of time"
s4.1	"query both in terms of time"	rdf:subject	"both"
s4.1	"query both in terms of time"	rdf:predicate	"query"
s4.1	"query both in terms of time"	rdf:object	"term of time"
s4.1	"term of time"	rdfs:member	"term"
s4.1	"term of time"	rdfs:member	"time"
s4.1	"term of time"	rdfs:member	"term"
s4.1	"term of time"	rdfs:member	"time"
s4	"oftentimes the target some background data maintained externally costly to query both in terms of time"
s4	"oftentimes the target some background data maintained externally costly to query both in terms of time"	rdf:subject	"externally costly to query both in term of time"
s4	"externally costly to query both in term of time"	rdfs:member	"term"
s4	"externally costly to query both in term of time"	rdfs:member	"time"
s4	"externally costly"	rdfs:subClassOf	"costly"
s4	"query in term"	rdfs:member	"query"
s4	"query in term"	rdfs:member	"term"
s4	"term of time"	rdfs:member	"term"
s4	"term of time"	rdfs:member	"time"
s4	"oftentimes the target some background data maintained externally costly to query both in terms of time"	rdf:predicate	"maintain"
s4	"oftentimes the target some background data maintained externally costly to query both in terms of time"	local:AM-MNR	"oftentimes the target some background data"
s4	"oftentimes the target some background data"	rdfs:member	"background data"
s4	"oftentimes the target some background data"	rdfs:member	"target"
s4	"background data"	rdfs:subClassOf	"data"
s4	"background data"	rdfs:member	"background"
s4	"oftentimes target"	rdfs:subClassOf	"target"
s3.1	"query both in terms of money"
s3.1	"query both in terms of money"	rdf:subject	"both"
s3.1	"query both in terms of money"	rdf:predicate	"query"
s3.1	"query both in terms of money"	rdf:object	"term of money"
s3.1	"term of money"	rdfs:member	"term"
s3.1	"term of money"	rdfs:member	"money"
s3.1	"term of money"	rdfs:member	"term"
s3.1	"term of money"	rdfs:member	"money"
s3	"oftentimes the target some background data maintained externally costly to query both in terms of money"
s3	"oftentimes the target some background data maintained externally costly to query both in terms of money"	rdf:subject	"externally costly to query both in term of money"
s3	"externally costly to query both in term of money"	rdfs:member	"term"
s3	"externally costly to query both in term of money"	rdfs:member	"money"
s3	"externally costly"	rdfs:subClassOf	"costly"
s3	"query in term"	rdfs:member	"query"
s3	"query in term"	rdfs:member	"term"
s3	"term of money"	rdfs:member	"term"
s3	"term of money"	rdfs:member	"money"
s3	"oftentimes the target some background data maintained externally costly to query both in terms of money"	rdf:predicate	"maintain"
s3	"oftentimes the target some background data maintained externally costly to query both in terms of money"	local:AM-MNR	"oftentimes the target some background data"
s3	"oftentimes the target some background data"	rdfs:member	"background data"
s3	"oftentimes the target some background data"	rdfs:member	"target"
s3	"background data"	rdfs:subClassOf	"data"
s3	"background data"	rdfs:member	"background"
s3	"oftentimes target"	rdfs:subClassOf	"target"
s2	"in data stream applications one query pattern"
s2	"in data stream applications one query pattern"	rdf:subject	"application one query pattern"
s2	"application one query pattern"	rdfs:member	"application"
s2	"application one query pattern"	rdfs:member	"query pattern"
s2	"query pattern"	rdfs:subClassOf	"pattern"
s2	"query pattern"	rdfs:member	"query"
s2	"one query pattern"	rdfs:subClassOf	"query pattern"
s2	"application one query pattern"	rdfs:subClassOf	"one query pattern"
s2	"in data stream applications one query pattern"	rdf:predicate	"stream"
s2	"in data stream applications one query pattern"	local:AM-LOC	"data"
s1	"in data stream applications one query pattern is especially prominent a join between some background data"
s1	"in data stream applications one query pattern is especially prominent a join between some background data"	rdf:subject	"application one query pattern be especially prominent a join between some background data"
s1	"application one query pattern be especially prominent a join between some background data"	rdfs:member	"application"
s1	"application one query pattern be especially prominent a join between some background data"	rdfs:member	"query pattern"
s1	"application one query pattern be especially prominent a join between some background data"	rdfs:member	"background data"
s1	"application one query pattern be especially prominent a join between some background data"	rdfs:member	"join"
s1	"background data"	rdfs:member	"background"
s1	"background data"	rdfs:subClassOf	"data"
s1	"query pattern"	rdfs:subClassOf	"pattern"
s1	"query pattern"	rdfs:member	"query"
s1	"especially prominent"	rdfs:subClassOf	"prominent"
s1	"one query pattern"	rdfs:subClassOf	"query pattern"
s1	"application one query pattern"	rdfs:subClassOf	"one query pattern"
s1	"join between background data"	rdfs:member	"join"
s1	"join between background data"	rdfs:member	"background data"
s1	"in data stream applications one query pattern is especially prominent a join between some background data"	rdf:predicate	"stream"
s1	"in data stream applications one query pattern is especially prominent a join between some background data"	local:AM-LOC	"data"
s0.1	"data stream applications becoming increasingly popular on the web"
s0.1	"data stream applications becoming increasingly popular on the web"	rdf:subject	"data stream application"
s0.1	"data stream"	rdfs:subClassOf	"stream"
s0.1	"data stream application"	rdfs:member	"data stream"
s0.1	"data stream application"	rdfs:subClassOf	"application"
s0.1	"data stream"	rdfs:member	"data"
s0.1	"stream application"	rdfs:member	"stream"
s0.1	"stream application"	rdfs:subClassOf	"application"
s0.1	"data stream application"	rdfs:subClassOf	"stream application"
s0.1	"data stream applications becoming increasingly popular on the web"	rdf:predicate	"become"
s0.1	"data stream applications becoming increasingly popular on the web"	rdf:object	"increasingly popular on the web"
s0.1	"increasingly popular"	rdfs:subClassOf	"popular"
s0.1	"increasingly popular on web"	rdfs:member	"increasingly popular"
s0.1	"increasingly popular on web"	rdfs:member	"web"
s0	"data stream applications"
s0	"data stream applications"	rdf:subject	"data"
s0	"data stream applications"	rdf:predicate	"stream"
s0	"data stream applications"	rdf:object	"application"
