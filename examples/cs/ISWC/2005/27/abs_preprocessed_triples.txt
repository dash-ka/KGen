s12.1	"how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"
s12.1	"how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:subject	"agent"
s12.1	"how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:predicate	"learn"
s12.1	"how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:object	"preference on call literal if an agent be part of a web of trust agent"
s12.1	"preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"web"
s12.1	"preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"trust agent"
s12.1	"preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"agent"
s12.1	"preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"preference"
s12.1	"preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"part"
s12.1	"trust agent"	rdfs:subClassOf	"agent"
s12.1	"trust agent"	rdfs:member	"trust"
s12.1	"literal call"	rdfs:subClassOf	"call"
s12.1	"preference on literal call"	rdfs:member	"preference"
s12.1	"preference on literal call"	rdfs:member	"literal call"
s12.1	"part of web"	rdfs:member	"part"
s12.1	"part of web"	rdfs:member	"web"
s12.1	"web of trust agent"	rdfs:member	"web"
s12.1	"web of trust agent"	rdfs:member	"trust agent"
s12.1	"how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	local:AM-MOD	"can"
s12	"finally we show how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"
s12	"finally we show how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:subject	"we"
s12	"finally we show how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:predicate	"show"
s12	"finally we show how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	rdf:object	"agent can learn preference on call literal if an agent be part of a web of trust agent"
s12	"agent can learn preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"web"
s12	"agent can learn preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"trust agent"
s12	"agent can learn preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"agent"
s12	"agent can learn preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"preference"
s12	"agent can learn preference on call literal if an agent be part of a web of trust agent"	rdfs:member	"part"
s12	"trust agent"	rdfs:subClassOf	"agent"
s12	"trust agent"	rdfs:member	"trust"
s12	"literal call"	rdfs:subClassOf	"call"
s12	"can learn"	rdfs:subClassOf	"learn"
s12	"preference on literal call"	rdfs:member	"preference"
s12	"preference on literal call"	rdfs:member	"literal call"
s12	"part of web"	rdfs:member	"part"
s12	"part of web"	rdfs:member	"web"
s12	"web of trust agent"	rdfs:member	"web"
s12	"web of trust agent"	rdfs:member	"trust agent"
s12	"finally we show how an agent can learn preferences on call literals if an agent is part of a web of trusted agents"	local:AM-TMP	"finally"
s11.1	"it can express preferences on call literals"
s11.1	"it can express preferences on call literals"	rdf:subject	"it"
s11.1	"it can express preferences on call literals"	rdf:predicate	"express"
s11.1	"it can express preferences on call literals"	rdf:object	"preference on call literal"
s11.1	"preference on call literal"	rdfs:member	"preference"
s11.1	"preference on call literal"	rdfs:member	"call literal"
s11.1	"call literal"	rdfs:subClassOf	"literal"
s11.1	"call literal"	rdfs:member	"call"
s11.1	"preference on call literal"	rdfs:member	"preference"
s11.1	"preference on call literal"	rdfs:member	"call literal"
s11.1	"it can express preferences on call literals"	local:AM-MOD	"can"
s11	"it consider some sources more reliable than others"
s11	"it consider some sources more reliable than others"	rdf:subject	"it"
s11	"it consider some sources more reliable than others"	rdf:predicate	"consider"
s11	"it consider some sources more reliable than others"	rdf:object	"source reliable than others"
s11	"source reliable than others"	rdfs:member	"others"
s11	"source reliable than others"	rdfs:member	"source"
s11	"reliable source"	rdfs:subClassOf	"source"
s11	"reliable than others"	rdfs:member	"reliable"
s11	"reliable than others"	rdfs:member	"others"
s10.2	"it can alternatively express preferences on call literals"
s10.2	"it can alternatively express preferences on call literals"	rdf:subject	"it"
s10.2	"it can alternatively express preferences on call literals"	rdf:predicate	"express"
s10.2	"it can alternatively express preferences on call literals"	rdf:object	"preference on call literal"
s10.2	"preference on call literal"	rdfs:member	"preference"
s10.2	"preference on call literal"	rdfs:member	"call literal"
s10.2	"call literal"	rdfs:subClassOf	"literal"
s10.2	"call literal"	rdfs:member	"call"
s10.2	"preference on call literal"	rdfs:member	"preference"
s10.2	"preference on call literal"	rdfs:member	"call literal"
s10.2	"it can alternatively express preferences on call literals"	local:AM-ADV	"alternatively"
s10.2	"it can alternatively express preferences on call literals"	local:AM-MOD	"can"
s10.1	"own knowledge encoded in the program it call literals"
s10.1	"own knowledge encoded in the program it call literals"	rdf:subject	"knowledge"
s10.1	"own knowledge encoded in the program it call literals"	rdf:predicate	"encode"
s10.1	"own knowledge encoded in the program it call literals"	rdf:object	"call literal"
s10.1	"call literal"	rdfs:subClassOf	"literal"
s10.1	"own knowledge encoded in the program it call literals"	local:AM-LOC	"program"
s10	"an agent believe it own knowledge encoded in the program it can alternatively express preferences on call literals"
s10	"an agent believe it own knowledge encoded in the program it can alternatively express preferences on call literals"	rdf:subject	"agent"
s10	"an agent believe it own knowledge encoded in the program it can alternatively express preferences on call literals"	rdf:predicate	"believe"
s10	"an agent believe it own knowledge encoded in the program it can alternatively express preferences on call literals"	rdf:object	"knowledge encode in the program it can alternatively express preference on call literal"
s10	"knowledge encode in the program it can alternatively express preference on call literal"	rdfs:member	"preference"
s10	"knowledge encode in the program it can alternatively express preference on call literal"	rdfs:member	"call literal"
s10	"knowledge encode in the program it can alternatively express preference on call literal"	rdfs:member	"knowledge encode"
s10	"knowledge encode in the program it can alternatively express preference on call literal"	rdfs:member	"program"
s10	"call literal"	rdfs:subClassOf	"literal"
s10	"knowledge encode"	rdfs:subClassOf	"encode"
s10	"call literal"	rdfs:member	"call"
s10	"knowledge encode"	rdfs:member	"knowledge"
s10	"alternatively express"	rdfs:subClassOf	"express"
s10	"can alternatively express"	rdfs:subClassOf	"alternatively express"
s10	"can alternatively express in program"	rdfs:member	"can alternatively express"
s10	"can alternatively express in program"	rdfs:member	"program"
s10	"preference on call literal"	rdfs:member	"preference"
s10	"preference on call literal"	rdfs:member	"call literal"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	rdf:subject	"we"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	rdf:predicate	"induce"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	rdf:object	"preference order on those strategy"
s9.2	"preference order on those strategy"	rdfs:member	"strategy"
s9.2	"preference order on those strategy"	rdfs:member	"preference order"
s9.2	"preference order"	rdfs:subClassOf	"order"
s9.2	"preference order"	rdfs:member	"preference"
s9.2	"preference order on strategy"	rdfs:member	"preference order"
s9.2	"preference order on strategy"	rdfs:member	"strategy"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	local:AM-ADV	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"addition"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"allow"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"certain rule"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"agent"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"others"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"preference"
s9.2	"allow in addition for an agent to express it preference for the satisfaction of certain rule over others"	rdfs:member	"satisfaction"
s9.2	"certain rule"	rdfs:subClassOf	"rule"
s9.2	"certain rule"	rdfs:member	"certain"
s9.2	"allow in addition"	rdfs:member	"allow"
s9.2	"allow in addition"	rdfs:member	"addition"
s9.2	"addition for agent"	rdfs:member	"addition"
s9.2	"addition for agent"	rdfs:member	"agent"
s9.2	"preference for satisfaction"	rdfs:member	"preference"
s9.2	"preference for satisfaction"	rdfs:member	"satisfaction"
s9.2	"satisfaction of certain rule"	rdfs:member	"satisfaction"
s9.2	"satisfaction of certain rule"	rdfs:member	"certain rule"
s9.2	"satisfaction of certain rule over others"	rdfs:member	"satisfaction of certain rule"
s9.2	"satisfaction of certain rule over others"	rdfs:member	"others"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	local:AM-MOD	"can"
s9.2	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	local:AM-TMP	"then"
s9.1	"an agent express its preference for the satisfaction of certain rules over others we"
s9.1	"an agent express its preference for the satisfaction of certain rules over others we"	rdf:subject	"we"
s9.1	"an agent express its preference for the satisfaction of certain rules over others we"	rdf:predicate	"express"
s9.1	"an agent express its preference for the satisfaction of certain rules over others we"	rdf:object	"preference for the satisfaction of certain rule over others"
s9.1	"preference for the satisfaction of certain rule over others"	rdfs:member	"preference"
s9.1	"preference for the satisfaction of certain rule over others"	rdfs:member	"certain rule"
s9.1	"preference for the satisfaction of certain rule over others"	rdfs:member	"satisfaction"
s9.1	"preference for the satisfaction of certain rule over others"	rdfs:member	"others"
s9.1	"certain rule"	rdfs:subClassOf	"rule"
s9.1	"certain rule"	rdfs:member	"certain"
s9.1	"preference for satisfaction"	rdfs:member	"preference"
s9.1	"preference for satisfaction"	rdfs:member	"satisfaction"
s9.1	"satisfaction of certain rule"	rdfs:member	"satisfaction"
s9.1	"satisfaction of certain rule"	rdfs:member	"certain rule"
s9.1	"preference for satisfaction over others"	rdfs:member	"preference for satisfaction"
s9.1	"preference for satisfaction over others"	rdfs:member	"others"
s9	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"
s9	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	rdf:subject	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"strategy"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"addition"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"preference order"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"certain rule"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"agent"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"others"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"preference"
s9	"addition for an agent to express it preference for the satisfaction of certain rule over others we can then induce a preference order on those strategy"	rdfs:member	"satisfaction"
s9	"certain rule"	rdfs:subClassOf	"rule"
s9	"preference order"	rdfs:subClassOf	"order"
s9	"certain rule"	rdfs:member	"certain"
s9	"preference order"	rdfs:member	"preference"
s9	"then induce"	rdfs:subClassOf	"induce"
s9	"can then induce"	rdfs:subClassOf	"then induce"
s9	"addition for agent"	rdfs:member	"addition"
s9	"addition for agent"	rdfs:member	"agent"
s9	"preference for satisfaction"	rdfs:member	"preference"
s9	"preference for satisfaction"	rdfs:member	"satisfaction"
s9	"satisfaction of certain rule"	rdfs:member	"satisfaction"
s9	"satisfaction of certain rule"	rdfs:member	"certain rule"
s9	"preference for satisfaction over others"	rdfs:member	"preference for satisfaction"
s9	"preference for satisfaction over others"	rdfs:member	"others"
s9	"preference order on strategy"	rdfs:member	"preference order"
s9	"preference order on strategy"	rdfs:member	"strategy"
s9	"allowing in addition for an agent to express its preference for the satisfaction of certain rules over others we can then induce a preference order on those strategies"	rdf:predicate	"allow"
s8.1	"solving those conflicts"
s8.1	"solving those conflicts"	rdf:subject	"conflict"
s8.1	"solving those conflicts"	rdf:predicate	"solve"
s8	"semantics which can provide different strategies for solving those conflicts"
s8	"semantics which can provide different strategies for solving those conflicts"	rdf:subject	"semantics"
s8	"semantics which can provide different strategies for solving those conflicts"	rdf:predicate	"provide"
s8	"semantics which can provide different strategies for solving those conflicts"	rdf:object	"different strategy solve those conflict"
s8	"different strategy solve those conflict"	rdfs:member	"different strategy"
s8	"different strategy solve those conflict"	rdfs:member	"conflict"
s8	"different strategy"	rdfs:subClassOf	"strategy"
s8	"different strategy"	rdfs:member	"different"
s8	"semantics which can provide different strategies for solving those conflicts"	local:AM-MOD	"can"
s7.1	"different knowledge sources we use the extended answer"
s7.1	"different knowledge sources we use the extended answer"	rdf:subject	"we"
s7.1	"different knowledge sources we use the extended answer"	rdf:predicate	"use"
s7.1	"different knowledge sources we use the extended answer"	rdf:object	"extend answer different knowledge source"
s7.1	"answer different"	rdfs:subClassOf	"different"
s7.1	"different knowledge source"	rdfs:subClassOf	"source"
s7.1	"answer different knowledge"	rdfs:subClassOf	"knowledge"
s7.1	"answer different knowledge source"	rdfs:subClassOf	"source"
s7.1	"different knowledge"	rdfs:subClassOf	"knowledge"
s7.1	"different knowledge"	rdfs:member	"different"
s7.1	"answer different"	rdfs:member	"answer"
s7.1	"knowledge source"	rdfs:member	"knowledge"
s7.1	"knowledge source"	rdfs:subClassOf	"source"
s7.1	"answer different knowledge"	rdfs:member	"answer different"
s7.1	"answer different knowledge source"	rdfs:member	"answer different knowledge"
s7.1	"different knowledge source"	rdfs:member	"different knowledge"
s7.1	"different knowledge source"	rdfs:subClassOf	"knowledge source"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"	rdf:subject	"conflict"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"	rdf:predicate	"arise"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"	rdf:object	"reason"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"	local:AM-MNR	"different knowledge source we use the extend answer"
s7	"different knowledge source we use the extend answer"	rdfs:member	"different knowledge source"
s7	"different knowledge source we use the extend answer"	rdfs:member	"extend answer"
s7	"different knowledge source"	rdfs:subClassOf	"source"
s7	"extend answer"	rdfs:subClassOf	"answer"
s7	"extend answer"	rdfs:member	"extend"
s7	"different knowledge"	rdfs:subClassOf	"knowledge"
s7	"different knowledge"	rdfs:member	"different"
s7	"knowledge source"	rdfs:member	"knowledge"
s7	"knowledge source"	rdfs:subClassOf	"source"
s7	"different knowledge source"	rdfs:member	"different knowledge"
s7	"different knowledge source"	rdfs:subClassOf	"knowledge source"
s7	"those conflicts may arise from reasoning with different knowledge sources we use the extended answer"	local:AM-MOD	"may"
s6	"the extended answer set semantics"
s6	"the extended answer set semantics"	rdf:subject	"extend answer"
s6	"extend answer"	rdfs:member	"extend"
s6	"extend answer"	rdfs:subClassOf	"answer"
s6	"the extended answer set semantics"	rdf:predicate	"set"
s6	"the extended answer set semantics"	rdf:object	"semantics"
s5.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without conditions"
s5.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without conditions"	rdf:subject	"agent"
s5.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without conditions"	rdf:predicate	"pose"
s5.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without conditions"	rdf:object	"yesno query arbitrary knowledge source on the semantic web"
s5.1	"yesno query arbitrary knowledge source on the semantic web"	rdfs:member	"semantic web"
s5.1	"yesno query arbitrary knowledge source on the semantic web"	rdfs:member	"yesno query arbitrary knowledge source"
s5.1	"yesno query"	rdfs:member	"yesno"
s5.1	"yesno query"	rdfs:subClassOf	"query"
s5.1	"knowledge source"	rdfs:member	"knowledge"
s5.1	"yesno query arbitrary knowledge"	rdfs:member	"yesno query arbitrary"
s5.1	"yesno query arbitrary"	rdfs:member	"yesno query"
s5.1	"query arbitrary knowledge"	rdfs:member	"query arbitrary"
s5.1	"query arbitrary"	rdfs:subClassOf	"arbitrary"
s5.1	"yesno query arbitrary knowledge source"	rdfs:subClassOf	"source"
s5.1	"arbitrary knowledge"	rdfs:member	"arbitrary"
s5.1	"yesno query arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s5.1	"knowledge source"	rdfs:subClassOf	"source"
s5.1	"query arbitrary knowledge source"	rdfs:member	"query arbitrary knowledge"
s5.1	"yesno query arbitrary"	rdfs:subClassOf	"arbitrary"
s5.1	"yesno query arbitrary knowledge source"	rdfs:member	"yesno query arbitrary knowledge"
s5.1	"arbitrary knowledge source"	rdfs:subClassOf	"source"
s5.1	"query arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s5.1	"query arbitrary"	rdfs:member	"query"
s5.1	"arbitrary knowledge source"	rdfs:member	"arbitrary knowledge"
s5.1	"semantic web"	rdfs:subClassOf	"web"
s5.1	"query arbitrary knowledge source"	rdfs:subClassOf	"source"
s5.1	"semantic web"	rdfs:member	"semantic"
s5.1	"arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s5.1	"arbitrary knowledge source"	rdfs:subClassOf	"knowledge source"
s5.1	"query arbitrary knowledge source"	rdfs:subClassOf	"arbitrary knowledge source"
s5.1	"yesno query arbitrary knowledge source"	rdfs:subClassOf	"query arbitrary knowledge source"
s5.1	"yesno query arbitrary knowledge source on semantic web"	rdfs:member	"yesno query arbitrary knowledge source"
s5.1	"yesno query arbitrary knowledge source on semantic web"	rdfs:member	"semantic web"
s5.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without conditions"	local:AM-MNR	"without condition"
s5	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without conditions on"
s5	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without conditions on"	rdf:subject	"call literal"
s5	"call literal"	rdfs:subClassOf	"literal"
s5	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without conditions on"	rdf:predicate	"enable"
s5	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without conditions on"	rdf:object	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"
s5	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"	rdfs:member	"condition"
s5	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"	rdfs:member	"semantic web"
s5	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"	rdfs:member	"agent"
s5	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"	rdfs:member	"yesno query"
s5	"agent to pose yesno query to arbitrary knowledge source on the semantic web without condition on"	rdfs:member	"knowledge source"
s5	"yesno query"	rdfs:member	"yesno"
s5	"yesno query"	rdfs:subClassOf	"query"
s5	"semantic web"	rdfs:subClassOf	"web"
s5	"semantic web"	rdfs:member	"semantic"
s5	"knowledge source"	rdfs:member	"knowledge"
s5	"knowledge source"	rdfs:subClassOf	"source"
s5	"arbitrary knowledge source"	rdfs:subClassOf	"knowledge source"
s5	"pose to arbitrary knowledge source"	rdfs:member	"pose"
s5	"pose to arbitrary knowledge source"	rdfs:member	"arbitrary knowledge source"
s5	"arbitrary knowledge source on semantic web"	rdfs:member	"arbitrary knowledge source"
s5	"arbitrary knowledge source on semantic web"	rdfs:member	"semantic web"
s5	"pose to arbitrary knowledge source without condition"	rdfs:member	"pose to arbitrary knowledge source"
s5	"pose to arbitrary knowledge source without condition"	rdfs:member	"condition"
s5	"condition on"	rdfs:member	"condition"
s5	"condition on"	rdfs:member	"on"
s4.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"
s4.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:subject	"agent"
s4.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:predicate	"pose"
s4.1	"an agent pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:object	"yesno query arbitrary knowledge source on the semantic web without the representation language of those source"
s4.1	"yesno query arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"semantic web"
s4.1	"yesno query arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"yesno query arbitrary knowledge source"
s4.1	"yesno query arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"source"
s4.1	"yesno query arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"representation language"
s4.1	"yesno query"	rdfs:member	"yesno"
s4.1	"representation language"	rdfs:subClassOf	"language"
s4.1	"yesno query"	rdfs:subClassOf	"query"
s4.1	"knowledge source"	rdfs:member	"knowledge"
s4.1	"yesno query arbitrary knowledge"	rdfs:member	"yesno query arbitrary"
s4.1	"representation language"	rdfs:member	"representation"
s4.1	"yesno query arbitrary"	rdfs:member	"yesno query"
s4.1	"query arbitrary knowledge"	rdfs:member	"query arbitrary"
s4.1	"query arbitrary"	rdfs:subClassOf	"arbitrary"
s4.1	"yesno query arbitrary knowledge source"	rdfs:subClassOf	"source"
s4.1	"arbitrary knowledge"	rdfs:member	"arbitrary"
s4.1	"yesno query arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s4.1	"knowledge source"	rdfs:subClassOf	"source"
s4.1	"query arbitrary knowledge source"	rdfs:member	"query arbitrary knowledge"
s4.1	"yesno query arbitrary"	rdfs:subClassOf	"arbitrary"
s4.1	"yesno query arbitrary knowledge source"	rdfs:member	"yesno query arbitrary knowledge"
s4.1	"arbitrary knowledge source"	rdfs:subClassOf	"source"
s4.1	"query arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s4.1	"query arbitrary"	rdfs:member	"query"
s4.1	"arbitrary knowledge source"	rdfs:member	"arbitrary knowledge"
s4.1	"semantic web"	rdfs:subClassOf	"web"
s4.1	"query arbitrary knowledge source"	rdfs:subClassOf	"source"
s4.1	"semantic web"	rdfs:member	"semantic"
s4.1	"arbitrary knowledge"	rdfs:subClassOf	"knowledge"
s4.1	"arbitrary knowledge source"	rdfs:subClassOf	"knowledge source"
s4.1	"query arbitrary knowledge source"	rdfs:subClassOf	"arbitrary knowledge source"
s4.1	"yesno query arbitrary knowledge source"	rdfs:subClassOf	"query arbitrary knowledge source"
s4.1	"yesno query arbitrary knowledge source on semantic web"	rdfs:member	"yesno query arbitrary knowledge source"
s4.1	"yesno query arbitrary knowledge source on semantic web"	rdfs:member	"semantic web"
s4.1	"yesno query arbitrary knowledge source on semantic web without representation language"	rdfs:member	"yesno query arbitrary knowledge source on semantic web"
s4.1	"yesno query arbitrary knowledge source on semantic web without representation language"	rdfs:member	"representation language"
s4.1	"representation language of source"	rdfs:member	"representation language"
s4.1	"representation language of source"	rdfs:member	"source"
s4	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"
s4	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:subject	"call literal"
s4	"call literal"	rdfs:subClassOf	"literal"
s4	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:predicate	"enable"
s4	"such call literals enable an agent to pose yesno queries to arbitrary knowledge sources on the semantic web without the representation language of those sources"	rdf:object	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"source"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"semantic web"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"agent"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"representation language"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"yesno query"
s4	"agent to pose yesno query to arbitrary knowledge source on the semantic web without the representation language of those source"	rdfs:member	"knowledge source"
s4	"yesno query"	rdfs:member	"yesno"
s4	"representation language"	rdfs:subClassOf	"language"
s4	"yesno query"	rdfs:subClassOf	"query"
s4	"semantic web"	rdfs:subClassOf	"web"
s4	"semantic web"	rdfs:member	"semantic"
s4	"knowledge source"	rdfs:member	"knowledge"
s4	"knowledge source"	rdfs:subClassOf	"source"
s4	"representation language"	rdfs:member	"representation"
s4	"arbitrary knowledge source"	rdfs:subClassOf	"knowledge source"
s4	"pose to arbitrary knowledge source"	rdfs:member	"pose"
s4	"pose to arbitrary knowledge source"	rdfs:member	"arbitrary knowledge source"
s4	"arbitrary knowledge source on semantic web"	rdfs:member	"arbitrary knowledge source"
s4	"arbitrary knowledge source on semantic web"	rdfs:member	"semantic web"
s4	"pose to arbitrary knowledge source without representation language"	rdfs:member	"pose to arbitrary knowledge source"
s4	"pose to arbitrary knowledge source without representation language"	rdfs:member	"representation language"
s4	"representation language of source"	rdfs:member	"representation language"
s4	"representation language of source"	rdfs:member	"source"
s3	"initially we encode the knowledge of an agent as a logic program"
s3	"initially we encode the knowledge of an agent as a logic program"	rdf:subject	"we"
s3	"initially we encode the knowledge of an agent as a logic program"	rdf:predicate	"encode"
s3	"initially we encode the knowledge of an agent as a logic program"	rdf:object	"knowledge of an agent"
s3	"knowledge of an agent"	rdfs:member	"knowledge"
s3	"knowledge of an agent"	rdfs:member	"agent"
s3	"knowledge of agent"	rdfs:member	"knowledge"
s3	"knowledge of agent"	rdfs:member	"agent"
s3	"initially we encode the knowledge of an agent as a logic program"	local:AM-MNR	"logic program"
s3	"logic program"	rdfs:subClassOf	"program"
s3	"logic program"	rdfs:member	"logic"
s3	"initially we encode the knowledge of an agent as a logic program"	local:AM-TMP	"initially"
s2	"a logic program equipped with call literals"
s2	"a logic program equipped with call literals"	rdf:subject	"logic program"
s2	"logic program"	rdfs:subClassOf	"program"
s2	"logic program"	rdfs:member	"logic"
s2	"a logic program equipped with call literals"	rdf:predicate	"equip"
s2	"a logic program equipped with call literals"	rdf:object	"call literal"
s2	"call literal"	rdfs:subClassOf	"literal"
s1	"we introduce a framework for preferential reasoning with agents on the semantic web"
s1	"we introduce a framework for preferential reasoning with agents on the semantic web"	rdf:subject	"we"
s1	"we introduce a framework for preferential reasoning with agents on the semantic web"	rdf:predicate	"introduce"
s1	"we introduce a framework for preferential reasoning with agents on the semantic web"	rdf:object	"framework for preferential reason"
s1	"framework for preferential reason"	rdfs:member	"preferential reason"
s1	"framework for preferential reason"	rdfs:member	"framework"
s1	"preferential reason"	rdfs:subClassOf	"reason"
s1	"preferential reason"	rdfs:member	"preferential"
s1	"framework for preferential reason"	rdfs:member	"framework"
s1	"framework for preferential reason"	rdfs:member	"preferential reason"
s1	"we introduce a framework for preferential reasoning with agents on the semantic web"	local:AM-MNR	"agent on the semantic web"
s1	"agent on the semantic web"	rdfs:member	"semantic web"
s1	"agent on the semantic web"	rdfs:member	"agent"
s1	"semantic web"	rdfs:subClassOf	"web"
s1	"semantic web"	rdfs:member	"semantic"
s1	"agent on semantic web"	rdfs:member	"agent"
s1	"agent on semantic web"	rdfs:member	"semantic web"
s0	"based on logic programming"
s0	"based on logic programming"	rdf:predicate	"base"
s0	"based on logic programming"	local:AM-LOC	"logic program"
s0	"logic program"	rdfs:subClassOf	"program"
s0	"logic program"	rdfs:member	"logic"
