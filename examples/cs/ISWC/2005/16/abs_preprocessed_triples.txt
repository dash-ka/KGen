s12.4	"related notions"
s12.4	"related notions"	rdf:subject	"notion"
s12.4	"related notions"	rdf:predicate	"relate"
s12.3	"concede through related notions of knowledgeability of reputation"
s12.3	"concede through related notions of knowledgeability of reputation"	rdf:predicate	"concede"
s12.3	"concede through related notions of knowledgeability of reputation"	local:AM-MNR	"relate notion of knowledgeability of reputation"
s12.3	"relate notion of knowledgeability of reputation"	rdfs:member	"reputation"
s12.3	"relate notion of knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.3	"relate notion of knowledgeability of reputation"	rdfs:member	"relate notion"
s12.3	"relate notion"	rdfs:member	"relate"
s12.3	"relate notion"	rdfs:subClassOf	"notion"
s12.3	"notion of knowledgeability"	rdfs:member	"notion"
s12.3	"notion of knowledgeability"	rdfs:member	"knowledgeability"
s12.3	"knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.3	"knowledgeability of reputation"	rdfs:member	"reputation"
s12.2	"evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"
s12.2	"evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"	rdf:subject	"possible eagerness to concede through relate notion of knowledgeability of reputation"
s12.2	"possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"reputation"
s12.2	"possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.2	"possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"possible eagerness"
s12.2	"possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"relate notion"
s12.2	"possible eagerness"	rdfs:member	"possible"
s12.2	"relate notion"	rdfs:member	"relate"
s12.2	"possible eagerness"	rdfs:subClassOf	"eagerness"
s12.2	"relate notion"	rdfs:subClassOf	"notion"
s12.2	"notion of knowledgeability"	rdfs:member	"notion"
s12.2	"notion of knowledgeability"	rdfs:member	"knowledgeability"
s12.2	"knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.2	"knowledgeability of reputation"	rdfs:member	"reputation"
s12.2	"evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"	rdf:predicate	"evaluate"
s12.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"
s12.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"	rdf:subject	"result strategy"
s12.1	"result strategy"	rdfs:member	"result"
s12.1	"result strategy"	rdfs:subClassOf	"strategy"
s12.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"	rdf:predicate	"provide"
s12.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of knowledgeability of reputation"	rdf:object	"mean evaluate the possible eagerness to concede through relate notion of knowledgeability of reputation"
s12.1	"mean evaluate the possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"reputation"
s12.1	"mean evaluate the possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.1	"mean evaluate the possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"possible eagerness"
s12.1	"mean evaluate the possible eagerness to concede through relate notion of knowledgeability of reputation"	rdfs:member	"relate notion"
s12.1	"possible eagerness"	rdfs:member	"possible"
s12.1	"relate notion"	rdfs:member	"relate"
s12.1	"possible eagerness"	rdfs:subClassOf	"eagerness"
s12.1	"relate notion"	rdfs:subClassOf	"notion"
s12.1	"notion of knowledgeability"	rdfs:member	"notion"
s12.1	"notion of knowledgeability"	rdfs:member	"knowledgeability"
s12.1	"knowledgeability of reputation"	rdfs:member	"knowledgeability"
s12.1	"knowledgeability of reputation"	rdfs:member	"reputation"
s12	"resulting strategy"
s12	"resulting strategy"	rdf:subject	"strategy"
s12	"resulting strategy"	rdf:predicate	"result"
s11.4	"related notions"
s11.4	"related notions"	rdf:subject	"notion"
s11.4	"related notions"	rdf:predicate	"relate"
s11.3	"concede through related notions of degree of reputation"
s11.3	"concede through related notions of degree of reputation"	rdf:predicate	"concede"
s11.3	"concede through related notions of degree of reputation"	local:AM-MNR	"relate notion of degree of reputation"
s11.3	"relate notion of degree of reputation"	rdfs:member	"reputation"
s11.3	"relate notion of degree of reputation"	rdfs:member	"degree"
s11.3	"relate notion of degree of reputation"	rdfs:member	"relate notion"
s11.3	"relate notion"	rdfs:member	"relate"
s11.3	"relate notion"	rdfs:subClassOf	"notion"
s11.3	"notion of degree"	rdfs:member	"notion"
s11.3	"notion of degree"	rdfs:member	"degree"
s11.3	"degree of reputation"	rdfs:member	"degree"
s11.3	"degree of reputation"	rdfs:member	"reputation"
s11.2	"evaluate the possible eagerness to concede through related notions of degree of reputation"
s11.2	"evaluate the possible eagerness to concede through related notions of degree of reputation"	rdf:subject	"possible eagerness to concede through relate notion of degree of reputation"
s11.2	"possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"reputation"
s11.2	"possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"degree"
s11.2	"possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"possible eagerness"
s11.2	"possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"relate notion"
s11.2	"possible eagerness"	rdfs:member	"possible"
s11.2	"relate notion"	rdfs:member	"relate"
s11.2	"possible eagerness"	rdfs:subClassOf	"eagerness"
s11.2	"relate notion"	rdfs:subClassOf	"notion"
s11.2	"notion of degree"	rdfs:member	"notion"
s11.2	"notion of degree"	rdfs:member	"degree"
s11.2	"degree of reputation"	rdfs:member	"degree"
s11.2	"degree of reputation"	rdfs:member	"reputation"
s11.2	"evaluate the possible eagerness to concede through related notions of degree of reputation"	rdf:predicate	"evaluate"
s11.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of degree of reputation"
s11.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of degree of reputation"	rdf:subject	"result strategy"
s11.1	"result strategy"	rdfs:member	"result"
s11.1	"result strategy"	rdfs:subClassOf	"strategy"
s11.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of degree of reputation"	rdf:predicate	"provide"
s11.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through related notions of degree of reputation"	rdf:object	"mean evaluate the possible eagerness to concede through relate notion of degree of reputation"
s11.1	"mean evaluate the possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"reputation"
s11.1	"mean evaluate the possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"degree"
s11.1	"mean evaluate the possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"possible eagerness"
s11.1	"mean evaluate the possible eagerness to concede through relate notion of degree of reputation"	rdfs:member	"relate notion"
s11.1	"possible eagerness"	rdfs:member	"possible"
s11.1	"relate notion"	rdfs:member	"relate"
s11.1	"possible eagerness"	rdfs:subClassOf	"eagerness"
s11.1	"relate notion"	rdfs:subClassOf	"notion"
s11.1	"notion of degree"	rdfs:member	"notion"
s11.1	"notion of degree"	rdfs:member	"degree"
s11.1	"degree of reputation"	rdfs:member	"degree"
s11.1	"degree of reputation"	rdfs:member	"reputation"
s11	"resulting strategy"
s11	"resulting strategy"	rdf:subject	"strategy"
s11	"resulting strategy"	rdf:predicate	"result"
s10.3	"concede through semantic commitments"
s10.3	"concede through semantic commitments"	rdf:predicate	"concede"
s10.3	"concede through semantic commitments"	local:AM-MNR	"semantic commitment"
s10.3	"semantic commitment"	rdfs:subClassOf	"commitment"
s10.3	"semantic commitment"	rdfs:member	"semantic"
s10.2	"evaluate the possible eagerness to concede through semantic commitments"
s10.2	"evaluate the possible eagerness to concede through semantic commitments"	rdf:subject	"possible eagerness"
s10.2	"possible eagerness"	rdfs:member	"possible"
s10.2	"possible eagerness"	rdfs:subClassOf	"eagerness"
s10.2	"evaluate the possible eagerness to concede through semantic commitments"	rdf:predicate	"evaluate"
s10.2	"evaluate the possible eagerness to concede through semantic commitments"	local:AM-PNC	"concede through semantic commitment"
s10.2	"concede through semantic commitment"	rdfs:member	"semantic commitment"
s10.2	"concede through semantic commitment"	rdfs:member	"concede"
s10.2	"semantic commitment"	rdfs:subClassOf	"commitment"
s10.2	"semantic commitment"	rdfs:member	"semantic"
s10.2	"concede through semantic commitment"	rdfs:member	"concede"
s10.2	"concede through semantic commitment"	rdfs:member	"semantic commitment"
s10.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through semantic commitments"
s10.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through semantic commitments"	rdf:subject	"result strategy"
s10.1	"result strategy"	rdfs:member	"result"
s10.1	"result strategy"	rdfs:subClassOf	"strategy"
s10.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through semantic commitments"	rdf:predicate	"provide"
s10.1	"a resulting strategy provides the means to evaluate the possible eagerness to concede through semantic commitments"	rdf:object	"mean to evaluate the possible eagerness to concede through semantic commitment"
s10.1	"mean to evaluate the possible eagerness to concede through semantic commitment"	rdfs:member	"semantic commitment"
s10.1	"mean to evaluate the possible eagerness to concede through semantic commitment"	rdfs:member	"possible eagerness"
s10.1	"mean to evaluate the possible eagerness to concede through semantic commitment"	rdfs:member	"mean"
s10.1	"semantic commitment"	rdfs:subClassOf	"commitment"
s10.1	"possible eagerness"	rdfs:member	"possible"
s10.1	"possible eagerness"	rdfs:subClassOf	"eagerness"
s10.1	"semantic commitment"	rdfs:member	"semantic"
s10.1	"concede through semantic commitment"	rdfs:member	"concede"
s10.1	"concede through semantic commitment"	rdfs:member	"semantic commitment"
s10	"resulting strategy"
s10	"resulting strategy"	rdf:subject	"strategy"
s10	"resulting strategy"	rdf:predicate	"result"
s9.2	"choosing the best similarity hypotheses"
s9.2	"choosing the best similarity hypotheses"	rdf:subject	"best similarity hypothesis"
s9.2	"similarity hypothesis"	rdfs:member	"similarity"
s9.2	"best similarity"	rdfs:subClassOf	"similarity"
s9.2	"best similarity hypothesis"	rdfs:subClassOf	"hypothesis"
s9.2	"similarity hypothesis"	rdfs:subClassOf	"hypothesis"
s9.2	"best similarity hypothesis"	rdfs:member	"best similarity"
s9.2	"best similarity"	rdfs:member	"best"
s9.2	"best similarity hypothesis"	rdfs:subClassOf	"similarity hypothesis"
s9.2	"choosing the best similarity hypotheses"	rdf:predicate	"choose"
s9.1	"a resulting strategy uses presuppositions for choosing the best similarity hypotheses"
s9.1	"a resulting strategy uses presuppositions for choosing the best similarity hypotheses"	rdf:subject	"result strategy"
s9.1	"result strategy"	rdfs:member	"result"
s9.1	"result strategy"	rdfs:subClassOf	"strategy"
s9.1	"a resulting strategy uses presuppositions for choosing the best similarity hypotheses"	rdf:predicate	"use"
s9.1	"a resulting strategy uses presuppositions for choosing the best similarity hypotheses"	rdf:object	"presupposition"
s9.1	"a resulting strategy uses presuppositions for choosing the best similarity hypotheses"	local:AM-PNC	"choose the best similarity hypothesis"
s9.1	"similarity hypothesis"	rdfs:member	"similarity"
s9.1	"best similarity"	rdfs:subClassOf	"similarity"
s9.1	"best similarity hypothesis"	rdfs:subClassOf	"hypothesis"
s9.1	"similarity hypothesis"	rdfs:subClassOf	"hypothesis"
s9.1	"best similarity hypothesis"	rdfs:member	"best similarity"
s9.1	"best similarity"	rdfs:member	"best"
s9.1	"best similarity hypothesis"	rdfs:subClassOf	"similarity hypothesis"
s9	"resulting strategy"
s9	"resulting strategy"	rdf:subject	"strategy"
s9	"resulting strategy"	rdf:predicate	"result"
s8.3	"make the mutual concession to the common sense"
s8.3	"make the mutual concession to the common sense"	rdf:subject	"mutual concession"
s8.3	"mutual concession"	rdfs:subClassOf	"concession"
s8.3	"mutual concession"	rdfs:member	"mutual"
s8.3	"make the mutual concession to the common sense"	rdf:predicate	"make"
s8.3	"make the mutual concession to the common sense"	rdf:object	"common sense"
s8.3	"common sense"	rdfs:member	"common"
s8.3	"common sense"	rdfs:subClassOf	"sense"
s8.2	"choosing"
s8.2	"choosing"	rdf:predicate	"choose"
s8.1	"a resulting strategy uses presuppositions for choosing to make the mutual concession to the common sense monotonic"
s8.1	"a resulting strategy uses presuppositions for choosing to make the mutual concession to the common sense monotonic"	rdf:subject	"result strategy"
s8.1	"result strategy"	rdfs:member	"result"
s8.1	"result strategy"	rdfs:subClassOf	"strategy"
s8.1	"a resulting strategy uses presuppositions for choosing to make the mutual concession to the common sense monotonic"	rdf:predicate	"use"
s8.1	"a resulting strategy uses presuppositions for choosing to make the mutual concession to the common sense monotonic"	rdf:object	"presupposition choose to make the mutual concession to the common sense monotonic"
s8.1	"presupposition choose to make the mutual concession to the common sense monotonic"	rdfs:member	"mutual concession"
s8.1	"presupposition choose to make the mutual concession to the common sense monotonic"	rdfs:member	"common sense monotonic"
s8.1	"presupposition choose to make the mutual concession to the common sense monotonic"	rdfs:member	"presupposition choose"
s8.1	"sense monotonic"	rdfs:member	"sense"
s8.1	"mutual concession"	rdfs:member	"mutual"
s8.1	"common sense"	rdfs:member	"common"
s8.1	"mutual concession"	rdfs:subClassOf	"concession"
s8.1	"common sense monotonic"	rdfs:subClassOf	"monotonic"
s8.1	"common sense"	rdfs:subClassOf	"sense"
s8.1	"presupposition choose"	rdfs:member	"presupposition"
s8.1	"sense monotonic"	rdfs:subClassOf	"monotonic"
s8.1	"presupposition choose"	rdfs:subClassOf	"choose"
s8.1	"common sense monotonic"	rdfs:member	"common sense"
s8.1	"make to common sense"	rdfs:member	"make"
s8.1	"make to common sense"	rdfs:member	"common sense"
s8	"resulting strategy"
s8	"resulting strategy"	rdf:subject	"strategy"
s8	"resulting strategy"	rdf:predicate	"result"
s7.3	"assessing propositional substitutions"
s7.3	"assessing propositional substitutions"	rdf:subject	"propositional substitution"
s7.3	"propositional substitution"	rdfs:member	"propositional"
s7.3	"propositional substitution"	rdfs:subClassOf	"substitution"
s7.3	"assessing propositional substitutions"	rdf:predicate	"assess"
s7.2	"measuring contextual similarity"
s7.2	"measuring contextual similarity"	rdf:subject	"contextual similarity"
s7.2	"contextual similarity"	rdfs:subClassOf	"similarity"
s7.2	"contextual similarity"	rdfs:member	"contextual"
s7.2	"measuring contextual similarity"	rdf:predicate	"measure"
s7.1	"a resulting strategy contains the mechanisms for measuring contextual similarity through assessing propositional substitutions"
s7.1	"a resulting strategy contains the mechanisms for measuring contextual similarity through assessing propositional substitutions"	rdf:subject	"result strategy"
s7.1	"result strategy"	rdfs:member	"result"
s7.1	"result strategy"	rdfs:subClassOf	"strategy"
s7.1	"a resulting strategy contains the mechanisms for measuring contextual similarity through assessing propositional substitutions"	rdf:predicate	"contain"
s7.1	"a resulting strategy contains the mechanisms for measuring contextual similarity through assessing propositional substitutions"	rdf:object	"mechanism for measure contextual similarity through ass propositional substitution"
s7.1	"mechanism for measure contextual similarity through ass propositional substitution"	rdfs:member	"propositional substitution"
s7.1	"mechanism for measure contextual similarity through ass propositional substitution"	rdfs:member	"contextual similarity"
s7.1	"mechanism for measure contextual similarity through ass propositional substitution"	rdfs:member	"mechanism"
s7.1	"mechanism for measure contextual similarity through ass propositional substitution"	rdfs:member	"measure"
s7.1	"mechanism for measure contextual similarity through ass propositional substitution"	rdfs:member	"ass"
s7.1	"propositional substitution"	rdfs:member	"propositional"
s7.1	"contextual similarity"	rdfs:subClassOf	"similarity"
s7.1	"propositional substitution"	rdfs:subClassOf	"substitution"
s7.1	"contextual similarity"	rdfs:member	"contextual"
s7.1	"ass propositional substitution"	rdfs:subClassOf	"propositional substitution"
s7.1	"measure contextual similarity"	rdfs:subClassOf	"contextual similarity"
s7.1	"mechanism for measure contextual similarity"	rdfs:member	"mechanism"
s7.1	"mechanism for measure contextual similarity"	rdfs:member	"measure contextual similarity"
s7.1	"measure contextual similarity through ass propositional substitution"	rdfs:member	"measure contextual similarity"
s7.1	"measure contextual similarity through ass propositional substitution"	rdfs:member	"ass propositional substitution"
s7	"resulting strategy"
s7	"resulting strategy"	rdf:subject	"strategy"
s7	"resulting strategy"	rdf:predicate	"result"
s6.3	"generating extra contexts"
s6.3	"generating extra contexts"	rdf:subject	"extra context"
s6.3	"extra context"	rdfs:member	"extra"
s6.3	"extra context"	rdfs:subClassOf	"context"
s6.3	"generating extra contexts"	rdf:predicate	"generate"
s6.2	"provide argumentation through generating extra contexts"
s6.2	"provide argumentation through generating extra contexts"	rdf:subject	"argumentation"
s6.2	"provide argumentation through generating extra contexts"	rdf:predicate	"provide"
s6.2	"provide argumentation through generating extra contexts"	rdf:object	"generate extra context"
s6.2	"generate extra context"	rdfs:member	"extra context"
s6.2	"generate extra context"	rdfs:member	"generate"
s6.2	"extra context"	rdfs:member	"extra"
s6.2	"extra context"	rdfs:subClassOf	"context"
s6.1	"a resulting strategy contains the mechanisms for to provide argumentation through generating extra contexts"
s6.1	"a resulting strategy contains the mechanisms for to provide argumentation through generating extra contexts"	rdf:subject	"result strategy"
s6.1	"result strategy"	rdfs:member	"result"
s6.1	"result strategy"	rdfs:subClassOf	"strategy"
s6.1	"a resulting strategy contains the mechanisms for to provide argumentation through generating extra contexts"	rdf:predicate	"contain"
s6.1	"a resulting strategy contains the mechanisms for to provide argumentation through generating extra contexts"	rdf:object	"mechanism for to provide argumentation through generate extra context"
s6.1	"mechanism for to provide argumentation through generate extra context"	rdfs:member	"argumentation"
s6.1	"mechanism for to provide argumentation through generate extra context"	rdfs:member	"generate"
s6.1	"mechanism for to provide argumentation through generate extra context"	rdfs:member	"extra context"
s6.1	"mechanism for to provide argumentation through generate extra context"	rdfs:member	"mechanism"
s6.1	"extra context"	rdfs:member	"extra"
s6.1	"extra context"	rdfs:subClassOf	"context"
s6	"resulting strategy"
s6	"resulting strategy"	rdf:subject	"strategy"
s6	"resulting strategy"	rdf:predicate	"result"
s5.2	"accounting the relationships among the properties"
s5.2	"accounting the relationships among the properties"	rdf:subject	"relationship among the property"
s5.2	"relationship among the property"	rdfs:member	"property"
s5.2	"relationship among the property"	rdfs:member	"relationship"
s5.2	"relationship among property"	rdfs:member	"relationship"
s5.2	"relationship among property"	rdfs:member	"property"
s5.2	"accounting the relationships among the properties"	rdf:predicate	"account"
s5.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"
s5.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:subject	"result strategy"
s5.1	"result strategy"	rdfs:member	"result"
s5.1	"result strategy"	rdfs:subClassOf	"strategy"
s5.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:predicate	"compare"
s5.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:object	"context of two background domain theory not concept by concept but the whole context to the other context"
s5.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"other context"
s5.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"background domain theory"
s5.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"whole context"
s5.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"concept"
s5.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"context"
s5.1	"background domain"	rdfs:subClassOf	"domain"
s5.1	"domain theory"	rdfs:member	"domain"
s5.1	"other context"	rdfs:subClassOf	"context"
s5.1	"background domain theory"	rdfs:member	"background domain"
s5.1	"domain theory"	rdfs:subClassOf	"theory"
s5.1	"whole context"	rdfs:subClassOf	"context"
s5.1	"background domain theory"	rdfs:subClassOf	"theory"
s5.1	"whole context"	rdfs:member	"whole"
s5.1	"background domain"	rdfs:member	"background"
s5.1	"other context"	rdfs:member	"other"
s5.1	"whole other context"	rdfs:subClassOf	"other context"
s5.1	"not concept"	rdfs:subClassOf	"concept"
s5.1	"background domain theory"	rdfs:subClassOf	"domain theory"
s5.1	"two background domain theory"	rdfs:subClassOf	"background domain theory"
s5.1	"context of two background domain theory"	rdfs:member	"context"
s5.1	"context of two background domain theory"	rdfs:member	"two background domain theory"
s5.1	"not concept by concept"	rdfs:member	"not concept"
s5.1	"not concept by concept"	rdfs:member	"concept"
s5.1	"whole other context to other context"	rdfs:member	"whole other context"
s5.1	"whole other context to other context"	rdfs:member	"other context"
s5	"resulting strategy"
s5	"resulting strategy"	rdf:subject	"strategy"
s5	"resulting strategy"	rdf:predicate	"result"
s4.2	"accounting the relationships among the constraints over properties"
s4.2	"accounting the relationships among the constraints over properties"	rdf:subject	"relationship among the constraint over property"
s4.2	"relationship among the constraint over property"	rdfs:member	"property"
s4.2	"relationship among the constraint over property"	rdfs:member	"relationship"
s4.2	"relationship among the constraint over property"	rdfs:member	"constraint"
s4.2	"relationship among constraint"	rdfs:member	"relationship"
s4.2	"relationship among constraint"	rdfs:member	"constraint"
s4.2	"relationship among constraint over property"	rdfs:member	"relationship among constraint"
s4.2	"relationship among constraint over property"	rdfs:member	"property"
s4.2	"accounting the relationships among the constraints over properties"	rdf:predicate	"account"
s4.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among the constraints over properties"
s4.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among the constraints over properties"	rdf:subject	"result strategy"
s4.1	"result strategy"	rdfs:member	"result"
s4.1	"result strategy"	rdfs:subClassOf	"strategy"
s4.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among the constraints over properties"	rdf:predicate	"compare"
s4.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among the constraints over properties"	rdf:object	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"other context"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"background domain theory"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"whole context"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"property"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"concept"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"context"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"account"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"relationship"
s4.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among the constraint over property"	rdfs:member	"constraint"
s4.1	"background domain"	rdfs:subClassOf	"domain"
s4.1	"domain theory"	rdfs:member	"domain"
s4.1	"other context"	rdfs:subClassOf	"context"
s4.1	"background domain theory"	rdfs:member	"background domain"
s4.1	"domain theory"	rdfs:subClassOf	"theory"
s4.1	"whole context"	rdfs:subClassOf	"context"
s4.1	"background domain theory"	rdfs:subClassOf	"theory"
s4.1	"whole context"	rdfs:member	"whole"
s4.1	"background domain"	rdfs:member	"background"
s4.1	"other context"	rdfs:member	"other"
s4.1	"whole other context"	rdfs:subClassOf	"other context"
s4.1	"not concept"	rdfs:subClassOf	"concept"
s4.1	"background domain theory"	rdfs:subClassOf	"domain theory"
s4.1	"two background domain theory"	rdfs:subClassOf	"background domain theory"
s4.1	"context of two background domain theory"	rdfs:member	"context"
s4.1	"context of two background domain theory"	rdfs:member	"two background domain theory"
s4.1	"not concept by concept"	rdfs:member	"not concept"
s4.1	"not concept by concept"	rdfs:member	"concept"
s4.1	"whole other context to other context"	rdfs:member	"whole other context"
s4.1	"whole other context to other context"	rdfs:member	"other context"
s4.1	"whole other context to other context by account"	rdfs:member	"whole other context to other context"
s4.1	"whole other context to other context by account"	rdfs:member	"account"
s4.1	"relationship among constraint"	rdfs:member	"relationship"
s4.1	"relationship among constraint"	rdfs:member	"constraint"
s4.1	"relationship among constraint over property"	rdfs:member	"relationship among constraint"
s4.1	"relationship among constraint over property"	rdfs:member	"property"
s4	"resulting strategy"
s4	"resulting strategy"	rdf:subject	"strategy"
s4	"resulting strategy"	rdf:predicate	"result"
s3.2	"accounting the relationships among concepts"
s3.2	"accounting the relationships among concepts"	rdf:subject	"relationship among concept"
s3.2	"relationship among concept"	rdfs:member	"relationship"
s3.2	"relationship among concept"	rdfs:member	"concept"
s3.2	"relationship among concept"	rdfs:member	"relationship"
s3.2	"relationship among concept"	rdfs:member	"concept"
s3.2	"accounting the relationships among concepts"	rdf:predicate	"account"
s3.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among concepts"
s3.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among concepts"	rdf:subject	"result strategy"
s3.1	"result strategy"	rdfs:member	"result"
s3.1	"result strategy"	rdfs:subClassOf	"strategy"
s3.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among concepts"	rdf:predicate	"compare"
s3.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context by accounting the relationships among concepts"	rdf:object	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"other context"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"background domain theory"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"whole context"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"concept"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"context"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"account"
s3.1	"context of two background domain theory not concept by concept but the whole context to the other context by account the relationship among concept"	rdfs:member	"relationship"
s3.1	"background domain"	rdfs:subClassOf	"domain"
s3.1	"domain theory"	rdfs:member	"domain"
s3.1	"other context"	rdfs:subClassOf	"context"
s3.1	"background domain theory"	rdfs:member	"background domain"
s3.1	"domain theory"	rdfs:subClassOf	"theory"
s3.1	"whole context"	rdfs:subClassOf	"context"
s3.1	"background domain theory"	rdfs:subClassOf	"theory"
s3.1	"whole context"	rdfs:member	"whole"
s3.1	"background domain"	rdfs:member	"background"
s3.1	"other context"	rdfs:member	"other"
s3.1	"whole other context"	rdfs:subClassOf	"other context"
s3.1	"not concept"	rdfs:subClassOf	"concept"
s3.1	"background domain theory"	rdfs:subClassOf	"domain theory"
s3.1	"two background domain theory"	rdfs:subClassOf	"background domain theory"
s3.1	"context of two background domain theory"	rdfs:member	"context"
s3.1	"context of two background domain theory"	rdfs:member	"two background domain theory"
s3.1	"not concept by concept"	rdfs:member	"not concept"
s3.1	"not concept by concept"	rdfs:member	"concept"
s3.1	"whole other context to other context"	rdfs:member	"whole other context"
s3.1	"whole other context to other context"	rdfs:member	"other context"
s3.1	"whole other context to other context by account"	rdfs:member	"whole other context to other context"
s3.1	"whole other context to other context by account"	rdfs:member	"account"
s3.1	"relationship among concept"	rdfs:member	"relationship"
s3.1	"relationship among concept"	rdfs:member	"concept"
s3	"resulting strategy"
s3	"resulting strategy"	rdf:subject	"strategy"
s3	"resulting strategy"	rdf:predicate	"result"
s2.2	"accounting the relationships among the available instances"
s2.2	"accounting the relationships among the available instances"	rdf:subject	"relationship among the available instance"
s2.2	"relationship among the available instance"	rdfs:member	"relationship"
s2.2	"relationship among the available instance"	rdfs:member	"available instance"
s2.2	"available instance"	rdfs:member	"available"
s2.2	"available instance"	rdfs:subClassOf	"instance"
s2.2	"relationship among available instance"	rdfs:member	"relationship"
s2.2	"relationship among available instance"	rdfs:member	"available instance"
s2.2	"accounting the relationships among the available instances"	rdf:predicate	"account"
s2.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"
s2.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:subject	"result strategy"
s2.1	"result strategy"	rdfs:member	"result"
s2.1	"result strategy"	rdfs:subClassOf	"strategy"
s2.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:predicate	"compare"
s2.1	"a resulting strategy compares the contexts of two background domain theories not concept by concept but the whole context to the other context"	rdf:object	"context of two background domain theory not concept by concept but the whole context to the other context"
s2.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"other context"
s2.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"background domain theory"
s2.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"whole context"
s2.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"concept"
s2.1	"context of two background domain theory not concept by concept but the whole context to the other context"	rdfs:member	"context"
s2.1	"background domain"	rdfs:subClassOf	"domain"
s2.1	"domain theory"	rdfs:member	"domain"
s2.1	"other context"	rdfs:subClassOf	"context"
s2.1	"background domain theory"	rdfs:member	"background domain"
s2.1	"domain theory"	rdfs:subClassOf	"theory"
s2.1	"whole context"	rdfs:subClassOf	"context"
s2.1	"background domain theory"	rdfs:subClassOf	"theory"
s2.1	"whole context"	rdfs:member	"whole"
s2.1	"background domain"	rdfs:member	"background"
s2.1	"other context"	rdfs:member	"other"
s2.1	"whole other context"	rdfs:subClassOf	"other context"
s2.1	"not concept"	rdfs:subClassOf	"concept"
s2.1	"background domain theory"	rdfs:subClassOf	"domain theory"
s2.1	"two background domain theory"	rdfs:subClassOf	"background domain theory"
s2.1	"context of two background domain theory"	rdfs:member	"context"
s2.1	"context of two background domain theory"	rdfs:member	"two background domain theory"
s2.1	"not concept by concept"	rdfs:member	"not concept"
s2.1	"not concept by concept"	rdfs:member	"concept"
s2.1	"whole other context to other context"	rdfs:member	"whole other context"
s2.1	"whole other context to other context"	rdfs:member	"other context"
s2	"resulting strategy"
s2	"resulting strategy"	rdf:subject	"strategy"
s2	"resulting strategy"	rdf:predicate	"result"
s1	"the advancements of the formal framework the following"
s1	"the advancements of the formal framework the following"	rdf:subject	"advancement of the formal framework"
s1	"advancement of the formal framework"	rdfs:member	"formal framework"
s1	"advancement of the formal framework"	rdfs:member	"advancement"
s1	"formal framework"	rdfs:member	"formal"
s1	"formal framework"	rdfs:subClassOf	"framework"
s1	"advancement of formal framework"	rdfs:member	"advancement"
s1	"advancement of formal framework"	rdfs:member	"formal framework"
s1	"the advancements of the formal framework the following"	rdf:predicate	"follow"
s1	"the advancements of the formal framework the following"	local:AM-TMP	"follow"
s0	"distributed information retrieval system"
s0	"distributed information retrieval system"	rdf:subject	"information retrieval system"
s0	"retrieval system"	rdfs:member	"retrieval"
s0	"information retrieval"	rdfs:member	"information"
s0	"information retrieval"	rdfs:subClassOf	"retrieval"
s0	"retrieval system"	rdfs:subClassOf	"system"
s0	"information retrieval system"	rdfs:member	"information retrieval"
s0	"information retrieval system"	rdfs:subClassOf	"system"
s0	"information retrieval system"	rdfs:subClassOf	"retrieval system"
s0	"distributed information retrieval system"	rdf:predicate	"distribute"
