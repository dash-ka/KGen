s12	"in addition rul supports finegrained updates at the class setoriented updates with a deterministic semantics"
s12	"in addition rul supports finegrained updates at the class setoriented updates with a deterministic semantics"	rdf:subject	"rul"
s12	"in addition rul supports finegrained updates at the class setoriented updates with a deterministic semantics"	rdf:predicate	"support"
s12	"in addition rul supports finegrained updates at the class setoriented updates with a deterministic semantics"	rdf:object	"finegrained update at the class setoriented update with a deterministic semantics"
s12	"finegrained update at the class setoriented update with a deterministic semantics"	rdfs:member	"update"
s12	"finegrained update at the class setoriented update with a deterministic semantics"	rdfs:member	"deterministic semantics"
s12	"finegrained update at the class setoriented update with a deterministic semantics"	rdfs:member	"class"
s12	"deterministic semantics"	rdfs:member	"deterministic"
s12	"deterministic semantics"	rdfs:subClassOf	"semantics"
s12	"class setoriented"	rdfs:subClassOf	"setoriented"
s12	"update at class setoriented"	rdfs:member	"update"
s12	"update at class setoriented"	rdfs:member	"class setoriented"
s12	"update with deterministic semantics"	rdfs:member	"update"
s12	"update with deterministic semantics"	rdfs:member	"deterministic semantics"
s12	"in addition rul supports finegrained updates at the class setoriented updates with a deterministic semantics"	local:AM-DIS	"addition"
s11	"in addition rul supports finegrained updates at property instance level setoriented updates with a deterministic semantics"
s11	"in addition rul supports finegrained updates at property instance level setoriented updates with a deterministic semantics"	rdf:subject	"rul"
s11	"in addition rul supports finegrained updates at property instance level setoriented updates with a deterministic semantics"	rdf:predicate	"support"
s11	"in addition rul supports finegrained updates at property instance level setoriented updates with a deterministic semantics"	rdf:object	"finegrained update at property instance level setoriented update with a deterministic semantics"
s11	"finegrained update at property instance level setoriented update with a deterministic semantics"	rdfs:member	"property instance level"
s11	"finegrained update at property instance level setoriented update with a deterministic semantics"	rdfs:member	"deterministic semantics"
s11	"instance level"	rdfs:subClassOf	"level"
s11	"deterministic semantics"	rdfs:member	"deterministic"
s11	"property instance"	rdfs:member	"property"
s11	"property instance"	rdfs:subClassOf	"instance"
s11	"property instance level"	rdfs:member	"property instance"
s11	"property instance level"	rdfs:subClassOf	"level"
s11	"deterministic semantics"	rdfs:subClassOf	"semantics"
s11	"instance level"	rdfs:member	"instance"
s11	"property instance level"	rdfs:subClassOf	"instance level"
s11	"update at property instance level"	rdfs:member	"update"
s11	"update at property instance level"	rdfs:member	"property instance level"
s11	"update with deterministic semantics"	rdfs:member	"update"
s11	"update with deterministic semantics"	rdfs:member	"deterministic semantics"
s11	"in addition rul supports finegrained updates at property instance level setoriented updates with a deterministic semantics"	local:AM-DIS	"addition"
s10.1	"restricting the range of variables to arcs of rdf graphs"
s10.1	"restricting the range of variables to arcs of rdf graphs"	rdf:subject	"range of variable"
s10.1	"range of variable"	rdfs:member	"range"
s10.1	"range of variable"	rdfs:member	"variable"
s10.1	"restricting the range of variables to arcs of rdf graphs"	rdf:predicate	"restrict"
s10.1	"restricting the range of variables to arcs of rdf graphs"	rdf:object	"arc of rdf graph"
s10.1	"arc of rdf graph"	rdfs:member	"arc"
s10.1	"arc of rdf graph"	rdfs:member	"rdf graph"
s10.1	"rdf graph"	rdfs:member	"rdf"
s10.1	"rdf graph"	rdfs:subClassOf	"graph"
s10.1	"arc of rdf graph"	rdfs:member	"arc"
s10.1	"arc of rdf graph"	rdfs:member	"rdf graph"
s10	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"
s10	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:subject	"rul"
s10	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:predicate	"take"
s10	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:object	"benefit full expressive power of rql for restrict the range of variable"
s10	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"benefit"
s10	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"restrict"
s10	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"range"
s10	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"full expressive power"
s10	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"rql"
s10	"expressive power"	rdfs:subClassOf	"power"
s10	"full expressive"	rdfs:subClassOf	"expressive"
s10	"full expressive power"	rdfs:member	"full expressive"
s10	"full expressive power"	rdfs:subClassOf	"power"
s10	"full expressive"	rdfs:member	"full"
s10	"expressive power"	rdfs:member	"expressive"
s10	"full expressive power"	rdfs:subClassOf	"expressive power"
s10	"benefit full expressive power"	rdfs:subClassOf	"full expressive power"
s10	"benefit full expressive power of rql"	rdfs:member	"benefit full expressive power"
s10	"benefit full expressive power of rql"	rdfs:member	"rql"
s10	"range of variable"	rdfs:member	"range"
s10	"range of variable"	rdfs:member	"variable"
s10	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	local:AM-DIS	"addition"
s9.1	"restricting the range of variables to nodes of rdf graphs"
s9.1	"restricting the range of variables to nodes of rdf graphs"	rdf:subject	"range of variable"
s9.1	"range of variable"	rdfs:member	"range"
s9.1	"range of variable"	rdfs:member	"variable"
s9.1	"restricting the range of variables to nodes of rdf graphs"	rdf:predicate	"restrict"
s9.1	"restricting the range of variables to nodes of rdf graphs"	rdf:object	"nod of rdf graph"
s9.1	"nod of rdf graph"	rdfs:member	"nod"
s9.1	"nod of rdf graph"	rdfs:member	"rdf graph"
s9.1	"rdf graph"	rdfs:member	"rdf"
s9.1	"rdf graph"	rdfs:subClassOf	"graph"
s9.1	"nod of rdf graph"	rdfs:member	"nod"
s9.1	"nod of rdf graph"	rdfs:member	"rdf graph"
s9	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"
s9	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:subject	"rul"
s9	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:predicate	"take"
s9	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	rdf:object	"benefit full expressive power of rql for restrict the range of variable"
s9	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"benefit"
s9	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"restrict"
s9	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"range"
s9	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"full expressive power"
s9	"benefit full expressive power of rql for restrict the range of variable"	rdfs:member	"rql"
s9	"expressive power"	rdfs:subClassOf	"power"
s9	"full expressive"	rdfs:subClassOf	"expressive"
s9	"full expressive power"	rdfs:member	"full expressive"
s9	"full expressive power"	rdfs:subClassOf	"power"
s9	"full expressive"	rdfs:member	"full"
s9	"expressive power"	rdfs:member	"expressive"
s9	"full expressive power"	rdfs:subClassOf	"expressive power"
s9	"benefit full expressive power"	rdfs:subClassOf	"full expressive power"
s9	"benefit full expressive power of rql"	rdfs:member	"benefit full expressive power"
s9	"benefit full expressive power of rql"	rdfs:member	"rql"
s9	"range of variable"	rdfs:member	"range"
s9	"range of variable"	rdfs:member	"variable"
s9	"in addition rul takes benefit of the full expressive power of rql for restricting the range of variables"	local:AM-DIS	"addition"
s8.2	"given rdfs schema"
s8.2	"given rdfs schema"	rdf:subject	"rdfs schema"
s8.2	"rdfs schema"	rdfs:member	"rdfs"
s8.2	"rdfs schema"	rdfs:subClassOf	"schema"
s8.2	"given rdfs schema"	rdf:predicate	"give"
s8.1	"violates the semantics of the given rdfs schema"
s8.1	"violates the semantics of the given rdfs schema"	rdf:subject	"semantics of the give rdfs schema"
s8.1	"semantics of the give rdfs schema"	rdfs:member	"semantics"
s8.1	"semantics of the give rdfs schema"	rdfs:member	"give rdfs schema"
s8.1	"give rdfs schema"	rdfs:subClassOf	"schema"
s8.1	"rdfs schema"	rdfs:member	"rdfs"
s8.1	"give rdfs"	rdfs:subClassOf	"rdfs"
s8.1	"rdfs schema"	rdfs:subClassOf	"schema"
s8.1	"give rdfs schema"	rdfs:member	"give rdfs"
s8.1	"give rdfs"	rdfs:member	"give"
s8.1	"semantics of the"	rdfs:member	"semantics"
s8.1	"semantics of the"	rdfs:member	"the"
s8.1	"violates the semantics of the given rdfs schema"	rdf:predicate	"violate"
s8	"our language ensures that the execution of the violates the semantics of the given rdfs schema"
s8	"our language ensures that the execution of the violates the semantics of the given rdfs schema"	rdf:subject	"language"
s8	"our language ensures that the execution of the violates the semantics of the given rdfs schema"	rdf:predicate	"ensure"
s8	"our language ensures that the execution of the violates the semantics of the given rdfs schema"	rdf:object	"execution of the violate the semantics of the give rdfs schema"
s8	"execution of the violate the semantics of the give rdfs schema"	rdfs:member	"semantics"
s8	"execution of the violate the semantics of the give rdfs schema"	rdfs:member	"execution"
s8	"execution of the violate the semantics of the give rdfs schema"	rdfs:member	"violate"
s8	"execution of the violate the semantics of the give rdfs schema"	rdfs:member	"give rdfs schema"
s8	"give rdfs schema"	rdfs:subClassOf	"schema"
s8	"rdfs schema"	rdfs:member	"rdfs"
s8	"give rdfs"	rdfs:subClassOf	"rdfs"
s8	"rdfs schema"	rdfs:subClassOf	"schema"
s8	"give rdfs schema"	rdfs:member	"give rdfs"
s8	"give rdfs"	rdfs:member	"give"
s8	"execution of violate"	rdfs:member	"execution"
s8	"execution of violate"	rdfs:member	"violate"
s8	"semantics of the"	rdfs:member	"semantics"
s8	"semantics of the"	rdfs:member	"the"
s7.1	"violates the semantics of the rdf model"
s7.1	"violates the semantics of the rdf model"	rdf:subject	"semantics of the rdf model"
s7.1	"semantics of the rdf model"	rdfs:member	"semantics"
s7.1	"semantics of the rdf model"	rdfs:member	"rdf model"
s7.1	"rdf model"	rdfs:member	"rdf"
s7.1	"rdf model"	rdfs:subClassOf	"model"
s7.1	"semantics of rdf model"	rdfs:member	"semantics"
s7.1	"semantics of rdf model"	rdfs:member	"rdf model"
s7.1	"violates the semantics of the rdf model"	rdf:predicate	"violate"
s7	"our language ensures that the execution of the violates the semantics of the rdf model"
s7	"our language ensures that the execution of the violates the semantics of the rdf model"	rdf:subject	"language"
s7	"our language ensures that the execution of the violates the semantics of the rdf model"	rdf:predicate	"ensure"
s7	"our language ensures that the execution of the violates the semantics of the rdf model"	rdf:object	"execution of the violate the semantics of the rdf model"
s7	"execution of the violate the semantics of the rdf model"	rdfs:member	"semantics"
s7	"execution of the violate the semantics of the rdf model"	rdfs:member	"execution"
s7	"execution of the violate the semantics of the rdf model"	rdfs:member	"violate"
s7	"execution of the violate the semantics of the rdf model"	rdfs:member	"rdf model"
s7	"rdf model"	rdfs:member	"rdf"
s7	"rdf model"	rdfs:subClassOf	"model"
s7	"execution of violate"	rdfs:member	"execution"
s7	"execution of violate"	rdfs:member	"violate"
s7	"semantics of rdf model"	rdfs:member	"semantics"
s7	"semantics of rdf model"	rdfs:member	"rdf model"
s6	"our language ensures that the execution of the update primitives on nodes"
s6	"our language ensures that the execution of the update primitives on nodes"	rdf:subject	"language"
s6	"our language ensures that the execution of the update primitives on nodes"	rdf:predicate	"ensure"
s6	"our language ensures that the execution of the update primitives on nodes"	rdf:object	"execution of the update primitive on nod"
s6	"execution of the update primitive on nod"	rdfs:member	"nod"
s6	"execution of the update primitive on nod"	rdfs:member	"execution"
s6	"execution of the update primitive on nod"	rdfs:member	"update primitive"
s6	"update primitive"	rdfs:subClassOf	"primitive"
s6	"update primitive"	rdfs:member	"update"
s6	"primitive update"	rdfs:subClassOf	"update"
s6	"execution of primitive update"	rdfs:member	"execution"
s6	"execution of primitive update"	rdfs:member	"primitive update"
s6	"primitive on nod"	rdfs:member	"primitive"
s6	"primitive on nod"	rdfs:member	"nod"
s5	"our language ensures that the execution of the update primitives on arcs"
s5	"our language ensures that the execution of the update primitives on arcs"	rdf:subject	"language"
s5	"our language ensures that the execution of the update primitives on arcs"	rdf:predicate	"ensure"
s5	"our language ensures that the execution of the update primitives on arcs"	rdf:object	"execution of the update primitive on arc"
s5	"execution of the update primitive on arc"	rdfs:member	"execution"
s5	"execution of the update primitive on arc"	rdfs:member	"arc"
s5	"execution of the update primitive on arc"	rdfs:member	"update primitive"
s5	"update primitive"	rdfs:subClassOf	"primitive"
s5	"update primitive"	rdfs:member	"update"
s5	"primitive update"	rdfs:subClassOf	"update"
s5	"execution of primitive update"	rdfs:member	"execution"
s5	"execution of primitive update"	rdfs:member	"primitive update"
s5	"primitive on arc"	rdfs:member	"primitive"
s5	"primitive on arc"	rdfs:member	"arc"
s4	"our language called rul"
s4	"our language called rul"	rdf:subject	"language"
s4	"our language called rul"	rdf:predicate	"call"
s4	"our language called rul"	rdf:object	"rul"
s3	"we propose a declarative update language for rdf graphs"
s3	"we propose a declarative update language for rdf graphs"	rdf:subject	"we"
s3	"we propose a declarative update language for rdf graphs"	rdf:predicate	"propose"
s3	"we propose a declarative update language for rdf graphs"	rdf:object	"declarative update language for rdf graph"
s3	"declarative update language for rdf graph"	rdfs:member	"rdf graph"
s3	"declarative update language for rdf graph"	rdfs:member	"declarative update language"
s3	"update language"	rdfs:subClassOf	"language"
s3	"rdf graph"	rdfs:subClassOf	"graph"
s3	"declarative update language"	rdfs:member	"declarative update"
s3	"declarative update"	rdfs:subClassOf	"update"
s3	"declarative update"	rdfs:member	"declarative"
s3	"rdf graph"	rdfs:member	"rdf"
s3	"declarative update language"	rdfs:subClassOf	"language"
s3	"update language"	rdfs:member	"update"
s3	"language for rdf graph"	rdfs:member	"language"
s3	"language for rdf graph"	rdfs:member	"rdf graph"
s2	"rdf graphs which based on the paradigms of rvl"
s2	"rdf graphs which based on the paradigms of rvl"	rdf:subject	"rdf graph"
s2	"rdf graph"	rdfs:member	"rdf"
s2	"rdf graph"	rdfs:subClassOf	"graph"
s2	"rdf graphs which based on the paradigms of rvl"	rdf:predicate	"base"
s2	"rdf graphs which based on the paradigms of rvl"	rdf:object	"paradigm of rvl"
s2	"paradigm of rvl"	rdfs:member	"rvl"
s2	"paradigm of rvl"	rdfs:member	"paradigm"
s2	"paradigm of rvl"	rdfs:member	"paradigm"
s2	"paradigm of rvl"	rdfs:member	"rvl"
s1	"rdf graphs which based on the paradigms of view languages rql"
s1	"rdf graphs which based on the paradigms of view languages rql"	rdf:subject	"rdf graph"
s1	"rdf graph"	rdfs:member	"rdf"
s1	"rdf graph"	rdfs:subClassOf	"graph"
s1	"rdf graphs which based on the paradigms of view languages rql"	rdf:predicate	"base"
s1	"rdf graphs which based on the paradigms of view languages rql"	rdf:object	"paradigm of view language rql"
s1	"paradigm of view language rql"	rdfs:member	"view language rql"
s1	"paradigm of view language rql"	rdfs:member	"paradigm"
s1	"view language rql"	rdfs:member	"view language"
s1	"language rql"	rdfs:member	"language"
s1	"view language"	rdfs:subClassOf	"language"
s1	"view language"	rdfs:member	"view"
s1	"language rql"	rdfs:subClassOf	"rql"
s1	"view language rql"	rdfs:subClassOf	"rql"
s1	"view language rql"	rdfs:subClassOf	"language rql"
s1	"paradigm of view language rql"	rdfs:member	"paradigm"
s1	"paradigm of view language rql"	rdfs:member	"view language rql"
s0	"rdf graphs which based on the paradigms of query languages rql"
s0	"rdf graphs which based on the paradigms of query languages rql"	rdf:subject	"rdf graph"
s0	"rdf graph"	rdfs:member	"rdf"
s0	"rdf graph"	rdfs:subClassOf	"graph"
s0	"rdf graphs which based on the paradigms of query languages rql"	rdf:predicate	"base"
s0	"rdf graphs which based on the paradigms of query languages rql"	rdf:object	"paradigm of query language rql"
s0	"paradigm of query language rql"	rdfs:member	"query language rql"
s0	"paradigm of query language rql"	rdfs:member	"paradigm"
s0	"language rql"	rdfs:member	"language"
s0	"query language rql"	rdfs:subClassOf	"rql"
s0	"query language"	rdfs:member	"query"
s0	"query language rql"	rdfs:member	"query language"
s0	"language rql"	rdfs:subClassOf	"rql"
s0	"query language"	rdfs:subClassOf	"language"
s0	"query language rql"	rdfs:subClassOf	"language rql"
s0	"paradigm of query language rql"	rdfs:member	"paradigm"
s0	"paradigm of query language rql"	rdfs:member	"query language rql"
