s11.3	"our algorithm scale easily to large numbers of peers"
s11.3	"our algorithm scale easily to large numbers of peers"	rdf:subject	"algorithm"
s11.3	"our algorithm scale easily to large numbers of peers"	rdf:predicate	"scale"
s11.3	"our algorithm scale easily to large numbers of peers"	rdf:object	"large numbers of peers"
s11.3	"large numbers of peers"	rdfs:member	"large numbers"
s11.3	"large numbers of peers"	rdfs:member	"peers"
s11.3	"large numbers"	rdfs:member	"large"
s11.3	"large numbers"	rdfs:subClassOf	"numbers"
s11.3	"large numbers of peers"	rdfs:member	"large numbers"
s11.3	"large numbers of peers"	rdfs:member	"peers"
s11.3	"our algorithm scale easily to large numbers of peers"	local:AM-MNR	"easily"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:subject	"dynamically collected query statistics only no continuous index update processes are necessary"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary"	rdfs:member	"query statistics"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary"	rdfs:member	"only no continuous index"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary"	rdfs:member	"update processes"
s11.2	"continuous index"	rdfs:member	"continuous"
s11.2	"update processes"	rdfs:subClassOf	"processes"
s11.2	"only no continuous index"	rdfs:subClassOf	"index"
s11.2	"only no continuous"	rdfs:subClassOf	"continuous"
s11.2	"no continuous index"	rdfs:subClassOf	"index"
s11.2	"only no continuous"	rdfs:member	"only no"
s11.2	"only no continuous index"	rdfs:member	"only no continuous"
s11.2	"no continuous"	rdfs:subClassOf	"continuous"
s11.2	"query statistics"	rdfs:subClassOf	"statistics"
s11.2	"no continuous"	rdfs:member	"no"
s11.2	"no continuous index"	rdfs:member	"no continuous"
s11.2	"only no"	rdfs:subClassOf	"no"
s11.2	"query statistics"	rdfs:member	"query"
s11.2	"only no"	rdfs:member	"only"
s11.2	"update processes"	rdfs:member	"update"
s11.2	"continuous index"	rdfs:subClassOf	"index"
s11.2	"index update processes"	rdfs:subClassOf	"update processes"
s11.2	"no continuous index"	rdfs:subClassOf	"continuous index"
s11.2	"only no continuous index"	rdfs:subClassOf	"no continuous index"
s11.2	"collected query statistics"	rdfs:subClassOf	"query statistics"
s11.2	"dynamically collected"	rdfs:subClassOf	"collected"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:predicate	"allow"
s11.2	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:object	"algorithm to scale easily to large numbers of peers"
s11.2	"algorithm to scale easily to large numbers of peers"	rdfs:member	"large numbers"
s11.2	"algorithm to scale easily to large numbers of peers"	rdfs:member	"peers"
s11.2	"algorithm to scale easily to large numbers of peers"	rdfs:member	"algorithm"
s11.2	"large numbers"	rdfs:member	"large"
s11.2	"large numbers"	rdfs:subClassOf	"numbers"
s11.2	"easily large numbers"	rdfs:subClassOf	"large numbers"
s11.2	"algorithm to scale"	rdfs:member	"algorithm"
s11.2	"algorithm to scale"	rdfs:member	"scale"
s11.2	"algorithm to scale to easily large numbers"	rdfs:member	"algorithm to scale"
s11.2	"algorithm to scale to easily large numbers"	rdfs:member	"easily large numbers"
s11.2	"easily large numbers of peers"	rdfs:member	"easily large numbers"
s11.2	"easily large numbers of peers"	rdfs:member	"peers"
s11.1	"dynamically collected query statistics"
s11.1	"dynamically collected query statistics"	rdf:subject	"query statistics"
s11.1	"query statistics"	rdfs:member	"query"
s11.1	"query statistics"	rdfs:subClassOf	"statistics"
s11.1	"dynamically collected query statistics"	rdf:predicate	"collect"
s11.1	"dynamically collected query statistics"	local:AM-MNR	"dynamically"
s11	"our algorithm based on dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"
s11	"our algorithm based on dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:subject	"algorithm"
s11	"our algorithm based on dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:predicate	"base"
s11	"our algorithm based on dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	rdf:object	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"
s10.2	""
s10.2	""	rdf:predicate	"merge"
s10.1	"peertopeer networks which makes use of local rankings rank merging"
s10.1	"peertopeer networks which makes use of local rankings rank merging"	rdf:subject	"peertopeer networks which makes use of local rankings"
s10.1	"peertopeer networks which makes use of local rankings"	rdfs:member	"use"
s10.1	"peertopeer networks which makes use of local rankings"	rdfs:member	"local rankings"
s10.1	"peertopeer networks which makes use of local rankings"	rdfs:member	"peertopeer networks"
s10.1	"peertopeer networks"	rdfs:subClassOf	"networks"
s10.1	"local rankings"	rdfs:subClassOf	"rankings"
s10.1	"local rankings"	rdfs:member	"local"
s10.1	"peertopeer networks"	rdfs:member	"peertopeer"
s10.1	"use of local rankings"	rdfs:member	"use"
s10.1	"use of local rankings"	rdfs:member	"local rankings"
s10.1	"peertopeer networks which makes use of local rankings rank merging"	rdf:predicate	"rank"
s10.1	"peertopeer networks which makes use of local rankings rank merging"	rdf:object	"merging"
s10	"peertopeer networks which makes use of local rankings"
s10	"peertopeer networks which makes use of local rankings"	rdf:subject	"peertopeer networks"
s10	"peertopeer networks"	rdfs:subClassOf	"networks"
s10	"peertopeer networks"	rdfs:member	"peertopeer"
s10	"peertopeer networks which makes use of local rankings"	rdf:predicate	"make"
s10	"peertopeer networks which makes use of local rankings"	rdf:object	"use of local rankings"
s10	"use of local rankings"	rdfs:member	"use"
s10	"use of local rankings"	rdfs:member	"local rankings"
s10	"local rankings"	rdfs:subClassOf	"rankings"
s10	"local rankings"	rdfs:member	"local"
s10	"use of local rankings"	rdfs:member	"use"
s10	"use of local rankings"	rdfs:member	"local rankings"
s9	"peertopeer networks which minimizes both answer"
s9	"peertopeer networks which minimizes both answer"	rdf:subject	"peertopeer networks"
s9	"peertopeer networks"	rdfs:subClassOf	"networks"
s9	"peertopeer networks"	rdfs:member	"peertopeer"
s9	"peertopeer networks which minimizes both answer"	rdf:predicate	"minimize"
s9	"peertopeer networks which minimizes both answer"	rdf:object	"answer"
s8.2	"based on peer ranks"
s8.2	"based on peer ranks"	rdf:predicate	"base"
s8.2	"based on peer ranks"	local:AM-LOC	"peer ranks"
s8.2	"peer ranks"	rdfs:member	"peer"
s8.2	"peer ranks"	rdfs:subClassOf	"ranks"
s8.1	"peertopeer networks which makes use of local rankings rank optimized routing based on peer ranks"
s8.1	"peertopeer networks which makes use of local rankings rank optimized routing based on peer ranks"	rdf:subject	"peertopeer networks which makes use of local rankings"
s8.1	"peertopeer networks which makes use of local rankings rank optimized routing based on peer ranks"	rdf:predicate	"rank"
s8.1	"peertopeer networks which makes use of local rankings rank optimized routing based on peer ranks"	rdf:object	"optimized routing based on peer ranks"
s8.1	"peer ranks"	rdfs:member	"peer"
s8.1	"peer ranks"	rdfs:subClassOf	"ranks"
s8	"peertopeer networks which makes use of local rankings"
s8	"peertopeer networks which makes use of local rankings"	rdf:subject	"peertopeer networks"
s8	"peertopeer networks"	rdfs:subClassOf	"networks"
s8	"peertopeer networks"	rdfs:member	"peertopeer"
s8	"peertopeer networks which makes use of local rankings"	rdf:predicate	"make"
s8	"peertopeer networks which makes use of local rankings"	rdf:object	"use of local rankings"
s8	"use of local rankings"	rdfs:member	"use"
s8	"use of local rankings"	rdfs:member	"local rankings"
s8	"local rankings"	rdfs:subClassOf	"rankings"
s8	"local rankings"	rdfs:member	"local"
s8	"use of local rankings"	rdfs:member	"use"
s8	"use of local rankings"	rdfs:member	"local rankings"
s7.1	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"
s7.1	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:subject	"we"
s7.1	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:predicate	"propose"
s7.1	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:object	"decentralized topk query evaluation algorithm"
s7.1	"topk query evaluation"	rdfs:subClassOf	"evaluation"
s7.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s7.1	"query evaluation algorithm"	rdfs:member	"query evaluation"
s7.1	"topk query evaluation"	rdfs:member	"topk query"
s7.1	"topk query"	rdfs:subClassOf	"query"
s7.1	"topk query"	rdfs:member	"topk"
s7.1	"evaluation algorithm"	rdfs:member	"evaluation"
s7.1	"topk query evaluation algorithm"	rdfs:member	"topk query evaluation"
s7.1	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7.1	"topk query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7.1	"query evaluation"	rdfs:member	"query"
s7.1	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7.1	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s7.1	"topk query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s7.1	"decentralized topk query evaluation algorithm"	rdfs:subClassOf	"topk query evaluation algorithm"
s7.1	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	local:AM-PNC	"peertopeer networks"
s7.1	"peertopeer networks"	rdfs:subClassOf	"networks"
s7.1	"peertopeer networks"	rdfs:member	"peertopeer"
s7	"inspired by the success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"
s7	"inspired by the success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdf:subject	"success of ranking algorithms in Web search engine in databases we propose a decentralized topk query evaluation algorithm"
s7	"success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"success"
s7	"success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"algorithms"
s7	"success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"databases"
s7	"success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"web search engine"
s7	"success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"topk query evaluation algorithm"
s7	"web search"	rdfs:subClassOf	"search"
s7	"topk query evaluation"	rdfs:subClassOf	"evaluation"
s7	"query evaluation"	rdfs:subClassOf	"evaluation"
s7	"web search engine"	rdfs:member	"web search"
s7	"query evaluation algorithm"	rdfs:member	"query evaluation"
s7	"topk query evaluation"	rdfs:member	"topk query"
s7	"topk query"	rdfs:subClassOf	"query"
s7	"topk query"	rdfs:member	"topk"
s7	"evaluation algorithm"	rdfs:member	"evaluation"
s7	"topk query evaluation algorithm"	rdfs:member	"topk query evaluation"
s7	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7	"topk query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7	"search engine"	rdfs:member	"search"
s7	"search engine"	rdfs:subClassOf	"engine"
s7	"query evaluation"	rdfs:member	"query"
s7	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s7	"web search"	rdfs:member	"web"
s7	"web search engine"	rdfs:subClassOf	"engine"
s7	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s7	"topk query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s7	"decentralized topk query evaluation algorithm"	rdfs:subClassOf	"topk query evaluation algorithm"
s7	"web search engine"	rdfs:subClassOf	"search engine"
s7	"ranking algorithms"	rdfs:subClassOf	"algorithms"
s7	"success of ranking algorithms"	rdfs:member	"success"
s7	"success of ranking algorithms"	rdfs:member	"ranking algorithms"
s7	"success of ranking algorithms in web search engine"	rdfs:member	"success of ranking algorithms"
s7	"success of ranking algorithms in web search engine"	rdfs:member	"web search engine"
s7	"propose in databases"	rdfs:member	"propose"
s7	"propose in databases"	rdfs:member	"databases"
s7	"inspired by the success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	rdf:predicate	"Inspired"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:subject	"we"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:predicate	"propose"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	rdf:object	"decentralized topk query evaluation algorithm"
s6.1	"topk query evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"query evaluation algorithm"	rdfs:member	"query evaluation"
s6.1	"topk query evaluation"	rdfs:member	"topk query"
s6.1	"topk query"	rdfs:subClassOf	"query"
s6.1	"topk query"	rdfs:member	"topk"
s6.1	"evaluation algorithm"	rdfs:member	"evaluation"
s6.1	"topk query evaluation algorithm"	rdfs:member	"topk query evaluation"
s6.1	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6.1	"topk query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6.1	"query evaluation"	rdfs:member	"query"
s6.1	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6.1	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s6.1	"topk query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s6.1	"decentralized topk query evaluation algorithm"	rdfs:subClassOf	"topk query evaluation algorithm"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	local:AM-ADV	"Inspired by the success of ranking algorithms in topk query evaluation algorithms in databases"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases"	rdfs:member	"success"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases"	rdfs:member	"algorithms"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases"	rdfs:member	"databases"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases"	rdfs:member	"topk query evaluation algorithms"
s6.1	"evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6.1	"topk query evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"query evaluation"	rdfs:subClassOf	"evaluation"
s6.1	"query evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6.1	"query evaluation algorithms"	rdfs:member	"query evaluation"
s6.1	"topk query evaluation"	rdfs:member	"topk query"
s6.1	"topk query"	rdfs:subClassOf	"query"
s6.1	"topk query"	rdfs:member	"topk"
s6.1	"evaluation algorithms"	rdfs:member	"evaluation"
s6.1	"topk query evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6.1	"query evaluation"	rdfs:member	"query"
s6.1	"topk query evaluation algorithms"	rdfs:member	"topk query evaluation"
s6.1	"query evaluation algorithms"	rdfs:subClassOf	"evaluation algorithms"
s6.1	"topk query evaluation algorithms"	rdfs:subClassOf	"query evaluation algorithms"
s6.1	"ranking algorithms"	rdfs:subClassOf	"algorithms"
s6.1	"inspired by success"	rdfs:member	"inspired"
s6.1	"inspired by success"	rdfs:member	"success"
s6.1	"success of ranking algorithms"	rdfs:member	"success"
s6.1	"success of ranking algorithms"	rdfs:member	"ranking algorithms"
s6.1	"ranking algorithms in topk query evaluation algorithms"	rdfs:member	"ranking algorithms"
s6.1	"ranking algorithms in topk query evaluation algorithms"	rdfs:member	"topk query evaluation algorithms"
s6.1	"topk query evaluation algorithms in databases"	rdfs:member	"topk query evaluation algorithms"
s6.1	"topk query evaluation algorithms in databases"	rdfs:member	"databases"
s6.1	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	local:AM-PNC	"peertopeer networks"
s6.1	"peertopeer networks"	rdfs:subClassOf	"networks"
s6.1	"peertopeer networks"	rdfs:member	"peertopeer"
s6	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"
s6	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdf:subject	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"
s6	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"success"
s6	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"algorithms"
s6	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"databases"
s6	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"topk query evaluation algorithms"
s6	"success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdfs:member	"topk query evaluation algorithm"
s6	"evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6	"topk query evaluation"	rdfs:subClassOf	"evaluation"
s6	"query evaluation"	rdfs:subClassOf	"evaluation"
s6	"query evaluation algorithm"	rdfs:member	"query evaluation"
s6	"query evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6	"query evaluation algorithms"	rdfs:member	"query evaluation"
s6	"topk query evaluation"	rdfs:member	"topk query"
s6	"topk query"	rdfs:subClassOf	"query"
s6	"topk query"	rdfs:member	"topk"
s6	"evaluation algorithm"	rdfs:member	"evaluation"
s6	"evaluation algorithms"	rdfs:member	"evaluation"
s6	"topk query evaluation algorithm"	rdfs:member	"topk query evaluation"
s6	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6	"topk query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6	"topk query evaluation algorithms"	rdfs:subClassOf	"algorithms"
s6	"query evaluation"	rdfs:member	"query"
s6	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s6	"topk query evaluation algorithms"	rdfs:member	"topk query evaluation"
s6	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s6	"topk query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s6	"decentralized topk query evaluation algorithm"	rdfs:subClassOf	"topk query evaluation algorithm"
s6	"query evaluation algorithms"	rdfs:subClassOf	"evaluation algorithms"
s6	"topk query evaluation algorithms"	rdfs:subClassOf	"query evaluation algorithms"
s6	"ranking algorithms"	rdfs:subClassOf	"algorithms"
s6	"success of ranking algorithms"	rdfs:member	"success"
s6	"success of ranking algorithms"	rdfs:member	"ranking algorithms"
s6	"success of ranking algorithms in topk query evaluation algorithms"	rdfs:member	"success of ranking algorithms"
s6	"success of ranking algorithms in topk query evaluation algorithms"	rdfs:member	"topk query evaluation algorithms"
s6	"topk query evaluation algorithms in databases"	rdfs:member	"topk query evaluation algorithms"
s6	"topk query evaluation algorithms in databases"	rdfs:member	"databases"
s6	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm"	rdf:predicate	"Inspired"
s5	"both answer set network traffic among peers"
s5	"both answer set network traffic among peers"	rdf:subject	"answer"
s5	"both answer set network traffic among peers"	rdf:predicate	"set"
s5	"both answer set network traffic among peers"	rdf:object	"network traffic among peers"
s5	"network traffic among peers"	rdfs:member	"peers"
s5	"network traffic among peers"	rdfs:member	"network traffic"
s5	"network traffic"	rdfs:member	"network"
s5	"network traffic"	rdfs:subClassOf	"traffic"
s5	"network traffic among peers"	rdfs:member	"network traffic"
s5	"network traffic among peers"	rdfs:member	"peers"
s3	"having more answers users"
s3	"having more answers users"	rdf:subject	"users"
s3	"having more answers users"	rdf:predicate	"have"
s3	"having more answers users"	rdf:object	"answers"
s2	"having more answers users"
s2	"having more answers users"	rdf:subject	"users"
s2	"having more answers users"	rdf:predicate	"have"
s2	"having more answers users"	rdf:object	"answers"
s1	"having more answers users"
s1	"having more answers users"	rdf:subject	"users"
s1	"having more answers users"	rdf:predicate	"have"
s1	"having more answers users"	rdf:object	"answers"
s0.2	"given query"
s0.2	"given query"	rdf:subject	"query"
s0.2	"given query"	rdf:predicate	"give"
s0.1	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"
s0.1	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	rdf:subject	"Increasing the number of peers in a peertopeer network"
s0.1	"increasing the number of peers in a peertopeer network"	rdfs:member	"peers"
s0.1	"increasing the number of peers in a peertopeer network"	rdfs:member	"peertopeer network"
s0.1	"increasing the number of peers in a peertopeer network"	rdfs:member	"number"
s0.1	"peertopeer network"	rdfs:subClassOf	"network"
s0.1	"peertopeer network"	rdfs:member	"peertopeer"
s0.1	"number of peers"	rdfs:member	"number"
s0.1	"number of peers"	rdfs:member	"peers"
s0.1	"increasing in peertopeer network"	rdfs:member	"increasing"
s0.1	"increasing in peertopeer network"	rdfs:member	"peertopeer network"
s0.1	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	rdf:predicate	"increase"
s0.1	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	rdf:object	"number of answers given query as well"
s0.1	"number of answers given query as well"	rdfs:member	"number"
s0.1	"number of answers given query as well"	rdfs:member	"answers"
s0.1	"as query"	rdfs:subClassOf	"query"
s0.1	"given as query"	rdfs:subClassOf	"as query"
s0.1	"number of answers"	rdfs:member	"number"
s0.1	"number of answers"	rdfs:member	"answers"
s0.1	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	local:AM-TMP	"usually"
s0	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"
s0	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	rdf:subject	"number of peers"
s0	"number of peers"	rdfs:member	"peers"
s0	"number of peers"	rdfs:member	"number"
s0	"number of peers"	rdfs:member	"number"
s0	"number of peers"	rdfs:member	"peers"
s0	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	rdf:predicate	"Increasing"
s0	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	local:AM-LOC	"peertopeer network usually increases the number of answers to a given query as well"
s0	"peertopeer network usually increases the number of answers to a given query as well"	rdfs:member	"query"
s0	"peertopeer network usually increases the number of answers to a given query as well"	rdfs:member	"peertopeer network"
s0	"peertopeer network usually increases the number of answers to a given query as well"	rdfs:member	"answers"
s0	"peertopeer network usually increases the number of answers to a given query as well"	rdfs:member	"number"
s0	"peertopeer network"	rdfs:subClassOf	"network"
s0	"peertopeer network"	rdfs:member	"peertopeer"
s0	"as query"	rdfs:subClassOf	"query"
s0	"given as query"	rdfs:subClassOf	"as query"
s0	"usually increases"	rdfs:subClassOf	"increases"
s0	"number of answers"	rdfs:member	"number"
s0	"number of answers"	rdfs:member	"answers"
s0	"usually increases to given as query"	rdfs:member	"usually increases"
s0	"usually increases to given as query"	rdfs:member	"given as query"
