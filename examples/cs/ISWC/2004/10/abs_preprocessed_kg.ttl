@prefix	rdfs:	<http://www.w3.org/2000/01/rdf-schema#>	.
@prefix	local:	<http://local/local.owl#>	.
@prefix	cso:	<https://cso.kmi.open.ac.uk/topics/>	.
@prefix	rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>	.
@prefix	owl:	<http://www.w3.org/2002/07/owl#>	.

#### Statements ####

local:s11.3	a	rdf:Statement	;
	rdfs:label	"our algorithm scale easily to large numbers of peers"	.

local:s11.2	a	rdf:Statement	;
	rdfs:label	"dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	.

local:s11.1	a	rdf:Statement	;
	rdfs:label	"dynamically collected query statistics"	.

local:s11	a	rdf:Statement	;
	rdfs:label	"our algorithm based on dynamically collected query statistics only no continuous index update processes are necessary allowing our algorithm to scale easily to large numbers of peers"	.

local:s10.1	a	rdf:Statement	;
	rdfs:label	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	.

local:s10	a	rdf:Statement	;
	rdfs:label	"inspired by the success of ranking algorithms in web search engine in databases we propose a decentralized topk query evaluation algorithm"	.

local:s8	a	rdf:Statement	;
	rdfs:label	"both answer set network traffic among peers"	.

local:s7	a	rdf:Statement	;
	rdfs:label	"peertopeer networks which minimizes both answer"	.

local:s6.2	a	rdf:Statement	;
	rdfs:label	"based on peer ranks"	.

local:s6.1	a	rdf:Statement	;
	rdfs:label	"peertopeer networks which makes use of local rankings rank optimized routing based on peer ranks"	.

local:s6	a	rdf:Statement	;
	rdfs:label	"peertopeer networks which makes use of local rankings"	.

local:s5.1	a	rdf:Statement	;
	rdfs:label	"we propose a decentralized topk query evaluation algorithm for peertopeer networks"	.

local:s5	a	rdf:Statement	;
	rdfs:label	"inspired by the success of ranking algorithms in topk query evaluation algorithms in databases we propose a decentralized topk query evaluation algorithm for peertopeer networks"	.

local:s4.2	a	rdf:Statement	;
	rdfs:label	""	.

local:s4.1	a	rdf:Statement	;
	rdfs:label	"peertopeer networks which makes use of local rankings rank merging"	.

local:s4	a	rdf:Statement	;
	rdfs:label	"peertopeer networks which makes use of local rankings"	.

local:s3	a	rdf:Statement	;
	rdfs:label	"having more answers users"	.

local:s2	a	rdf:Statement	;
	rdfs:label	"having more answers users"	.

local:s1	a	rdf:Statement	;
	rdfs:label	"having more answers users"	.

local:s0.2	a	rdf:Statement	;
	rdfs:label	"given query"	.

local:s0.1	a	rdf:Statement	;
	rdfs:label	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	.

local:s0	a	rdf:Statement	;
	rdfs:label	"increasing the number of peers in a peertopeer network usually increases the number of answers to a given query as well"	.


#### Classes ####

local:algorithm	a	rdf:Class	;
	rdfs:label	"algorithm"	.

local:scale	a	rdf:Class	;
	rdfs:label	"scale"	.

local:large_number_of_peer	a	rdf:Class	;
	rdfs:label	"large number of peer"	.

local:large_number	a	rdf:Class	;
	rdfs:label	"large number"	.

local:peer	a	rdf:Class	;
	rdfs:label	"peer"	.

local:number	a	rdf:Class	;
	rdfs:label	"number"	.

local:large	a	rdf:Class	;
	rdfs:label	"large"	.

local:easily	a	rdf:Class	;
	rdfs:label	"easily"	.

local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary	a	rdf:Class	;
	rdfs:label	"dynamically collect query statistic only no continuous index update process be necessary"	.

local:dynamically_collect_query	a	rdf:Class	;
	rdfs:label	"dynamically collect query"	.

local:update_process	a	rdf:Class	;
	rdfs:label	"update process"	.

local:only_no_continuous_index	a	rdf:Class	;
	rdfs:label	"only no continuous index"	.

local:query	a	rdf:Class	;
	rdfs:label	"query"	.

local:dynamically_collect	a	rdf:Class	;
	rdfs:label	"dynamically collect"	.

local:dynamically	a	rdf:Class	;
	rdfs:label	"dynamically"	.

local:only_no_continuous	a	rdf:Class	;
	rdfs:label	"only no continuous"	.

local:continuous	a	rdf:Class	;
	rdfs:label	"continuous"	.

local:no_continuous	a	rdf:Class	;
	rdfs:label	"no continuous"	.

local:no	a	rdf:Class	;
	rdfs:label	"no"	.

local:update	a	rdf:Class	;
	rdfs:label	"update"	.

local:continuous_index	a	rdf:Class	;
	rdfs:label	"continuous index"	.

local:collect_query	a	rdf:Class	;
	rdfs:label	"collect query"	.

local:collect	a	rdf:Class	;
	rdfs:label	"collect"	.

local:only_no	a	rdf:Class	;
	rdfs:label	"only no"	.

local:index	a	rdf:Class	;
	rdfs:label	"index"	.

local:only	a	rdf:Class	;
	rdfs:label	"only"	.

local:process	a	rdf:Class	;
	rdfs:label	"process"	.

local:no_continuous_index	a	rdf:Class	;
	rdfs:label	"no continuous index"	.

local:index_update_process	a	rdf:Class	;
	rdfs:label	"index update process"	.

local:query_statistic	a	rdf:Class	;
	rdfs:label	"query statistic"	.

local:statistic	a	rdf:Class	;
	rdfs:label	"statistic"	.

local:allow	a	rdf:Class	;
	rdfs:label	"allow"	.

local:algorithm_to_scale_easily_to_large_number_of_peer	a	rdf:Class	;
	rdfs:label	"algorithm to scale easily to large number of peer"	.

local:easily_large_number	a	rdf:Class	;
	rdfs:label	"easily large number"	.

local:algorithm_to_scale	a	rdf:Class	;
	rdfs:label	"algorithm to scale"	.

local:algorithm_to_scale_to_easily_large_number	a	rdf:Class	;
	rdfs:label	"algorithm to scale to easily large number"	.

local:easily_large_number_of_peer	a	rdf:Class	;
	rdfs:label	"easily large number of peer"	.

local:base	a	rdf:Class	;
	rdfs:label	"base"	.

local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	a	rdf:Class	;
	rdfs:label	"dynamically collect query statistic only no continuous index update process be necessary allow our algorithm to scale easily to large number of peer"	.

local:easily_scale	a	rdf:Class	;
	rdfs:label	"easily scale"	.

local:our_algorithm	a	rdf:Class	;
	rdfs:label	"our algorithm"	.

local:easily_scale_to_large_number	a	rdf:Class	;
	rdfs:label	"easily scale to large number"	.

local:we	a	rdf:Class	;
	rdfs:label	"we"	.

local:propose	a	rdf:Class	;
	rdfs:label	"propose"	.

local:decentralize_topk_query_evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"decentralize topk query evaluation algorithm"	.

local:topk_query_evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"topk query evaluation algorithm"	.

local:topk_query_evaluation	a	rdf:Class	;
	rdfs:label	"topk query evaluation"	.

local:topk_query	a	rdf:Class	;
	rdfs:label	"topk query"	.

local:topk	a	rdf:Class	;
	rdfs:label	"topk"	.

local:query_evaluation	a	rdf:Class	;
	rdfs:label	"query evaluation"	.

local:evaluation	a	rdf:Class	;
	rdfs:label	"evaluation"	.

local:evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"evaluation algorithm"	.

local:query_evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"query evaluation algorithm"	.

local:peertopeer_network	a	rdf:Class	;
	rdfs:label	"peertopeer network"	.

local:peertopeer	a	rdf:Class	;
	rdfs:label	"peertopeer"	.

local:network	a	rdf:Class	;
	rdfs:label	"network"	.

local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"success of rank algorithm in web search engine in database we propose a decentralize topk query evaluation algorithm"	.

local:web_search_engine	a	rdf:Class	;
	rdfs:label	"web search engine"	.

local:rank_algorithm	a	rdf:Class	;
	rdfs:label	"rank algorithm"	.

local:success	a	rdf:Class	;
	rdfs:label	"success"	.

local:database	a	rdf:Class	;
	rdfs:label	"database"	.

local:decentralize_topk_query	a	rdf:Class	;
	rdfs:label	"decentralize topk query"	.

local:decentralize_topk	a	rdf:Class	;
	rdfs:label	"decentralize topk"	.

local:decentralize_topk_query_evaluation	a	rdf:Class	;
	rdfs:label	"decentralize topk query evaluation"	.

local:web_search	a	rdf:Class	;
	rdfs:label	"web search"	.

local:web	a	rdf:Class	;
	rdfs:label	"web"	.

local:search_engine	a	rdf:Class	;
	rdfs:label	"search engine"	.

local:search	a	rdf:Class	;
	rdfs:label	"search"	.

local:engine	a	rdf:Class	;
	rdfs:label	"engine"	.

local:rank	a	rdf:Class	;
	rdfs:label	"rank"	.

local:decentralize	a	rdf:Class	;
	rdfs:label	"decentralize"	.

local:success_of_rank_algorithm	a	rdf:Class	;
	rdfs:label	"success of rank algorithm"	.

local:success_of_rank_algorithm_in_web_search_engine	a	rdf:Class	;
	rdfs:label	"success of rank algorithm in web search engine"	.

local:success_of_rank_algorithm_in_web_search_engine_in_database	a	rdf:Class	;
	rdfs:label	"success of rank algorithm in web search engine in database"	.

local:inspire	a	rdf:Class	;
	rdfs:label	"inspire"	.

local:answer	a	rdf:Class	;
	rdfs:label	"answer"	.

local:set	a	rdf:Class	;
	rdfs:label	"set"	.

local:network_traffic_among_peer	a	rdf:Class	;
	rdfs:label	"network traffic among peer"	.

local:network_traffic	a	rdf:Class	;
	rdfs:label	"network traffic"	.

local:traffic	a	rdf:Class	;
	rdfs:label	"traffic"	.

local:minimize	a	rdf:Class	;
	rdfs:label	"minimize"	.

local:peer_rank	a	rdf:Class	;
	rdfs:label	"peer rank"	.

local:peertopeer_network_which_make_use_of_local_rank	a	rdf:Class	;
	rdfs:label	"peertopeer network which make use of local rank"	.

local:use	a	rdf:Class	;
	rdfs:label	"use"	.

local:local_rank	a	rdf:Class	;
	rdfs:label	"local rank"	.

local:local	a	rdf:Class	;
	rdfs:label	"local"	.

local:use_of_local_rank	a	rdf:Class	;
	rdfs:label	"use of local rank"	.

local:optimize_rout_base_on_peer_rank	a	rdf:Class	;
	rdfs:label	"optimize rout base on peer rank"	.

local:rout_base	a	rdf:Class	;
	rdfs:label	"rout base"	.

local:rout	a	rdf:Class	;
	rdfs:label	"rout"	.

local:optimize_on_peer_rank	a	rdf:Class	;
	rdfs:label	"optimize on peer rank"	.

local:optimize	a	rdf:Class	;
	rdfs:label	"optimize"	.

local:make	a	rdf:Class	;
	rdfs:label	"make"	.

local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	a	rdf:Class	;
	rdfs:label	"success of rank algorithm in topk query evaluation algorithm in database we propose a decentralize topk query evaluation algorithm for peertopeer network"	.

local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm	a	rdf:Class	;
	rdfs:label	"success of rank algorithm in topk query evaluation algorithm"	.

local:topk_query_evaluation_algorithm_in_database	a	rdf:Class	;
	rdfs:label	"topk query evaluation algorithm in database"	.

local:decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	a	rdf:Class	;
	rdfs:label	"decentralize topk query evaluation algorithm for peertopeer network"	.

local:merge	a	rdf:Class	;
	rdfs:label	"merge"	.

local:user	a	rdf:Class	;
	rdfs:label	"user"	.

local:have	a	rdf:Class	;
	rdfs:label	"have"	.

local:give	a	rdf:Class	;
	rdfs:label	"give"	.

local:increase_the_number_of_peer_in_a_peertopeer_network	a	rdf:Class	;
	rdfs:label	"increase the number of peer in a peertopeer network"	.

local:number_of_peer	a	rdf:Class	;
	rdfs:label	"number of peer"	.

local:increase_in_peertopeer_network	a	rdf:Class	;
	rdfs:label	"increase in peertopeer network"	.

local:increase	a	rdf:Class	;
	rdfs:label	"increase"	.

local:number_of_answer_give_query_a_well	a	rdf:Class	;
	rdfs:label	"number of answer give query a well"	.

local:well	a	rdf:Class	;
	rdfs:label	"well"	.

local:number_of_answer	a	rdf:Class	;
	rdfs:label	"number of answer"	.

local:usually	a	rdf:Class	;
	rdfs:label	"usually"	.

local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	a	rdf:Class	;
	rdfs:label	"peertopeer network usually increase the number of answer to a give query a well"	.

local:give_query	a	rdf:Class	;
	rdfs:label	"give query"	.

local:well_query	a	rdf:Class	;
	rdfs:label	"well query"	.

local:usually_increase	a	rdf:Class	;
	rdfs:label	"usually increase"	.

local:usually_increase_to_give	a	rdf:Class	;
	rdfs:label	"usually increase to give"	.

#### Mapped Relations ####

cso:statistics	rdfs:label	"statistic"	.
local:statistic	owl:sameAs	cso:statistics	.
cso:database	rdfs:label	"database"	.
cso:peer-to-peer_network	rdfs:label	"peertopeer network"	.
cso:query_evaluation	rdfs:label	"query evaluation"	.
local:peertopeer_network	owl:sameAs	cso:peer-to-peer_network	.
cso:web_search_engines	rdfs:label	"web search engine"	.
local:network_traffic	owl:sameAs	cso:network_traffic	.
cso:network_traffic	rdfs:label	"network traffic"	.
local:database	owl:sameAs	cso:database	.
local:web_search_engine	owl:sameAs	cso:web_search_engines	.
local:query_evaluation	owl:sameAs	cso:query_evaluation	.

#### Relations ####

local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm	rdfs:member	local:topk_query_evaluation_algorithm	.
local:s10.1	rdf:object	local:decentralize_topk_query_evaluation_algorithm	.
local:rout_base	rdfs:subClassOf	local:base	.
local:s0.2	rdf:predicate	local:give	.
local:number_of_answer_give_query_a_well	rdfs:member	local:number	.
local:web_search_engine	rdfs:subClassOf	local:engine	.
local:continuous_index	rdfs:member	local:continuous	.
local:query_evaluation	rdfs:member	local:query	.
local:s6.1	rdf:predicate	local:rank	.
local:s1	rdf:object	local:answer	.
local:increase_in_peertopeer_network	rdfs:member	local:peertopeer_network	.
local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	rdfs:member	local:decentralize_topk_query_evaluation_algorithm	.
local:algorithm_to_scale	rdfs:member	local:algorithm	.
local:s3	rdf:predicate	local:have	.
local:s0.1	rdf:predicate	local:increase	.
local:s11.2	rdf:predicate	local:allow	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:update_process	.
local:number_of_answer_give_query_a_well	rdfs:member	local:well	.
local:easily_large_number_of_peer	rdfs:member	local:peer	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:topk_query_evaluation_algorithm	.
local:s4.1	rdf:subject	local:peertopeer_network_which_make_use_of_local_rank	.
local:easily_scale_to_large_number	rdfs:member	local:large_number	.
local:topk_query_evaluation_algorithm_in_database	rdfs:member	local:database	.
local:s10	rdf:subject	local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	.
local:topk_query	rdfs:subClassOf	local:query	.
local:web_search	rdfs:subClassOf	local:search	.
local:no_continuous	rdfs:member	local:no	.
local:only_no	rdfs:member	local:only	.
local:rank_algorithm	rdfs:member	local:rank	.
local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	rdfs:member	local:peertopeer_network	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary	rdfs:member	local:update_process	.
local:well_query	rdfs:subClassOf	local:query	.
local:s11.2	rdf:subject	local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary	.
local:dynamically_collect_query	rdfs:subClassOf	local:query	.
local:topk_query	rdfs:member	local:topk	.
local:s11.3	rdf:subject	local:algorithm	.
local:web_search_engine	rdfs:member	local:web_search	.
local:query_evaluation_algorithm	rdfs:subClassOf	local:evaluation_algorithm	.
local:use_of_local_rank	rdfs:member	local:local_rank	.
local:rank_algorithm	rdfs:subClassOf	local:algorithm	.
local:decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:peertopeer_network	.
local:s4	rdf:subject	local:peertopeer_network	.
local:web_search_engine	rdfs:subClassOf	local:search_engine	.
local:s2	rdf:subject	local:user	.
local:only_no_continuous	rdfs:member	local:only_no	.
local:decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:decentralize_topk_query_evaluation_algorithm	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:success	.
local:increase_the_number_of_peer_in_a_peertopeer_network	rdfs:member	local:number	.
local:easily_scale_to_large_number	rdfs:member	local:easily_scale	.
local:algorithm_to_scale	rdfs:member	local:scale	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:only_no_continuous_index	.
local:large_number_of_peer	rdfs:member	local:peer	.
local:collect_query	rdfs:member	local:collect	.
local:search_engine	rdfs:subClassOf	local:engine	.
local:s6	rdf:object	local:use_of_local_rank	.
local:s2	rdf:object	local:answer	.
local:evaluation_algorithm	rdfs:member	local:evaluation	.
local:s6	rdf:subject	local:peertopeer_network	.
local:update_process	rdfs:subClassOf	local:process	.
local:s2	rdf:predicate	local:have	.
local:decentralize_topk_query_evaluation_algorithm	rdfs:member	local:decentralize_topk_query_evaluation	.
local:s0.1	local:AM-TMP	local:usually	.
local:large_number_of_peer	rdfs:member	local:large_number	.
local:evaluation_algorithm	rdfs:subClassOf	local:algorithm	.
local:s3	rdf:object	local:answer	.
local:success_of_rank_algorithm	rdfs:member	local:rank_algorithm	.
local:success_of_rank_algorithm_in_web_search_engine	rdfs:member	local:success_of_rank_algorithm	.
local:s5.1	rdf:subject	local:we	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:algorithm	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:large_number	.
local:s6.2	local:AM-LOC	local:peer_rank	.
local:optimize_rout_base_on_peer_rank	rdfs:member	local:peer_rank	.
local:search_engine	rdfs:member	local:search	.
local:s6	rdf:predicate	local:make	.
local:s11.1	local:AM-MNR	local:dynamically	.
local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	rdfs:member	local:database	.
local:increase_the_number_of_peer_in_a_peertopeer_network	rdfs:member	local:peer	.
local:give_query	rdfs:member	local:give	.
local:easily_scale	rdfs:subClassOf	local:scale	.
local:only_no_continuous_index	rdfs:subClassOf	local:no_continuous_index	.
local:s8	rdf:object	local:network_traffic_among_peer	.
local:s5.1	rdf:object	local:decentralize_topk_query_evaluation_algorithm	.
local:collect_query	rdfs:subClassOf	local:query	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:peer	.
local:peer_rank	rdfs:subClassOf	local:rank	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:decentralize_topk_query_evaluation_algorithm	.
local:algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:large_number	.
local:optimize_on_peer_rank	rdfs:member	local:peer_rank	.
local:only_no_continuous_index	rdfs:member	local:only_no_continuous	.
local:peertopeer_network_which_make_use_of_local_rank	rdfs:member	local:local_rank	.
local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	rdfs:member	local:well	.
local:s7	rdf:predicate	local:minimize	.
local:web_search	rdfs:member	local:web	.
local:increase_the_number_of_peer_in_a_peertopeer_network	rdfs:member	local:peertopeer_network	.
local:success_of_rank_algorithm_in_web_search_engine_in_database	rdfs:member	local:database	.
local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	rdfs:member	local:rank_algorithm	.
local:update_process	rdfs:member	local:update	.
local:s6.1	rdf:subject	local:peertopeer_network_which_make_use_of_local_rank	.
local:s11.3	rdf:object	local:large_number_of_peer	.
local:peertopeer_network	rdfs:member	local:peertopeer	.
local:use_of_local_rank	rdfs:member	local:use	.
local:number_of_peer	rdfs:member	local:peer	.
local:s5	rdf:subject	local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	.
local:s0.1	rdf:subject	local:increase_the_number_of_peer_in_a_peertopeer_network	.
local:usually_increase_to_give	rdfs:member	local:give	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm	rdfs:member	local:success_of_rank_algorithm	.
local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	rdfs:member	local:give_query	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:rank_algorithm	.
local:our_algorithm	rdfs:subClassOf	local:algorithm	.
local:s11.1	rdf:subject	local:query_statistic	.
local:only_no_continuous	rdfs:subClassOf	local:continuous	.
local:topk_query_evaluation_algorithm_in_database	rdfs:member	local:topk_query_evaluation_algorithm	.
local:usually_increase_to_give	rdfs:member	local:usually_increase	.
local:algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:peer	.
local:decentralize_topk	rdfs:subClassOf	local:topk	.
local:decentralize_topk_query_evaluation	rdfs:member	local:decentralize_topk_query	.
local:s0	rdf:predicate	local:increase	.
local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	rdfs:member	local:answer	.
local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	rdfs:member	local:number	.
local:algorithm_to_scale_to_easily_large_number	rdfs:member	local:easily_large_number	.
local:s8	rdf:subject	local:answer	.
local:large_number	rdfs:subClassOf	local:number	.
local:decentralize_topk_query_evaluation	rdfs:subClassOf	local:evaluation	.
local:success_of_rank_algorithm	rdfs:member	local:success	.
local:s1	rdf:predicate	local:have	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:database	.
local:s4	rdf:predicate	local:make	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:dynamically_collect_query	.
local:local_rank	rdfs:member	local:local	.
local:number_of_peer	rdfs:member	local:number	.
local:s11	rdf:predicate	local:base	.
local:s1	rdf:subject	local:user	.
local:peertopeer_network	rdfs:subClassOf	local:network	.
local:algorithm_to_scale_to_easily_large_number	rdfs:member	local:algorithm_to_scale	.
local:number_of_answer_give_query_a_well	rdfs:member	local:query	.
local:s6.1	rdf:object	local:optimize_rout_base_on_peer_rank	.
local:local_rank	rdfs:subClassOf	local:rank	.
local:no_continuous_index	rdfs:member	local:no_continuous	.
local:dynamically_collect	rdfs:member	local:dynamically	.
local:network_traffic	rdfs:member	local:network	.
local:give_query	rdfs:subClassOf	local:query	.
local:s11	rdf:object	local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary_allow_our_algorithm_to_scale_easily_to_large_number_of_peer	.
local:s0	rdf:subject	local:number_of_peer	.
local:query_evaluation_algorithm	rdfs:member	local:query_evaluation	.
local:s5	rdf:predicate	local:inspire	.
local:s0.1	rdf:object	local:number_of_answer_give_query_a_well	.
local:s0	local:AM-LOC	local:peertopeer_network_usually_increase_the_number_of_answer_to_a_give_query_a_well	.
local:topk_query_evaluation_algorithm	rdfs:subClassOf	local:algorithm	.
local:query_statistic	rdfs:member	local:query	.
local:s4.1	rdf:predicate	local:rank	.
local:dynamically_collect_query	rdfs:member	local:dynamically_collect	.
local:no_continuous	rdfs:subClassOf	local:continuous	.
local:easily_large_number_of_peer	rdfs:member	local:easily_large_number	.
local:decentralize_topk_query	rdfs:member	local:decentralize_topk	.
local:s5.1	local:AM-PNC	local:peertopeer_network	.
local:s11.1	rdf:predicate	local:collect	.
local:decentralize_topk_query_evaluation_algorithm	rdfs:subClassOf	local:algorithm	.
local:network_traffic_among_peer	rdfs:member	local:network_traffic	.
local:s7	rdf:subject	local:peertopeer_network	.
local:peertopeer_network_which_make_use_of_local_rank	rdfs:member	local:use	.
local:increase_in_peertopeer_network	rdfs:member	local:increase	.
local:s11.3	rdf:predicate	local:scale	.
local:s10.1	local:AM-PNC	local:peertopeer_network	.
local:s7	rdf:object	local:answer	.
local:s5.1	rdf:predicate	local:propose	.
local:success_of_rank_algorithm_in_topk_query_evaluation_algorithm_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm_for_peertopeer_network	rdfs:member	local:peertopeer_network	.
local:network_traffic	rdfs:subClassOf	local:traffic	.
local:s0.2	rdf:subject	local:query	.
local:large_number	rdfs:member	local:large	.
local:index_update_process	rdfs:subClassOf	local:update_process	.
local:topk_query_evaluation	rdfs:subClassOf	local:evaluation	.
local:peer_rank	rdfs:member	local:peer	.
local:dynamically_collect	rdfs:subClassOf	local:collect	.
local:query_statistic	rdfs:subClassOf	local:statistic	.
local:s11.2	rdf:object	local:algorithm_to_scale_easily_to_large_number_of_peer	.
local:network_traffic_among_peer	rdfs:member	local:peer	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary	rdfs:member	local:only_no_continuous_index	.
local:continuous_index	rdfs:subClassOf	local:index	.
local:number_of_answer_give_query_a_well	rdfs:member	local:answer	.
local:s4.2	rdf:predicate	local:merge	.
local:only_no_continuous_index	rdfs:subClassOf	local:index	.
local:s11.3	local:AM-MNR	local:easily	.
local:query_evaluation	rdfs:subClassOf	local:evaluation	.
local:success_of_rank_algorithm_in_web_search_engine	rdfs:member	local:web_search_engine	.
local:optimize_on_peer_rank	rdfs:member	local:optimize	.
local:topk_query_evaluation_algorithm	rdfs:subClassOf	local:query_evaluation_algorithm	.
local:topk_query_evaluation	rdfs:member	local:topk_query	.
local:no_continuous_index	rdfs:subClassOf	local:index	.
local:s10.1	rdf:subject	local:we	.
local:only_no	rdfs:subClassOf	local:no	.
local:algorithm_to_scale_easily_to_large_number_of_peer	rdfs:member	local:algorithm	.
local:decentralize_topk_query_evaluation_algorithm	rdfs:subClassOf	local:topk_query_evaluation_algorithm	.
local:s8	rdf:predicate	local:set	.
local:s10.1	rdf:predicate	local:propose	.
local:optimize_rout_base_on_peer_rank	rdfs:member	local:rout_base	.
local:number_of_answer	rdfs:member	local:answer	.
local:easily_large_number	rdfs:subClassOf	local:large_number	.
local:s6.2	rdf:predicate	local:base	.
local:usually_increase	rdfs:subClassOf	local:increase	.
local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	rdfs:member	local:web_search_engine	.
local:s3	rdf:subject	local:user	.
local:s11	rdf:subject	local:algorithm	.
local:peertopeer_network_which_make_use_of_local_rank	rdfs:member	local:peertopeer_network	.
local:s10	rdf:predicate	local:inspire	.
local:decentralize_topk	rdfs:member	local:decentralize	.
local:success_of_rank_algorithm_in_web_search_engine_in_database	rdfs:member	local:success_of_rank_algorithm_in_web_search_engine	.
local:decentralize_topk_query	rdfs:subClassOf	local:query	.
local:number_of_answer	rdfs:member	local:number	.
local:s4.1	rdf:object	local:merge	.
local:dynamically_collect_query_statistic_only_no_continuous_index_update_process_be_necessary	rdfs:member	local:dynamically_collect_query	.
local:rout_base	rdfs:member	local:rout	.
local:no_continuous_index	rdfs:subClassOf	local:continuous_index	.
local:topk_query_evaluation_algorithm	rdfs:member	local:topk_query_evaluation	.
local:success_of_rank_algorithm_in_web_search_engine_in_database_we_propose_a_decentralize_topk_query_evaluation_algorithm	rdfs:member	local:success	.
local:query_evaluation_algorithm	rdfs:subClassOf	local:algorithm	.
local:s4	rdf:object	local:use_of_local_rank	.
