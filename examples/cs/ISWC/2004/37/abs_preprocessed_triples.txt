s17.2	"based on the reduction to disjunctive datalog"
s17.2	"based on the reduction to disjunctive datalog"	rdf:predicate	"base"
s17.2	"based on the reduction to disjunctive datalog"	rdf:object	"reduction to disjunctive datalog"
s17.2	"reduction to disjunctive datalog"	rdfs:member	"datalog"
s17.2	"reduction to disjunctive datalog"	rdfs:member	"reduction"
s17.2	"disjunctive datalog"	rdfs:subClassOf	"datalog"
s17.2	"reduction to disjunctive datalog"	rdfs:member	"reduction"
s17.2	"reduction to disjunctive datalog"	rdfs:member	"disjunctive datalog"
s17.1	"shiq extended with dlsafe rules based on the reduction to disjunctive datalog"
s17.1	"shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:subject	"shiq"
s17.1	"shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:predicate	"extend"
s17.1	"shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:object	"dlsafe rule base on the reduction to disjunctive datalog"
s17.1	"dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"datalog"
s17.1	"dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"dlsafe rule base"
s17.1	"dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"reduction"
s17.1	"dlsafe rule"	rdfs:subClassOf	"rule"
s17.1	"dlsafe rule base"	rdfs:subClassOf	"base"
s17.1	"rule base"	rdfs:member	"rule"
s17.1	"dlsafe rule"	rdfs:member	"dlsafe"
s17.1	"rule base"	rdfs:subClassOf	"base"
s17.1	"dlsafe rule base"	rdfs:member	"dlsafe rule"
s17.1	"disjunctive datalog"	rdfs:subClassOf	"datalog"
s17.1	"dlsafe rule base"	rdfs:subClassOf	"rule base"
s17.1	"dlsafe rule base on reduction"	rdfs:member	"dlsafe rule base"
s17.1	"dlsafe rule base on reduction"	rdfs:member	"reduction"
s17.1	"reduction to disjunctive datalog"	rdfs:member	"reduction"
s17.1	"reduction to disjunctive datalog"	rdfs:member	"disjunctive datalog"
s17	"finally we present an algorithm for query answering in shiq extended with dlsafe rules based on the reduction to disjunctive datalog"
s17	"finally we present an algorithm for query answering in shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:subject	"we"
s17	"finally we present an algorithm for query answering in shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:predicate	"present"
s17	"finally we present an algorithm for query answering in shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	rdf:object	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"algorithm"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"dlsafe rule base"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"query answer"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"datalog"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"shiq extend"
s17	"algorithm for query answer in shiq extend with dlsafe rule base on the reduction to disjunctive datalog"	rdfs:member	"reduction"
s17	"dlsafe rule"	rdfs:subClassOf	"rule"
s17	"query answer"	rdfs:member	"query"
s17	"dlsafe rule base"	rdfs:subClassOf	"base"
s17	"rule base"	rdfs:member	"rule"
s17	"query answer"	rdfs:subClassOf	"answer"
s17	"dlsafe rule"	rdfs:member	"dlsafe"
s17	"rule base"	rdfs:subClassOf	"base"
s17	"shiq extend"	rdfs:subClassOf	"extend"
s17	"shiq extend"	rdfs:member	"shiq"
s17	"dlsafe rule base"	rdfs:member	"dlsafe rule"
s17	"disjunctive datalog"	rdfs:subClassOf	"datalog"
s17	"dlsafe rule base"	rdfs:subClassOf	"rule base"
s17	"algorithm for query answer"	rdfs:member	"algorithm"
s17	"algorithm for query answer"	rdfs:member	"query answer"
s17	"query answer in shiq"	rdfs:member	"query answer"
s17	"query answer in shiq"	rdfs:member	"shiq"
s17	"extend with dlsafe rule base"	rdfs:member	"extend"
s17	"extend with dlsafe rule base"	rdfs:member	"dlsafe rule base"
s17	"dlsafe rule base on reduction"	rdfs:member	"dlsafe rule base"
s17	"dlsafe rule base on reduction"	rdfs:member	"reduction"
s17	"reduction to disjunctive datalog"	rdfs:member	"reduction"
s17	"reduction to disjunctive datalog"	rdfs:member	"disjunctive datalog"
s17	"finally we present an algorithm for query answering in shiq extended with dlsafe rules based on the reduction to disjunctive datalog"	local:AM-TMP	"finally"
s16.1	"combined logic expressive power"
s16.1	"combined logic expressive power"	rdf:subject	"logic expressive power"
s16.1	"expressive power"	rdfs:subClassOf	"power"
s16.1	"logic expressive power"	rdfs:member	"logic expressive"
s16.1	"logic expressive"	rdfs:member	"logic"
s16.1	"expressive power"	rdfs:member	"expressive"
s16.1	"logic expressive"	rdfs:subClassOf	"expressive"
s16.1	"logic expressive power"	rdfs:subClassOf	"power"
s16.1	"logic expressive power"	rdfs:subClassOf	"expressive power"
s16.1	"combined logic expressive power"	rdf:predicate	"combine"
s16	"we discuss query answering in such a combined logic expressive power by means of a nontrivial example"
s16	"we discuss query answering in such a combined logic expressive power by means of a nontrivial example"	rdf:subject	"we"
s16	"we discuss query answering in such a combined logic expressive power by means of a nontrivial example"	rdf:predicate	"discuss"
s16	"we discuss query answering in such a combined logic expressive power by means of a nontrivial example"	rdf:object	"query answer in such a combine logic expressive power mean of a nontrivial example"
s16	"query answer in such a combine logic expressive power mean of a nontrivial example"	rdfs:member	"combine logic"
s16	"query answer in such a combine logic expressive power mean of a nontrivial example"	rdfs:member	"query answer"
s16	"query answer in such a combine logic expressive power mean of a nontrivial example"	rdfs:member	"nontrivial example"
s16	"query answer in such a combine logic expressive power mean of a nontrivial example"	rdfs:member	"expressive power mean"
s16	"expressive power"	rdfs:subClassOf	"power"
s16	"combine logic"	rdfs:subClassOf	"logic"
s16	"power mean"	rdfs:member	"power"
s16	"query answer"	rdfs:member	"query"
s16	"query answer"	rdfs:subClassOf	"answer"
s16	"combine logic"	rdfs:member	"combine"
s16	"expressive power"	rdfs:member	"expressive"
s16	"expressive power mean"	rdfs:member	"expressive power"
s16	"nontrivial example"	rdfs:subClassOf	"example"
s16	"expressive power mean"	rdfs:subClassOf	"mean"
s16	"nontrivial example"	rdfs:member	"nontrivial"
s16	"power mean"	rdfs:subClassOf	"mean"
s16	"expressive power mean"	rdfs:subClassOf	"power mean"
s16	"logic expressive power mean"	rdfs:subClassOf	"expressive power mean"
s16	"combine logic expressive power mean"	rdfs:subClassOf	"logic expressive power mean"
s16	"such combine logic expressive power mean"	rdfs:subClassOf	"combine logic expressive power mean"
s16	"query answer in such combine logic expressive power mean"	rdfs:member	"query answer"
s16	"query answer in such combine logic expressive power mean"	rdfs:member	"such combine logic expressive power mean"
s16	"such combine logic expressive power mean of nontrivial example"	rdfs:member	"such combine logic expressive power mean"
s16	"such combine logic expressive power mean of nontrivial example"	rdfs:member	"nontrivial example"
s15.1	"combined logic"
s15.1	"combined logic"	rdf:predicate	"combine"
s15.1	"combined logic"	rdf:object	"logic"
s15	"we show that query answering in such a combined logic is decidable"
s15	"we show that query answering in such a combined logic is decidable"	rdf:subject	"we"
s15	"we show that query answering in such a combined logic is decidable"	rdf:predicate	"show"
s15	"we show that query answering in such a combined logic is decidable"	rdf:object	"query answer in such a combine logic be decidable"
s15	"query answer in such a combine logic be decidable"	rdfs:member	"combine logic"
s15	"query answer in such a combine logic be decidable"	rdfs:member	"query answer"
s15	"query answer"	rdfs:subClassOf	"answer"
s15	"combine logic"	rdfs:subClassOf	"logic"
s15	"combine logic"	rdfs:member	"combine"
s15	"query answer"	rdfs:member	"query"
s15	"such combine logic"	rdfs:subClassOf	"combine logic"
s15	"query answer in such combine logic"	rdfs:member	"query answer"
s15	"query answer in such combine logic"	rdfs:member	"such combine logic"
s14.4	"a rule occur in a nondlatom in the rule body"
s14.4	"a rule occur in a nondlatom in the rule body"	rdf:subject	"rule"
s14.4	"a rule occur in a nondlatom in the rule body"	rdf:predicate	"occur"
s14.4	"a rule occur in a nondlatom in the rule body"	local:AM-LOC	"nondlatom in the rule body"
s14.4	"nondlatom in the rule body"	rdfs:member	"rule body"
s14.4	"nondlatom in the rule body"	rdfs:member	"nondlatom"
s14.4	"rule body"	rdfs:member	"rule"
s14.4	"rule body"	rdfs:subClassOf	"body"
s14.4	"nondlatom in rule body"	rdfs:member	"nondlatom"
s14.4	"nondlatom in rule body"	rdfs:member	"rule body"
s14.3	"dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"
s14.3	"dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:subject	"dlsafe one"
s14.3	"dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:predicate	"require"
s14.3	"dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:object	"variable in a rule to occur in a nondlatom in the rule body"
s14.3	"variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule"
s14.3	"variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule body"
s14.3	"variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"nondlatom"
s14.3	"variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"variable"
s14.3	"rule body"	rdfs:member	"rule"
s14.3	"rule body"	rdfs:subClassOf	"body"
s14.3	"variable in rule"	rdfs:member	"variable"
s14.3	"variable in rule"	rdfs:member	"rule"
s14.3	"occur in nondlatom"	rdfs:member	"occur"
s14.3	"occur in nondlatom"	rdfs:member	"nondlatom"
s14.3	"nondlatom in rule body"	rdfs:member	"nondlatom"
s14.3	"nondlatom in rule body"	rdfs:member	"rule body"
s14.2	"decidability socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"
s14.2	"decidability socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:subject	"decidability"
s14.2	"decidability socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:predicate	"socalled"
s14.2	"decidability socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:object	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"
s14.2	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"variable"
s14.2	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule"
s14.2	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule body"
s14.2	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"require"
s14.2	"dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"nondlatom"
s14.2	"rule body"	rdfs:member	"rule"
s14.2	"rule body"	rdfs:subClassOf	"body"
s14.2	"one dlsafe"	rdfs:subClassOf	"dlsafe"
s14.2	"require in rule"	rdfs:member	"require"
s14.2	"require in rule"	rdfs:member	"rule"
s14.2	"occur in nondlatom"	rdfs:member	"occur"
s14.2	"occur in nondlatom"	rdfs:member	"nondlatom"
s14.2	"nondlatom in rule body"	rdfs:member	"nondlatom"
s14.2	"nondlatom in rule body"	rdfs:member	"rule body"
s14.1	"decidability restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"
s14.1	"decidability restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:subject	"decidability"
s14.1	"decidability restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:predicate	"restrict"
s14.1	"decidability restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:object	"rule"
s14.1	"decidability restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	local:AM-PNC	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"
s14.1	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"variable"
s14.1	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule"
s14.1	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule body"
s14.1	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"require"
s14.1	"socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"nondlatom"
s14.1	"rule body"	rdfs:member	"rule"
s14.1	"rule body"	rdfs:subClassOf	"body"
s14.1	"one dlsafe"	rdfs:subClassOf	"dlsafe"
s14.1	"socalled one dlsafe"	rdfs:subClassOf	"one dlsafe"
s14.1	"require in rule"	rdfs:member	"require"
s14.1	"require in rule"	rdfs:member	"rule"
s14.1	"occur in nondlatom"	rdfs:member	"occur"
s14.1	"occur in nondlatom"	rdfs:member	"nondlatom"
s14.1	"nondlatom in rule body"	rdfs:member	"nondlatom"
s14.1	"nondlatom in rule body"	rdfs:member	"rule body"
s14	"decidability obtained by restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"
s14	"decidability obtained by restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:subject	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"variable"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"rule body"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"require"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"restrict rule"
s14	"restrict rule to socalled dlsafe one require each variable in a rule to occur in a nondlatom in the rule body"	rdfs:member	"nondlatom"
s14	"restrict rule"	rdfs:subClassOf	"rule"
s14	"rule body"	rdfs:member	"rule"
s14	"rule body"	rdfs:subClassOf	"body"
s14	"restrict rule"	rdfs:member	"restrict"
s14	"one dlsafe"	rdfs:subClassOf	"dlsafe"
s14	"socalled one dlsafe"	rdfs:subClassOf	"one dlsafe"
s14	"restrict to socalled one dlsafe"	rdfs:member	"restrict"
s14	"restrict to socalled one dlsafe"	rdfs:member	"socalled one dlsafe"
s14	"require in rule"	rdfs:member	"require"
s14	"require in rule"	rdfs:member	"rule"
s14	"occur in nondlatom"	rdfs:member	"occur"
s14	"occur in nondlatom"	rdfs:member	"nondlatom"
s14	"nondlatom in rule body"	rdfs:member	"nondlatom"
s14	"nondlatom in rule body"	rdfs:member	"rule body"
s14	"decidability obtained by restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:predicate	"obtain"
s14	"decidability obtained by restricting rules to socalled dlsafe ones requiring each variable in a rule to occur in a nondlatom in the rule body"	rdf:object	"decidability"
s13	"similar decidable combinations proposed so far"
s13	"similar decidable combinations proposed so far"	rdf:subject	"similar decidable combination"
s13	"similar decidable combination"	rdfs:member	"similar decidable"
s13	"decidable combination"	rdfs:member	"decidable"
s13	"decidable combination"	rdfs:subClassOf	"combination"
s13	"similar decidable"	rdfs:subClassOf	"decidable"
s13	"similar decidable"	rdfs:member	"similar"
s13	"similar decidable combination"	rdfs:subClassOf	"combination"
s13	"similar decidable combination"	rdfs:subClassOf	"decidable combination"
s13	"similar decidable combinations proposed so far"	rdf:predicate	"propose"
s13	"similar decidable combinations proposed so far"	local:AM-TMP	"far"
s12	"we present a decidable such combination"
s12	"we present a decidable such combination"	rdf:subject	"we"
s12	"we present a decidable such combination"	rdf:predicate	"present"
s12	"we present a decidable such combination"	rdf:object	"decidable such combination"
s12	"decidable such combination"	rdfs:member	"decidable such"
s12	"decidable such"	rdfs:member	"decidable"
s12	"such combination"	rdfs:member	"such"
s12	"decidable such combination"	rdfs:subClassOf	"combination"
s12	"decidable such"	rdfs:subClassOf	"such"
s12	"such combination"	rdfs:subClassOf	"combination"
s12	"decidable such combination"	rdfs:subClassOf	"such combination"
s11	"a decidable such combination which is to the best of we knowledge more general than similar decidable combinations"
s11	"a decidable such combination which is to the best of we knowledge more general than similar decidable combinations"	rdf:subject	"decidable such combination which be to the best of we"
s11	"decidable such combination"	rdfs:member	"decidable such"
s11	"decidable such"	rdfs:member	"decidable"
s11	"such combination"	rdfs:member	"such"
s11	"decidable such combination"	rdfs:subClassOf	"combination"
s11	"decidable such"	rdfs:subClassOf	"such"
s11	"such combination"	rdfs:subClassOf	"combination"
s11	"decidable such combination"	rdfs:subClassOf	"such combination"
s11	"best of we"	rdfs:member	"best"
s11	"best of we"	rdfs:member	"we"
s11	"a decidable such combination which is to the best of we knowledge more general than similar decidable combinations"	rdf:predicate	"knowledge"
s11	"a decidable such combination which is to the best of we knowledge more general than similar decidable combinations"	rdf:object	"general than similar decidable combination"
s11	"similar decidable combination"	rdfs:member	"similar decidable"
s11	"decidable combination"	rdfs:member	"decidable"
s11	"decidable combination"	rdfs:subClassOf	"combination"
s11	"similar decidable"	rdfs:subClassOf	"decidable"
s11	"similar decidable"	rdfs:member	"similar"
s11	"similar decidable combination"	rdfs:subClassOf	"combination"
s11	"similar decidable combination"	rdfs:subClassOf	"decidable combination"
s11	"general than similar decidable combination"	rdfs:member	"general"
s11	"general than similar decidable combination"	rdfs:member	"similar decidable combination"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	rdf:subject	"combination"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	rdf:predicate	"lead"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	rdf:object	"undecidability of interest reason problem"
s10	"undecidability of interest reason problem"	rdfs:member	"interest reason problem"
s10	"undecidability of interest reason problem"	rdfs:member	"undecidability"
s10	"reason problem"	rdfs:subClassOf	"problem"
s10	"interest reason problem"	rdfs:member	"interest reason"
s10	"interest reason problem"	rdfs:subClassOf	"problem"
s10	"reason problem"	rdfs:member	"reason"
s10	"interest reason"	rdfs:subClassOf	"reason"
s10	"interest reason"	rdfs:member	"interest"
s10	"undecidability of interest reason"	rdfs:member	"undecidability"
s10	"undecidability of interest reason"	rdfs:member	"interest reason"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	local:AM-DIS	"however"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	local:AM-MNR	"easily"
s10	"however such a combination might easily lead to the undecidability of interesting reasoning problems"	local:AM-MOD	"might"
s9	"building semantic web ontologies"
s9	"building semantic web ontologies"	rdf:subject	"semantic web ontology"
s9	"semantic web"	rdfs:subClassOf	"web"
s9	"web ontology"	rdfs:subClassOf	"ontology"
s9	"web ontology"	rdfs:member	"web"
s9	"semantic web ontology"	rdfs:member	"semantic web"
s9	"semantic web"	rdfs:member	"semantic"
s9	"semantic web ontology"	rdfs:subClassOf	"ontology"
s9	"semantic web ontology"	rdfs:subClassOf	"web ontology"
s9	"building semantic web ontologies"	rdf:predicate	"build"
s8	"building semantic web ontologies"
s8	"building semantic web ontologies"	rdf:subject	"semantic web ontology"
s8	"semantic web"	rdfs:subClassOf	"web"
s8	"web ontology"	rdfs:subClassOf	"ontology"
s8	"web ontology"	rdfs:member	"web"
s8	"semantic web ontology"	rdfs:member	"semantic web"
s8	"semantic web"	rdfs:member	"semantic"
s8	"semantic web ontology"	rdfs:subClassOf	"ontology"
s8	"semantic web ontology"	rdfs:subClassOf	"web ontology"
s8	"building semantic web ontologies"	rdf:predicate	"build"
s7	"several such combinations already"
s7	"several such combinations already"	rdf:subject	"several such combination"
s7	"several such combination"	rdfs:subClassOf	"combination"
s7	"several such combination"	rdfs:member	"several such"
s7	"several such"	rdfs:subClassOf	"such"
s7	"such combination"	rdfs:member	"such"
s7	"several such"	rdfs:member	"several"
s7	"such combination"	rdfs:subClassOf	"combination"
s7	"several such combination"	rdfs:subClassOf	"such combination"
s7	"several such combinations already"	rdf:predicate	"discuss"
s7	"several such combinations already"	local:AM-TMP	"already"
s5	"the description logic perspective rules allow for the interaction of variables in arbitrary ways"
s5	"the description logic perspective rules allow for the interaction of variables in arbitrary ways"	rdf:subject	"description logic perspective rule"
s5	"description logic perspective rule"	rdfs:member	"description"
s5	"description logic perspective rule"	rdfs:member	"logic perspective rule"
s5	"perspective rule"	rdfs:subClassOf	"rule"
s5	"logic perspective"	rdfs:subClassOf	"perspective"
s5	"logic perspective"	rdfs:member	"logic"
s5	"perspective rule"	rdfs:member	"perspective"
s5	"logic perspective rule"	rdfs:member	"logic perspective"
s5	"logic perspective rule"	rdfs:subClassOf	"rule"
s5	"logic perspective rule"	rdfs:subClassOf	"perspective rule"
s5	"description logic perspective rule"	rdfs:subClassOf	"logic perspective rule"
s5	"the description logic perspective rules allow for the interaction of variables in arbitrary ways"	rdf:predicate	"allow"
s5	"the description logic perspective rules allow for the interaction of variables in arbitrary ways"	rdf:object	"interaction of variable in arbitrary way"
s5	"interaction of variable in arbitrary way"	rdfs:member	"interaction"
s5	"interaction of variable in arbitrary way"	rdfs:member	"arbitrary way"
s5	"arbitrary way"	rdfs:member	"arbitrary"
s5	"arbitrary way"	rdfs:subClassOf	"way"
s5	"interaction of variable"	rdfs:member	"interaction"
s5	"interaction of variable"	rdfs:member	"variable"
s5	"interaction of variable in arbitrary way"	rdfs:member	"interaction of variable"
s5	"interaction of variable in arbitrary way"	rdfs:member	"arbitrary way"
s4	"from the description logic perspective rules restricted to universal quantification"
s4	"from the description logic perspective rules restricted to universal quantification"	rdf:subject	"description logic perspective rule"
s4	"description logic perspective rule"	rdfs:member	"description"
s4	"description logic perspective rule"	rdfs:member	"logic perspective rule"
s4	"perspective rule"	rdfs:subClassOf	"rule"
s4	"logic perspective"	rdfs:subClassOf	"perspective"
s4	"logic perspective"	rdfs:member	"logic"
s4	"perspective rule"	rdfs:member	"perspective"
s4	"logic perspective rule"	rdfs:member	"logic perspective"
s4	"logic perspective rule"	rdfs:subClassOf	"rule"
s4	"logic perspective rule"	rdfs:subClassOf	"perspective rule"
s4	"description logic perspective rule"	rdfs:subClassOf	"logic perspective rule"
s4	"from the description logic perspective rules restricted to universal quantification"	rdf:predicate	"restrict"
s4	"from the description logic perspective rules restricted to universal quantification"	rdf:object	"universal quantification"
s4	"universal quantification"	rdfs:subClassOf	"quantification"
s4	"universal quantification"	rdfs:member	"universal"
s3.3	"universally quantified variables"
s3.3	"universally quantified variables"	rdf:subject	"variable"
s3.3	"universally quantified variables"	rdf:predicate	"quantify"
s3.3	"universally quantified variables"	local:AM-MNR	"universally"
s3.2	"owldl provides both existentially and universally quantified variables"
s3.2	"owldl provides both existentially and universally quantified variables"	rdf:subject	"owldl"
s3.2	"owldl provides both existentially and universally quantified variables"	rdf:predicate	"provide"
s3.2	"owldl provides both existentially and universally quantified variables"	rdf:object	"existentially and universally quantify variable"
s3.2	"universally quantify"	rdfs:subClassOf	"quantify"
s3.2	"existentially universally quantify"	rdfs:subClassOf	"universally quantify"
s3.1	"the rules perspective owldl restricted to treelike rules"
s3.1	"the rules perspective owldl restricted to treelike rules"	rdf:subject	"rule perspective owldl"
s3.1	"rule perspective owldl"	rdfs:member	"rule perspective"
s3.1	"rule perspective owldl"	rdfs:subClassOf	"owldl"
s3.1	"perspective owldl"	rdfs:member	"perspective"
s3.1	"rule perspective"	rdfs:member	"rule"
s3.1	"rule perspective"	rdfs:subClassOf	"perspective"
s3.1	"perspective owldl"	rdfs:subClassOf	"owldl"
s3.1	"rule perspective owldl"	rdfs:subClassOf	"perspective owldl"
s3.1	"the rules perspective owldl restricted to treelike rules"	rdf:predicate	"restrict"
s3.1	"the rules perspective owldl restricted to treelike rules"	rdf:object	"treelike rule"
s3.1	"treelike rule"	rdfs:subClassOf	"rule"
s3.1	"treelike rule"	rdfs:member	"treelike"
s3	"yet orthogonal expressive power"
s3	"yet orthogonal expressive power"	rdf:subject	"expressive power"
s3	"expressive power"	rdfs:subClassOf	"power"
s3	"expressive power"	rdfs:member	"expressive"
s3	"yet orthogonal expressive power"	rdf:predicate	"orthogonal"
s3	"yet orthogonal expressive power"	local:AM-TMP	"yet"
s2.3	"universally quantified full monotonic negation"
s2.3	"universally quantified full monotonic negation"	rdf:subject	"full monotonic negation"
s2.3	"full monotonic negation"	rdfs:member	"full monotonic"
s2.3	"full monotonic"	rdfs:subClassOf	"monotonic"
s2.3	"full monotonic"	rdfs:member	"full"
s2.3	"monotonic negation"	rdfs:subClassOf	"negation"
s2.3	"monotonic negation"	rdfs:member	"monotonic"
s2.3	"full monotonic negation"	rdfs:subClassOf	"negation"
s2.3	"full monotonic negation"	rdfs:subClassOf	"monotonic negation"
s2.3	"universally quantified full monotonic negation"	rdf:predicate	"quantify"
s2.3	"universally quantified full monotonic negation"	local:AM-MNR	"universally"
s2.2	"functionfree horn rules owldl provides both existentially and universally quantified full monotonic negation"
s2.2	"functionfree horn rules owldl provides both existentially and universally quantified full monotonic negation"	rdf:subject	"owldl"
s2.2	"functionfree horn rules owldl provides both existentially and universally quantified full monotonic negation"	rdf:predicate	"provide"
s2.2	"functionfree horn rules owldl provides both existentially and universally quantified full monotonic negation"	rdf:object	"existentially and universally quantify full monotonic negation"
s2.2	"full monotonic negation"	rdfs:member	"full monotonic"
s2.2	"full monotonic"	rdfs:subClassOf	"monotonic"
s2.2	"full monotonic"	rdfs:member	"full"
s2.2	"monotonic negation"	rdfs:subClassOf	"negation"
s2.2	"monotonic negation"	rdfs:member	"monotonic"
s2.2	"full monotonic negation"	rdfs:subClassOf	"negation"
s2.2	"full monotonic negation"	rdfs:subClassOf	"monotonic negation"
s2.2	"universally quantify"	rdfs:subClassOf	"quantify"
s2.2	"existentially universally quantify"	rdfs:subClassOf	"universally quantify"
s2.1	"the rules perspective owldl restricted to treelike rules"
s2.1	"the rules perspective owldl restricted to treelike rules"	rdf:subject	"rule perspective owldl"
s2.1	"rule perspective owldl"	rdfs:member	"rule perspective"
s2.1	"rule perspective owldl"	rdfs:subClassOf	"owldl"
s2.1	"perspective owldl"	rdfs:member	"perspective"
s2.1	"rule perspective"	rdfs:member	"rule"
s2.1	"rule perspective"	rdfs:subClassOf	"perspective"
s2.1	"perspective owldl"	rdfs:subClassOf	"owldl"
s2.1	"rule perspective owldl"	rdfs:subClassOf	"perspective owldl"
s2.1	"the rules perspective owldl restricted to treelike rules"	rdf:predicate	"restrict"
s2.1	"the rules perspective owldl restricted to treelike rules"	rdf:object	"treelike rule"
s2.1	"treelike rule"	rdfs:subClassOf	"rule"
s2.1	"treelike rule"	rdfs:member	"treelike"
s2	"yet orthogonal expressive power"
s2	"yet orthogonal expressive power"	rdf:subject	"expressive power"
s2	"expressive power"	rdfs:subClassOf	"power"
s2	"expressive power"	rdfs:member	"expressive"
s2	"yet orthogonal expressive power"	rdf:predicate	"orthogonal"
s2	"yet orthogonal expressive power"	local:AM-TMP	"yet"
s1.3	"universally quantified full monotonic negation"
s1.3	"universally quantified full monotonic negation"	rdf:subject	"full monotonic negation"
s1.3	"full monotonic negation"	rdfs:member	"full monotonic"
s1.3	"full monotonic"	rdfs:subClassOf	"monotonic"
s1.3	"full monotonic"	rdfs:member	"full"
s1.3	"monotonic negation"	rdfs:subClassOf	"negation"
s1.3	"monotonic negation"	rdfs:member	"monotonic"
s1.3	"full monotonic negation"	rdfs:subClassOf	"negation"
s1.3	"full monotonic negation"	rdfs:subClassOf	"monotonic negation"
s1.3	"universally quantified full monotonic negation"	rdf:predicate	"quantify"
s1.3	"universally quantified full monotonic negation"	local:AM-MNR	"universally"
s1.2	"owldl provides both existentially and universally quantified full monotonic negation"
s1.2	"owldl provides both existentially and universally quantified full monotonic negation"	rdf:subject	"owldl"
s1.2	"owldl provides both existentially and universally quantified full monotonic negation"	rdf:predicate	"provide"
s1.2	"owldl provides both existentially and universally quantified full monotonic negation"	rdf:object	"existentially and universally quantify full monotonic negation"
s1.2	"full monotonic negation"	rdfs:member	"full monotonic"
s1.2	"full monotonic"	rdfs:subClassOf	"monotonic"
s1.2	"full monotonic"	rdfs:member	"full"
s1.2	"monotonic negation"	rdfs:subClassOf	"negation"
s1.2	"monotonic negation"	rdfs:member	"monotonic"
s1.2	"full monotonic negation"	rdfs:subClassOf	"negation"
s1.2	"full monotonic negation"	rdfs:subClassOf	"monotonic negation"
s1.2	"universally quantify"	rdfs:subClassOf	"quantify"
s1.2	"existentially universally quantify"	rdfs:subClassOf	"universally quantify"
s1.1	"the rules perspective owldl restricted to treelike rules"
s1.1	"the rules perspective owldl restricted to treelike rules"	rdf:subject	"rule perspective owldl"
s1.1	"rule perspective owldl"	rdfs:member	"rule perspective"
s1.1	"rule perspective owldl"	rdfs:subClassOf	"owldl"
s1.1	"perspective owldl"	rdfs:member	"perspective"
s1.1	"rule perspective"	rdfs:member	"rule"
s1.1	"rule perspective"	rdfs:subClassOf	"perspective"
s1.1	"perspective owldl"	rdfs:subClassOf	"owldl"
s1.1	"rule perspective owldl"	rdfs:subClassOf	"perspective owldl"
s1.1	"the rules perspective owldl restricted to treelike rules"	rdf:predicate	"restrict"
s1.1	"the rules perspective owldl restricted to treelike rules"	rdf:object	"treelike rule"
s1.1	"treelike rule"	rdfs:subClassOf	"rule"
s1.1	"treelike rule"	rdfs:member	"treelike"
s1	"yet orthogonal expressive power"
s1	"yet orthogonal expressive power"	rdf:subject	"expressive power"
s1	"expressive power"	rdfs:subClassOf	"power"
s1	"expressive power"	rdfs:member	"expressive"
s1	"yet orthogonal expressive power"	rdf:predicate	"orthogonal"
s1	"yet orthogonal expressive power"	local:AM-TMP	"yet"
s0.3	"universally quantified variables"
s0.3	"universally quantified variables"	rdf:subject	"variable"
s0.3	"universally quantified variables"	rdf:predicate	"quantify"
s0.3	"universally quantified variables"	local:AM-MNR	"universally"
s0.2	"functionfree horn rules owldl provides both existentially and universally quantified variables"
s0.2	"functionfree horn rules owldl provides both existentially and universally quantified variables"	rdf:subject	"owldl"
s0.2	"functionfree horn rules owldl provides both existentially and universally quantified variables"	rdf:predicate	"provide"
s0.2	"functionfree horn rules owldl provides both existentially and universally quantified variables"	rdf:object	"existentially and universally quantify variable"
s0.2	"universally quantify"	rdfs:subClassOf	"quantify"
s0.2	"existentially universally quantify"	rdfs:subClassOf	"universally quantify"
s0.1	"the rules perspective owldl restricted to treelike rules"
s0.1	"the rules perspective owldl restricted to treelike rules"	rdf:subject	"rule perspective owldl"
s0.1	"rule perspective owldl"	rdfs:member	"rule perspective"
s0.1	"rule perspective owldl"	rdfs:subClassOf	"owldl"
s0.1	"perspective owldl"	rdfs:member	"perspective"
s0.1	"rule perspective"	rdfs:member	"rule"
s0.1	"rule perspective"	rdfs:subClassOf	"perspective"
s0.1	"perspective owldl"	rdfs:subClassOf	"owldl"
s0.1	"rule perspective owldl"	rdfs:subClassOf	"perspective owldl"
s0.1	"the rules perspective owldl restricted to treelike rules"	rdf:predicate	"restrict"
s0.1	"the rules perspective owldl restricted to treelike rules"	rdf:object	"treelike rule"
s0.1	"treelike rule"	rdfs:subClassOf	"rule"
s0.1	"treelike rule"	rdfs:member	"treelike"
s0	"yet orthogonal expressive power"
s0	"yet orthogonal expressive power"	rdf:subject	"expressive power"
s0	"expressive power"	rdfs:subClassOf	"power"
s0	"expressive power"	rdfs:member	"expressive"
s0	"yet orthogonal expressive power"	rdf:predicate	"orthogonal"
s0	"yet orthogonal expressive power"	local:AM-TMP	"yet"
