owls allows selecting composing web services at different levels of abstraction selection uses high level abstract descriptions invocation uses low level while composition needs to consider both high and low level descriptions
low level grounding ones
owls allows selecting invoking web services at different levels of abstraction selection uses high level abstract descriptions invocation uses low level while composition needs to consider both high and low level descriptions
in our setting two web services are to be composed so that output from the upstream one is used to create input for the downstream one
two web services may have different data models
two web services are related to each other through low level descriptions
two web services are related to each other through high level descriptions
correspondences must be found between the components
low level data transformation functions may be required  eg unit conversions data type conversions 
the components may be arranged in different xml tree structures
thus multiple data transformations are necessary matching leaves by corresponding types
thus multiple data transformations are necessary reshaping the message tree
thus multiple data transformations are necessary translating through ontologies
thus multiple data transformations are necessary calling conversion functions
our prototype compiles these transformations into a set of data transformation rules using our tableaubased