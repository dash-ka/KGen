s7.2	"experiments show"
s7.2	"experiments show"	rdf:subject	"experiment"
s7.2	"experiments show"	rdf:predicate	"show"
s7.1	"qom producing highquality results in favor of efficiency we experiments"
s7.1	"qom producing highquality results in favor of efficiency we experiments"	rdf:subject	"experiment"
s7.1	"qom producing highquality results in favor of efficiency we experiments"	rdf:predicate	"produce"
s7.1	"qom producing highquality results in favor of efficiency we experiments"	rdf:object	"highquality result in favor of efficiency"
s7.1	"highquality result in favor of efficiency"	rdfs:member	"efficiency"
s7.1	"highquality result in favor of efficiency"	rdfs:member	"highquality result"
s7.1	"highquality result in favor of efficiency"	rdfs:member	"favor"
s7.1	"highquality result"	rdfs:subClassOf	"result"
s7.1	"highquality result"	rdfs:member	"highquality"
s7.1	"highquality result in favor"	rdfs:member	"highquality result"
s7.1	"highquality result in favor"	rdfs:member	"favor"
s7.1	"favor of efficiency"	rdfs:member	"favor"
s7.1	"favor of efficiency"	rdfs:member	"efficiency"
s7	"qom gives up some of the possibilities for producing highquality results in favor of efficiency"
s7	"qom gives up some of the possibilities for producing highquality results in favor of efficiency"	rdf:subject	"qom"
s7	"qom gives up some of the possibilities for producing highquality results in favor of efficiency"	rdf:predicate	"give"
s7	"qom gives up some of the possibilities for producing highquality results in favor of efficiency"	rdf:object	"possibility for produce highquality result in favor of efficiency"
s7	"possibility for produce highquality result in favor of efficiency"	rdfs:member	"efficiency"
s7	"possibility for produce highquality result in favor of efficiency"	rdfs:member	"produce highquality result"
s7	"possibility for produce highquality result in favor of efficiency"	rdfs:member	"favor"
s7	"possibility for produce highquality result in favor of efficiency"	rdfs:member	"possibility"
s7	"produce highquality"	rdfs:member	"produce"
s7	"produce highquality result"	rdfs:member	"produce highquality"
s7	"highquality result"	rdfs:subClassOf	"result"
s7	"produce highquality"	rdfs:subClassOf	"highquality"
s7	"highquality result"	rdfs:member	"highquality"
s7	"produce highquality result"	rdfs:subClassOf	"result"
s7	"produce highquality result"	rdfs:subClassOf	"highquality result"
s7	"possibility for produce highquality result"	rdfs:member	"possibility"
s7	"possibility for produce highquality result"	rdfs:member	"produce highquality result"
s7	"produce highquality result in favor"	rdfs:member	"produce highquality result"
s7	"produce highquality result in favor"	rdfs:member	"favor"
s7	"favor of efficiency"	rdfs:member	"favor"
s7	"favor of efficiency"	rdfs:member	"efficiency"
s6.1	"this theoretical investigation translates into practical benefits"
s6.1	"this theoretical investigation translates into practical benefits"	rdf:subject	"theoretical investigation"
s6.1	"theoretical investigation"	rdfs:subClassOf	"investigation"
s6.1	"theoretical investigation"	rdfs:member	"theoretical"
s6.1	"this theoretical investigation translates into practical benefits"	rdf:predicate	"translate"
s6.1	"this theoretical investigation translates into practical benefits"	rdf:object	"practical benefit"
s6.1	"practical benefit"	rdfs:subClassOf	"benefit"
s6.1	"practical benefit"	rdfs:member	"practical"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"	rdf:subject	"we"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"	rdf:predicate	"show"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"	rdf:object	"theoretical investigation translate into practical benefit"
s6	"theoretical investigation translate into practical benefit"	rdfs:member	"practical benefit"
s6	"theoretical investigation translate into practical benefit"	rdfs:member	"theoretical investigation translate"
s6	"investigation translate"	rdfs:subClassOf	"translate"
s6	"practical benefit"	rdfs:member	"practical"
s6	"theoretical investigation translate"	rdfs:subClassOf	"translate"
s6	"practical benefit"	rdfs:subClassOf	"benefit"
s6	"theoretical investigation"	rdfs:member	"theoretical"
s6	"theoretical investigation translate"	rdfs:member	"theoretical investigation"
s6	"investigation translate"	rdfs:member	"investigation"
s6	"theoretical investigation"	rdfs:subClassOf	"investigation"
s6	"translate into practical benefit"	rdfs:member	"translate"
s6	"translate into practical benefit"	rdfs:member	"practical benefit"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"	local:AM-MNR	"experiment"
s6	"then we show in experiments that this theoretical investigation translates into practical benefits"	local:AM-TMP	"then"
s5.2	"existing prominent approaches"
s5.2	"existing prominent approaches"	rdf:subject	"prominent approach"
s5.2	"prominent approach"	rdfs:subClassOf	"approach"
s5.2	"prominent approach"	rdfs:member	"prominent"
s5.2	"existing prominent approaches"	rdf:predicate	"exist"
s5.1	"qom has lower runtime complexity than existing prominent approaches"
s5.1	"qom has lower runtime complexity than existing prominent approaches"	rdf:subject	"qom"
s5.1	"qom has lower runtime complexity than existing prominent approaches"	rdf:predicate	"have"
s5.1	"qom has lower runtime complexity than existing prominent approaches"	rdf:object	"lower runtime complexity than exist prominent approach"
s5.1	"lower runtime complexity than exist prominent approach"	rdfs:member	"lower runtime complexity"
s5.1	"lower runtime complexity than exist prominent approach"	rdfs:member	"exist prominent approach"
s5.1	"runtime complexity"	rdfs:member	"runtime"
s5.1	"exist prominent"	rdfs:subClassOf	"prominent"
s5.1	"prominent approach"	rdfs:subClassOf	"approach"
s5.1	"runtime complexity"	rdfs:subClassOf	"complexity"
s5.1	"lower runtime"	rdfs:member	"lower"
s5.1	"lower runtime complexity"	rdfs:subClassOf	"complexity"
s5.1	"exist prominent approach"	rdfs:subClassOf	"approach"
s5.1	"exist prominent approach"	rdfs:member	"exist prominent"
s5.1	"prominent approach"	rdfs:member	"prominent"
s5.1	"lower runtime"	rdfs:subClassOf	"runtime"
s5.1	"exist prominent"	rdfs:member	"exist"
s5.1	"lower runtime complexity"	rdfs:member	"lower runtime"
s5.1	"lower runtime complexity"	rdfs:subClassOf	"runtime complexity"
s5	"we show that qom has lower runtime complexity than existing prominent approaches"
s5	"we show that qom has lower runtime complexity than existing prominent approaches"	rdf:subject	"we"
s5	"we show that qom has lower runtime complexity than existing prominent approaches"	rdf:predicate	"show"
s5	"we show that qom has lower runtime complexity than existing prominent approaches"	rdf:object	"qom have lower runtime complexity than exist prominent approach"
s5	"qom have lower runtime complexity than exist prominent approach"	rdfs:member	"lower runtime complexity"
s5	"qom have lower runtime complexity than exist prominent approach"	rdfs:member	"qom"
s5	"qom have lower runtime complexity than exist prominent approach"	rdfs:member	"exist prominent approach"
s5	"runtime complexity"	rdfs:member	"runtime"
s5	"exist prominent"	rdfs:subClassOf	"prominent"
s5	"prominent approach"	rdfs:subClassOf	"approach"
s5	"runtime complexity"	rdfs:subClassOf	"complexity"
s5	"lower runtime"	rdfs:member	"lower"
s5	"lower runtime complexity"	rdfs:subClassOf	"complexity"
s5	"exist prominent approach"	rdfs:subClassOf	"approach"
s5	"exist prominent approach"	rdfs:member	"exist prominent"
s5	"prominent approach"	rdfs:member	"prominent"
s5	"lower runtime"	rdfs:subClassOf	"runtime"
s5	"exist prominent"	rdfs:member	"exist"
s5	"lower runtime complexity"	rdfs:member	"lower runtime"
s5	"lower runtime complexity"	rdfs:subClassOf	"runtime complexity"
s4.1	"we here trade off between efficiency of the mapping generation algorithms"
s4.1	"we here trade off between efficiency of the mapping generation algorithms"	rdf:subject	"here"
s4.1	"we here trade off between efficiency of the mapping generation algorithms"	rdf:predicate	"trade"
s4.1	"we here trade off between efficiency of the mapping generation algorithms"	local:AM-LOC	"efficiency of the map generation algorithm"
s4.1	"efficiency of the map generation algorithm"	rdfs:member	"efficiency"
s4.1	"efficiency of the map generation algorithm"	rdfs:member	"map generation algorithm"
s4.1	"generation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"map generation"	rdfs:member	"map"
s4.1	"map generation algorithm"	rdfs:member	"map generation"
s4.1	"map generation"	rdfs:subClassOf	"generation"
s4.1	"generation algorithm"	rdfs:member	"generation"
s4.1	"map generation algorithm"	rdfs:subClassOf	"algorithm"
s4.1	"map generation algorithm"	rdfs:subClassOf	"generation algorithm"
s4.1	"efficiency of map generation algorithm"	rdfs:member	"efficiency"
s4.1	"efficiency of map generation algorithm"	rdfs:member	"map generation algorithm"
s4	"we here consider qom quick ontology mapping as a way to trade off between efficiency of the mapping generation algorithms"
s4	"we here consider qom quick ontology mapping as a way to trade off between efficiency of the mapping generation algorithms"	rdf:subject	"here"
s4	"we here consider qom quick ontology mapping as a way to trade off between efficiency of the mapping generation algorithms"	rdf:predicate	"consider"
s4	"we here consider qom quick ontology mapping as a way to trade off between efficiency of the mapping generation algorithms"	rdf:object	"qom quick ontology map"
s4	"qom quick ontology map"	rdfs:member	"qom"
s4	"qom quick ontology map"	rdfs:member	"quick ontology map"
s4	"quick ontology"	rdfs:subClassOf	"ontology"
s4	"ontology map"	rdfs:member	"ontology"
s4	"quick ontology map"	rdfs:subClassOf	"map"
s4	"ontology map"	rdfs:subClassOf	"map"
s4	"quick ontology"	rdfs:member	"quick"
s4	"quick ontology map"	rdfs:member	"quick ontology"
s4	"quick ontology map"	rdfs:subClassOf	"ontology map"
s4	"qom quick ontology map"	rdfs:subClassOf	"quick ontology map"
s4	"we here consider qom quick ontology mapping as a way to trade off between efficiency of the mapping generation algorithms"	local:AM-MNR	"way to trade off between efficiency of the map generation algorithm"
s4	"way to trade off between efficiency of the map generation algorithm"	rdfs:member	"efficiency"
s4	"way to trade off between efficiency of the map generation algorithm"	rdfs:member	"way"
s4	"way to trade off between efficiency of the map generation algorithm"	rdfs:member	"map generation algorithm"
s4	"generation algorithm"	rdfs:subClassOf	"algorithm"
s4	"map generation"	rdfs:member	"map"
s4	"map generation algorithm"	rdfs:member	"map generation"
s4	"map generation"	rdfs:subClassOf	"generation"
s4	"generation algorithm"	rdfs:member	"generation"
s4	"map generation algorithm"	rdfs:subClassOf	"algorithm"
s4	"map generation algorithm"	rdfs:subClassOf	"generation algorithm"
s4	"trade between efficiency"	rdfs:member	"trade"
s4	"trade between efficiency"	rdfs:member	"efficiency"
s4	"efficiency of map generation algorithm"	rdfs:member	"efficiency"
s4	"efficiency of map generation algorithm"	rdfs:member	"map generation algorithm"
s3.1	"we here trade off between effectiveness of the mapping generation algorithms"
s3.1	"we here trade off between effectiveness of the mapping generation algorithms"	rdf:subject	"here"
s3.1	"we here trade off between effectiveness of the mapping generation algorithms"	rdf:predicate	"trade"
s3.1	"we here trade off between effectiveness of the mapping generation algorithms"	local:AM-LOC	"effectiveness of the map generation algorithm"
s3.1	"effectiveness of the map generation algorithm"	rdfs:member	"map generation algorithm"
s3.1	"effectiveness of the map generation algorithm"	rdfs:member	"effectiveness"
s3.1	"generation algorithm"	rdfs:subClassOf	"algorithm"
s3.1	"map generation"	rdfs:member	"map"
s3.1	"map generation algorithm"	rdfs:member	"map generation"
s3.1	"map generation"	rdfs:subClassOf	"generation"
s3.1	"generation algorithm"	rdfs:member	"generation"
s3.1	"map generation algorithm"	rdfs:subClassOf	"algorithm"
s3.1	"map generation algorithm"	rdfs:subClassOf	"generation algorithm"
s3.1	"effectiveness of map generation algorithm"	rdfs:member	"effectiveness"
s3.1	"effectiveness of map generation algorithm"	rdfs:member	"map generation algorithm"
s3	"we here consider qom quick ontology mapping as a way to trade off between effectiveness of the mapping generation algorithms"
s3	"we here consider qom quick ontology mapping as a way to trade off between effectiveness of the mapping generation algorithms"	rdf:subject	"here"
s3	"we here consider qom quick ontology mapping as a way to trade off between effectiveness of the mapping generation algorithms"	rdf:predicate	"consider"
s3	"we here consider qom quick ontology mapping as a way to trade off between effectiveness of the mapping generation algorithms"	rdf:object	"qom quick ontology map"
s3	"qom quick ontology map"	rdfs:member	"qom"
s3	"qom quick ontology map"	rdfs:member	"quick ontology map"
s3	"quick ontology"	rdfs:subClassOf	"ontology"
s3	"ontology map"	rdfs:member	"ontology"
s3	"quick ontology map"	rdfs:subClassOf	"map"
s3	"ontology map"	rdfs:subClassOf	"map"
s3	"quick ontology"	rdfs:member	"quick"
s3	"quick ontology map"	rdfs:member	"quick ontology"
s3	"quick ontology map"	rdfs:subClassOf	"ontology map"
s3	"qom quick ontology map"	rdfs:subClassOf	"quick ontology map"
s3	"we here consider qom quick ontology mapping as a way to trade off between effectiveness of the mapping generation algorithms"	local:AM-MNR	"way to trade off between effectiveness of the map generation algorithm"
s3	"way to trade off between effectiveness of the map generation algorithm"	rdfs:member	"map generation algorithm"
s3	"way to trade off between effectiveness of the map generation algorithm"	rdfs:member	"effectiveness"
s3	"way to trade off between effectiveness of the map generation algorithm"	rdfs:member	"way"
s3	"generation algorithm"	rdfs:subClassOf	"algorithm"
s3	"map generation"	rdfs:member	"map"
s3	"map generation algorithm"	rdfs:member	"map generation"
s3	"map generation"	rdfs:subClassOf	"generation"
s3	"generation algorithm"	rdfs:member	"generation"
s3	"map generation algorithm"	rdfs:subClassOf	"algorithm"
s3	"map generation algorithm"	rdfs:subClassOf	"generation algorithm"
s3	"trade between effectiveness"	rdfs:member	"trade"
s3	"trade between effectiveness"	rdfs:member	"effectiveness"
s3	"effectiveness of map generation algorithm"	rdfs:member	"effectiveness"
s3	"effectiveness of map generation algorithm"	rdfs:member	"map generation algorithm"
s2.1	"improving the quality of mapping results"
s2.1	"improving the quality of mapping results"	rdf:subject	"quality of map result"
s2.1	"quality of map result"	rdfs:member	"map result"
s2.1	"quality of map result"	rdfs:member	"quality"
s2.1	"map result"	rdfs:member	"map"
s2.1	"map result"	rdfs:subClassOf	"result"
s2.1	"quality of map"	rdfs:member	"quality"
s2.1	"quality of map"	rdfs:member	"map"
s2.1	"improving the quality of mapping results"	rdf:predicate	"improve"
s2	"existing literature"
s2	"existing literature"	rdf:subject	"literature"
s2	"existing literature"	rdf:predicate	"exist"
s1.1	"when services use different ontologies"
s1.1	"when services use different ontologies"	rdf:subject	"service"
s1.1	"when services use different ontologies"	rdf:predicate	"use"
s1.1	"when services use different ontologies"	rdf:object	"different ontology"
s1.1	"different ontology"	rdfs:member	"different"
s1.1	"different ontology"	rdfs:subClassOf	"ontology"
s1	"semiautomatic mapping of ontologies achieve interoperability when services use different ontologies"
s1	"semiautomatic mapping of ontologies achieve interoperability when services use different ontologies"	rdf:subject	"semiautomatic map of ontology"
s1	"semiautomatic map of ontology"	rdfs:member	"semiautomatic map"
s1	"semiautomatic map of ontology"	rdfs:member	"ontology"
s1	"semiautomatic map"	rdfs:member	"semiautomatic"
s1	"semiautomatic map"	rdfs:subClassOf	"map"
s1	"semiautomatic map of ontology"	rdfs:member	"semiautomatic map"
s1	"semiautomatic map of ontology"	rdfs:member	"ontology"
s1	"semiautomatic mapping of ontologies achieve interoperability when services use different ontologies"	rdf:predicate	"achieve"
s1	"semiautomatic mapping of ontologies achieve interoperability when services use different ontologies"	rdf:object	"interoperability"
s1	"semiautomatic mapping of ontologies achieve interoperability when services use different ontologies"	local:AM-TMP	"service use different ontology"
s1	"service use different ontology"	rdfs:member	"different ontology"
s1	"service use different ontology"	rdfs:member	"service use"
s1	"different ontology"	rdfs:member	"different"
s1	"service use"	rdfs:member	"service"
s1	"different ontology"	rdfs:subClassOf	"ontology"
s1	"service use"	rdfs:subClassOf	"use"
s0.1	"two agents use different ontologies"
s0.1	"two agents use different ontologies"	rdf:subject	"two agent"
s0.1	"two agent"	rdfs:subClassOf	"agent"
s0.1	"two agents use different ontologies"	rdf:predicate	"use"
s0.1	"two agents use different ontologies"	rdf:object	"different ontology"
s0.1	"different ontology"	rdfs:member	"different"
s0.1	"different ontology"	rdfs:subClassOf	"ontology"
s0	"semiautomatic mapping of ontologies achieve interoperability when two agents use different ontologies"
s0	"semiautomatic mapping of ontologies achieve interoperability when two agents use different ontologies"	rdf:subject	"semiautomatic map of ontology"
s0	"semiautomatic map of ontology"	rdfs:member	"semiautomatic map"
s0	"semiautomatic map of ontology"	rdfs:member	"ontology"
s0	"semiautomatic map"	rdfs:member	"semiautomatic"
s0	"semiautomatic map"	rdfs:subClassOf	"map"
s0	"semiautomatic map of ontology"	rdfs:member	"semiautomatic map"
s0	"semiautomatic map of ontology"	rdfs:member	"ontology"
s0	"semiautomatic mapping of ontologies achieve interoperability when two agents use different ontologies"	rdf:predicate	"achieve"
s0	"semiautomatic mapping of ontologies achieve interoperability when two agents use different ontologies"	rdf:object	"interoperability"
s0	"semiautomatic mapping of ontologies achieve interoperability when two agents use different ontologies"	local:AM-TMP	"two agent use different ontology"
s0	"two agent use different ontology"	rdfs:member	"agent use"
s0	"two agent use different ontology"	rdfs:member	"different ontology"
s0	"different ontology"	rdfs:member	"different"
s0	"agent use"	rdfs:member	"agent"
s0	"different ontology"	rdfs:subClassOf	"ontology"
s0	"agent use"	rdfs:subClassOf	"use"
s0	"two agent use"	rdfs:subClassOf	"agent use"
