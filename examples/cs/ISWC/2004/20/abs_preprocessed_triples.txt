s13.1	"these experiments carried out on realworld ontologies"
s13.1	"these experiments carried out on realworld ontologies"	rdf:subject	"experiment"
s13.1	"these experiments carried out on realworld ontologies"	rdf:predicate	"carry"
s13.1	"these experiments carried out on realworld ontologies"	rdf:object	"realworld ontology"
s13.1	"realworld ontology"	rdfs:member	"realworld"
s13.1	"realworld ontology"	rdfs:subClassOf	"ontology"
s13	"we support this claim by these experiments carried out on realworld ontologies"
s13	"we support this claim by these experiments carried out on realworld ontologies"	rdf:subject	"we"
s13	"we support this claim by these experiments carried out on realworld ontologies"	rdf:predicate	"support"
s13	"we support this claim by these experiments carried out on realworld ontologies"	rdf:object	"claim"
s13	"we support this claim by these experiments carried out on realworld ontologies"	local:AM-LOC	"experiment carry out on realworld ontology"
s13	"experiment carry out on realworld ontology"	rdfs:member	"realworld ontology"
s13	"experiment carry out on realworld ontology"	rdfs:member	"experiment"
s13	"realworld ontology"	rdfs:member	"realworld"
s13	"realworld ontology"	rdfs:subClassOf	"ontology"
s13	"carry on realworld ontology"	rdfs:member	"carry"
s13	"carry on realworld ontology"	rdfs:member	"realworld ontology"
s11.1	"these experiments carried out"
s11.1	"these experiments carried out"	rdf:subject	"experiment"
s11.1	"these experiments carried out"	rdf:predicate	"carry"
s11	"we support this claim by these experiments carried out on"
s11	"we support this claim by these experiments carried out on"	rdf:subject	"we"
s11	"we support this claim by these experiments carried out on"	rdf:predicate	"support"
s11	"we support this claim by these experiments carried out on"	rdf:object	"claim"
s11	"we support this claim by these experiments carried out on"	local:AM-TMP	"experiment carry out on"
s8.1	"the structurebased method performs surprisingly well on realworld ontologies"
s8.1	"the structurebased method performs surprisingly well on realworld ontologies"	rdf:subject	"structurebased method"
s8.1	"structurebased method"	rdfs:subClassOf	"method"
s8.1	"the structurebased method performs surprisingly well on realworld ontologies"	rdf:predicate	"perform"
s8.1	"the structurebased method performs surprisingly well on realworld ontologies"	rdf:object	"realworld ontology"
s8.1	"realworld ontology"	rdfs:member	"realworld"
s8.1	"realworld ontology"	rdfs:subClassOf	"ontology"
s8.1	"the structurebased method performs surprisingly well on realworld ontologies"	local:AM-MNR	"surprisingly well"
s8.1	"surprisingly well"	rdfs:subClassOf	"well"
s8	"we show that the structurebased method performs surprisingly well on realworld ontologies"
s8	"we show that the structurebased method performs surprisingly well on realworld ontologies"	rdf:subject	"we"
s8	"we show that the structurebased method performs surprisingly well on realworld ontologies"	rdf:predicate	"show"
s8	"we show that the structurebased method performs surprisingly well on realworld ontologies"	rdf:object	"structurebased method perform surprisingly well on realworld ontology"
s8	"structurebased method perform surprisingly well on realworld ontology"	rdfs:member	"realworld ontology"
s8	"structurebased method perform surprisingly well on realworld ontology"	rdfs:member	"method perform"
s8	"method perform"	rdfs:member	"method"
s8	"realworld ontology"	rdfs:member	"realworld"
s8	"realworld ontology"	rdfs:subClassOf	"ontology"
s8	"method perform"	rdfs:subClassOf	"perform"
s8	"well perform"	rdfs:subClassOf	"perform"
s8	"surprisingly well"	rdfs:subClassOf	"well"
s8	"structurebased method"	rdfs:subClassOf	"method"
s8	"well perform on realworld ontology"	rdfs:member	"well perform"
s8	"well perform on realworld ontology"	rdfs:member	"realworld ontology"
s7	"smaller modules based on the structure of the class hierarchy"
s7	"smaller modules based on the structure of the class hierarchy"	rdf:subject	"smaller module"
s7	"smaller module"	rdfs:subClassOf	"module"
s7	"smaller module"	rdfs:member	"smaller"
s7	"smaller modules based on the structure of the class hierarchy"	rdf:predicate	"base"
s7	"smaller modules based on the structure of the class hierarchy"	rdf:object	"structure of the class hierarchy"
s7	"structure of the class hierarchy"	rdfs:member	"class hierarchy"
s7	"structure of the class hierarchy"	rdfs:member	"structure"
s7	"class hierarchy"	rdfs:member	"class"
s7	"class hierarchy"	rdfs:subClassOf	"hierarchy"
s7	"structure of class hierarchy"	rdfs:member	"structure"
s7	"structure of class hierarchy"	rdfs:member	"class hierarchy"
s6.1	"automatically partitioning large ontologies into smaller modules"
s6.1	"automatically partitioning large ontologies into smaller modules"	rdf:subject	"large ontology into smaller module"
s6.1	"large ontology into smaller module"	rdfs:member	"smaller module"
s6.1	"large ontology into smaller module"	rdfs:member	"large ontology"
s6.1	"large ontology"	rdfs:member	"large"
s6.1	"large ontology"	rdfs:subClassOf	"ontology"
s6.1	"smaller module"	rdfs:subClassOf	"module"
s6.1	"smaller module"	rdfs:member	"smaller"
s6.1	"large ontology into smaller module"	rdfs:member	"large ontology"
s6.1	"large ontology into smaller module"	rdfs:member	"smaller module"
s6.1	"automatically partitioning large ontologies into smaller modules"	rdf:predicate	"partition"
s6.1	"automatically partitioning large ontologies into smaller modules"	local:AM-MNR	"automatically"
s6	"we propose a method for automatically partitioning large ontologies into smaller modules"
s6	"we propose a method for automatically partitioning large ontologies into smaller modules"	rdf:subject	"we"
s6	"we propose a method for automatically partitioning large ontologies into smaller modules"	rdf:predicate	"propose"
s6	"we propose a method for automatically partitioning large ontologies into smaller modules"	rdf:object	"method for automatically partition large ontology into smaller module"
s6	"method for automatically partition large ontology into smaller module"	rdfs:member	"smaller module"
s6	"method for automatically partition large ontology into smaller module"	rdfs:member	"automatically partition large ontology"
s6	"method for automatically partition large ontology into smaller module"	rdfs:member	"method"
s6	"automatically partition large"	rdfs:member	"automatically partition"
s6	"partition large"	rdfs:subClassOf	"large"
s6	"large ontology"	rdfs:member	"large"
s6	"partition large ontology"	rdfs:subClassOf	"ontology"
s6	"partition large"	rdfs:member	"partition"
s6	"partition large ontology"	rdfs:member	"partition large"
s6	"automatically partition large ontology"	rdfs:subClassOf	"ontology"
s6	"automatically partition large ontology"	rdfs:member	"automatically partition large"
s6	"smaller module"	rdfs:subClassOf	"module"
s6	"smaller module"	rdfs:member	"smaller"
s6	"automatically partition"	rdfs:subClassOf	"partition"
s6	"large ontology"	rdfs:subClassOf	"ontology"
s6	"automatically partition"	rdfs:member	"automatically"
s6	"automatically partition large"	rdfs:subClassOf	"large"
s6	"partition large ontology"	rdfs:subClassOf	"large ontology"
s6	"method for partition large ontology"	rdfs:member	"method"
s6	"method for partition large ontology"	rdfs:member	"partition large ontology"
s6	"method for partition large ontology into smaller module"	rdfs:member	"method for partition large ontology"
s6	"method for partition large ontology into smaller module"	rdfs:member	"smaller module"
s5	"in this paper we suggest a similar approach for ontologies"
s5	"in this paper we suggest a similar approach for ontologies"	rdf:subject	"we"
s5	"in this paper we suggest a similar approach for ontologies"	rdf:predicate	"suggest"
s5	"in this paper we suggest a similar approach for ontologies"	rdf:object	"similar approach for ontology"
s5	"similar approach for ontology"	rdfs:member	"ontology"
s5	"similar approach for ontology"	rdfs:member	"similar approach"
s5	"similar approach"	rdfs:subClassOf	"approach"
s5	"similar approach"	rdfs:member	"similar"
s5	"similar approach for ontology"	rdfs:member	"similar approach"
s5	"similar approach for ontology"	rdfs:member	"ontology"
s5	"in this paper we suggest a similar approach for ontologies"	local:AM-LOC	"paper"
s4.1	"in other areas eg software partitioning monolithic entities into sets of mostly selfcontained modules"
s4.1	"in other areas eg software partitioning monolithic entities into sets of mostly selfcontained modules"	rdf:subject	"monolithic entity into set of mostly selfcontained module"
s4.1	"monolithic entity into set of mostly selfcontained module"	rdfs:member	"module"
s4.1	"monolithic entity into set of mostly selfcontained module"	rdfs:member	"monolithic entity"
s4.1	"monolithic entity into set of mostly selfcontained module"	rdfs:member	"set"
s4.1	"monolithic entity"	rdfs:subClassOf	"entity"
s4.1	"monolithic entity"	rdfs:member	"monolithic"
s4.1	"selfcontained module"	rdfs:subClassOf	"module"
s4.1	"mostly selfcontained"	rdfs:subClassOf	"selfcontained"
s4.1	"monolithic entity into set"	rdfs:member	"monolithic entity"
s4.1	"monolithic entity into set"	rdfs:member	"set"
s4.1	"set of selfcontained module"	rdfs:member	"set"
s4.1	"set of selfcontained module"	rdfs:member	"selfcontained module"
s4.1	"in other areas eg software partitioning monolithic entities into sets of mostly selfcontained modules"	rdf:predicate	"partition"
s4.1	"in other areas eg software partitioning monolithic entities into sets of mostly selfcontained modules"	local:AM-LOC	"area eg software"
s4.1	"area eg"	rdfs:subClassOf	"eg"
s4.1	"area eg software"	rdfs:member	"area eg"
s4.1	"area eg"	rdfs:member	"area"
s4.1	"eg software"	rdfs:member	"eg"
s4.1	"eg software"	rdfs:subClassOf	"software"
s4.1	"area eg software"	rdfs:subClassOf	"software"
s4.1	"area eg software"	rdfs:subClassOf	"eg software"
s4	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of mostly selfcontained modules"
s4	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of mostly selfcontained modules"	rdf:subject	"partition monolithic entity"
s4	"partition monolithic entity"	rdfs:member	"partition"
s4	"partition monolithic entity"	rdfs:member	"monolithic entity"
s4	"monolithic entity"	rdfs:subClassOf	"entity"
s4	"monolithic entity"	rdfs:member	"monolithic"
s4	"partition monolithic entity"	rdfs:subClassOf	"monolithic entity"
s4	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of mostly selfcontained modules"	rdf:predicate	"tackle"
s4	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of mostly selfcontained modules"	rdf:object	"problem set of mostly selfcontained module"
s4	"problem set of mostly selfcontained module"	rdfs:member	"problem set"
s4	"problem set of mostly selfcontained module"	rdfs:member	"module"
s4	"problem set"	rdfs:member	"problem"
s4	"problem set"	rdfs:subClassOf	"set"
s4	"selfcontained module"	rdfs:subClassOf	"module"
s4	"mostly selfcontained"	rdfs:subClassOf	"selfcontained"
s4	"problem set of selfcontained module"	rdfs:member	"problem set"
s4	"problem set of selfcontained module"	rdfs:member	"selfcontained module"
s4	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of mostly selfcontained modules"	local:AM-LOC	"area eg software engineer"
s4	"area eg"	rdfs:subClassOf	"eg"
s4	"software engineer"	rdfs:subClassOf	"engineer"
s4	"eg software engineer"	rdfs:subClassOf	"engineer"
s4	"area eg software"	rdfs:member	"area eg"
s4	"area eg software engineer"	rdfs:subClassOf	"engineer"
s4	"eg software engineer"	rdfs:member	"eg software"
s4	"software engineer"	rdfs:member	"software"
s4	"area eg software engineer"	rdfs:member	"area eg software"
s4	"area eg"	rdfs:member	"area"
s4	"eg software"	rdfs:member	"eg"
s4	"eg software"	rdfs:subClassOf	"software"
s4	"area eg software"	rdfs:subClassOf	"software"
s4	"eg software engineer"	rdfs:subClassOf	"software engineer"
s4	"area eg software engineer"	rdfs:subClassOf	"eg software engineer"
s3.1	"in other areas eg software partitioning monolithic entities into sets of meaningful modules"
s3.1	"in other areas eg software partitioning monolithic entities into sets of meaningful modules"	rdf:subject	"monolithic entity"
s3.1	"monolithic entity"	rdfs:subClassOf	"entity"
s3.1	"monolithic entity"	rdfs:member	"monolithic"
s3.1	"in other areas eg software partitioning monolithic entities into sets of meaningful modules"	rdf:predicate	"partition"
s3.1	"in other areas eg software partitioning monolithic entities into sets of meaningful modules"	local:AM-LOC	"area eg software"
s3.1	"area eg"	rdfs:subClassOf	"eg"
s3.1	"area eg software"	rdfs:member	"area eg"
s3.1	"area eg"	rdfs:member	"area"
s3.1	"eg software"	rdfs:member	"eg"
s3.1	"eg software"	rdfs:subClassOf	"software"
s3.1	"area eg software"	rdfs:subClassOf	"software"
s3.1	"area eg software"	rdfs:subClassOf	"eg software"
s3.1	"in other areas eg software partitioning monolithic entities into sets of meaningful modules"	local:AM-MNR	"set of meaningful module"
s3.1	"set of meaningful module"	rdfs:member	"meaningful module"
s3.1	"set of meaningful module"	rdfs:member	"set"
s3.1	"meaningful module"	rdfs:subClassOf	"module"
s3.1	"meaningful module"	rdfs:member	"meaningful"
s3.1	"set of meaningful module"	rdfs:member	"set"
s3.1	"set of meaningful module"	rdfs:member	"meaningful module"
s3	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of meaningful modules"
s3	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of meaningful modules"	rdf:subject	"partition monolithic entity"
s3	"partition monolithic entity"	rdfs:member	"partition"
s3	"partition monolithic entity"	rdfs:member	"monolithic entity"
s3	"monolithic entity"	rdfs:subClassOf	"entity"
s3	"monolithic entity"	rdfs:member	"monolithic"
s3	"partition monolithic entity"	rdfs:subClassOf	"monolithic entity"
s3	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of meaningful modules"	rdf:predicate	"tackle"
s3	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of meaningful modules"	rdf:object	"problem set of meaningful module"
s3	"problem set of meaningful module"	rdfs:member	"problem set"
s3	"problem set of meaningful module"	rdfs:member	"meaningful module"
s3	"meaningful module"	rdfs:subClassOf	"module"
s3	"meaningful module"	rdfs:member	"meaningful"
s3	"problem set"	rdfs:member	"problem"
s3	"problem set"	rdfs:subClassOf	"set"
s3	"problem set of meaningful module"	rdfs:member	"problem set"
s3	"problem set of meaningful module"	rdfs:member	"meaningful module"
s3	"in other areas eg software engineering these problems tackled by partitioning monolithic entities into sets of meaningful modules"	local:AM-LOC	"area eg software engineer"
s3	"area eg"	rdfs:subClassOf	"eg"
s3	"software engineer"	rdfs:subClassOf	"engineer"
s3	"eg software engineer"	rdfs:subClassOf	"engineer"
s3	"area eg software"	rdfs:member	"area eg"
s3	"area eg software engineer"	rdfs:subClassOf	"engineer"
s3	"eg software engineer"	rdfs:member	"eg software"
s3	"software engineer"	rdfs:member	"software"
s3	"area eg software engineer"	rdfs:member	"area eg software"
s3	"area eg"	rdfs:member	"area"
s3	"eg software"	rdfs:member	"eg"
s3	"eg software"	rdfs:subClassOf	"software"
s3	"area eg software"	rdfs:subClassOf	"software"
s3	"eg software engineer"	rdfs:subClassOf	"software engineer"
s3	"area eg software engineer"	rdfs:subClassOf	"eg software engineer"
s2	"handling these ontologies"
s2	"handling these ontologies"	rdf:subject	"ontology"
s2	"handling these ontologies"	rdf:predicate	"handle"
s1	"handling these ontologies"
s1	"handling these ontologies"	rdf:subject	"ontology"
s1	"handling these ontologies"	rdf:predicate	"handle"
s0.1	"the increasing awareness of the benefits of these ontologies has lead to the creation of a number of large ontologies about realworld domains"
s0.1	"the increasing awareness of the benefits of these ontologies has lead to the creation of a number of large ontologies about realworld domains"	rdf:subject	"increase awareness of the benefit of these ontology"
s0.1	"increase awareness of the benefit of these ontology"	rdfs:member	"increase awareness"
s0.1	"increase awareness of the benefit of these ontology"	rdfs:member	"benefit"
s0.1	"increase awareness of the benefit of these ontology"	rdfs:member	"ontology"
s0.1	"increase awareness"	rdfs:subClassOf	"awareness"
s0.1	"increase awareness"	rdfs:member	"increase"
s0.1	"increase awareness of benefit"	rdfs:member	"increase awareness"
s0.1	"increase awareness of benefit"	rdfs:member	"benefit"
s0.1	"benefit of ontology"	rdfs:member	"benefit"
s0.1	"benefit of ontology"	rdfs:member	"ontology"
s0.1	"the increasing awareness of the benefits of these ontologies has lead to the creation of a number of large ontologies about realworld domains"	rdf:predicate	"have"
s0.1	"the increasing awareness of the benefits of these ontologies has lead to the creation of a number of large ontologies about realworld domains"	rdf:object	"lead to the creation of a number of large ontology about realworld domain"
s0.1	"lead to the creation of a number of large ontology about realworld domain"	rdfs:member	"realworld domain"
s0.1	"lead to the creation of a number of large ontology about realworld domain"	rdfs:member	"large ontology"
s0.1	"lead to the creation of a number of large ontology about realworld domain"	rdfs:member	"creation"
s0.1	"lead to the creation of a number of large ontology about realworld domain"	rdfs:member	"lead"
s0.1	"lead to the creation of a number of large ontology about realworld domain"	rdfs:member	"number"
s0.1	"large ontology"	rdfs:subClassOf	"ontology"
s0.1	"realworld domain"	rdfs:member	"realworld"
s0.1	"realworld domain"	rdfs:subClassOf	"domain"
s0.1	"large ontology"	rdfs:member	"large"
s0.1	"ontology creation"	rdfs:subClassOf	"creation"
s0.1	"a large ontology"	rdfs:subClassOf	"large ontology"
s0.1	"lead to ontology creation"	rdfs:member	"lead"
s0.1	"lead to ontology creation"	rdfs:member	"ontology creation"
s0.1	"number about realworld domain"	rdfs:member	"number"
s0.1	"number about realworld domain"	rdfs:member	"realworld domain"
s0	"increasing awareness"
s0	"increasing awareness"	rdf:subject	"awareness"
s0	"increasing awareness"	rdf:predicate	"increase"
