RDF Schema has a nonstandard metamodeling architecture
a nonstandard metamodeling architecture which makes some elements in the model have dual roles in the RDF Schema specification
As a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory
This leads to semantic problems
semantic problems when trying to layer conventional first order languages like DAMLOIL on top of RDF Schema
In this paper we will first demonstrate how this problem with RDF Schema can be solved in a sublanguage of RDF Schema RDFS  based on a  relatively  standard modeltheoretic semantics
RDFS  which introduces a Fixed layer metamodeling Architecture to RDF Schema
RDF Schema  which introduces a Fixed layer metamodeling Architecture to RDF Schema
In this paper we will first demonstrate how this problem with RDF Schema can be solved in a sublanguage of RDF Schema RDF Schema  based on a  relatively  standard modeltheoretic semantics
Logical layer Semantic Web languages such as DAMLOIL can therefore be built on top of both semantics of RDF Schema 
Logical layer Semantic Web languages such as DAMLOIL can therefore be built on top of both the syntax of RDFS 
Logical layer Semantic Web languages such as OWL can therefore be built on top of both semantics of RDFS 
Logical layer Semantic Web languages such as DAMLOIL can therefore be built on top of both semantics of RDFS 
Logical layer Semantic Web languages such as OWL can therefore be built on top of both the syntax of RDFS 
Logical layer Semantic Web languages such as OWL can therefore be built on top of both semantics of RDF Schema 
Logical layer Semantic Web languages such as DAMLOIL can therefore be built on top of both the syntax of RDF Schema 
Logical layer Semantic Web languages such as OWL can therefore be built on top of both the syntax of RDF Schema 
We will also discuss the advantages and disadvantages of the two approaches
We will also compare this approach with the existing RDF Model Theory