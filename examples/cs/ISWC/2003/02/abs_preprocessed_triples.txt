s18.1	"existing rdf model theory"
s18.1	"existing rdf model theory"	rdf:subject	"RDF Model Theory"
s18.1	"rdf model theory"	rdfs:member	"rdf model"
s18.1	"rdf model theory"	rdfs:subClassOf	"theory"
s18.1	"rdf model"	rdfs:member	"rdf"
s18.1	"rdf model"	rdfs:subClassOf	"model"
s18.1	"model theory"	rdfs:subClassOf	"theory"
s18.1	"model theory"	rdfs:member	"model"
s18.1	"rdf model theory"	rdfs:subClassOf	"model theory"
s18.1	"existing rdf model theory"	rdf:predicate	"exist"
s18	"we will also compare this approach with the existing rdf model theory"
s18	"we will also compare this approach with the existing rdf model theory"	rdf:subject	"We"
s18	"we will also compare this approach with the existing rdf model theory"	rdf:predicate	"compare"
s18	"we will also compare this approach with the existing rdf model theory"	rdf:object	"approach existing RDF Model Theory"
s18	"approach existing rdf model theory"	rdfs:member	"approach"
s18	"approach existing rdf model theory"	rdfs:member	"rdf model theory"
s18	"rdf model theory"	rdfs:member	"rdf model"
s18	"rdf model theory"	rdfs:subClassOf	"theory"
s18	"rdf model"	rdfs:member	"rdf"
s18	"rdf model"	rdfs:subClassOf	"model"
s18	"model theory"	rdfs:subClassOf	"theory"
s18	"model theory"	rdfs:member	"model"
s18	"rdf model theory"	rdfs:subClassOf	"model theory"
s18	"existing rdf model theory"	rdfs:subClassOf	"rdf model theory"
s18	"approach existing rdf model theory"	rdfs:subClassOf	"existing rdf model theory"
s18	"we will also compare this approach with the existing rdf model theory"	local:AM-DIS	"also"
s18	"we will also compare this approach with the existing rdf model theory"	local:AM-MOD	"will"
s17	"we will also discuss the advantages and disadvantages of the two approaches"
s17	"we will also discuss the advantages and disadvantages of the two approaches"	rdf:subject	"We"
s17	"we will also discuss the advantages and disadvantages of the two approaches"	rdf:predicate	"discuss"
s17	"we will also discuss the advantages and disadvantages of the two approaches"	rdf:object	"advantages and disadvantages of the two approaches"
s17	"advantages and disadvantages of the two approaches"	rdfs:member	"advantages"
s17	"advantages and disadvantages of the two approaches"	rdfs:member	"approaches"
s17	"advantages and disadvantages of the two approaches"	rdfs:member	"disadvantages"
s17	"two approaches"	rdfs:subClassOf	"approaches"
s17	"advantages of two approaches"	rdfs:member	"advantages"
s17	"advantages of two approaches"	rdfs:member	"two approaches"
s17	"we will also discuss the advantages and disadvantages of the two approaches"	local:AM-DIS	"also"
s17	"we will also discuss the advantages and disadvantages of the two approaches"	local:AM-MOD	"will"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"	rdf:subject	"Logical layer Semantic Web languages such as OWL"
s16	"logical layer semantic web languages such as owl"	rdfs:member	"owl"
s16	"logical layer semantic web languages such as owl"	rdfs:member	"logical layer semantic web"
s16	"layer semantic"	rdfs:subClassOf	"semantic"
s16	"layer semantic"	rdfs:member	"layer"
s16	"semantic web"	rdfs:member	"semantic"
s16	"layer semantic web"	rdfs:member	"layer semantic"
s16	"logical layer semantic"	rdfs:subClassOf	"semantic"
s16	"logical layer semantic web"	rdfs:subClassOf	"web"
s16	"layer semantic web"	rdfs:subClassOf	"web"
s16	"logical layer semantic"	rdfs:member	"logical layer"
s16	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s16	"logical layer"	rdfs:member	"logical"
s16	"logical layer"	rdfs:subClassOf	"layer"
s16	"semantic web"	rdfs:subClassOf	"web"
s16	"web languages"	rdfs:subClassOf	"languages"
s16	"semantic web languages"	rdfs:subClassOf	"web languages"
s16	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s16	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s16	"logical layer semantic web languages such_as owl"	rdfs:member	"logical layer semantic web languages"
s16	"logical layer semantic web languages such_as owl"	rdfs:member	"owl"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"	rdf:predicate	"build"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"	rdf:object	"top of both the syntax of RDF Schema"
s16	"top of both the syntax of rdf schema"	rdfs:member	"rdf schema"
s16	"top of both the syntax of rdf schema"	rdfs:member	"syntax"
s16	"top of both the syntax of rdf schema"	rdfs:member	"top"
s16	"rdf schema"	rdfs:subClassOf	"schema"
s16	"rdf schema"	rdfs:member	"rdf"
s16	"top of syntax"	rdfs:member	"top"
s16	"top of syntax"	rdfs:member	"syntax"
s16	"syntax of rdf schema"	rdfs:member	"syntax"
s16	"syntax of rdf schema"	rdfs:member	"rdf schema"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"	local:AM-DIS	"therefore"
s16	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdf schema"	local:AM-MOD	"can"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"	rdf:subject	"Logical layer Semantic Web languages such as DAMLOIL"
s15	"logical layer semantic web languages such as damloil"	rdfs:member	"damloil"
s15	"logical layer semantic web languages such as damloil"	rdfs:member	"logical layer semantic web"
s15	"layer semantic"	rdfs:subClassOf	"semantic"
s15	"layer semantic"	rdfs:member	"layer"
s15	"semantic web"	rdfs:member	"semantic"
s15	"layer semantic web"	rdfs:member	"layer semantic"
s15	"logical layer semantic"	rdfs:subClassOf	"semantic"
s15	"logical layer semantic web"	rdfs:subClassOf	"web"
s15	"layer semantic web"	rdfs:subClassOf	"web"
s15	"logical layer semantic"	rdfs:member	"logical layer"
s15	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s15	"logical layer"	rdfs:member	"logical"
s15	"logical layer"	rdfs:subClassOf	"layer"
s15	"semantic web"	rdfs:subClassOf	"web"
s15	"web languages"	rdfs:subClassOf	"languages"
s15	"semantic web languages"	rdfs:subClassOf	"web languages"
s15	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s15	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s15	"logical layer semantic web languages such_as damloil"	rdfs:member	"logical layer semantic web languages"
s15	"logical layer semantic web languages such_as damloil"	rdfs:member	"damloil"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"	rdf:predicate	"build"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"	rdf:object	"top of both the syntax of RDF Schema"
s15	"top of both the syntax of rdf schema"	rdfs:member	"rdf schema"
s15	"top of both the syntax of rdf schema"	rdfs:member	"syntax"
s15	"top of both the syntax of rdf schema"	rdfs:member	"top"
s15	"rdf schema"	rdfs:subClassOf	"schema"
s15	"rdf schema"	rdfs:member	"rdf"
s15	"top of syntax"	rdfs:member	"top"
s15	"top of syntax"	rdfs:member	"syntax"
s15	"syntax of rdf schema"	rdfs:member	"syntax"
s15	"syntax of rdf schema"	rdfs:member	"rdf schema"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"	local:AM-DIS	"therefore"
s15	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdf schema"	local:AM-MOD	"can"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"	rdf:subject	"Logical layer Semantic Web languages such as OWL"
s14	"logical layer semantic web languages such as owl"	rdfs:member	"owl"
s14	"logical layer semantic web languages such as owl"	rdfs:member	"logical layer semantic web"
s14	"layer semantic"	rdfs:subClassOf	"semantic"
s14	"layer semantic"	rdfs:member	"layer"
s14	"semantic web"	rdfs:member	"semantic"
s14	"layer semantic web"	rdfs:member	"layer semantic"
s14	"logical layer semantic"	rdfs:subClassOf	"semantic"
s14	"logical layer semantic web"	rdfs:subClassOf	"web"
s14	"layer semantic web"	rdfs:subClassOf	"web"
s14	"logical layer semantic"	rdfs:member	"logical layer"
s14	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s14	"logical layer"	rdfs:member	"logical"
s14	"logical layer"	rdfs:subClassOf	"layer"
s14	"semantic web"	rdfs:subClassOf	"web"
s14	"web languages"	rdfs:subClassOf	"languages"
s14	"semantic web languages"	rdfs:subClassOf	"web languages"
s14	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s14	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s14	"logical layer semantic web languages such_as owl"	rdfs:member	"logical layer semantic web languages"
s14	"logical layer semantic web languages such_as owl"	rdfs:member	"owl"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"	rdf:predicate	"build"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"	local:AM-DIS	"therefore"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"	local:AM-MNR	"top of both semantics of RDF Schema"
s14	"top of both semantics of rdf schema"	rdfs:member	"semantics"
s14	"top of both semantics of rdf schema"	rdfs:member	"rdf schema"
s14	"top of both semantics of rdf schema"	rdfs:member	"top"
s14	"rdf schema"	rdfs:subClassOf	"schema"
s14	"rdf schema"	rdfs:member	"rdf"
s14	"top of semantics"	rdfs:member	"top"
s14	"top of semantics"	rdfs:member	"semantics"
s14	"semantics of rdf schema"	rdfs:member	"semantics"
s14	"semantics of rdf schema"	rdfs:member	"rdf schema"
s14	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdf schema"	local:AM-MOD	"can"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"	rdf:subject	"Logical layer Semantic Web languages such as OWL"
s13	"logical layer semantic web languages such as owl"	rdfs:member	"owl"
s13	"logical layer semantic web languages such as owl"	rdfs:member	"logical layer semantic web"
s13	"layer semantic"	rdfs:subClassOf	"semantic"
s13	"layer semantic"	rdfs:member	"layer"
s13	"semantic web"	rdfs:member	"semantic"
s13	"layer semantic web"	rdfs:member	"layer semantic"
s13	"logical layer semantic"	rdfs:subClassOf	"semantic"
s13	"logical layer semantic web"	rdfs:subClassOf	"web"
s13	"layer semantic web"	rdfs:subClassOf	"web"
s13	"logical layer semantic"	rdfs:member	"logical layer"
s13	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s13	"logical layer"	rdfs:member	"logical"
s13	"logical layer"	rdfs:subClassOf	"layer"
s13	"semantic web"	rdfs:subClassOf	"web"
s13	"web languages"	rdfs:subClassOf	"languages"
s13	"semantic web languages"	rdfs:subClassOf	"web languages"
s13	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s13	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s13	"logical layer semantic web languages such_as owl"	rdfs:member	"logical layer semantic web languages"
s13	"logical layer semantic web languages such_as owl"	rdfs:member	"owl"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"	rdf:predicate	"build"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"	rdf:object	"top of both the syntax of RDFS"
s13	"top of both the syntax of rdfs"	rdfs:member	"rdfs"
s13	"top of both the syntax of rdfs"	rdfs:member	"syntax"
s13	"top of both the syntax of rdfs"	rdfs:member	"top"
s13	"top of syntax"	rdfs:member	"top"
s13	"top of syntax"	rdfs:member	"syntax"
s13	"syntax of rdfs"	rdfs:member	"syntax"
s13	"syntax of rdfs"	rdfs:member	"rdfs"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"	local:AM-DIS	"therefore"
s13	"logical layer semantic web languages such as owl can therefore built on top of both the syntax of rdfs"	local:AM-MOD	"can"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"	rdf:subject	"Logical layer Semantic Web languages such as DAMLOIL"
s12	"logical layer semantic web languages such as damloil"	rdfs:member	"damloil"
s12	"logical layer semantic web languages such as damloil"	rdfs:member	"logical layer semantic web"
s12	"layer semantic"	rdfs:subClassOf	"semantic"
s12	"layer semantic"	rdfs:member	"layer"
s12	"semantic web"	rdfs:member	"semantic"
s12	"layer semantic web"	rdfs:member	"layer semantic"
s12	"logical layer semantic"	rdfs:subClassOf	"semantic"
s12	"logical layer semantic web"	rdfs:subClassOf	"web"
s12	"layer semantic web"	rdfs:subClassOf	"web"
s12	"logical layer semantic"	rdfs:member	"logical layer"
s12	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s12	"logical layer"	rdfs:member	"logical"
s12	"logical layer"	rdfs:subClassOf	"layer"
s12	"semantic web"	rdfs:subClassOf	"web"
s12	"web languages"	rdfs:subClassOf	"languages"
s12	"semantic web languages"	rdfs:subClassOf	"web languages"
s12	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s12	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s12	"logical layer semantic web languages such_as damloil"	rdfs:member	"logical layer semantic web languages"
s12	"logical layer semantic web languages such_as damloil"	rdfs:member	"damloil"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"	rdf:predicate	"build"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"	rdf:object	"top of both semantics of RDFS"
s12	"top of both semantics of rdfs"	rdfs:member	"semantics"
s12	"top of both semantics of rdfs"	rdfs:member	"rdfs"
s12	"top of both semantics of rdfs"	rdfs:member	"top"
s12	"top of semantics"	rdfs:member	"top"
s12	"top of semantics"	rdfs:member	"semantics"
s12	"semantics of rdfs"	rdfs:member	"semantics"
s12	"semantics of rdfs"	rdfs:member	"rdfs"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"	local:AM-DIS	"therefore"
s12	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdfs"	local:AM-MOD	"can"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"	rdf:subject	"Logical layer Semantic Web languages such as OWL"
s11	"logical layer semantic web languages such as owl"	rdfs:member	"owl"
s11	"logical layer semantic web languages such as owl"	rdfs:member	"logical layer semantic web"
s11	"layer semantic"	rdfs:subClassOf	"semantic"
s11	"layer semantic"	rdfs:member	"layer"
s11	"semantic web"	rdfs:member	"semantic"
s11	"layer semantic web"	rdfs:member	"layer semantic"
s11	"logical layer semantic"	rdfs:subClassOf	"semantic"
s11	"logical layer semantic web"	rdfs:subClassOf	"web"
s11	"layer semantic web"	rdfs:subClassOf	"web"
s11	"logical layer semantic"	rdfs:member	"logical layer"
s11	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s11	"logical layer"	rdfs:member	"logical"
s11	"logical layer"	rdfs:subClassOf	"layer"
s11	"semantic web"	rdfs:subClassOf	"web"
s11	"web languages"	rdfs:subClassOf	"languages"
s11	"semantic web languages"	rdfs:subClassOf	"web languages"
s11	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s11	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s11	"logical layer semantic web languages such_as owl"	rdfs:member	"logical layer semantic web languages"
s11	"logical layer semantic web languages such_as owl"	rdfs:member	"owl"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"	rdf:predicate	"build"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"	rdf:object	"top of both semantics of RDFS"
s11	"top of both semantics of rdfs"	rdfs:member	"semantics"
s11	"top of both semantics of rdfs"	rdfs:member	"rdfs"
s11	"top of both semantics of rdfs"	rdfs:member	"top"
s11	"top of semantics"	rdfs:member	"top"
s11	"top of semantics"	rdfs:member	"semantics"
s11	"semantics of rdfs"	rdfs:member	"semantics"
s11	"semantics of rdfs"	rdfs:member	"rdfs"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"	local:AM-DIS	"therefore"
s11	"logical layer semantic web languages such as owl can therefore built on top of both semantics of rdfs"	local:AM-MOD	"can"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"	rdf:subject	"Logical layer Semantic Web languages such as DAMLOIL"
s10	"logical layer semantic web languages such as damloil"	rdfs:member	"damloil"
s10	"logical layer semantic web languages such as damloil"	rdfs:member	"logical layer semantic web"
s10	"layer semantic"	rdfs:subClassOf	"semantic"
s10	"layer semantic"	rdfs:member	"layer"
s10	"semantic web"	rdfs:member	"semantic"
s10	"layer semantic web"	rdfs:member	"layer semantic"
s10	"logical layer semantic"	rdfs:subClassOf	"semantic"
s10	"logical layer semantic web"	rdfs:subClassOf	"web"
s10	"layer semantic web"	rdfs:subClassOf	"web"
s10	"logical layer semantic"	rdfs:member	"logical layer"
s10	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s10	"logical layer"	rdfs:member	"logical"
s10	"logical layer"	rdfs:subClassOf	"layer"
s10	"semantic web"	rdfs:subClassOf	"web"
s10	"web languages"	rdfs:subClassOf	"languages"
s10	"semantic web languages"	rdfs:subClassOf	"web languages"
s10	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s10	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s10	"logical layer semantic web languages such_as damloil"	rdfs:member	"logical layer semantic web languages"
s10	"logical layer semantic web languages such_as damloil"	rdfs:member	"damloil"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"	rdf:predicate	"build"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"	rdf:object	"top of both the syntax of RDFS"
s10	"top of both the syntax of rdfs"	rdfs:member	"rdfs"
s10	"top of both the syntax of rdfs"	rdfs:member	"syntax"
s10	"top of both the syntax of rdfs"	rdfs:member	"top"
s10	"top of syntax"	rdfs:member	"top"
s10	"top of syntax"	rdfs:member	"syntax"
s10	"syntax of rdfs"	rdfs:member	"syntax"
s10	"syntax of rdfs"	rdfs:member	"rdfs"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"	local:AM-DIS	"therefore"
s10	"logical layer semantic web languages such as damloil can therefore built on top of both the syntax of rdfs"	local:AM-MOD	"can"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"	rdf:subject	"Logical layer Semantic Web languages such as DAMLOIL"
s9	"logical layer semantic web languages such as damloil"	rdfs:member	"damloil"
s9	"logical layer semantic web languages such as damloil"	rdfs:member	"logical layer semantic web"
s9	"layer semantic"	rdfs:subClassOf	"semantic"
s9	"layer semantic"	rdfs:member	"layer"
s9	"semantic web"	rdfs:member	"semantic"
s9	"layer semantic web"	rdfs:member	"layer semantic"
s9	"logical layer semantic"	rdfs:subClassOf	"semantic"
s9	"logical layer semantic web"	rdfs:subClassOf	"web"
s9	"layer semantic web"	rdfs:subClassOf	"web"
s9	"logical layer semantic"	rdfs:member	"logical layer"
s9	"logical layer semantic web"	rdfs:member	"logical layer semantic"
s9	"logical layer"	rdfs:member	"logical"
s9	"logical layer"	rdfs:subClassOf	"layer"
s9	"semantic web"	rdfs:subClassOf	"web"
s9	"web languages"	rdfs:subClassOf	"languages"
s9	"semantic web languages"	rdfs:subClassOf	"web languages"
s9	"layer semantic web languages"	rdfs:subClassOf	"semantic web languages"
s9	"logical layer semantic web languages"	rdfs:subClassOf	"layer semantic web languages"
s9	"logical layer semantic web languages such_as damloil"	rdfs:member	"logical layer semantic web languages"
s9	"logical layer semantic web languages such_as damloil"	rdfs:member	"damloil"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"	rdf:predicate	"build"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"	local:AM-DIS	"therefore"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"	local:AM-MNR	"top of both semantics of RDF Schema"
s9	"top of both semantics of rdf schema"	rdfs:member	"semantics"
s9	"top of both semantics of rdf schema"	rdfs:member	"rdf schema"
s9	"top of both semantics of rdf schema"	rdfs:member	"top"
s9	"rdf schema"	rdfs:subClassOf	"schema"
s9	"rdf schema"	rdfs:member	"rdf"
s9	"top of semantics"	rdfs:member	"top"
s9	"top of semantics"	rdfs:member	"semantics"
s9	"semantics of rdf schema"	rdfs:member	"semantics"
s9	"semantics of rdf schema"	rdfs:member	"rdf schema"
s9	"logical layer semantic web languages such as damloil can therefore built on top of both semantics of rdf schema"	local:AM-MOD	"can"
s8.2	"rdf schema rdf schema based on a relatively standard modeltheoretic semantics"
s8.2	"rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:subject	"RDF Schema RDF Schema"
s8.2	"schema rdf schema"	rdfs:member	"schema rdf"
s8.2	"schema rdf"	rdfs:subClassOf	"rdf"
s8.2	"rdf schema rdf schema"	rdfs:subClassOf	"schema"
s8.2	"rdf schema"	rdfs:subClassOf	"schema"
s8.2	"schema rdf schema"	rdfs:subClassOf	"schema"
s8.2	"rdf schema rdf schema"	rdfs:member	"rdf schema rdf"
s8.2	"rdf schema"	rdfs:member	"rdf"
s8.2	"rdf schema rdf"	rdfs:subClassOf	"rdf"
s8.2	"schema rdf"	rdfs:member	"schema"
s8.2	"rdf schema rdf"	rdfs:member	"rdf schema"
s8.2	"schema rdf schema"	rdfs:subClassOf	"rdf schema"
s8.2	"rdf schema rdf schema"	rdfs:subClassOf	"schema rdf schema"
s8.2	"rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:predicate	"base"
s8.2	"rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:object	"relatively standard modeltheoretic semantics"
s8.2	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s8.2	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.2	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.2	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s8.2	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.2	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s8.2	"relatively standard"	rdfs:subClassOf	"standard"
s8.2	"relatively standard"	rdfs:member	"relatively"
s8.2	"standard modeltheoretic"	rdfs:member	"standard"
s8.2	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s8.2	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8.2	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8.2	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s8.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"
s8.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:subject	"problem with RDF Schema"
s8.1	"problem with rdf schema"	rdfs:member	"rdf schema"
s8.1	"problem with rdf schema"	rdfs:member	"problem"
s8.1	"rdf schema"	rdfs:subClassOf	"schema"
s8.1	"rdf schema"	rdfs:member	"rdf"
s8.1	"problem with rdf schema"	rdfs:member	"problem"
s8.1	"problem with rdf schema"	rdfs:member	"rdf schema"
s8.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:predicate	"solve"
s8.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:object	"sublanguage of RDF Schema RDF Schema based on a relatively standard modeltheoretic semantics"
s8.1	"sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema rdf schema"
s8.1	"sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic semantics"
s8.1	"sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"sublanguage"
s8.1	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s8.1	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.1	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.1	"rdf schema"	rdfs:subClassOf	"schema"
s8.1	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s8.1	"relatively standard"	rdfs:subClassOf	"standard"
s8.1	"rdf schema"	rdfs:member	"rdf"
s8.1	"rdf schema rdf"	rdfs:subClassOf	"rdf"
s8.1	"rdf schema rdf"	rdfs:member	"rdf schema"
s8.1	"schema rdf schema"	rdfs:member	"schema rdf"
s8.1	"schema rdf schema"	rdfs:subClassOf	"schema"
s8.1	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8.1	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s8.1	"standard modeltheoretic"	rdfs:member	"standard"
s8.1	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s8.1	"schema rdf"	rdfs:member	"schema"
s8.1	"schema rdf"	rdfs:subClassOf	"rdf"
s8.1	"rdf schema rdf schema"	rdfs:subClassOf	"schema"
s8.1	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8.1	"rdf schema rdf schema"	rdfs:member	"rdf schema rdf"
s8.1	"relatively standard"	rdfs:member	"relatively"
s8.1	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8.1	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s8.1	"schema rdf schema"	rdfs:subClassOf	"rdf schema"
s8.1	"rdf schema rdf schema"	rdfs:subClassOf	"schema rdf schema"
s8.1	"sublanguage of rdf schema rdf schema"	rdfs:member	"sublanguage"
s8.1	"sublanguage of rdf schema rdf schema"	rdfs:member	"rdf schema rdf schema"
s8.1	"sublanguage of rdf schema rdf schema based_on standard modeltheoretic semantics"	rdfs:member	"sublanguage of rdf schema rdf schema"
s8.1	"sublanguage of rdf schema rdf schema based_on standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic semantics"
s8.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	local:AM-MOD	"can"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:subject	"we"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:predicate	"demonstrate"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdf:object	"problem with RDF Schema can be solved in a sublanguage of RDF Schema RDF Schema based on a relatively standard modeltheoretic semantics"
s8	"problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"sublanguage"
s8	"problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema"
s8	"problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"problem"
s8	"problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema rdf schema"
s8	"problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic semantics"
s8	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s8	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8	"rdf schema"	rdfs:subClassOf	"schema"
s8	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s8	"relatively standard"	rdfs:subClassOf	"standard"
s8	"rdf schema"	rdfs:member	"rdf"
s8	"rdf schema rdf"	rdfs:subClassOf	"rdf"
s8	"rdf schema rdf"	rdfs:member	"rdf schema"
s8	"schema rdf schema"	rdfs:member	"schema rdf"
s8	"schema rdf schema"	rdfs:subClassOf	"schema"
s8	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s8	"standard modeltheoretic"	rdfs:member	"standard"
s8	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s8	"schema rdf"	rdfs:member	"schema"
s8	"schema rdf"	rdfs:subClassOf	"rdf"
s8	"rdf schema rdf schema"	rdfs:subClassOf	"schema"
s8	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s8	"rdf schema rdf schema"	rdfs:member	"rdf schema rdf"
s8	"relatively standard"	rdfs:member	"relatively"
s8	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s8	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s8	"schema rdf schema"	rdfs:subClassOf	"rdf schema"
s8	"rdf schema rdf schema"	rdfs:subClassOf	"schema rdf schema"
s8	"can solved"	rdfs:subClassOf	"solved"
s8	"problem with rdf schema"	rdfs:member	"problem"
s8	"problem with rdf schema"	rdfs:member	"rdf schema"
s8	"can solved in sublanguage"	rdfs:member	"can solved"
s8	"can solved in sublanguage"	rdfs:member	"sublanguage"
s8	"sublanguage of rdf schema rdf schema"	rdfs:member	"sublanguage"
s8	"sublanguage of rdf schema rdf schema"	rdfs:member	"rdf schema rdf schema"
s8	"sublanguage of rdf schema rdf schema based_on standard modeltheoretic semantics"	rdfs:member	"sublanguage of rdf schema rdf schema"
s8	"sublanguage of rdf schema rdf schema based_on standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic semantics"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	local:AM-LOC	"paper"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	local:AM-MOD	"will"
s8	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdf schema based on a relatively standard modeltheoretic semantics"	local:AM-TMP	"first"
s7	"rdf schema which introduces a fixed layer metamodeling architecture to rdf schema"
s7	"rdf schema which introduces a fixed layer metamodeling architecture to rdf schema"	rdf:subject	"RDF Schema"
s7	"rdf schema"	rdfs:subClassOf	"schema"
s7	"rdf schema"	rdfs:member	"rdf"
s7	"rdf schema which introduces a fixed layer metamodeling architecture to rdf schema"	rdf:predicate	"introduce"
s7	"rdf schema which introduces a fixed layer metamodeling architecture to rdf schema"	rdf:object	"Fixed layer metamodeling Architecture RDF Schema"
s7	"fixed layer metamodeling architecture rdf schema"	rdfs:member	"architecture rdf schema"
s7	"fixed layer metamodeling architecture rdf schema"	rdfs:member	"fixed layer"
s7	"architecture rdf"	rdfs:subClassOf	"rdf"
s7	"architecture rdf schema"	rdfs:member	"architecture rdf"
s7	"fixed layer"	rdfs:member	"fixed"
s7	"architecture rdf"	rdfs:member	"architecture"
s7	"rdf schema"	rdfs:subClassOf	"schema"
s7	"rdf schema"	rdfs:member	"rdf"
s7	"architecture rdf schema"	rdfs:subClassOf	"schema"
s7	"fixed layer"	rdfs:subClassOf	"layer"
s7	"architecture rdf schema"	rdfs:subClassOf	"rdf schema"
s7	"fixed layer metamodeling"	rdfs:member	"fixed layer"
s7	"fixed layer metamodeling"	rdfs:member	"metamodeling"
s6	"rdfs which introduces a fixed layer"
s6	"rdfs which introduces a fixed layer"	rdf:subject	"RDFS"
s6	"rdfs which introduces a fixed layer"	rdf:predicate	"introduce"
s6	"rdfs which introduces a fixed layer"	rdf:object	"Fixed layer"
s6	"fixed layer"	rdfs:member	"fixed"
s6	"fixed layer"	rdfs:subClassOf	"layer"
s5.2	"rdf schema rdfs based on a relatively standard modeltheoretic semantics"
s5.2	"rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:subject	"RDF Schema RDFS"
s5.2	"rdf schema rdfs"	rdfs:member	"rdf schema"
s5.2	"rdf schema"	rdfs:subClassOf	"schema"
s5.2	"schema rdfs"	rdfs:subClassOf	"rdfs"
s5.2	"rdf schema rdfs"	rdfs:subClassOf	"rdfs"
s5.2	"schema rdfs"	rdfs:member	"schema"
s5.2	"rdf schema"	rdfs:member	"rdf"
s5.2	"rdf schema rdfs"	rdfs:subClassOf	"schema rdfs"
s5.2	"rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:predicate	"base"
s5.2	"rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:object	"relatively standard modeltheoretic semantics"
s5.2	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s5.2	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.2	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.2	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s5.2	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.2	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s5.2	"relatively standard"	rdfs:subClassOf	"standard"
s5.2	"relatively standard"	rdfs:member	"relatively"
s5.2	"standard modeltheoretic"	rdfs:member	"standard"
s5.2	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s5.2	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5.2	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5.2	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s5.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"
s5.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:subject	"problem with RDF Schema"
s5.1	"problem with rdf schema"	rdfs:member	"rdf schema"
s5.1	"problem with rdf schema"	rdfs:member	"problem"
s5.1	"rdf schema"	rdfs:subClassOf	"schema"
s5.1	"rdf schema"	rdfs:member	"rdf"
s5.1	"problem with rdf schema"	rdfs:member	"problem"
s5.1	"problem with rdf schema"	rdfs:member	"rdf schema"
s5.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:predicate	"solve"
s5.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:object	"sublanguage of RDF Schema RDFS based on a relatively standard modeltheoretic semantics"
s5.1	"sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic semantics"
s5.1	"sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"sublanguage"
s5.1	"sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema rdfs"
s5.1	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s5.1	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.1	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.1	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s5.1	"rdf schema rdfs"	rdfs:member	"rdf schema"
s5.1	"rdf schema"	rdfs:subClassOf	"schema"
s5.1	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5.1	"schema rdfs"	rdfs:subClassOf	"rdfs"
s5.1	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s5.1	"rdf schema rdfs"	rdfs:subClassOf	"rdfs"
s5.1	"relatively standard"	rdfs:subClassOf	"standard"
s5.1	"rdf schema"	rdfs:member	"rdf"
s5.1	"schema rdfs"	rdfs:member	"schema"
s5.1	"relatively standard"	rdfs:member	"relatively"
s5.1	"standard modeltheoretic"	rdfs:member	"standard"
s5.1	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s5.1	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5.1	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5.1	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s5.1	"rdf schema rdfs"	rdfs:subClassOf	"schema rdfs"
s5.1	"sublanguage of rdf schema rdfs"	rdfs:member	"sublanguage"
s5.1	"sublanguage of rdf schema rdfs"	rdfs:member	"rdf schema rdfs"
s5.1	"sublanguage of rdf schema rdfs based_on standard modeltheoretic semantics"	rdfs:member	"sublanguage of rdf schema rdfs"
s5.1	"sublanguage of rdf schema rdfs based_on standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic semantics"
s5.1	"how this problem with rdf schema can solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	local:AM-MOD	"can"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:subject	"we"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:predicate	"demonstrate"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdf:object	"problem with RDF Schema can be solved in a sublanguage of RDF Schema RDFS based on a relatively standard modeltheoretic semantics"
s5	"problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"sublanguage"
s5	"problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema"
s5	"problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"problem"
s5	"problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic semantics"
s5	"problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	rdfs:member	"rdf schema rdfs"
s5	"relatively standard modeltheoretic semantics"	rdfs:member	"relatively standard modeltheoretic"
s5	"standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5	"relatively standard modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5	"modeltheoretic semantics"	rdfs:member	"modeltheoretic"
s5	"rdf schema rdfs"	rdfs:member	"rdf schema"
s5	"rdf schema"	rdfs:subClassOf	"schema"
s5	"modeltheoretic semantics"	rdfs:subClassOf	"semantics"
s5	"schema rdfs"	rdfs:subClassOf	"rdfs"
s5	"standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic"
s5	"rdf schema rdfs"	rdfs:subClassOf	"rdfs"
s5	"relatively standard"	rdfs:subClassOf	"standard"
s5	"rdf schema"	rdfs:member	"rdf"
s5	"schema rdfs"	rdfs:member	"schema"
s5	"relatively standard"	rdfs:member	"relatively"
s5	"standard modeltheoretic"	rdfs:member	"standard"
s5	"relatively standard modeltheoretic"	rdfs:member	"relatively standard"
s5	"relatively standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5	"standard modeltheoretic"	rdfs:subClassOf	"modeltheoretic"
s5	"standard modeltheoretic semantics"	rdfs:subClassOf	"modeltheoretic semantics"
s5	"rdf schema rdfs"	rdfs:subClassOf	"schema rdfs"
s5	"can solved"	rdfs:subClassOf	"solved"
s5	"problem with rdf schema"	rdfs:member	"problem"
s5	"problem with rdf schema"	rdfs:member	"rdf schema"
s5	"can solved in sublanguage"	rdfs:member	"can solved"
s5	"can solved in sublanguage"	rdfs:member	"sublanguage"
s5	"sublanguage of rdf schema rdfs"	rdfs:member	"sublanguage"
s5	"sublanguage of rdf schema rdfs"	rdfs:member	"rdf schema rdfs"
s5	"sublanguage of rdf schema rdfs based_on standard modeltheoretic semantics"	rdfs:member	"sublanguage of rdf schema rdfs"
s5	"sublanguage of rdf schema rdfs based_on standard modeltheoretic semantics"	rdfs:member	"standard modeltheoretic semantics"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	local:AM-LOC	"paper"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	local:AM-MOD	"will"
s5	"in this paper we will first demonstrate how this problem with rdf schema can be solved in a sublanguage of rdf schema rdfs based on a relatively standard modeltheoretic semantics"	local:AM-TMP	"first"
s4.1	"layer conventional first order languages like damloil on top of rdf schema"
s4.1	"layer conventional first order languages like damloil on top of rdf schema"	rdf:subject	"conventional first order languages like DAMLOIL on top of RDF Schema"
s4.1	"conventional first order languages like damloil on top of rdf schema"	rdfs:member	"rdf schema"
s4.1	"conventional first order languages like damloil on top of rdf schema"	rdfs:member	"damloil"
s4.1	"conventional first order languages like damloil on top of rdf schema"	rdfs:member	"conventional first order languages"
s4.1	"conventional first order languages like damloil on top of rdf schema"	rdfs:member	"top"
s4.1	"conventional first order languages"	rdfs:member	"conventional first order"
s4.1	"conventional first order"	rdfs:subClassOf	"order"
s4.1	"first order"	rdfs:subClassOf	"order"
s4.1	"conventional first order"	rdfs:member	"conventional first"
s4.1	"rdf schema"	rdfs:subClassOf	"schema"
s4.1	"conventional first"	rdfs:subClassOf	"first"
s4.1	"first order languages"	rdfs:subClassOf	"languages"
s4.1	"first order languages"	rdfs:member	"first order"
s4.1	"rdf schema"	rdfs:member	"rdf"
s4.1	"first order"	rdfs:member	"first"
s4.1	"order languages"	rdfs:subClassOf	"languages"
s4.1	"order languages"	rdfs:member	"order"
s4.1	"conventional first"	rdfs:member	"conventional"
s4.1	"conventional first order languages"	rdfs:subClassOf	"languages"
s4.1	"first order languages"	rdfs:subClassOf	"order languages"
s4.1	"conventional first order languages"	rdfs:subClassOf	"first order languages"
s4.1	"conventional first order languages like damloil"	rdfs:member	"conventional first order languages"
s4.1	"conventional first order languages like damloil"	rdfs:member	"damloil"
s4.1	"conventional first order languages like damloil on_top_of rdf schema"	rdfs:member	"conventional first order languages like damloil"
s4.1	"conventional first order languages like damloil on_top_of rdf schema"	rdfs:member	"rdf schema"
s4.1	"layer conventional first order languages like damloil on top of rdf schema"	rdf:predicate	"layer"
s4	"trying to layer"
s4	"trying to layer"	rdf:subject	"layer"
s4	"trying to layer"	rdf:predicate	"try"
s3	"this leads to semantic problems"
s3	"this leads to semantic problems"	rdf:subject	"This"
s3	"this leads to semantic problems"	rdf:predicate	"lead"
s3	"this leads to semantic problems"	rdf:object	"semantic problems"
s3	"semantic problems"	rdfs:member	"semantic"
s3	"semantic problems"	rdfs:subClassOf	"problems"
s2.1	"as a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory"
s2.1	"as a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory"	rdf:subject	"specification of this semantics"
s2.1	"specification of this semantics"	rdfs:member	"specification"
s2.1	"specification of this semantics"	rdfs:member	"semantics"
s2.1	"specification of semantics"	rdfs:member	"specification"
s2.1	"specification of semantics"	rdfs:member	"semantics"
s2.1	"as a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory"	rdf:predicate	"require"
s2.1	"as a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory"	rdf:object	"nonstandard model theory"
s2.1	"nonstandard model"	rdfs:subClassOf	"model"
s2.1	"nonstandard model"	rdfs:member	"nonstandard"
s2.1	"model theory"	rdfs:subClassOf	"theory"
s2.1	"nonstandard model theory"	rdfs:member	"nonstandard model"
s2.1	"nonstandard model theory"	rdfs:subClassOf	"theory"
s2.1	"model theory"	rdfs:member	"model"
s2.1	"nonstandard model theory"	rdfs:subClassOf	"model theory"
s2.1	"as a result this can be confusing and difficult to understand and more importantly the specification of this semantics requires a nonstandard model theory"	local:AM-ADV	"result this can be confusing and difficult to understand and more importantly"
s2.1	"more importantly"	rdfs:subClassOf	"importantly"
s2.1	"can confusing"	rdfs:subClassOf	"confusing"
s2	"understand more importantly the specification"
s2	"understand more importantly the specification"	rdf:subject	"specification"
s2	"understand more importantly the specification"	rdf:predicate	"understand"
s2	"understand more importantly the specification"	local:AM-MNR	"importantly"
s1.1	"a nonstandard metamodeling architecture which makes some elements in the model have dual roles in the rdf schema specification"
s1.1	"a nonstandard metamodeling architecture which makes some elements in the model have dual roles in the rdf schema specification"	rdf:subject	"nonstandard metamodeling architecture which makes some elements in the model"
s1.1	"nonstandard metamodeling architecture which makes some elements in the model"	rdfs:member	"architecture"
s1.1	"nonstandard metamodeling architecture which makes some elements in the model"	rdfs:member	"elements"
s1.1	"nonstandard metamodeling architecture which makes some elements in the model"	rdfs:member	"model"
s1.1	"metamodeling architecture"	rdfs:subClassOf	"architecture"
s1.1	"nonstandard metamodeling architecture"	rdfs:subClassOf	"metamodeling architecture"
s1.1	"elements in model"	rdfs:member	"elements"
s1.1	"elements in model"	rdfs:member	"model"
s1.1	"a nonstandard metamodeling architecture which makes some elements in the model have dual roles in the rdf schema specification"	rdf:predicate	"have"
s1.1	"a nonstandard metamodeling architecture which makes some elements in the model have dual roles in the rdf schema specification"	rdf:object	"dual roles in the RDF Schema specification"
s1.1	"dual roles in the rdf schema specification"	rdfs:member	"rdf schema specification"
s1.1	"dual roles in the rdf schema specification"	rdfs:member	"dual roles"
s1.1	"rdf schema specification"	rdfs:subClassOf	"specification"
s1.1	"schema specification"	rdfs:member	"schema"
s1.1	"rdf schema"	rdfs:subClassOf	"schema"
s1.1	"dual roles"	rdfs:subClassOf	"roles"
s1.1	"schema specification"	rdfs:subClassOf	"specification"
s1.1	"rdf schema specification"	rdfs:member	"rdf schema"
s1.1	"rdf schema"	rdfs:member	"rdf"
s1.1	"dual roles"	rdfs:member	"dual"
s1.1	"rdf schema specification"	rdfs:subClassOf	"schema specification"
s1.1	"dual roles in rdf schema specification"	rdfs:member	"dual roles"
s1.1	"dual roles in rdf schema specification"	rdfs:member	"rdf schema specification"
s1	"a nonstandard metamodeling architecture which makes some elements in the model"
s1	"a nonstandard metamodeling architecture which makes some elements in the model"	rdf:subject	"nonstandard metamodeling architecture"
s1	"nonstandard metamodeling"	rdfs:member	"nonstandard"
s1	"nonstandard metamodeling architecture"	rdfs:member	"nonstandard metamodeling"
s1	"nonstandard metamodeling"	rdfs:subClassOf	"metamodeling"
s1	"metamodeling architecture"	rdfs:member	"metamodeling"
s1	"nonstandard metamodeling architecture"	rdfs:subClassOf	"architecture"
s1	"metamodeling architecture"	rdfs:subClassOf	"architecture"
s1	"nonstandard metamodeling architecture"	rdfs:subClassOf	"metamodeling architecture"
s1	"a nonstandard metamodeling architecture which makes some elements in the model"	rdf:predicate	"make"
s1	"a nonstandard metamodeling architecture which makes some elements in the model"	rdf:object	"elements in the model"
s1	"elements in the model"	rdfs:member	"model"
s1	"elements in the model"	rdfs:member	"elements"
s1	"elements in model"	rdfs:member	"elements"
s1	"elements in model"	rdfs:member	"model"
s0	"rdf schema has a nonstandard metamodeling architecture"
s0	"rdf schema has a nonstandard metamodeling architecture"	rdf:subject	"RDF Schema"
s0	"rdf schema"	rdfs:subClassOf	"schema"
s0	"rdf schema"	rdfs:member	"rdf"
s0	"rdf schema has a nonstandard metamodeling architecture"	rdf:predicate	"have"
s0	"rdf schema has a nonstandard metamodeling architecture"	rdf:object	"nonstandard metamodeling architecture"
s0	"nonstandard metamodeling"	rdfs:member	"nonstandard"
s0	"nonstandard metamodeling architecture"	rdfs:member	"nonstandard metamodeling"
s0	"nonstandard metamodeling"	rdfs:subClassOf	"metamodeling"
s0	"metamodeling architecture"	rdfs:member	"metamodeling"
s0	"nonstandard metamodeling architecture"	rdfs:subClassOf	"architecture"
s0	"metamodeling architecture"	rdfs:subClassOf	"architecture"
s0	"nonstandard metamodeling architecture"	rdfs:subClassOf	"metamodeling architecture"
