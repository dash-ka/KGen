s10	"we evaluate the fitness for purpose of the generated alignments"
s10	"we evaluate the fitness for purpose of the generated alignments"	rdf:subject	"we"
s10	"we evaluate the fitness for purpose of the generated alignments"	rdf:predicate	"evaluate"
s10	"we evaluate the fitness for purpose of the generated alignments"	rdf:object	"fitness for purpose of the generate alignment"
s10	"fitness for purpose of the generate alignment"	rdfs:member	"fitness"
s10	"fitness for purpose of the generate alignment"	rdfs:member	"generate alignment"
s10	"fitness for purpose of the generate alignment"	rdfs:member	"purpose"
s10	"generate alignment"	rdfs:subClassOf	"alignment"
s10	"generate alignment"	rdfs:member	"generate"
s10	"fitness for purpose"	rdfs:member	"fitness"
s10	"fitness for purpose"	rdfs:member	"purpose"
s10	"purpose of generate alignment"	rdfs:member	"purpose"
s10	"purpose of generate alignment"	rdfs:member	"generate alignment"
s9.2	"the proposed approach has comparable performance to the mba approach"
s9.2	"the proposed approach has comparable performance to the mba approach"	rdf:subject	"propose approach"
s9.2	"propose approach"	rdfs:subClassOf	"approach"
s9.2	"propose approach"	rdfs:member	"propose"
s9.2	"the proposed approach has comparable performance to the mba approach"	rdf:predicate	"have"
s9.2	"the proposed approach has comparable performance to the mba approach"	rdf:object	"comparable performance to the mba approach"
s9.2	"comparable performance to the mba approach"	rdfs:member	"comparable performance"
s9.2	"comparable performance to the mba approach"	rdfs:member	"mba approach"
s9.2	"mba approach"	rdfs:subClassOf	"approach"
s9.2	"comparable performance"	rdfs:subClassOf	"performance"
s9.2	"mba approach"	rdfs:member	"mba"
s9.2	"comparable performance"	rdfs:member	"comparable"
s9.2	"comparable performance to mba approach"	rdfs:member	"comparable performance"
s9.2	"comparable performance to mba approach"	rdfs:member	"mba approach"
s9.1	"proposed approach"
s9.1	"proposed approach"	rdf:subject	"approach"
s9.1	"proposed approach"	rdf:predicate	"propose"
s9	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"
s9	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:subject	"we"
s9	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:predicate	"demonstrate"
s9	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:object	"propose approach have comparable performance to the mba approach"
s9	"propose approach have comparable performance to the mba approach"	rdfs:member	"comparable performance"
s9	"propose approach have comparable performance to the mba approach"	rdfs:member	"mba approach"
s9	"propose approach have comparable performance to the mba approach"	rdfs:member	"propose approach"
s9	"comparable performance"	rdfs:member	"comparable"
s9	"comparable performance"	rdfs:subClassOf	"performance"
s9	"propose approach"	rdfs:member	"propose"
s9	"propose approach"	rdfs:subClassOf	"approach"
s9	"mba approach"	rdfs:subClassOf	"approach"
s9	"mba approach"	rdfs:member	"mba"
s9	"comparable performance to mba approach"	rdfs:member	"comparable performance"
s9	"comparable performance to mba approach"	rdfs:member	"mba approach"
s9	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	local:AM-MNR	"empirically"
s7	"we compare the fitness for purpose of the generated alignments"
s7	"we compare the fitness for purpose of the generated alignments"	rdf:subject	"we"
s7	"we compare the fitness for purpose of the generated alignments"	rdf:predicate	"compare"
s7	"we compare the fitness for purpose of the generated alignments"	rdf:object	"fitness purpose of the generate alignment"
s7	"fitness purpose of the generate alignment"	rdfs:member	"fitness purpose"
s7	"fitness purpose of the generate alignment"	rdfs:member	"generate alignment"
s7	"fitness purpose"	rdfs:member	"fitness"
s7	"generate alignment"	rdfs:subClassOf	"alignment"
s7	"generate alignment"	rdfs:member	"generate"
s7	"fitness purpose"	rdfs:subClassOf	"purpose"
s7	"fitness purpose of generate alignment"	rdfs:member	"fitness purpose"
s7	"fitness purpose of generate alignment"	rdfs:member	"generate alignment"
s6.4	"enabling agent communication"
s6.4	"enabling agent communication"	rdf:subject	"agent communication"
s6.4	"agent communication"	rdfs:subClassOf	"communication"
s6.4	"agent communication"	rdfs:member	"agent"
s6.4	"enabling agent communication"	rdf:predicate	"enable"
s6.3	"agreed alignments"
s6.3	"agreed alignments"	rdf:subject	"alignment"
s6.3	"agreed alignments"	rdf:predicate	"agree"
s6.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"
s6.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:subject	"propose approach"
s6.2	"propose approach"	rdfs:subClassOf	"approach"
s6.2	"propose approach"	rdfs:member	"propose"
s6.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:predicate	"produce"
s6.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:object	"larger agree alignment thus better enable agent communication"
s6.2	"larger agree alignment thus better enable agent communication"	rdfs:member	"thus better enable agent communication"
s6.2	"larger agree alignment thus better enable agent communication"	rdfs:member	"larger agree alignment"
s6.2	"agree alignment"	rdfs:member	"agree"
s6.2	"better enable agent communication"	rdfs:subClassOf	"communication"
s6.2	"enable agent"	rdfs:subClassOf	"agent"
s6.2	"agent communication"	rdfs:subClassOf	"communication"
s6.2	"better enable agent"	rdfs:subClassOf	"agent"
s6.2	"agent communication"	rdfs:member	"agent"
s6.2	"better enable agent"	rdfs:member	"better enable"
s6.2	"larger agree alignment"	rdfs:member	"larger agree"
s6.2	"better enable"	rdfs:subClassOf	"enable"
s6.2	"thus better enable agent"	rdfs:subClassOf	"agent"
s6.2	"thus better enable agent"	rdfs:member	"thus better enable"
s6.2	"agree alignment"	rdfs:subClassOf	"alignment"
s6.2	"larger agree alignment"	rdfs:subClassOf	"alignment"
s6.2	"better enable"	rdfs:member	"better"
s6.2	"better enable agent communication"	rdfs:member	"better enable agent"
s6.2	"larger agree"	rdfs:member	"larger"
s6.2	"enable agent communication"	rdfs:subClassOf	"communication"
s6.2	"thus better enable"	rdfs:subClassOf	"enable"
s6.2	"thus better"	rdfs:member	"thus"
s6.2	"thus better enable agent communication"	rdfs:member	"thus better enable agent"
s6.2	"thus better"	rdfs:subClassOf	"better"
s6.2	"thus better enable"	rdfs:member	"thus better"
s6.2	"larger agree"	rdfs:subClassOf	"agree"
s6.2	"enable agent communication"	rdfs:member	"enable agent"
s6.2	"thus better enable agent communication"	rdfs:subClassOf	"communication"
s6.2	"enable agent"	rdfs:member	"enable"
s6.2	"thus better enable"	rdfs:subClassOf	"better enable"
s6.1	"proposed approach"
s6.1	"proposed approach"	rdf:subject	"approach"
s6.1	"proposed approach"	rdf:predicate	"propose"
s6	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"
s6	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:subject	"we"
s6	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:predicate	"demonstrate"
s6	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:object	"propose approach produce larger agree alignment thus better enable agent communication"
s6	"propose approach produce larger agree alignment thus better enable agent communication"	rdfs:member	"thus better enable agent communication"
s6	"propose approach produce larger agree alignment thus better enable agent communication"	rdfs:member	"larger agree alignment"
s6	"propose approach produce larger agree alignment thus better enable agent communication"	rdfs:member	"propose approach produce"
s6	"agree alignment"	rdfs:member	"agree"
s6	"better enable agent communication"	rdfs:subClassOf	"communication"
s6	"propose approach produce"	rdfs:subClassOf	"produce"
s6	"enable agent"	rdfs:subClassOf	"agent"
s6	"agent communication"	rdfs:subClassOf	"communication"
s6	"better enable agent"	rdfs:subClassOf	"agent"
s6	"agent communication"	rdfs:member	"agent"
s6	"better enable agent"	rdfs:member	"better enable"
s6	"larger agree alignment"	rdfs:member	"larger agree"
s6	"better enable"	rdfs:subClassOf	"enable"
s6	"thus better enable agent"	rdfs:subClassOf	"agent"
s6	"thus better enable agent"	rdfs:member	"thus better enable"
s6	"agree alignment"	rdfs:subClassOf	"alignment"
s6	"larger agree alignment"	rdfs:subClassOf	"alignment"
s6	"better enable"	rdfs:member	"better"
s6	"approach produce"	rdfs:member	"approach"
s6	"better enable agent communication"	rdfs:member	"better enable agent"
s6	"propose approach"	rdfs:subClassOf	"approach"
s6	"larger agree"	rdfs:member	"larger"
s6	"enable agent communication"	rdfs:subClassOf	"communication"
s6	"thus better enable"	rdfs:subClassOf	"enable"
s6	"thus better"	rdfs:member	"thus"
s6	"thus better enable agent communication"	rdfs:member	"thus better enable agent"
s6	"thus better"	rdfs:subClassOf	"better"
s6	"propose approach"	rdfs:member	"propose"
s6	"propose approach produce"	rdfs:member	"propose approach"
s6	"thus better enable"	rdfs:member	"thus better"
s6	"larger agree"	rdfs:subClassOf	"agree"
s6	"enable agent communication"	rdfs:member	"enable agent"
s6	"thus better enable agent communication"	rdfs:subClassOf	"communication"
s6	"enable agent"	rdfs:member	"enable"
s6	"approach produce"	rdfs:subClassOf	"produce"
s6	"thus better enable"	rdfs:subClassOf	"better enable"
s6	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	local:AM-MNR	"empirically"
s5	"we empirically compare this approach with the meaningbased argumentation"
s5	"we empirically compare this approach with the meaningbased argumentation"	rdf:subject	"we"
s5	"we empirically compare this approach with the meaningbased argumentation"	rdf:predicate	"compare"
s5	"we empirically compare this approach with the meaningbased argumentation"	rdf:object	"approach meaningbased argumentation"
s5	"approach meaningbased argumentation"	rdfs:member	"approach"
s5	"approach meaningbased argumentation"	rdfs:member	"argumentation"
s5	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s5	"approach meaningbased argumentation"	rdfs:subClassOf	"meaningbased argumentation"
s5	"we empirically compare this approach with the meaningbased argumentation"	local:AM-MNR	"empirically"
s4.1	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings"
s4.1	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings"	rdf:predicate	"prefer"
s4.1	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings"	local:AM-LOC	"paper we present a novel approach to the dynamic determination of mutually acceptable mapping"
s4.1	"paper we present a novel approach to the dynamic determination of mutually acceptable mapping"	rdfs:member	"mutually acceptable mapping"
s4.1	"paper we present a novel approach to the dynamic determination of mutually acceptable mapping"	rdfs:member	"paper"
s4.1	"paper we present a novel approach to the dynamic determination of mutually acceptable mapping"	rdfs:member	"novel approach"
s4.1	"paper we present a novel approach to the dynamic determination of mutually acceptable mapping"	rdfs:member	"dynamic determination"
s4.1	"dynamic determination"	rdfs:subClassOf	"determination"
s4.1	"novel approach"	rdfs:member	"novel"
s4.1	"mutually acceptable"	rdfs:member	"mutually"
s4.1	"acceptable mapping"	rdfs:member	"acceptable"
s4.1	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s4.1	"acceptable mapping"	rdfs:subClassOf	"mapping"
s4.1	"dynamic determination"	rdfs:member	"dynamic"
s4.1	"mutually acceptable mapping"	rdfs:subClassOf	"mapping"
s4.1	"novel approach"	rdfs:subClassOf	"approach"
s4.1	"mutually acceptable mapping"	rdfs:member	"mutually acceptable"
s4.1	"novel approach to dynamic determination"	rdfs:member	"novel approach"
s4.1	"novel approach to dynamic determination"	rdfs:member	"dynamic determination"
s4.1	"dynamic determination of acceptable mapping"	rdfs:member	"dynamic determination"
s4.1	"dynamic determination of acceptable mapping"	rdfs:member	"acceptable mapping"
s4	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"
s4	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:subject	"we"
s4	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:predicate	"present"
s4	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:object	"novel approach to the dynamic determination of mutually acceptable mapping prefer"
s4	"novel approach to the dynamic determination of mutually acceptable mapping prefer"	rdfs:member	"mutually acceptable mapping prefer"
s4	"novel approach to the dynamic determination of mutually acceptable mapping prefer"	rdfs:member	"dynamic determination"
s4	"novel approach to the dynamic determination of mutually acceptable mapping prefer"	rdfs:member	"novel approach"
s4	"acceptable mapping prefer"	rdfs:member	"acceptable mapping"
s4	"mutually acceptable mapping prefer"	rdfs:subClassOf	"prefer"
s4	"dynamic determination"	rdfs:subClassOf	"determination"
s4	"mutually acceptable mapping prefer"	rdfs:member	"mutually acceptable mapping"
s4	"novel approach"	rdfs:member	"novel"
s4	"mutually acceptable"	rdfs:member	"mutually"
s4	"acceptable mapping"	rdfs:member	"acceptable"
s4	"mapping prefer"	rdfs:member	"mapping"
s4	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s4	"acceptable mapping"	rdfs:subClassOf	"mapping"
s4	"mapping prefer"	rdfs:subClassOf	"prefer"
s4	"dynamic determination"	rdfs:member	"dynamic"
s4	"mutually acceptable mapping"	rdfs:subClassOf	"mapping"
s4	"acceptable mapping prefer"	rdfs:subClassOf	"prefer"
s4	"novel approach"	rdfs:subClassOf	"approach"
s4	"mutually acceptable mapping"	rdfs:member	"mutually acceptable"
s4	"novel approach to dynamic determination"	rdfs:member	"novel approach"
s4	"novel approach to dynamic determination"	rdfs:member	"dynamic determination"
s4	"dynamic determination of acceptable mapping"	rdfs:member	"dynamic determination"
s4	"dynamic determination of acceptable mapping"	rdfs:member	"acceptable mapping"
s4	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	local:AM-LOC	"paper"
s3.1	"agents express a private acceptability threshold over the types of mappings agents"
s3.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:subject	"agent"
s3.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:predicate	"express"
s3.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:object	"private acceptability threshold over the type of mapping agent"
s3.1	"private acceptability threshold over the type of mapping agent"	rdfs:member	"type"
s3.1	"private acceptability threshold over the type of mapping agent"	rdfs:member	"private acceptability threshold"
s3.1	"private acceptability threshold over the type of mapping agent"	rdfs:member	"mapping agent"
s3.1	"acceptability threshold"	rdfs:member	"acceptability"
s3.1	"private acceptability"	rdfs:member	"private"
s3.1	"acceptability threshold"	rdfs:subClassOf	"threshold"
s3.1	"private acceptability"	rdfs:subClassOf	"acceptability"
s3.1	"mapping agent"	rdfs:subClassOf	"agent"
s3.1	"private acceptability threshold"	rdfs:member	"private acceptability"
s3.1	"private acceptability threshold"	rdfs:subClassOf	"threshold"
s3.1	"mapping agent"	rdfs:member	"mapping"
s3.1	"private acceptability threshold"	rdfs:subClassOf	"acceptability threshold"
s3.1	"private acceptability threshold over type"	rdfs:member	"private acceptability threshold"
s3.1	"private acceptability threshold over type"	rdfs:member	"type"
s3	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"
s3	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:subject	"mutually acceptable mapping"
s3	"mutually acceptable"	rdfs:member	"mutually"
s3	"acceptable mapping"	rdfs:member	"acceptable"
s3	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s3	"acceptable mapping"	rdfs:subClassOf	"mapping"
s3	"mutually acceptable mapping"	rdfs:subClassOf	"mapping"
s3	"mutually acceptable mapping"	rdfs:member	"mutually acceptable"
s3	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:predicate	"allow"
s3	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:object	"agent to express a private acceptability threshold over the type of mapping agent"
s3	"agent to express a private acceptability threshold over the type of mapping agent"	rdfs:member	"type"
s3	"agent to express a private acceptability threshold over the type of mapping agent"	rdfs:member	"private acceptability threshold"
s3	"agent to express a private acceptability threshold over the type of mapping agent"	rdfs:member	"mapping agent"
s3	"agent to express a private acceptability threshold over the type of mapping agent"	rdfs:member	"agent"
s3	"acceptability threshold"	rdfs:member	"acceptability"
s3	"private acceptability"	rdfs:member	"private"
s3	"acceptability threshold"	rdfs:subClassOf	"threshold"
s3	"private acceptability"	rdfs:subClassOf	"acceptability"
s3	"mapping agent"	rdfs:subClassOf	"agent"
s3	"private acceptability threshold"	rdfs:member	"private acceptability"
s3	"private acceptability threshold"	rdfs:subClassOf	"threshold"
s3	"mapping agent"	rdfs:member	"mapping"
s3	"private acceptability threshold"	rdfs:subClassOf	"acceptability threshold"
s3	"express over type"	rdfs:member	"express"
s3	"express over type"	rdfs:member	"type"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:subject	"mutually acceptable mapping between correspond concept in the agent own ontology"
s2.1	"mutually acceptable mapping between correspond concept in the agent own ontology"	rdfs:member	"own ontology"
s2.1	"mutually acceptable mapping between correspond concept in the agent own ontology"	rdfs:member	"mutually acceptable mapping"
s2.1	"mutually acceptable mapping between correspond concept in the agent own ontology"	rdfs:member	"correspond concept"
s2.1	"mutually acceptable mapping between correspond concept in the agent own ontology"	rdfs:member	"agent"
s2.1	"own ontology"	rdfs:member	"own"
s2.1	"mutually acceptable"	rdfs:member	"mutually"
s2.1	"acceptable mapping"	rdfs:member	"acceptable"
s2.1	"own ontology"	rdfs:subClassOf	"ontology"
s2.1	"correspond concept"	rdfs:subClassOf	"concept"
s2.1	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s2.1	"correspond concept"	rdfs:member	"correspond"
s2.1	"acceptable mapping"	rdfs:subClassOf	"mapping"
s2.1	"mutually acceptable mapping"	rdfs:subClassOf	"mapping"
s2.1	"mutually acceptable mapping"	rdfs:member	"mutually acceptable"
s2.1	"agent own ontology"	rdfs:subClassOf	"own ontology"
s2.1	"acceptable mapping between correspond concept"	rdfs:member	"acceptable mapping"
s2.1	"acceptable mapping between correspond concept"	rdfs:member	"correspond concept"
s2.1	"correspond concept in agent own ontology"	rdfs:member	"correspond concept"
s2.1	"correspond concept in agent own ontology"	rdfs:member	"agent own ontology"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:predicate	"determine"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MNR	"dynamically"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MNR	"argumentationbased negotiation such a meaningbased argumentation mba"
s2.1	"argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"negotiation"
s2.1	"argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s2.1	"argumentation mba"	rdfs:subClassOf	"mba"
s2.1	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s2.1	"argumentation mba"	rdfs:member	"argumentation"
s2.1	"meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation"
s2.1	"meaningbased argumentation mba"	rdfs:subClassOf	"mba"
s2.1	"meaningbased argumentation"	rdfs:member	"meaningbased"
s2.1	"meaningbased argumentation mba"	rdfs:subClassOf	"argumentation mba"
s2.1	"such meaningbased argumentation mba"	rdfs:subClassOf	"meaningbased argumentation mba"
s2.1	"argumentationbased negotiation"	rdfs:subClassOf	"negotiation"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MOD	"may"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:subject	"various approach"
s2	"various approach"	rdfs:subClassOf	"approach"
s2	"various approach"	rdfs:member	"various"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:predicate	"consider"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:object	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"correspond concept"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"agent"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"own ontology"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"mutually acceptable mapping"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"negotiation"
s2	"mutually acceptable mapping between correspond concept in the agent own ontology may be determine dynamically through argumentationbased negotiation such a meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s2	"own ontology"	rdfs:member	"own"
s2	"argumentation mba"	rdfs:subClassOf	"mba"
s2	"mutually acceptable"	rdfs:member	"mutually"
s2	"correspond concept"	rdfs:subClassOf	"concept"
s2	"own ontology"	rdfs:subClassOf	"ontology"
s2	"correspond concept"	rdfs:member	"correspond"
s2	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s2	"acceptable mapping"	rdfs:member	"acceptable"
s2	"acceptable mapping"	rdfs:subClassOf	"mapping"
s2	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s2	"meaningbased argumentation"	rdfs:member	"meaningbased"
s2	"argumentation mba"	rdfs:member	"argumentation"
s2	"meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation"
s2	"meaningbased argumentation mba"	rdfs:subClassOf	"mba"
s2	"mutually acceptable mapping"	rdfs:subClassOf	"mapping"
s2	"mutually acceptable mapping"	rdfs:member	"mutually acceptable"
s2	"meaningbased argumentation mba"	rdfs:subClassOf	"argumentation mba"
s2	"such meaningbased argumentation mba"	rdfs:subClassOf	"meaningbased argumentation mba"
s2	"argumentationbased negotiation"	rdfs:subClassOf	"negotiation"
s2	"dynamically determine"	rdfs:subClassOf	"determine"
s2	"may dynamically determine"	rdfs:subClassOf	"dynamically determine"
s2	"agent own ontology"	rdfs:subClassOf	"own ontology"
s2	"acceptable mapping between correspond concept"	rdfs:member	"acceptable mapping"
s2	"acceptable mapping between correspond concept"	rdfs:member	"correspond concept"
s2	"correspond concept in agent own ontology"	rdfs:member	"correspond concept"
s2	"correspond concept in agent own ontology"	rdfs:member	"agent own ontology"
s2	"may dynamically determine through argumentationbased negotiation"	rdfs:member	"may dynamically determine"
s2	"may dynamically determine through argumentationbased negotiation"	rdfs:member	"argumentationbased negotiation"
s1	"the vocabulary used"
s1	"the vocabulary used"	rdf:subject	"vocabulary"
s1	"the vocabulary used"	rdf:predicate	"use"
s0.3	"agents reconciling the vocabulary"
s0.3	"agents reconciling the vocabulary"	rdf:subject	"agent"
s0.3	"agents reconciling the vocabulary"	rdf:predicate	"reconcile"
s0.3	"agents reconciling the vocabulary"	rdf:object	"vocabulary"
s0.2	"exchanged message"
s0.2	"exchanged message"	rdf:subject	"message"
s0.2	"exchanged message"	rdf:predicate	"exchange"
s0.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"
s0.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:subject	"agent"
s0.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:predicate	"reach"
s0.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:object	"mutual understand of the exchange message"
s0.1	"mutual understand of the exchange message"	rdfs:member	"exchange message"
s0.1	"mutual understand of the exchange message"	rdfs:member	"mutual understand"
s0.1	"exchange message"	rdfs:subClassOf	"message"
s0.1	"mutual understand"	rdfs:subClassOf	"understand"
s0.1	"mutual understand"	rdfs:member	"mutual"
s0.1	"exchange message"	rdfs:member	"exchange"
s0.1	"mutual understand of exchange message"	rdfs:member	"mutual understand"
s0.1	"mutual understand of exchange message"	rdfs:member	"exchange message"
s0.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	local:AM-MNR	"reconcile the vocabulary"
s0	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"
s0	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:subject	"effective communication in open environment"
s0	"effective communication in open environment"	rdfs:member	"effective communication"
s0	"effective communication in open environment"	rdfs:member	"open environment"
s0	"open environment"	rdfs:member	"open"
s0	"open environment"	rdfs:subClassOf	"environment"
s0	"effective communication"	rdfs:subClassOf	"communication"
s0	"effective communication"	rdfs:member	"effective"
s0	"effective communication in open environment"	rdfs:member	"effective communication"
s0	"effective communication in open environment"	rdfs:member	"open environment"
s0	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:predicate	"rely"
s0	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:object	"ability of agent"
s0	"ability of agent"	rdfs:member	"agent"
s0	"ability of agent"	rdfs:member	"ability"
s0	"ability of agent"	rdfs:member	"ability"
s0	"ability of agent"	rdfs:member	"agent"
s0	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	local:AM-PNC	"reach a mutual understand of the exchange message by reconcile the vocabulary"
s0	"reach a mutual understand of the exchange message by reconcile the vocabulary"	rdfs:member	"exchange message"
s0	"reach a mutual understand of the exchange message by reconcile the vocabulary"	rdfs:member	"vocabulary"
s0	"reach a mutual understand of the exchange message by reconcile the vocabulary"	rdfs:member	"mutual understand"
s0	"exchange message"	rdfs:subClassOf	"message"
s0	"mutual understand"	rdfs:subClassOf	"understand"
s0	"mutual understand"	rdfs:member	"mutual"
s0	"exchange message"	rdfs:member	"exchange"
s0	"mutual understand of exchange message"	rdfs:member	"mutual understand"
s0	"mutual understand of exchange message"	rdfs:member	"exchange message"
