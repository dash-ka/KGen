s10	"we compare the fitness for purpose of the generated alignments"
s10	"we compare the fitness for purpose of the generated alignments"	rdf:subject	"we"
s10	"we compare the fitness for purpose of the generated alignments"	rdf:predicate	"compare"
s10	"we compare the fitness for purpose of the generated alignments"	rdf:object	"fitness purpose of the generated alignments"
s10	"fitness purpose of the generated alignments"	rdfs:member	"fitness purpose"
s10	"fitness purpose of the generated alignments"	rdfs:member	"generated alignments"
s10	"fitness purpose"	rdfs:subClassOf	"purpose"
s10	"generated alignments"	rdfs:subClassOf	"alignments"
s10	"fitness purpose"	rdfs:member	"fitness"
s10	"generated alignments"	rdfs:member	"generated"
s10	"fitness purpose of generated alignments"	rdfs:member	"fitness purpose"
s10	"fitness purpose of generated alignments"	rdfs:member	"generated alignments"
s9	"we evaluate the fitness for purpose of the generated alignments"
s9	"we evaluate the fitness for purpose of the generated alignments"	rdf:subject	"we"
s9	"we evaluate the fitness for purpose of the generated alignments"	rdf:predicate	"evaluate"
s9	"we evaluate the fitness for purpose of the generated alignments"	rdf:object	"fitness for purpose of the generated alignments"
s9	"fitness for purpose of the generated alignments"	rdfs:member	"purpose"
s9	"fitness for purpose of the generated alignments"	rdfs:member	"generated alignments"
s9	"fitness for purpose of the generated alignments"	rdfs:member	"fitness"
s9	"generated alignments"	rdfs:subClassOf	"alignments"
s9	"generated alignments"	rdfs:member	"generated"
s9	"fitness for purpose"	rdfs:member	"fitness"
s9	"fitness for purpose"	rdfs:member	"purpose"
s9	"purpose of generated alignments"	rdfs:member	"purpose"
s9	"purpose of generated alignments"	rdfs:member	"generated alignments"
s8.2	"the proposed approach has comparable performance to the mba approach"
s8.2	"the proposed approach has comparable performance to the mba approach"	rdf:subject	"proposed approach"
s8.2	"proposed approach"	rdfs:subClassOf	"approach"
s8.2	"the proposed approach has comparable performance to the mba approach"	rdf:predicate	"have"
s8.2	"the proposed approach has comparable performance to the mba approach"	rdf:object	"comparable performance to the MbA approach"
s8.2	"comparable performance to the mba approach"	rdfs:member	"mba approach"
s8.2	"comparable performance to the mba approach"	rdfs:member	"comparable performance"
s8.2	"mba approach"	rdfs:subClassOf	"approach"
s8.2	"comparable performance"	rdfs:member	"comparable"
s8.2	"comparable performance"	rdfs:subClassOf	"performance"
s8.2	"mba approach"	rdfs:member	"mba"
s8.2	"comparable performance to mba approach"	rdfs:member	"comparable performance"
s8.2	"comparable performance to mba approach"	rdfs:member	"mba approach"
s8.1	"proposed approach"
s8.1	"proposed approach"	rdf:subject	"approach"
s8.1	"proposed approach"	rdf:predicate	"propose"
s8	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"
s8	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:subject	"we"
s8	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:predicate	"demonstrate"
s8	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	rdf:object	"proposed approach has comparable performance to the MbA approach"
s8	"proposed approach has comparable performance to the mba approach"	rdfs:member	"mba approach"
s8	"proposed approach has comparable performance to the mba approach"	rdfs:member	"comparable performance"
s8	"proposed approach has comparable performance to the mba approach"	rdfs:member	"approach"
s8	"mba approach"	rdfs:subClassOf	"approach"
s8	"comparable performance"	rdfs:member	"comparable"
s8	"comparable performance"	rdfs:subClassOf	"performance"
s8	"mba approach"	rdfs:member	"mba"
s8	"proposed approach"	rdfs:subClassOf	"approach"
s8	"comparable performance to mba approach"	rdfs:member	"comparable performance"
s8	"comparable performance to mba approach"	rdfs:member	"mba approach"
s8	"we empirically demonstrate that the proposed approach has comparable performance to the mba approach"	local:AM-MNR	"empirically"
s6	"we empirically compare this approach with the meaningbased argumentation"
s6	"we empirically compare this approach with the meaningbased argumentation"	rdf:subject	"We"
s6	"we empirically compare this approach with the meaningbased argumentation"	rdf:predicate	"compare"
s6	"we empirically compare this approach with the meaningbased argumentation"	rdf:object	"approach Meaningbased Argumentation"
s6	"approach meaningbased argumentation"	rdfs:member	"argumentation"
s6	"approach meaningbased argumentation"	rdfs:member	"approach"
s6	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s6	"approach meaningbased argumentation"	rdfs:subClassOf	"meaningbased argumentation"
s6	"we empirically compare this approach with the meaningbased argumentation"	local:AM-MNR	"empirically"
s5.4	"enabling agent communication"
s5.4	"enabling agent communication"	rdf:subject	"agent communication"
s5.4	"agent communication"	rdfs:subClassOf	"communication"
s5.4	"agent communication"	rdfs:member	"agent"
s5.4	"enabling agent communication"	rdf:predicate	"enable"
s5.3	"agreed alignments"
s5.3	"agreed alignments"	rdf:subject	"alignments"
s5.3	"agreed alignments"	rdf:predicate	"agree"
s5.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"
s5.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:subject	"proposed approach"
s5.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:predicate	"produce"
s5.2	"the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:object	"larger agreed alignments thus better enabling agent communication"
s5.2	"larger agreed alignments thus better enabling agent communication"	rdfs:member	"agent communication"
s5.2	"larger agreed alignments thus better enabling agent communication"	rdfs:member	"alignments"
s5.2	"agent communication"	rdfs:subClassOf	"communication"
s5.2	"agent communication"	rdfs:member	"agent"
s5.2	"better agreed"	rdfs:subClassOf	"agreed"
s5.2	"thus better"	rdfs:subClassOf	"better"
s5.1	"proposed approach"
s5.1	"proposed approach"	rdf:subject	"approach"
s5.1	"proposed approach"	rdf:predicate	"propose"
s5	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"
s5	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:subject	"We"
s5	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:predicate	"demonstrate"
s5	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	rdf:object	"proposed approach produces larger agreed alignments thus better enabling agent communication"
s5	"proposed approach produces larger agreed alignments thus better enabling agent communication"	rdfs:member	"agent communication"
s5	"proposed approach produces larger agreed alignments thus better enabling agent communication"	rdfs:member	"alignments"
s5	"proposed approach produces larger agreed alignments thus better enabling agent communication"	rdfs:member	"approach"
s5	"agent communication"	rdfs:subClassOf	"communication"
s5	"agent communication"	rdfs:member	"agent"
s5	"better agreed"	rdfs:subClassOf	"agreed"
s5	"thus better"	rdfs:subClassOf	"better"
s5	"larger better agreed"	rdfs:subClassOf	"better agreed"
s5	"proposed approach"	rdfs:subClassOf	"approach"
s5	"we empirically demonstrate that the proposed approach produces larger agreed alignments thus better enabling agent communication"	local:AM-MNR	"empirically"
s4.1	"agents express a private acceptability threshold over the types of mappings agents"
s4.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:subject	"agents"
s4.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:predicate	"express"
s4.1	"agents express a private acceptability threshold over the types of mappings agents"	rdf:object	"private acceptability threshold over the types of mappings agents"
s4.1	"private acceptability threshold over the types of mappings agents"	rdfs:member	"types"
s4.1	"private acceptability threshold over the types of mappings agents"	rdfs:member	"mappings agents"
s4.1	"private acceptability threshold over the types of mappings agents"	rdfs:member	"private acceptability threshold"
s4.1	"private acceptability"	rdfs:subClassOf	"acceptability"
s4.1	"acceptability threshold"	rdfs:subClassOf	"threshold"
s4.1	"private acceptability"	rdfs:member	"private"
s4.1	"private acceptability threshold"	rdfs:member	"private acceptability"
s4.1	"acceptability threshold"	rdfs:member	"acceptability"
s4.1	"mappings agents"	rdfs:subClassOf	"agents"
s4.1	"mappings agents"	rdfs:member	"mappings"
s4.1	"private acceptability threshold"	rdfs:subClassOf	"threshold"
s4.1	"private acceptability threshold"	rdfs:subClassOf	"acceptability threshold"
s4.1	"private acceptability threshold over types"	rdfs:member	"private acceptability threshold"
s4.1	"private acceptability threshold over types"	rdfs:member	"types"
s4.1	"types of mappings agents"	rdfs:member	"types"
s4.1	"types of mappings agents"	rdfs:member	"mappings agents"
s4	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"
s4	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:subject	"mutually acceptable mappings"
s4	"acceptable mappings"	rdfs:subClassOf	"mappings"
s4	"acceptable mappings"	rdfs:member	"acceptable"
s4	"mutually acceptable mappings"	rdfs:subClassOf	"mappings"
s4	"mutually acceptable"	rdfs:member	"mutually"
s4	"mutually acceptable mappings"	rdfs:member	"mutually acceptable"
s4	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s4	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:predicate	"allow"
s4	"mutually acceptable mappings that allows agents to express a private acceptability threshold over the types of mappings agents"	rdf:object	"agents to express a private acceptability threshold over the types of mappings agents"
s4	"agents to express a private acceptability threshold over the types of mappings agents"	rdfs:member	"agents"
s4	"agents to express a private acceptability threshold over the types of mappings agents"	rdfs:member	"types"
s4	"agents to express a private acceptability threshold over the types of mappings agents"	rdfs:member	"mappings agents"
s4	"agents to express a private acceptability threshold over the types of mappings agents"	rdfs:member	"private acceptability threshold"
s4	"private acceptability"	rdfs:subClassOf	"acceptability"
s4	"acceptability threshold"	rdfs:subClassOf	"threshold"
s4	"private acceptability"	rdfs:member	"private"
s4	"private acceptability threshold"	rdfs:member	"private acceptability"
s4	"acceptability threshold"	rdfs:member	"acceptability"
s4	"mappings agents"	rdfs:subClassOf	"agents"
s4	"mappings agents"	rdfs:member	"mappings"
s4	"private acceptability threshold"	rdfs:subClassOf	"threshold"
s4	"private acceptability threshold"	rdfs:subClassOf	"acceptability threshold"
s4	"express over types"	rdfs:member	"express"
s4	"express over types"	rdfs:member	"types"
s4	"types of mappings agents"	rdfs:member	"types"
s4	"types of mappings agents"	rdfs:member	"mappings agents"
s3.1	"in this paper the dynamic determination of mutually acceptable mappings"
s3.1	"in this paper the dynamic determination of mutually acceptable mappings"	rdf:subject	"dynamic determination of mutually acceptable mappings"
s3.1	"dynamic determination of mutually acceptable mappings"	rdfs:member	"dynamic determination"
s3.1	"dynamic determination of mutually acceptable mappings"	rdfs:member	"mutually acceptable mappings"
s3.1	"acceptable mappings"	rdfs:subClassOf	"mappings"
s3.1	"acceptable mappings"	rdfs:member	"acceptable"
s3.1	"mutually acceptable mappings"	rdfs:member	"mutually acceptable"
s3.1	"mutually acceptable mappings"	rdfs:subClassOf	"mappings"
s3.1	"dynamic determination"	rdfs:subClassOf	"determination"
s3.1	"mutually acceptable"	rdfs:member	"mutually"
s3.1	"dynamic determination"	rdfs:member	"dynamic"
s3.1	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s3.1	"dynamic determination of acceptable mappings"	rdfs:member	"dynamic determination"
s3.1	"dynamic determination of acceptable mappings"	rdfs:member	"acceptable mappings"
s3.1	"in this paper the dynamic determination of mutually acceptable mappings"	rdf:predicate	"prefer"
s3.1	"in this paper the dynamic determination of mutually acceptable mappings"	local:AM-LOC	"paper"
s3	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"
s3	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:subject	"we"
s3	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:predicate	"present"
s3	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdf:object	"novel approach to the dynamic determination of mutually acceptable mappings prefer"
s3	"novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdfs:member	"dynamic determination"
s3	"novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdfs:member	"novel approach"
s3	"novel approach to the dynamic determination of mutually acceptable mappings prefer"	rdfs:member	"mutually acceptable mappings"
s3	"acceptable mappings"	rdfs:subClassOf	"mappings"
s3	"acceptable mappings"	rdfs:member	"acceptable"
s3	"mutually acceptable mappings"	rdfs:member	"mutually acceptable"
s3	"mutually acceptable mappings"	rdfs:subClassOf	"mappings"
s3	"dynamic determination"	rdfs:subClassOf	"determination"
s3	"dynamic determination"	rdfs:member	"dynamic"
s3	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s3	"mutually acceptable"	rdfs:member	"mutually"
s3	"novel approach"	rdfs:member	"novel"
s3	"novel approach"	rdfs:subClassOf	"approach"
s3	"novel approach to dynamic determination"	rdfs:member	"novel approach"
s3	"novel approach to dynamic determination"	rdfs:member	"dynamic determination"
s3	"dynamic determination of acceptable mappings"	rdfs:member	"dynamic determination"
s3	"dynamic determination of acceptable mappings"	rdfs:member	"acceptable mappings"
s3	"in this paper we present a novel approach to the dynamic determination of mutually acceptable mappings prefer"	local:AM-LOC	"paper"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:subject	"mutually acceptable mappings between corresponding concepts in the agents own ontologies"
s2.1	"mutually acceptable mappings between corresponding concepts in the agents own ontologies"	rdfs:member	"agents"
s2.1	"mutually acceptable mappings between corresponding concepts in the agents own ontologies"	rdfs:member	"concepts"
s2.1	"mutually acceptable mappings between corresponding concepts in the agents own ontologies"	rdfs:member	"own ontologies"
s2.1	"mutually acceptable mappings between corresponding concepts in the agents own ontologies"	rdfs:member	"mutually acceptable mappings"
s2.1	"acceptable mappings"	rdfs:subClassOf	"mappings"
s2.1	"acceptable mappings"	rdfs:member	"acceptable"
s2.1	"own ontologies"	rdfs:member	"own"
s2.1	"mutually acceptable mappings"	rdfs:subClassOf	"mappings"
s2.1	"own ontologies"	rdfs:subClassOf	"ontologies"
s2.1	"mutually acceptable"	rdfs:member	"mutually"
s2.1	"mutually acceptable mappings"	rdfs:member	"mutually acceptable"
s2.1	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s2.1	"corresponding concepts"	rdfs:subClassOf	"concepts"
s2.1	"acceptable mappings between corresponding concepts"	rdfs:member	"acceptable mappings"
s2.1	"acceptable mappings between corresponding concepts"	rdfs:member	"corresponding concepts"
s2.1	"corresponding concepts in agents"	rdfs:member	"corresponding concepts"
s2.1	"corresponding concepts in agents"	rdfs:member	"agents"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:predicate	"determine"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MNR	"dynamically"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MNR	"argumentationbased negotiation such as Meaningbased Argumentation MbA"
s2.1	"argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s2.1	"argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"negotiation"
s2.1	"meaningbased argumentation mba"	rdfs:subClassOf	"mba"
s2.1	"argumentation mba"	rdfs:subClassOf	"mba"
s2.1	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s2.1	"meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation"
s2.1	"meaningbased argumentation"	rdfs:member	"meaningbased"
s2.1	"argumentation mba"	rdfs:member	"argumentation"
s2.1	"meaningbased argumentation mba"	rdfs:subClassOf	"argumentation mba"
s2.1	"argumentationbased negotiation"	rdfs:subClassOf	"negotiation"
s2.1	"argumentationbased negotiation such_as meaningbased argumentation mba"	rdfs:member	"argumentationbased negotiation"
s2.1	"argumentationbased negotiation such_as meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s2.1	"how mutually acceptable mappings between corresponding concepts in the agents own ontologies may determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	local:AM-MOD	"may"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:subject	"Various approaches"
s2	"various approaches"	rdfs:member	"various"
s2	"various approaches"	rdfs:subClassOf	"approaches"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:predicate	"consider"
s2	"various approaches considered how mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdf:object	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as Meaningbased Argumentation MbA"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"own ontologies"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"negotiation"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"concepts"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"agents"
s2	"mutually acceptable mappings between corresponding concepts in the agents own ontologies may be determined dynamically through argumentationbased negotiation such as meaningbased argumentation mba"	rdfs:member	"mutually acceptable mappings"
s2	"acceptable mappings"	rdfs:subClassOf	"mappings"
s2	"acceptable mappings"	rdfs:member	"acceptable"
s2	"own ontologies"	rdfs:member	"own"
s2	"meaningbased argumentation mba"	rdfs:subClassOf	"mba"
s2	"mutually acceptable mappings"	rdfs:member	"mutually acceptable"
s2	"argumentation mba"	rdfs:subClassOf	"mba"
s2	"mutually acceptable mappings"	rdfs:subClassOf	"mappings"
s2	"meaningbased argumentation"	rdfs:subClassOf	"argumentation"
s2	"meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation"
s2	"own ontologies"	rdfs:subClassOf	"ontologies"
s2	"mutually acceptable"	rdfs:member	"mutually"
s2	"meaningbased argumentation"	rdfs:member	"meaningbased"
s2	"mutually acceptable"	rdfs:subClassOf	"acceptable"
s2	"argumentation mba"	rdfs:member	"argumentation"
s2	"meaningbased argumentation mba"	rdfs:subClassOf	"argumentation mba"
s2	"argumentationbased negotiation"	rdfs:subClassOf	"negotiation"
s2	"dynamically determined"	rdfs:subClassOf	"determined"
s2	"may dynamically determined"	rdfs:subClassOf	"dynamically determined"
s2	"corresponding concepts"	rdfs:subClassOf	"concepts"
s2	"acceptable mappings between corresponding concepts"	rdfs:member	"acceptable mappings"
s2	"acceptable mappings between corresponding concepts"	rdfs:member	"corresponding concepts"
s2	"corresponding concepts in agents"	rdfs:member	"corresponding concepts"
s2	"corresponding concepts in agents"	rdfs:member	"agents"
s2	"may dynamically determined through argumentationbased negotiation"	rdfs:member	"may dynamically determined"
s2	"may dynamically determined through argumentationbased negotiation"	rdfs:member	"argumentationbased negotiation"
s2	"argumentationbased negotiation such_as meaningbased argumentation mba"	rdfs:member	"argumentationbased negotiation"
s2	"argumentationbased negotiation such_as meaningbased argumentation mba"	rdfs:member	"meaningbased argumentation mba"
s1.3	"agents reconciling the vocabulary"
s1.3	"agents reconciling the vocabulary"	rdf:subject	"agents"
s1.3	"agents reconciling the vocabulary"	rdf:predicate	"reconcile"
s1.3	"agents reconciling the vocabulary"	rdf:object	"vocabulary"
s1.2	"exchanged message"
s1.2	"exchanged message"	rdf:subject	"message"
s1.2	"exchanged message"	rdf:predicate	"exchange"
s1.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"
s1.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:subject	"agents"
s1.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:predicate	"reach"
s1.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:object	"mutual understanding of the exchanged message"
s1.1	"mutual understanding of the exchanged message"	rdfs:member	"exchanged message"
s1.1	"mutual understanding of the exchanged message"	rdfs:member	"mutual understanding"
s1.1	"exchanged message"	rdfs:subClassOf	"message"
s1.1	"mutual understanding"	rdfs:member	"mutual"
s1.1	"exchanged message"	rdfs:member	"exchanged"
s1.1	"mutual understanding"	rdfs:subClassOf	"understanding"
s1.1	"mutual understanding of exchanged message"	rdfs:member	"mutual understanding"
s1.1	"mutual understanding of exchanged message"	rdfs:member	"exchanged message"
s1.1	"agents reach a mutual understanding of the exchanged message by reconciling the vocabulary"	local:AM-MNR	"reconciling the vocabulary"
s1	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"
s1	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:subject	"Effective communication in open environments"
s1	"effective communication in open environments"	rdfs:member	"open environments"
s1	"effective communication in open environments"	rdfs:member	"effective communication"
s1	"effective communication"	rdfs:member	"effective"
s1	"open environments"	rdfs:member	"open"
s1	"effective communication"	rdfs:subClassOf	"communication"
s1	"open environments"	rdfs:subClassOf	"environments"
s1	"effective communication in open environments"	rdfs:member	"effective communication"
s1	"effective communication in open environments"	rdfs:member	"open environments"
s1	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:predicate	"rely"
s1	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdf:object	"ability of agents"
s1	"ability of agents"	rdfs:member	"agents"
s1	"ability of agents"	rdfs:member	"ability"
s1	"ability of agents"	rdfs:member	"ability"
s1	"ability of agents"	rdfs:member	"agents"
s1	"effective communication in open environments relies on the ability of agents to reach a mutual understanding of the exchanged message by reconciling the vocabulary"	local:AM-PNC	"reach a mutual understanding of the exchanged message by reconciling the vocabulary"
s1	"reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdfs:member	"message"
s1	"reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdfs:member	"mutual understanding"
s1	"reach a mutual understanding of the exchanged message by reconciling the vocabulary"	rdfs:member	"vocabulary"
s1	"mutual understanding"	rdfs:member	"mutual"
s1	"mutual understanding"	rdfs:subClassOf	"understanding"
s1	"exchanged message"	rdfs:subClassOf	"message"
s1	"mutual understanding of exchanged message"	rdfs:member	"mutual understanding"
s1	"mutual understanding of exchanged message"	rdfs:member	"exchanged message"
s0	"the vocabulary used"
s0	"the vocabulary used"	rdf:subject	"vocabulary"
s0	"the vocabulary used"	rdf:predicate	"use"
