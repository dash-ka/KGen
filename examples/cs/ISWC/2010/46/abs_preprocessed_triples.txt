s2.5	"using computationally intensive reasoning systems"
s2.5	"using computationally intensive reasoning systems"	rdf:subject	"computationally intensive reasoning systems"
s2.5	"reasoning systems"	rdfs:subClassOf	"systems"
s2.5	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s2.5	"computationally intensive"	rdfs:subClassOf	"intensive"
s2.5	"using computationally intensive reasoning systems"	rdf:predicate	"use"
s2.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.4	"completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"systems"
s2.4	"completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"completeness guarantees"
s2.4	"completeness guarantees"	rdfs:member	"completeness"
s2.4	"completeness guarantees"	rdfs:subClassOf	"guarantees"
s2.4	"reasoning systems"	rdfs:subClassOf	"systems"
s2.4	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s2.4	"computationally intensive"	rdfs:subClassOf	"intensive"
s2.4	"when using"	rdfs:subClassOf	"using"
s2.4	"only when"	rdfs:subClassOf	"when"
s2.4	"normally available"	rdfs:subClassOf	"available"
s2.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"enjoy"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"applications"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"exploit"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"highly scalable incomplete query answering systems"
s2.3	"highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s2.3	"highly scalable incomplete query answering systems"	rdfs:member	"systems"
s2.3	"highly scalable"	rdfs:member	"highly"
s2.3	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.3	"incomplete query"	rdfs:subClassOf	"query"
s2.3	"scalable incomplete"	rdfs:member	"scalable"
s2.3	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s2.3	"highly scalable"	rdfs:subClassOf	"scalable"
s2.3	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s2.3	"highly scalable incomplete"	rdfs:member	"highly scalable"
s2.3	"incomplete query"	rdfs:member	"incomplete"
s2.3	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.3	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s2.3	"scalable incomplete query"	rdfs:subClassOf	"query"
s2.3	"answering systems"	rdfs:subClassOf	"systems"
s2.3	"query answering systems"	rdfs:subClassOf	"answering systems"
s2.3	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s2.3	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-MOD	"can"
s2.3	"where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.2	"they identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.2	"they identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"they"
s2.2	"they identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"identify"
s2.2	"they identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"queries where applications can exploit highly scalable incomplete query answering systems"
s2.2	"queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"queries"
s2.2	"queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"applications"
s2.2	"queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s2.2	"queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"systems"
s2.2	"highly scalable"	rdfs:member	"highly"
s2.2	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.2	"incomplete query"	rdfs:subClassOf	"query"
s2.2	"scalable incomplete"	rdfs:member	"scalable"
s2.2	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s2.2	"highly scalable"	rdfs:subClassOf	"scalable"
s2.2	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s2.2	"highly scalable incomplete"	rdfs:member	"highly scalable"
s2.2	"incomplete query"	rdfs:member	"incomplete"
s2.2	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.2	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s2.2	"scalable incomplete query"	rdfs:subClassOf	"query"
s2.2	"answering systems"	rdfs:subClassOf	"systems"
s2.2	"query answering systems"	rdfs:subClassOf	"answering systems"
s2.2	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s2.2	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s2.2	"can exploit"	rdfs:subClassOf	"exploit"
s2.2	"where can exploit"	rdfs:subClassOf	"can exploit"
s2.2	"they identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"they"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"use"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-LOC	"practice"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-MOD	"can"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-PNC	"identify queries where applications can exploit highly scalable incomplete query answering systems"
s2.1	"identify queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"applications"
s2.1	"identify queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s2.1	"identify queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"systems"
s2.1	"identify queries where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"identify queries"
s2.1	"highly scalable"	rdfs:member	"highly"
s2.1	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.1	"incomplete query"	rdfs:subClassOf	"query"
s2.1	"scalable incomplete"	rdfs:member	"scalable"
s2.1	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s2.1	"highly scalable"	rdfs:subClassOf	"scalable"
s2.1	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s2.1	"highly scalable incomplete"	rdfs:member	"highly scalable"
s2.1	"identify queries"	rdfs:member	"identify"
s2.1	"incomplete query"	rdfs:member	"incomplete"
s2.1	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s2.1	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s2.1	"scalable incomplete query"	rdfs:subClassOf	"query"
s2.1	"identify queries"	rdfs:subClassOf	"queries"
s2.1	"answering systems"	rdfs:subClassOf	"systems"
s2.1	"query answering systems"	rdfs:subClassOf	"answering systems"
s2.1	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s2.1	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s2.1	"can exploit"	rdfs:subClassOf	"exploit"
s2.1	"where can exploit"	rdfs:subClassOf	"can exploit"
s2.1	"how they can used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2	"we show how they can be used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2	"we show how they can be used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"We"
s2	"we show how they can be used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"show"
s2	"we show how they can be used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"applications"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"completeness guarantees"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"practice"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"systems"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"queries"
s2	"used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"highly scalable incomplete query"
s2	"highly scalable"	rdfs:member	"highly"
s2	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s2	"incomplete query"	rdfs:subClassOf	"query"
s2	"scalable incomplete"	rdfs:member	"scalable"
s2	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s2	"highly scalable"	rdfs:subClassOf	"scalable"
s2	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s2	"highly scalable incomplete"	rdfs:member	"highly scalable"
s2	"completeness guarantees"	rdfs:member	"completeness"
s2	"completeness guarantees"	rdfs:subClassOf	"guarantees"
s2	"incomplete query"	rdfs:member	"incomplete"
s2	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s2	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s2	"scalable incomplete query"	rdfs:subClassOf	"query"
s2	"reasoning systems"	rdfs:subClassOf	"systems"
s2	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s2	"computationally intensive"	rdfs:subClassOf	"intensive"
s2	"when using"	rdfs:subClassOf	"using"
s2	"only when"	rdfs:subClassOf	"when"
s2	"available guarantees"	rdfs:subClassOf	"guarantees"
s2	"normally available"	rdfs:subClassOf	"available"
s2	"completeness available guarantees"	rdfs:subClassOf	"available guarantees"
s2	"answering systems"	rdfs:subClassOf	"systems"
s2	"query answering systems"	rdfs:subClassOf	"answering systems"
s2	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s2	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s2	"can exploit"	rdfs:subClassOf	"exploit"
s2	"where can exploit"	rdfs:subClassOf	"can exploit"
s2	"used in practice"	rdfs:member	"used"
s2	"used in practice"	rdfs:member	"practice"
s1.5	"using computationally intensive reasoning systems"
s1.5	"using computationally intensive reasoning systems"	rdf:subject	"computationally intensive reasoning systems"
s1.5	"reasoning systems"	rdfs:subClassOf	"systems"
s1.5	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s1.5	"computationally intensive"	rdfs:subClassOf	"intensive"
s1.5	"using computationally intensive reasoning systems"	rdf:predicate	"use"
s1.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.4	"completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"systems"
s1.4	"completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"completeness guarantees"
s1.4	"completeness guarantees"	rdfs:member	"completeness"
s1.4	"completeness guarantees"	rdfs:subClassOf	"guarantees"
s1.4	"reasoning systems"	rdfs:subClassOf	"systems"
s1.4	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s1.4	"computationally intensive"	rdfs:subClassOf	"intensive"
s1.4	"when using"	rdfs:subClassOf	"using"
s1.4	"only when"	rdfs:subClassOf	"when"
s1.4	"normally available"	rdfs:subClassOf	"available"
s1.4	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"enjoy"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"applications"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"exploit"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"highly scalable incomplete query answering systems"
s1.3	"highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s1.3	"highly scalable incomplete query answering systems"	rdfs:member	"systems"
s1.3	"highly scalable"	rdfs:member	"highly"
s1.3	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.3	"incomplete query"	rdfs:subClassOf	"query"
s1.3	"scalable incomplete"	rdfs:member	"scalable"
s1.3	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s1.3	"highly scalable"	rdfs:subClassOf	"scalable"
s1.3	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s1.3	"highly scalable incomplete"	rdfs:member	"highly scalable"
s1.3	"incomplete query"	rdfs:member	"incomplete"
s1.3	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.3	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s1.3	"scalable incomplete query"	rdfs:subClassOf	"query"
s1.3	"answering systems"	rdfs:subClassOf	"systems"
s1.3	"query answering systems"	rdfs:subClassOf	"answering systems"
s1.3	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s1.3	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-LOC	"ontologies"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-MOD	"can"
s1.3	"ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.2	"they identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.2	"they identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"they"
s1.2	"they identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"identify"
s1.2	"they identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"ontologies where applications can exploit highly scalable incomplete query answering systems"
s1.2	"ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"applications"
s1.2	"ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"ontologies"
s1.2	"ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s1.2	"ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"systems"
s1.2	"highly scalable"	rdfs:member	"highly"
s1.2	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.2	"incomplete query"	rdfs:subClassOf	"query"
s1.2	"scalable incomplete"	rdfs:member	"scalable"
s1.2	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s1.2	"highly scalable"	rdfs:subClassOf	"scalable"
s1.2	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s1.2	"highly scalable incomplete"	rdfs:member	"highly scalable"
s1.2	"incomplete query"	rdfs:member	"incomplete"
s1.2	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.2	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s1.2	"scalable incomplete query"	rdfs:subClassOf	"query"
s1.2	"answering systems"	rdfs:subClassOf	"systems"
s1.2	"query answering systems"	rdfs:subClassOf	"answering systems"
s1.2	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s1.2	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s1.2	"can exploit"	rdfs:subClassOf	"exploit"
s1.2	"where can exploit"	rdfs:subClassOf	"can exploit"
s1.2	"they identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"they"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"use"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"identify ontologies where applications can exploit highly scalable incomplete query answering systems"
s1.1	"identify ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"applications"
s1.1	"identify ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"identify ontologies"
s1.1	"identify ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"highly scalable incomplete query"
s1.1	"identify ontologies where applications can exploit highly scalable incomplete query answering systems"	rdfs:member	"systems"
s1.1	"highly scalable"	rdfs:member	"highly"
s1.1	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.1	"incomplete query"	rdfs:subClassOf	"query"
s1.1	"scalable incomplete"	rdfs:member	"scalable"
s1.1	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s1.1	"identify ontologies"	rdfs:subClassOf	"ontologies"
s1.1	"highly scalable"	rdfs:subClassOf	"scalable"
s1.1	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s1.1	"identify ontologies"	rdfs:member	"identify"
s1.1	"highly scalable incomplete"	rdfs:member	"highly scalable"
s1.1	"incomplete query"	rdfs:member	"incomplete"
s1.1	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s1.1	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s1.1	"scalable incomplete query"	rdfs:subClassOf	"query"
s1.1	"answering systems"	rdfs:subClassOf	"systems"
s1.1	"query answering systems"	rdfs:subClassOf	"answering systems"
s1.1	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s1.1	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s1.1	"can exploit"	rdfs:subClassOf	"exploit"
s1.1	"where can exploit"	rdfs:subClassOf	"can exploit"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-LOC	"practice"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-MOD	"can"
s1.1	"how they can used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	local:AM-TMP	"enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1	"we show how they can be used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1	"we show how they can be used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:subject	"We"
s1	"we show how they can be used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:predicate	"show"
s1	"we show how they can be used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdf:object	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"applications"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"completeness guarantees"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"practice"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"systems"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"ontologies"
s1	"used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems"	rdfs:member	"highly scalable incomplete query"
s1	"highly scalable"	rdfs:member	"highly"
s1	"scalable incomplete"	rdfs:subClassOf	"incomplete"
s1	"incomplete query"	rdfs:subClassOf	"query"
s1	"scalable incomplete"	rdfs:member	"scalable"
s1	"highly scalable incomplete query"	rdfs:subClassOf	"query"
s1	"highly scalable"	rdfs:subClassOf	"scalable"
s1	"highly scalable incomplete query"	rdfs:member	"highly scalable incomplete"
s1	"highly scalable incomplete"	rdfs:member	"highly scalable"
s1	"completeness guarantees"	rdfs:member	"completeness"
s1	"completeness guarantees"	rdfs:subClassOf	"guarantees"
s1	"incomplete query"	rdfs:member	"incomplete"
s1	"highly scalable incomplete"	rdfs:subClassOf	"incomplete"
s1	"scalable incomplete query"	rdfs:member	"scalable incomplete"
s1	"scalable incomplete query"	rdfs:subClassOf	"query"
s1	"reasoning systems"	rdfs:subClassOf	"systems"
s1	"intensive reasoning systems"	rdfs:subClassOf	"reasoning systems"
s1	"computationally intensive"	rdfs:subClassOf	"intensive"
s1	"when using"	rdfs:subClassOf	"using"
s1	"only when"	rdfs:subClassOf	"when"
s1	"available guarantees"	rdfs:subClassOf	"guarantees"
s1	"normally available"	rdfs:subClassOf	"available"
s1	"completeness available guarantees"	rdfs:subClassOf	"available guarantees"
s1	"answering systems"	rdfs:subClassOf	"systems"
s1	"query answering systems"	rdfs:subClassOf	"answering systems"
s1	"incomplete query answering systems"	rdfs:subClassOf	"query answering systems"
s1	"scalable incomplete query answering systems"	rdfs:subClassOf	"incomplete query answering systems"
s1	"can exploit"	rdfs:subClassOf	"exploit"
s1	"where can exploit"	rdfs:subClassOf	"can exploit"
s1	"used in practice"	rdfs:member	"used"
s1	"used in practice"	rdfs:member	"practice"
s0.2	"introducing strict testing bases"
s0.2	"introducing strict testing bases"	rdf:subject	"strict testing bases"
s0.2	"strict testing bases"	rdfs:subClassOf	"bases"
s0.2	"testing bases"	rdfs:member	"testing"
s0.2	"strict testing bases"	rdfs:member	"strict testing"
s0.2	"testing bases"	rdfs:subClassOf	"bases"
s0.2	"strict testing"	rdfs:subClassOf	"testing"
s0.2	"strict testing"	rdfs:member	"strict"
s0.2	"strict testing bases"	rdfs:subClassOf	"testing bases"
s0.2	"introducing strict testing bases"	rdf:predicate	"introduce"
s0.1	"evaluating incomplete reasoners by introducing strict testing bases"
s0.1	"evaluating incomplete reasoners by introducing strict testing bases"	rdf:subject	"incomplete reasoners"
s0.1	"incomplete reasoners"	rdfs:subClassOf	"reasoners"
s0.1	"incomplete reasoners"	rdfs:member	"incomplete"
s0.1	"evaluating incomplete reasoners by introducing strict testing bases"	rdf:predicate	"evaluate"
s0.1	"evaluating incomplete reasoners by introducing strict testing bases"	local:AM-MNR	"introducing strict testing bases"
s0	"we extend we recent work on evaluating incomplete reasoners by introducing strict testing bases"
s0	"we extend we recent work on evaluating incomplete reasoners by introducing strict testing bases"	rdf:subject	"We"
s0	"we extend we recent work on evaluating incomplete reasoners by introducing strict testing bases"	rdf:predicate	"extend"
s0	"we extend we recent work on evaluating incomplete reasoners by introducing strict testing bases"	rdf:object	"recent work We evaluating incomplete reasoners"
s0	"recent work we evaluating incomplete reasoners"	rdfs:member	"recent work"
s0	"recent work we evaluating incomplete reasoners"	rdfs:member	"incomplete reasoners"
s0	"recent work"	rdfs:member	"recent"
s0	"incomplete reasoners"	rdfs:subClassOf	"reasoners"
s0	"incomplete reasoners"	rdfs:member	"incomplete"
s0	"recent work"	rdfs:subClassOf	"work"
s0	"we extend we recent work on evaluating incomplete reasoners by introducing strict testing bases"	local:AM-MNR	"introducing strict testing bases"
