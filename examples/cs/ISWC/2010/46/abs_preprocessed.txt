We extend We recent work on evaluating incomplete reasoners by introducing strict testing bases
We show how they can be used in practice to identify ontologies where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems
We show how they can be used in practice to identify queries where applications can exploit highly scalable incomplete query answering systems while enjoying completeness guarantees normally available only when using computationally intensive reasoning systems