s14	"triples using a modest hardware configuration"
s14	"triples using a modest hardware configuration"	rdf:subject	"triple"
s14	"triples using a modest hardware configuration"	rdf:predicate	"use"
s14	"triples using a modest hardware configuration"	rdf:object	"modest hardware configuration"
s14	"modest hardware configuration"	rdfs:member	"modest hardware"
s14	"modest hardware"	rdfs:member	"modest"
s14	"modest hardware configuration"	rdfs:subClassOf	"configuration"
s14	"modest hardware"	rdfs:subClassOf	"hardware"
s14	"hardware configuration"	rdfs:subClassOf	"configuration"
s14	"hardware configuration"	rdfs:member	"hardware"
s14	"modest hardware configuration"	rdfs:subClassOf	"hardware configuration"
s13.3	"we inference engine performing efficient inference over ontologies with billions of triples"
s13.3	"we inference engine performing efficient inference over ontologies with billions of triples"	rdf:subject	"inference engine"
s13.3	"inference engine"	rdfs:subClassOf	"engine"
s13.3	"inference engine"	rdfs:member	"inference"
s13.3	"we inference engine performing efficient inference over ontologies with billions of triples"	rdf:predicate	"perform"
s13.3	"we inference engine performing efficient inference over ontologies with billions of triples"	rdf:object	"efficient inference"
s13.3	"efficient inference"	rdfs:member	"efficient"
s13.3	"efficient inference"	rdfs:subClassOf	"inference"
s13.3	"we inference engine performing efficient inference over ontologies with billions of triples"	local:AM-LOC	"ontology with billion of triple"
s13.3	"ontology with billion of triple"	rdfs:member	"ontology"
s13.3	"ontology with billion of triple"	rdfs:member	"triple"
s13.3	"ontology with billion"	rdfs:member	"ontology"
s13.3	"ontology with billion"	rdfs:member	"billion"
s13.3	"billion of triple"	rdfs:member	"billion"
s13.3	"billion of triple"	rdfs:member	"triple"
s13.2	"these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"
s13.2	"these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:subject	"test result"
s13.2	"test result"	rdfs:member	"test"
s13.2	"test result"	rdfs:subClassOf	"result"
s13.2	"these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:predicate	"demonstrate"
s13.2	"these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:object	"inference engine be capable of perform efficient inference over ontology with billion of triple"
s13.2	"inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"perform"
s13.2	"inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"ontology"
s13.2	"inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"efficient inference"
s13.2	"inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"inference engine"
s13.2	"inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"triple"
s13.2	"efficient inference"	rdfs:member	"efficient"
s13.2	"efficient inference"	rdfs:subClassOf	"inference"
s13.2	"inference engine"	rdfs:member	"inference"
s13.2	"inference engine"	rdfs:subClassOf	"engine"
s13.2	"perform over ontology"	rdfs:member	"perform"
s13.2	"perform over ontology"	rdfs:member	"ontology"
s13.2	"ontology with billion"	rdfs:member	"ontology"
s13.2	"ontology with billion"	rdfs:member	"billion"
s13.2	"billion of triple"	rdfs:member	"billion"
s13.2	"billion of triple"	rdfs:member	"triple"
s13.1	"we evaluate these new techniques the test results"
s13.1	"we evaluate these new techniques the test results"	rdf:subject	"test result"
s13.1	"test result"	rdfs:member	"test"
s13.1	"test result"	rdfs:subClassOf	"result"
s13.1	"we evaluate these new techniques the test results"	rdf:predicate	"evaluate"
s13.1	"we evaluate these new techniques the test results"	rdf:object	"new technique"
s13.1	"new technique"	rdfs:subClassOf	"technique"
s13.1	"new technique"	rdfs:member	"new"
s13	"we done extensive testing to evaluate these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"
s13	"we done extensive testing to evaluate these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:subject	"we"
s13	"we done extensive testing to evaluate these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:predicate	"do"
s13	"we done extensive testing to evaluate these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	rdf:object	"extensive test"
s13	"extensive test"	rdfs:member	"extensive"
s13	"extensive test"	rdfs:subClassOf	"test"
s13	"we done extensive testing to evaluate these new techniques the test results demonstrate that we inference engine is capable of performing efficient inference over ontologies with billions of triples"	local:AM-PNC	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"perform"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"ontology"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"engine"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"new technique"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"efficient inference"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"test result demonstrate"
s13	"evaluate these new technique the test result demonstrate that we inference engine be capable of perform efficient inference over ontology with billion of triple"	rdfs:member	"triple"
s13	"efficient inference"	rdfs:member	"efficient"
s13	"result demonstrate"	rdfs:subClassOf	"demonstrate"
s13	"test result"	rdfs:member	"test"
s13	"new technique"	rdfs:subClassOf	"technique"
s13	"test result demonstrate"	rdfs:member	"test result"
s13	"efficient inference"	rdfs:subClassOf	"inference"
s13	"test result demonstrate"	rdfs:subClassOf	"demonstrate"
s13	"new technique"	rdfs:member	"new"
s13	"result demonstrate"	rdfs:member	"result"
s13	"test result"	rdfs:subClassOf	"result"
s13	"perform over ontology"	rdfs:member	"perform"
s13	"perform over ontology"	rdfs:member	"ontology"
s13	"ontology with billion"	rdfs:member	"ontology"
s13	"ontology with billion"	rdfs:member	"billion"
s13	"billion of triple"	rdfs:member	"billion"
s13	"billion of triple"	rdfs:member	"triple"
s12.2	"finally to handle the increasing number of owl we provided a hybrid inmemorydisk"
s12.2	"finally to handle the increasing number of owl we provided a hybrid inmemorydisk"	rdf:subject	"we"
s12.2	"finally to handle the increasing number of owl we provided a hybrid inmemorydisk"	rdf:predicate	"provide"
s12.2	"finally to handle the increasing number of owl we provided a hybrid inmemorydisk"	rdf:object	"hybrid inmemorydisk"
s12.2	"hybrid inmemorydisk"	rdfs:member	"hybrid"
s12.2	"hybrid inmemorydisk"	rdfs:subClassOf	"inmemorydisk"
s12.2	"finally to handle the increasing number of owl we provided a hybrid inmemorydisk"	local:AM-PNC	"finally to handle the increase number of owl"
s12.2	"finally to handle the increase number of owl"	rdfs:member	"increase number"
s12.2	"finally to handle the increase number of owl"	rdfs:member	"owl"
s12.2	"increase number"	rdfs:member	"increase"
s12.2	"increase number"	rdfs:subClassOf	"number"
s12.2	"finally handle"	rdfs:subClassOf	"handle"
s12.2	"increase number of owl"	rdfs:member	"increase number"
s12.2	"increase number of owl"	rdfs:member	"owl"
s12.1	"increasing number"
s12.1	"increasing number"	rdf:subject	"number"
s12.1	"increasing number"	rdf:predicate	"increase"
s12	"handle the increasing number of owl we"
s12	"handle the increasing number of owl we"	rdf:subject	"we"
s12	"handle the increasing number of owl we"	rdf:predicate	"handle"
s12	"handle the increasing number of owl we"	rdf:object	"increase number of owl"
s12	"increase number of owl"	rdfs:member	"increase number"
s12	"increase number of owl"	rdfs:member	"owl"
s12	"increase number"	rdfs:member	"increase"
s12	"increase number"	rdfs:subClassOf	"number"
s12	"increase number of owl"	rdfs:member	"increase number"
s12	"increase number of owl"	rdfs:member	"owl"
s11.1	"finally to handle sameas relationships present in semantic web datasets we provided a hybrid inmemorydisk"
s11.1	"finally to handle sameas relationships present in semantic web datasets we provided a hybrid inmemorydisk"	rdf:subject	"we"
s11.1	"finally to handle sameas relationships present in semantic web datasets we provided a hybrid inmemorydisk"	rdf:predicate	"provide"
s11.1	"finally to handle sameas relationships present in semantic web datasets we provided a hybrid inmemorydisk"	rdf:object	"hybrid inmemorydisk"
s11.1	"hybrid inmemorydisk"	rdfs:member	"hybrid"
s11.1	"hybrid inmemorydisk"	rdfs:subClassOf	"inmemorydisk"
s11.1	"finally to handle sameas relationships present in semantic web datasets we provided a hybrid inmemorydisk"	local:AM-PNC	"finally to handle sameas relationship present in semantic web datasets"
s11.1	"finally to handle sameas relationship present in semantic web datasets"	rdfs:member	"sameas relationship present"
s11.1	"finally to handle sameas relationship present in semantic web datasets"	rdfs:member	"semantic web datasets"
s11.1	"web datasets"	rdfs:subClassOf	"datasets"
s11.1	"sameas relationship"	rdfs:subClassOf	"relationship"
s11.1	"semantic web"	rdfs:member	"semantic"
s11.1	"relationship present"	rdfs:subClassOf	"present"
s11.1	"semantic web datasets"	rdfs:member	"semantic web"
s11.1	"semantic web"	rdfs:subClassOf	"web"
s11.1	"relationship present"	rdfs:member	"relationship"
s11.1	"web datasets"	rdfs:member	"web"
s11.1	"semantic web datasets"	rdfs:subClassOf	"datasets"
s11.1	"sameas relationship present"	rdfs:member	"sameas relationship"
s11.1	"sameas relationship"	rdfs:member	"sameas"
s11.1	"sameas relationship present"	rdfs:subClassOf	"present"
s11.1	"semantic web datasets"	rdfs:subClassOf	"web datasets"
s11.1	"present relationship"	rdfs:subClassOf	"relationship"
s11.1	"sameas present relationship"	rdfs:subClassOf	"present relationship"
s11.1	"finally handle"	rdfs:subClassOf	"handle"
s11.1	"present in semantic web datasets"	rdfs:member	"present"
s11.1	"present in semantic web datasets"	rdfs:member	"semantic web datasets"
s11	"handle sameas relationships present in semantic web datasets we have provided a hybrid inmemorydisk"
s11	"handle sameas relationships present in semantic web datasets we have provided a hybrid inmemorydisk"	rdf:subject	"sameas relationship present in semantic web datasets we have provide a hybrid inmemorydisk"
s11	"sameas relationship present in semantic web datasets we have provide a hybrid inmemorydisk"	rdfs:member	"sameas relationship present"
s11	"sameas relationship present in semantic web datasets we have provide a hybrid inmemorydisk"	rdfs:member	"semantic web datasets"
s11	"sameas relationship present in semantic web datasets we have provide a hybrid inmemorydisk"	rdfs:member	"hybrid inmemorydisk"
s11	"web datasets"	rdfs:subClassOf	"datasets"
s11	"sameas relationship"	rdfs:subClassOf	"relationship"
s11	"semantic web"	rdfs:member	"semantic"
s11	"hybrid inmemorydisk"	rdfs:member	"hybrid"
s11	"relationship present"	rdfs:subClassOf	"present"
s11	"semantic web datasets"	rdfs:member	"semantic web"
s11	"semantic web"	rdfs:subClassOf	"web"
s11	"relationship present"	rdfs:member	"relationship"
s11	"web datasets"	rdfs:member	"web"
s11	"semantic web datasets"	rdfs:subClassOf	"datasets"
s11	"sameas relationship present"	rdfs:member	"sameas relationship"
s11	"sameas relationship"	rdfs:member	"sameas"
s11	"hybrid inmemorydisk"	rdfs:subClassOf	"inmemorydisk"
s11	"sameas relationship present"	rdfs:subClassOf	"present"
s11	"have provide"	rdfs:subClassOf	"provide"
s11	"present relationship"	rdfs:subClassOf	"relationship"
s11	"sameas present relationship"	rdfs:subClassOf	"present relationship"
s11	"present in semantic web"	rdfs:member	"present"
s11	"present in semantic web"	rdfs:member	"semantic web"
s11	"handle sameas relationships present in semantic web datasets we have provided a hybrid inmemorydisk"	rdf:predicate	"handle"
s10.1	"a hybrid inmemorydisk efficiently compute compact equivalence closures"
s10.1	"a hybrid inmemorydisk efficiently compute compact equivalence closures"	rdf:subject	"hybrid inmemorydisk"
s10.1	"hybrid inmemorydisk"	rdfs:member	"hybrid"
s10.1	"hybrid inmemorydisk"	rdfs:subClassOf	"inmemorydisk"
s10.1	"a hybrid inmemorydisk efficiently compute compact equivalence closures"	rdf:predicate	"compute"
s10.1	"a hybrid inmemorydisk efficiently compute compact equivalence closures"	rdf:object	"compact equivalence closure"
s10.1	"compact equivalence closure"	rdfs:member	"compact equivalence"
s10.1	"equivalence closure"	rdfs:subClassOf	"closure"
s10.1	"compact equivalence"	rdfs:subClassOf	"equivalence"
s10.1	"equivalence closure"	rdfs:member	"equivalence"
s10.1	"compact equivalence"	rdfs:member	"compact"
s10.1	"compact equivalence closure"	rdfs:subClassOf	"closure"
s10.1	"compact equivalence closure"	rdfs:subClassOf	"equivalence closure"
s10.1	"a hybrid inmemorydisk efficiently compute compact equivalence closures"	local:AM-MNR	"efficiently"
s10	"a hybrid inmemorydisk based approach"
s10	"a hybrid inmemorydisk based approach"	rdf:subject	"hybrid inmemorydisk"
s10	"hybrid inmemorydisk"	rdfs:member	"hybrid"
s10	"hybrid inmemorydisk"	rdfs:subClassOf	"inmemorydisk"
s10	"a hybrid inmemorydisk based approach"	rdf:predicate	"base"
s10	"a hybrid inmemorydisk based approach"	rdf:object	"approach"
s9.1	"inferred graph"
s9.1	"inferred graph"	rdf:subject	"graph"
s9.1	"inferred graph"	rdf:predicate	"infer"
s9	"additionally we added support for efficient incremental maintenance of the inferred graph after triple additions"
s9	"additionally we added support for efficient incremental maintenance of the inferred graph after triple additions"	rdf:subject	"we"
s9	"additionally we added support for efficient incremental maintenance of the inferred graph after triple additions"	rdf:predicate	"add"
s9	"additionally we added support for efficient incremental maintenance of the inferred graph after triple additions"	rdf:object	"support for efficient incremental maintenance of the infer graph after triple addition"
s9	"support for efficient incremental maintenance of the infer graph after triple addition"	rdfs:member	"support"
s9	"support for efficient incremental maintenance of the infer graph after triple addition"	rdfs:member	"efficient incremental maintenance"
s9	"support for efficient incremental maintenance of the infer graph after triple addition"	rdfs:member	"triple addition"
s9	"support for efficient incremental maintenance of the infer graph after triple addition"	rdfs:member	"infer graph"
s9	"efficient incremental"	rdfs:member	"efficient"
s9	"efficient incremental maintenance"	rdfs:member	"efficient incremental"
s9	"infer graph"	rdfs:member	"infer"
s9	"incremental maintenance"	rdfs:member	"incremental"
s9	"incremental maintenance"	rdfs:subClassOf	"maintenance"
s9	"triple addition"	rdfs:member	"triple"
s9	"triple addition"	rdfs:subClassOf	"addition"
s9	"efficient incremental"	rdfs:subClassOf	"incremental"
s9	"efficient incremental maintenance"	rdfs:subClassOf	"maintenance"
s9	"infer graph"	rdfs:subClassOf	"graph"
s9	"efficient incremental maintenance"	rdfs:subClassOf	"incremental maintenance"
s9	"support for efficient incremental maintenance"	rdfs:member	"support"
s9	"support for efficient incremental maintenance"	rdfs:member	"efficient incremental maintenance"
s9	"efficient incremental maintenance of infer graph"	rdfs:member	"efficient incremental maintenance"
s9	"efficient incremental maintenance of infer graph"	rdfs:member	"infer graph"
s9	"support for efficient incremental maintenance after triple addition"	rdfs:member	"support for efficient incremental maintenance"
s9	"support for efficient incremental maintenance after triple addition"	rdfs:member	"triple addition"
s9	"additionally we added support for efficient incremental maintenance of the inferred graph after triple additions"	local:AM-DIS	"additionally"
s8	"parallel processing that can readily scale on multicore machines and clusters"
s8	"parallel processing that can readily scale on multicore machines and clusters"	rdf:subject	"parallel process"
s8	"parallel process"	rdfs:subClassOf	"process"
s8	"parallel process"	rdfs:member	"parallel"
s8	"parallel processing that can readily scale on multicore machines and clusters"	rdf:predicate	"scale"
s8	"parallel processing that can readily scale on multicore machines and clusters"	local:AM-MNR	"readily"
s8	"parallel processing that can readily scale on multicore machines and clusters"	local:AM-MNR	"multicore machine and cluster"
s8	"multicore machine and cluster"	rdfs:member	"cluster"
s8	"multicore machine and cluster"	rdfs:member	"multicore machine"
s8	"multicore machine"	rdfs:subClassOf	"machine"
s8	"multicore machine"	rdfs:member	"multicore"
s8	"parallel processing that can readily scale on multicore machines and clusters"	local:AM-MOD	"can"
s7.2	"the oracle database system using novel techniques for parallel processing"
s7.2	"the oracle database system using novel techniques for parallel processing"	rdf:subject	"oracle database system"
s7.2	"oracle database"	rdfs:subClassOf	"database"
s7.2	"oracle database"	rdfs:member	"oracle"
s7.2	"oracle database system"	rdfs:member	"oracle database"
s7.2	"database system"	rdfs:subClassOf	"system"
s7.2	"oracle database system"	rdfs:subClassOf	"system"
s7.2	"database system"	rdfs:member	"database"
s7.2	"oracle database system"	rdfs:subClassOf	"database system"
s7.2	"the oracle database system using novel techniques for parallel processing"	rdf:predicate	"use"
s7.2	"the oracle database system using novel techniques for parallel processing"	rdf:object	"novel technique parallel process"
s7.2	"novel technique parallel process"	rdfs:member	"novel technique"
s7.2	"novel technique parallel process"	rdfs:member	"parallel process"
s7.2	"novel technique"	rdfs:member	"novel"
s7.2	"novel technique"	rdfs:subClassOf	"technique"
s7.2	"parallel process"	rdfs:subClassOf	"process"
s7.2	"parallel process"	rdfs:member	"parallel"
s7.2	"technique parallel process"	rdfs:subClassOf	"parallel process"
s7.2	"novel technique parallel process"	rdfs:subClassOf	"technique parallel process"
s7.1	"in this paper an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"
s7.1	"in this paper an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	rdf:subject	"owl 2 rl inference engine"
s7.1	"rl inference"	rdfs:subClassOf	"inference"
s7.1	"rl inference engine"	rdfs:subClassOf	"engine"
s7.1	"inference engine"	rdfs:member	"inference"
s7.1	"inference engine"	rdfs:subClassOf	"engine"
s7.1	"rl inference engine"	rdfs:member	"rl inference"
s7.1	"rl inference"	rdfs:member	"rl"
s7.1	"rl inference engine"	rdfs:subClassOf	"inference engine"
s7.1	"2 rl inference engine"	rdfs:subClassOf	"rl inference engine"
s7.1	"owl 2 rl inference engine"	rdfs:subClassOf	"2 rl inference engine"
s7.1	"in this paper an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	rdf:predicate	"implement"
s7.1	"in this paper an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	local:AM-LOC	"paper"
s7.1	"in this paper an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	local:AM-LOC	"inside the oracle database system use novel technique for parallel process"
s7.1	"inside the oracle database system use novel technique for parallel process"	rdfs:member	"novel technique"
s7.1	"inside the oracle database system use novel technique for parallel process"	rdfs:member	"parallel process"
s7.1	"inside the oracle database system use novel technique for parallel process"	rdfs:member	"oracle database system"
s7.1	"novel technique"	rdfs:member	"novel"
s7.1	"oracle database"	rdfs:subClassOf	"database"
s7.1	"oracle database"	rdfs:member	"oracle"
s7.1	"oracle database system"	rdfs:member	"oracle database"
s7.1	"novel technique"	rdfs:subClassOf	"technique"
s7.1	"database system"	rdfs:subClassOf	"system"
s7.1	"oracle database system"	rdfs:subClassOf	"system"
s7.1	"database system"	rdfs:member	"database"
s7.1	"parallel process"	rdfs:member	"parallel"
s7.1	"parallel process"	rdfs:subClassOf	"process"
s7.1	"use novel technique"	rdfs:subClassOf	"novel technique"
s7.1	"system use novel technique"	rdfs:subClassOf	"use novel technique"
s7.1	"database system use novel technique"	rdfs:subClassOf	"system use novel technique"
s7.1	"oracle database system use novel technique"	rdfs:subClassOf	"database system use novel technique"
s7.1	"oracle database system use novel technique for parallel process"	rdfs:member	"oracle database system use novel technique"
s7.1	"oracle database system use novel technique for parallel process"	rdfs:member	"parallel process"
s7	"in this paper we present an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"
s7	"in this paper we present an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	rdf:subject	"we"
s7	"in this paper we present an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	rdf:predicate	"present"
s7	"in this paper we present an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	rdf:object	"owl 2 rl inference engine implement inside the oracle database system use novel technique for parallel process"
s7	"owl 2 rl inference engine implement inside the oracle database system use novel technique for parallel process"	rdfs:member	"novel technique"
s7	"owl 2 rl inference engine implement inside the oracle database system use novel technique for parallel process"	rdfs:member	"parallel process"
s7	"owl 2 rl inference engine implement inside the oracle database system use novel technique for parallel process"	rdfs:member	"oracle database system"
s7	"owl 2 rl inference engine implement inside the oracle database system use novel technique for parallel process"	rdfs:member	"rl inference engine implement"
s7	"inference engine implement"	rdfs:subClassOf	"implement"
s7	"oracle database"	rdfs:member	"oracle"
s7	"oracle database system"	rdfs:member	"oracle database"
s7	"inference engine implement"	rdfs:member	"inference engine"
s7	"novel technique"	rdfs:subClassOf	"technique"
s7	"oracle database system"	rdfs:subClassOf	"system"
s7	"database system"	rdfs:member	"database"
s7	"rl inference engine implement"	rdfs:subClassOf	"implement"
s7	"inference engine"	rdfs:member	"inference"
s7	"engine implement"	rdfs:subClassOf	"implement"
s7	"engine implement"	rdfs:member	"engine"
s7	"parallel process"	rdfs:subClassOf	"process"
s7	"novel technique"	rdfs:member	"novel"
s7	"rl inference engine implement"	rdfs:member	"rl inference engine"
s7	"oracle database"	rdfs:subClassOf	"database"
s7	"database system"	rdfs:subClassOf	"system"
s7	"parallel process"	rdfs:member	"parallel"
s7	"rl inference engine"	rdfs:member	"rl inference"
s7	"rl inference"	rdfs:member	"rl"
s7	"rl inference"	rdfs:subClassOf	"inference"
s7	"rl inference engine"	rdfs:subClassOf	"engine"
s7	"inference engine"	rdfs:subClassOf	"engine"
s7	"use novel technique"	rdfs:subClassOf	"novel technique"
s7	"system use novel technique"	rdfs:subClassOf	"use novel technique"
s7	"database system use novel technique"	rdfs:subClassOf	"system use novel technique"
s7	"oracle database system use novel technique"	rdfs:subClassOf	"database system use novel technique"
s7	"rl inference engine"	rdfs:subClassOf	"inference engine"
s7	"2 rl inference engine"	rdfs:subClassOf	"rl inference engine"
s7	"owl 2 rl inference engine"	rdfs:subClassOf	"2 rl inference engine"
s7	"implement inside oracle database system use novel technique"	rdfs:member	"implement"
s7	"implement inside oracle database system use novel technique"	rdfs:member	"oracle database system use novel technique"
s7	"implement inside oracle database system use novel technique for parallel process"	rdfs:member	"implement inside oracle database system use novel technique"
s7	"implement inside oracle database system use novel technique for parallel process"	rdfs:member	"parallel process"
s7	"in this paper we present an owl 2 rl inference engine implemented inside the oracle database system using novel techniques for parallel processing"	local:AM-LOC	"paper"
s6.1	"an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"
s6.1	"an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"	rdf:subject	"enterprisescale forwardchaining that can 1"
s6.1	"enterprisescale forwardchaining"	rdfs:subClassOf	"forwardchaining"
s6.1	"enterprisescale forwardchaining"	rdfs:member	"enterprisescale"
s6.1	"can 1"	rdfs:subClassOf	"1"
s6.1	"an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"	rdf:predicate	"take"
s6.1	"an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"	rdf:object	"advantage modern multicore computer architecture"
s6.1	"advantage modern multicore computer architecture"	rdfs:member	"multicore computer architecture"
s6.1	"advantage modern multicore computer architecture"	rdfs:member	"advantage"
s6.1	"multicore computer architecture"	rdfs:subClassOf	"architecture"
s6.1	"computer architecture"	rdfs:subClassOf	"architecture"
s6.1	"multicore computer"	rdfs:subClassOf	"computer"
s6.1	"computer architecture"	rdfs:member	"computer"
s6.1	"multicore computer architecture"	rdfs:member	"multicore computer"
s6.1	"multicore computer"	rdfs:member	"multicore"
s6.1	"multicore computer architecture"	rdfs:subClassOf	"computer architecture"
s6.1	"modern multicore computer architecture"	rdfs:subClassOf	"multicore computer architecture"
s6.1	"advantage modern multicore computer architecture"	rdfs:subClassOf	"modern multicore computer architecture"
s6	"building an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"
s6	"building an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"	rdf:subject	"enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architecture"
s6	"enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architecture"	rdfs:member	"enterprisescale forwardchaining"
s6	"enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architecture"	rdfs:member	"modern multicore computer architecture"
s6	"enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architecture"	rdfs:member	"advantage"
s6	"multicore computer architecture"	rdfs:subClassOf	"architecture"
s6	"modern multicore computer architecture"	rdfs:member	"modern multicore computer"
s6	"enterprisescale forwardchaining"	rdfs:member	"enterprisescale"
s6	"modern multicore computer"	rdfs:subClassOf	"computer"
s6	"modern multicore computer architecture"	rdfs:subClassOf	"architecture"
s6	"enterprisescale forwardchaining"	rdfs:subClassOf	"forwardchaining"
s6	"computer architecture"	rdfs:subClassOf	"architecture"
s6	"multicore computer"	rdfs:subClassOf	"computer"
s6	"computer architecture"	rdfs:member	"computer"
s6	"modern multicore"	rdfs:member	"modern"
s6	"modern multicore"	rdfs:subClassOf	"multicore"
s6	"multicore computer architecture"	rdfs:member	"multicore computer"
s6	"multicore computer"	rdfs:member	"multicore"
s6	"modern multicore computer"	rdfs:member	"modern multicore"
s6	"multicore computer architecture"	rdfs:subClassOf	"computer architecture"
s6	"modern multicore computer architecture"	rdfs:subClassOf	"multicore computer architecture"
s6	"can take"	rdfs:subClassOf	"take"
s6	"advantage of modern multicore computer architecture"	rdfs:member	"advantage"
s6	"advantage of modern multicore computer architecture"	rdfs:member	"modern multicore computer architecture"
s6	"building an enterprisescale forwardchaining that can 1 take advantage of modern multicore computer architectures"	rdf:predicate	"build"
s4	"based inference engine"
s4	"based inference engine"	rdf:subject	"inference engine"
s4	"inference engine"	rdfs:subClassOf	"engine"
s4	"inference engine"	rdfs:member	"inference"
s4	"based inference engine"	rdf:predicate	"base"
s3.1	"2 efficiently update inference for additions remains a challenge"
s3.1	"2 efficiently update inference for additions remains a challenge"	rdf:subject	"2 efficiently update inference for addition"
s3.1	"2 efficiently update inference for addition"	rdfs:member	"efficiently update inference"
s3.1	"2 efficiently update inference for addition"	rdfs:member	"addition"
s3.1	"efficiently update"	rdfs:subClassOf	"update"
s3.1	"efficiently update"	rdfs:member	"efficiently"
s3.1	"efficiently update inference"	rdfs:member	"efficiently update"
s3.1	"update inference"	rdfs:subClassOf	"inference"
s3.1	"update inference"	rdfs:member	"update"
s3.1	"efficiently update inference"	rdfs:subClassOf	"inference"
s3.1	"efficiently update for addition"	rdfs:member	"efficiently update"
s3.1	"efficiently update for addition"	rdfs:member	"addition"
s3.1	"2 efficiently update inference for additions remains a challenge"	rdf:predicate	"remain"
s3.1	"2 efficiently update inference for additions remains a challenge"	rdf:object	"challenge"
s3	"2 efficiently update inference for additions remains a challenge"
s3	"2 efficiently update inference for additions remains a challenge"	rdf:subject	"2"
s3	"2 efficiently update inference for additions remains a challenge"	rdf:predicate	"update"
s3	"2 efficiently update inference for additions remains a challenge"	rdf:object	"inference for addition remain a challenge"
s3	"inference for addition remain a challenge"	rdfs:member	"addition"
s3	"inference for addition remain a challenge"	rdfs:member	"challenge"
s3	"inference for addition remain a challenge"	rdfs:member	"inference"
s3	"inference for addition"	rdfs:member	"inference"
s3	"inference for addition"	rdfs:member	"addition"
s3	"2 efficiently update inference for additions remains a challenge"	local:AM-MNR	"efficiently"
s2	"owl 2 that allows a forwardchaining implementation"
s2	"owl 2 that allows a forwardchaining implementation"	rdf:subject	"owl 2"
s2	"2 owl"	rdfs:subClassOf	"owl"
s2	"owl 2 that allows a forwardchaining implementation"	rdf:predicate	"allow"
s2	"owl 2 that allows a forwardchaining implementation"	rdf:object	"forwardchaining implementation"
s1	"owl 2 rl standardized as a less scalable subset of owl 2"
s1	"owl 2 rl standardized as a less scalable subset of owl 2"	rdf:subject	"owl 2 rl"
s1	"2 rl"	rdfs:subClassOf	"rl"
s1	"owl 2 rl"	rdfs:subClassOf	"2 rl"
s1	"owl 2 rl standardized as a less scalable subset of owl 2"	rdf:predicate	"standardize"
s1	"owl 2 rl standardized as a less scalable subset of owl 2"	local:AM-MNR	"le scalable subset of owl 2"
s1	"le scalable subset of owl 2"	rdfs:member	"scalable subset"
s1	"le scalable subset of owl 2"	rdfs:member	"le"
s1	"le scalable subset of owl 2"	rdfs:member	"owl"
s1	"scalable subset"	rdfs:member	"scalable"
s1	"scalable subset"	rdfs:subClassOf	"subset"
s1	"2 owl"	rdfs:subClassOf	"owl"
s1	"scalable subset of 2 owl"	rdfs:member	"scalable subset"
s1	"scalable subset of 2 owl"	rdfs:member	"2 owl"
s0	"owl 2 rl standardized as a less expressive subset of owl 2"
s0	"owl 2 rl standardized as a less expressive subset of owl 2"	rdf:subject	"owl 2 rl"
s0	"2 rl"	rdfs:subClassOf	"rl"
s0	"owl 2 rl"	rdfs:subClassOf	"2 rl"
s0	"owl 2 rl standardized as a less expressive subset of owl 2"	rdf:predicate	"standardize"
s0	"owl 2 rl standardized as a less expressive subset of owl 2"	local:AM-MNR	"le expressive subset of owl 2"
s0	"le expressive subset of owl 2"	rdfs:member	"le expressive subset"
s0	"le expressive subset of owl 2"	rdfs:member	"owl"
s0	"expressive subset"	rdfs:member	"expressive"
s0	"le expressive subset"	rdfs:subClassOf	"subset"
s0	"le expressive"	rdfs:subClassOf	"expressive"
s0	"expressive subset"	rdfs:subClassOf	"subset"
s0	"le expressive subset"	rdfs:member	"le expressive"
s0	"le expressive"	rdfs:member	"le"
s0	"2 owl"	rdfs:subClassOf	"owl"
s0	"expressive subset of 2 owl"	rdfs:member	"expressive subset"
s0	"expressive subset of 2 owl"	rdfs:member	"2 owl"
