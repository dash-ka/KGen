s12.1	"ranked order"
s12.1	"ranked order"	rdf:predicate	"rank"
s12.1	"ranked order"	rdf:object	"order"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:subject	"incremental query evaluation algorithm"
s12	"incremental query evaluation"	rdfs:member	"incremental query"
s12	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s12	"query evaluation"	rdfs:subClassOf	"evaluation"
s12	"evaluation algorithm"	rdfs:member	"evaluation"
s12	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s12	"incremental query"	rdfs:member	"incremental"
s12	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"query evaluation algorithm"	rdfs:member	"query evaluation"
s12	"incremental query"	rdfs:subClassOf	"query"
s12	"query evaluation"	rdfs:member	"query"
s12	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s12	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:predicate	"run"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:object	"users"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	local:AM-LOC	"ranked order"
s12	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	local:AM-TMP	"polynomial time"
s12	"polynomial time"	rdfs:subClassOf	"time"
s12	"polynomial time"	rdfs:member	"polynomial"
s11	"we provide an incremental query evaluation algorithm"
s11	"we provide an incremental query evaluation algorithm"	rdf:subject	"We"
s11	"we provide an incremental query evaluation algorithm"	rdf:predicate	"provide"
s11	"we provide an incremental query evaluation algorithm"	rdf:object	"incremental query evaluation algorithm"
s11	"incremental query evaluation"	rdfs:member	"incremental query"
s11	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s11	"query evaluation"	rdfs:subClassOf	"evaluation"
s11	"evaluation algorithm"	rdfs:member	"evaluation"
s11	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s11	"incremental query"	rdfs:member	"incremental"
s11	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"query evaluation algorithm"	rdfs:member	"query evaluation"
s11	"incremental query"	rdfs:subClassOf	"query"
s11	"query evaluation"	rdfs:member	"query"
s11	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s11	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s10.1	"ranked order"
s10.1	"ranked order"	rdf:predicate	"rank"
s10.1	"ranked order"	rdf:object	"order"
s10	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"
s10	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	rdf:subject	"incremental query evaluation algorithm"
s10	"incremental query evaluation"	rdfs:member	"incremental query"
s10	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s10	"query evaluation"	rdfs:subClassOf	"evaluation"
s10	"evaluation algorithm"	rdfs:member	"evaluation"
s10	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s10	"incremental query"	rdfs:member	"incremental"
s10	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"query evaluation algorithm"	rdfs:member	"query evaluation"
s10	"incremental query"	rdfs:subClassOf	"query"
s10	"query evaluation"	rdfs:member	"query"
s10	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s10	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s10	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	rdf:predicate	"run"
s10	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	local:AM-LOC	"returns answers to the users in ranked order"
s10	"returns answers to the users in ranked order"	rdfs:member	"users"
s10	"returns answers to the users in ranked order"	rdfs:member	"ranked order"
s10	"returns answers to the users in ranked order"	rdfs:member	"returns answers"
s10	"returns answers"	rdfs:member	"returns"
s10	"ranked order"	rdfs:member	"ranked"
s10	"returns answers"	rdfs:subClassOf	"answers"
s10	"ranked order"	rdfs:subClassOf	"order"
s10	"answers to users"	rdfs:member	"answers"
s10	"answers to users"	rdfs:member	"users"
s10	"answers to users in ranked order"	rdfs:member	"answers to users"
s10	"answers to users in ranked order"	rdfs:member	"ranked order"
s9.2	"the query language we adopt comprises conjunctions of regular path queries thus including extensions"
s9.2	"the query language we adopt comprises conjunctions of regular path queries thus including extensions"	rdf:subject	"extensions"
s9.2	"the query language we adopt comprises conjunctions of regular path queries thus including extensions"	rdf:predicate	"include"
s9.2	"the query language we adopt comprises conjunctions of regular path queries thus including extensions"	rdf:object	"query language we adopt comprises conjunctions of regular path queries"
s9.2	"query language we adopt comprises conjunctions of regular path queries"	rdfs:member	"query language"
s9.2	"query language we adopt comprises conjunctions of regular path queries"	rdfs:member	"regular path queries"
s9.2	"query language we adopt comprises conjunctions of regular path queries"	rdfs:member	"comprises conjunctions"
s9.2	"regular path queries"	rdfs:member	"regular path"
s9.2	"comprises conjunctions"	rdfs:subClassOf	"conjunctions"
s9.2	"comprises conjunctions"	rdfs:member	"comprises"
s9.2	"path queries"	rdfs:subClassOf	"queries"
s9.2	"query language"	rdfs:member	"query"
s9.2	"regular path queries"	rdfs:subClassOf	"queries"
s9.2	"path queries"	rdfs:member	"path"
s9.2	"query language"	rdfs:subClassOf	"language"
s9.2	"regular path"	rdfs:subClassOf	"path"
s9.2	"regular path"	rdfs:member	"regular"
s9.2	"regular path queries"	rdfs:subClassOf	"path queries"
s9.2	"conjunctions of regular path queries"	rdfs:member	"conjunctions"
s9.2	"conjunctions of regular path queries"	rdfs:member	"regular path queries"
s9.2	"the query language we adopt comprises conjunctions of regular path queries thus including extensions"	local:AM-DIS	"thus"
s9.1	"the query language we comprises conjunctions of regular path queries thus including extensions"
s9.1	"the query language we comprises conjunctions of regular path queries thus including extensions"	rdf:subject	"query language"
s9.1	"query language"	rdfs:subClassOf	"language"
s9.1	"query language"	rdfs:member	"query"
s9.1	"the query language we comprises conjunctions of regular path queries thus including extensions"	rdf:predicate	"comprise"
s9.1	"the query language we comprises conjunctions of regular path queries thus including extensions"	rdf:object	"we conjunctions of regular path queries thus including extensions"
s9.1	"we conjunctions of regular path queries thus including extensions"	rdfs:member	"conjunctions"
s9.1	"we conjunctions of regular path queries thus including extensions"	rdfs:member	"extensions"
s9.1	"we conjunctions of regular path queries thus including extensions"	rdfs:member	"regular path queries"
s9.1	"regular path queries"	rdfs:member	"regular path"
s9.1	"path queries"	rdfs:subClassOf	"queries"
s9.1	"regular path queries"	rdfs:subClassOf	"queries"
s9.1	"path queries"	rdfs:member	"path"
s9.1	"regular path"	rdfs:subClassOf	"path"
s9.1	"regular path"	rdfs:member	"regular"
s9.1	"thus extensions"	rdfs:subClassOf	"extensions"
s9.1	"regular path queries"	rdfs:subClassOf	"path queries"
s9.1	"conjunctions of regular path queries"	rdfs:member	"conjunctions"
s9.1	"conjunctions of regular path queries"	rdfs:member	"regular path queries"
s9.1	"regular path queries including thus extensions"	rdfs:member	"regular path queries"
s9.1	"regular path queries including thus extensions"	rdfs:member	"thus extensions"
s9	"the query language we adopt"
s9	"the query language we adopt"	rdf:subject	"we"
s9	"the query language we adopt"	rdf:predicate	"adopt"
s9	"the query language we adopt"	rdf:object	"query language"
s9	"query language"	rdfs:subClassOf	"language"
s9	"query language"	rdfs:member	"query"
s8.1	"using regular expressions"
s8.1	"using regular expressions"	rdf:subject	"regular expressions"
s8.1	"regular expressions"	rdfs:member	"regular"
s8.1	"regular expressions"	rdfs:subClassOf	"expressions"
s8.1	"using regular expressions"	rdf:predicate	"use"
s8	"querying paths using regular expressions"
s8	"querying paths using regular expressions"	rdf:subject	"paths using regular expressions"
s8	"paths using regular expressions"	rdfs:member	"paths"
s8	"paths using regular expressions"	rdfs:member	"regular expressions"
s8	"regular expressions"	rdfs:member	"regular"
s8	"regular expressions"	rdfs:subClassOf	"expressions"
s8	"paths using"	rdfs:member	"paths"
s8	"paths using"	rdfs:member	"using"
s8	"querying paths using regular expressions"	rdf:predicate	"query"
s7.2	"sparql querying paths"
s7.2	"sparql querying paths"	rdf:subject	"SPARQL"
s7.2	"sparql querying paths"	rdf:predicate	"query"
s7.2	"sparql querying paths"	rdf:object	"paths"
s7.1	"sparql allow for querying paths"
s7.1	"sparql allow for querying paths"	rdf:subject	"SPARQL"
s7.1	"sparql allow for querying paths"	rdf:predicate	"allow"
s7.1	"sparql allow for querying paths"	rdf:object	"querying paths"
s7	"extensions proposed for sparql to allow for querying paths"
s7	"extensions proposed for sparql to allow for querying paths"	rdf:subject	"extensions"
s7	"extensions proposed for sparql to allow for querying paths"	rdf:predicate	"propose"
s7	"extensions proposed for sparql to allow for querying paths"	rdf:object	"SPARQL"
s7	"extensions proposed for sparql to allow for querying paths"	local:AM-PNC	"allow for querying paths"
s7	"allow for querying paths"	rdfs:member	"paths"
s7	"allow for querying paths"	rdfs:member	"allow"
s6	"based on rdfsbased inference rules"
s6	"based on rdfsbased inference rules"	rdf:predicate	"base"
s6	"based on rdfsbased inference rules"	local:AM-LOC	"RDFSbased inference rules"
s6	"inference rules"	rdfs:subClassOf	"rules"
s6	"inference rules"	rdfs:member	"inference"
s6	"rdfsbased inference rules"	rdfs:subClassOf	"inference rules"
s5	"based on edit distance"
s5	"based on edit distance"	rdf:predicate	"base"
s5	"based on edit distance"	local:AM-LOC	"edit distance"
s5	"edit distance"	rdfs:subClassOf	"distance"
s5	"edit distance"	rdfs:member	"edit"
s4	"our framework incorporates both standard notions of approximation"
s4	"our framework incorporates both standard notions of approximation"	rdf:subject	"framework"
s4	"our framework incorporates both standard notions of approximation"	rdf:predicate	"incorporate"
s4	"our framework incorporates both standard notions of approximation"	rdf:object	"standard notions of approximation"
s4	"standard notions of approximation"	rdfs:member	"standard notions"
s4	"standard notions of approximation"	rdfs:member	"approximation"
s4	"standard notions"	rdfs:member	"standard"
s4	"standard notions"	rdfs:subClassOf	"notions"
s4	"standard notions of approximation"	rdfs:member	"standard notions"
s4	"standard notions of approximation"	rdfs:member	"approximation"
s3.3	"how closely the users match the original query"
s3.3	"how closely the users match the original query"	rdf:subject	"users"
s3.3	"how closely the users match the original query"	rdf:predicate	"match"
s3.3	"how closely the users match the original query"	rdf:object	"original query"
s3.3	"original query"	rdfs:subClassOf	"query"
s3.3	"original query"	rdfs:member	"original"
s3.3	"how closely the users match the original query"	local:AM-MNR	"closely"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:subject	"querying system"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:predicate	"rank"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:object	"answers closely the users match the original query"
s3.2	"answers closely the users match the original query"	rdfs:member	"answers"
s3.2	"answers closely the users match the original query"	rdfs:member	"users"
s3.2	"answers closely the users match the original query"	rdfs:member	"original query"
s3.2	"original query"	rdfs:subClassOf	"query"
s3.2	"original query"	rdfs:member	"original"
s3.2	"closely users"	rdfs:subClassOf	"users"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	local:AM-MOD	"can"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	local:AM-MOD	"can"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:subject	"querying system"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:predicate	"perform"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:object	"approximate matching and relaxation of the users query"
s3.1	"approximate matching and relaxation of the users query"	rdfs:member	"approximate matching"
s3.1	"approximate matching and relaxation of the users query"	rdfs:member	"relaxation"
s3.1	"approximate matching and relaxation of the users query"	rdfs:member	"users"
s3.1	"approximate matching"	rdfs:member	"approximate"
s3.1	"approximate matching"	rdfs:subClassOf	"matching"
s3.1	"approximate matching of users"	rdfs:member	"approximate matching"
s3.1	"approximate matching of users"	rdfs:member	"users"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	local:AM-MOD	"can"
s3	"querying system"
s3	"querying system"	rdf:subject	"system"
s3	"querying system"	rdf:predicate	"query"
s2	"we develop query relaxation techniques for regular path queries"
s2	"we develop query relaxation techniques for regular path queries"	rdf:subject	"We"
s2	"we develop query relaxation techniques for regular path queries"	rdf:predicate	"develop"
s2	"we develop query relaxation techniques for regular path queries"	rdf:object	"query relaxation techniques for regular path queries"
s2	"query relaxation techniques for regular path queries"	rdfs:member	"query relaxation techniques"
s2	"query relaxation techniques for regular path queries"	rdfs:member	"regular path queries"
s2	"query relaxation"	rdfs:subClassOf	"relaxation"
s2	"regular path queries"	rdfs:member	"regular path"
s2	"query relaxation"	rdfs:member	"query"
s2	"path queries"	rdfs:subClassOf	"queries"
s2	"relaxation techniques"	rdfs:member	"relaxation"
s2	"query relaxation techniques"	rdfs:subClassOf	"techniques"
s2	"relaxation techniques"	rdfs:subClassOf	"techniques"
s2	"regular path queries"	rdfs:subClassOf	"queries"
s2	"query relaxation techniques"	rdfs:member	"query relaxation"
s2	"path queries"	rdfs:member	"path"
s2	"regular path"	rdfs:subClassOf	"path"
s2	"regular path"	rdfs:member	"regular"
s2	"regular path queries"	rdfs:subClassOf	"path queries"
s2	"query relaxation techniques"	rdfs:subClassOf	"relaxation techniques"
s2	"query relaxation techniques for regular path queries"	rdfs:member	"query relaxation techniques"
s2	"query relaxation techniques for regular path queries"	rdfs:member	"regular path queries"
s1.2	"the users lacks knowledge of the users full structure"
s1.2	"the users lacks knowledge of the users full structure"	rdf:subject	"users"
s1.2	"the users lacks knowledge of the users full structure"	rdf:predicate	"lack"
s1.2	"the users lacks knowledge of the users full structure"	rdf:object	"knowledge of the users full structure"
s1.2	"knowledge of the users full structure"	rdfs:member	"full structure"
s1.2	"knowledge of the users full structure"	rdfs:member	"users"
s1.2	"knowledge of the users full structure"	rdfs:member	"knowledge"
s1.2	"full structure"	rdfs:member	"full"
s1.2	"full structure"	rdfs:subClassOf	"structure"
s1.2	"knowledge of users"	rdfs:member	"knowledge"
s1.2	"knowledge of users"	rdfs:member	"users"
s1.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"
s1.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:subject	"We"
s1.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:predicate	"support"
s1.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:object	"flexible querying of RDF data"
s1.1	"flexible querying of rdf data"	rdfs:member	"rdf data"
s1.1	"flexible querying of rdf data"	rdfs:member	"flexible querying"
s1.1	"rdf data"	rdfs:member	"rdf"
s1.1	"flexible querying"	rdfs:subClassOf	"querying"
s1.1	"flexible querying"	rdfs:member	"flexible"
s1.1	"rdf data"	rdfs:subClassOf	"data"
s1.1	"flexible querying of rdf data"	rdfs:member	"flexible querying"
s1.1	"flexible querying of rdf data"	rdfs:member	"rdf data"
s1.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-TMP	"users lacks knowledge of the users full structure"
s1.1	"users lacks knowledge of the users full structure"	rdfs:member	"full structure"
s1.1	"users lacks knowledge of the users full structure"	rdfs:member	"users lacks knowledge"
s1.1	"users lacks knowledge of the users full structure"	rdfs:member	"users"
s1.1	"lacks knowledge"	rdfs:member	"lacks"
s1.1	"users lacks knowledge"	rdfs:member	"users lacks"
s1.1	"users lacks"	rdfs:subClassOf	"lacks"
s1.1	"users lacks knowledge"	rdfs:subClassOf	"knowledge"
s1.1	"full structure"	rdfs:member	"full"
s1.1	"lacks knowledge"	rdfs:subClassOf	"knowledge"
s1.1	"users lacks"	rdfs:member	"users"
s1.1	"full structure"	rdfs:subClassOf	"structure"
s1.1	"knowledge of users"	rdfs:member	"knowledge"
s1.1	"knowledge of users"	rdfs:member	"users"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:subject	"We"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:predicate	"combine"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:object	"regular path queries"
s1	"regular path queries"	rdfs:member	"regular path"
s1	"path queries"	rdfs:subClassOf	"queries"
s1	"regular path queries"	rdfs:subClassOf	"queries"
s1	"path queries"	rdfs:member	"path"
s1	"regular path"	rdfs:subClassOf	"path"
s1	"regular path"	rdfs:member	"regular"
s1	"regular path queries"	rdfs:subClassOf	"path queries"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-MNR	"query approximation"
s1	"query approximation"	rdfs:subClassOf	"approximation"
s1	"query approximation"	rdfs:member	"query"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-PNC	"order to support flexible querying of RDF data when the users lacks knowledge of the users full structure"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"rdf data"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"full structure"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"order"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"flexible querying"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"knowledge"
s1	"order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdfs:member	"users"
s1	"flexible querying"	rdfs:subClassOf	"querying"
s1	"full structure"	rdfs:member	"full"
s1	"rdf data"	rdfs:member	"rdf"
s1	"flexible querying"	rdfs:member	"flexible"
s1	"rdf data"	rdfs:subClassOf	"data"
s1	"full structure"	rdfs:subClassOf	"structure"
s1	"when lacks"	rdfs:subClassOf	"lacks"
s1	"flexible querying of rdf data"	rdfs:member	"flexible querying"
s1	"flexible querying of rdf data"	rdfs:member	"rdf data"
s1	"knowledge of users"	rdfs:member	"knowledge"
s1	"knowledge of users"	rdfs:member	"users"
s0.1	"we support flexible querying of rdf data where its full structure is irregular"
s0.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:subject	"We"
s0.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:predicate	"support"
s0.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:object	"flexible querying of RDF data where its full structure is irregular"
s0.1	"flexible querying of rdf data where its full structure is irregular"	rdfs:member	"rdf data"
s0.1	"flexible querying of rdf data where its full structure is irregular"	rdfs:member	"flexible querying"
s0.1	"flexible querying of rdf data where its full structure is irregular"	rdfs:member	"full structure"
s0.1	"flexible querying"	rdfs:subClassOf	"querying"
s0.1	"rdf data"	rdfs:subClassOf	"data"
s0.1	"full structure"	rdfs:member	"full"
s0.1	"rdf data"	rdfs:member	"rdf"
s0.1	"flexible querying"	rdfs:member	"flexible"
s0.1	"full structure"	rdfs:subClassOf	"structure"
s0.1	"its full structure"	rdfs:subClassOf	"full structure"
s0.1	"where irregular"	rdfs:subClassOf	"irregular"
s0.1	"flexible querying of rdf data"	rdfs:member	"flexible querying"
s0.1	"flexible querying of rdf data"	rdfs:member	"rdf data"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:subject	"We"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:predicate	"combine"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:object	"regular path queries"
s0	"regular path queries"	rdfs:member	"regular path"
s0	"path queries"	rdfs:subClassOf	"queries"
s0	"regular path queries"	rdfs:subClassOf	"queries"
s0	"path queries"	rdfs:member	"path"
s0	"regular path"	rdfs:subClassOf	"path"
s0	"regular path"	rdfs:member	"regular"
s0	"regular path queries"	rdfs:subClassOf	"path queries"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	local:AM-MNR	"query approximation"
s0	"query approximation"	rdfs:subClassOf	"approximation"
s0	"query approximation"	rdfs:member	"query"
s0	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	local:AM-PNC	"order to support flexible querying of RDF data where its full structure is irregular"
s0	"order to support flexible querying of rdf data where its full structure is irregular"	rdfs:member	"rdf data"
s0	"order to support flexible querying of rdf data where its full structure is irregular"	rdfs:member	"full structure"
s0	"order to support flexible querying of rdf data where its full structure is irregular"	rdfs:member	"order"
s0	"order to support flexible querying of rdf data where its full structure is irregular"	rdfs:member	"flexible querying"
s0	"flexible querying"	rdfs:subClassOf	"querying"
s0	"full structure"	rdfs:member	"full"
s0	"rdf data"	rdfs:member	"rdf"
s0	"flexible querying"	rdfs:member	"flexible"
s0	"rdf data"	rdfs:subClassOf	"data"
s0	"full structure"	rdfs:subClassOf	"structure"
s0	"its full structure"	rdfs:subClassOf	"full structure"
s0	"where irregular"	rdfs:subClassOf	"irregular"
s0	"flexible querying of rdf data"	rdfs:member	"flexible querying"
s0	"flexible querying of rdf data"	rdfs:member	"rdf data"
