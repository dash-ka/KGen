s12.1	"ranked order"
s12.1	"ranked order"	rdf:predicate	"rank"
s12.1	"ranked order"	rdf:object	"order"
s12	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"
s12	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	rdf:subject	"incremental query evaluation algorithm"
s12	"incremental query"	rdfs:member	"incremental"
s12	"query evaluation"	rdfs:subClassOf	"evaluation"
s12	"evaluation algorithm"	rdfs:member	"evaluation"
s12	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"query evaluation algorithm"	rdfs:member	"query evaluation"
s12	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s12	"incremental query"	rdfs:subClassOf	"query"
s12	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s12	"incremental query evaluation"	rdfs:member	"incremental query"
s12	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s12	"query evaluation"	rdfs:member	"query"
s12	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s12	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s12	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	rdf:predicate	"run"
s12	"an incremental query evaluation algorithm which runs in returns answers to the users in ranked order"	local:AM-LOC	"return answer to the user in rank order"
s12	"return answer to the user in rank order"	rdfs:member	"rank order"
s12	"return answer to the user in rank order"	rdfs:member	"return answer"
s12	"return answer to the user in rank order"	rdfs:member	"user"
s12	"rank order"	rdfs:member	"rank"
s12	"return answer"	rdfs:subClassOf	"answer"
s12	"rank order"	rdfs:subClassOf	"order"
s12	"return answer"	rdfs:member	"return"
s12	"return answer to user"	rdfs:member	"return answer"
s12	"return answer to user"	rdfs:member	"user"
s12	"return answer to user in rank order"	rdfs:member	"return answer to user"
s12	"return answer to user in rank order"	rdfs:member	"rank order"
s11.1	"ranked order"
s11.1	"ranked order"	rdf:predicate	"rank"
s11.1	"ranked order"	rdf:object	"order"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:subject	"incremental query evaluation algorithm"
s11	"incremental query"	rdfs:member	"incremental"
s11	"query evaluation"	rdfs:subClassOf	"evaluation"
s11	"evaluation algorithm"	rdfs:member	"evaluation"
s11	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"query evaluation algorithm"	rdfs:member	"query evaluation"
s11	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s11	"incremental query"	rdfs:subClassOf	"query"
s11	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s11	"incremental query evaluation"	rdfs:member	"incremental query"
s11	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s11	"query evaluation"	rdfs:member	"query"
s11	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s11	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:predicate	"run"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	rdf:object	"user"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	local:AM-LOC	"rank order"
s11	"rank order"	rdfs:member	"rank"
s11	"rank order"	rdfs:subClassOf	"order"
s11	"an incremental query evaluation algorithm which runs in polynomial time to the users in ranked order"	local:AM-TMP	"polynomial time"
s11	"polynomial time"	rdfs:subClassOf	"time"
s11	"polynomial time"	rdfs:member	"polynomial"
s10	"we provide an incremental query evaluation algorithm"
s10	"we provide an incremental query evaluation algorithm"	rdf:subject	"we"
s10	"we provide an incremental query evaluation algorithm"	rdf:predicate	"provide"
s10	"we provide an incremental query evaluation algorithm"	rdf:object	"incremental query evaluation algorithm"
s10	"incremental query"	rdfs:member	"incremental"
s10	"query evaluation"	rdfs:subClassOf	"evaluation"
s10	"evaluation algorithm"	rdfs:member	"evaluation"
s10	"query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"query evaluation algorithm"	rdfs:member	"query evaluation"
s10	"incremental query evaluation"	rdfs:subClassOf	"evaluation"
s10	"incremental query"	rdfs:subClassOf	"query"
s10	"incremental query evaluation algorithm"	rdfs:member	"incremental query evaluation"
s10	"incremental query evaluation"	rdfs:member	"incremental query"
s10	"evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"incremental query evaluation algorithm"	rdfs:subClassOf	"algorithm"
s10	"query evaluation"	rdfs:member	"query"
s10	"query evaluation algorithm"	rdfs:subClassOf	"evaluation algorithm"
s10	"incremental query evaluation algorithm"	rdfs:subClassOf	"query evaluation algorithm"
s9.2	"querying paths"
s9.2	"querying paths"	rdf:subject	"path"
s9.2	"querying paths"	rdf:predicate	"query"
s9.1	"sparql allow for querying paths"
s9.1	"sparql allow for querying paths"	rdf:subject	"sparql"
s9.1	"sparql allow for querying paths"	rdf:predicate	"allow"
s9.1	"sparql allow for querying paths"	rdf:object	"query path"
s9.1	"query path"	rdfs:subClassOf	"path"
s9.1	"query path"	rdfs:member	"query"
s9	"extensions proposed for sparql to allow for querying paths"
s9	"extensions proposed for sparql to allow for querying paths"	rdf:subject	"extension"
s9	"extensions proposed for sparql to allow for querying paths"	rdf:predicate	"propose"
s9	"extensions proposed for sparql to allow for querying paths"	local:AM-PNC	"allow for query path"
s9	"allow for query path"	rdfs:member	"query path"
s9	"allow for query path"	rdfs:member	"allow"
s9	"query path"	rdfs:subClassOf	"path"
s9	"query path"	rdfs:member	"query"
s9	"allow for query path"	rdfs:member	"allow"
s9	"allow for query path"	rdfs:member	"query path"
s8.2	"the query language we adopt comprises conjunctions of regular path queries including extensions"
s8.2	"the query language we adopt comprises conjunctions of regular path queries including extensions"	rdf:subject	"extension"
s8.2	"the query language we adopt comprises conjunctions of regular path queries including extensions"	rdf:predicate	"include"
s8.2	"the query language we adopt comprises conjunctions of regular path queries including extensions"	rdf:object	"query language we adopt comprise conjunction of regular path query"
s8.2	"query language we adopt comprise conjunction of regular path query"	rdfs:member	"regular path query"
s8.2	"query language we adopt comprise conjunction of regular path query"	rdfs:member	"comprise conjunction"
s8.2	"query language we adopt comprise conjunction of regular path query"	rdfs:member	"query language"
s8.2	"regular path query"	rdfs:member	"regular path"
s8.2	"regular path query"	rdfs:subClassOf	"query"
s8.2	"regular path"	rdfs:subClassOf	"path"
s8.2	"regular path"	rdfs:member	"regular"
s8.2	"query language"	rdfs:subClassOf	"language"
s8.2	"path query"	rdfs:member	"path"
s8.2	"path query"	rdfs:subClassOf	"query"
s8.2	"comprise conjunction"	rdfs:subClassOf	"conjunction"
s8.2	"comprise conjunction"	rdfs:member	"comprise"
s8.2	"query language"	rdfs:member	"query"
s8.2	"regular path query"	rdfs:subClassOf	"path query"
s8.2	"conjunction of regular path query"	rdfs:member	"conjunction"
s8.2	"conjunction of regular path query"	rdfs:member	"regular path query"
s8.1	"the query language we comprises conjunctions of regular path queries thus including extensions"
s8.1	"the query language we comprises conjunctions of regular path queries thus including extensions"	rdf:predicate	"comprise"
s8.1	"the query language we comprises conjunctions of regular path queries thus including extensions"	rdf:object	"query language we conjunction of regular path query thus include extension"
s8.1	"query language we conjunction of regular path query thus include extension"	rdfs:member	"regular path query"
s8.1	"query language we conjunction of regular path query thus include extension"	rdfs:member	"extension"
s8.1	"query language we conjunction of regular path query thus include extension"	rdfs:member	"query language"
s8.1	"regular path query"	rdfs:member	"regular path"
s8.1	"regular path query"	rdfs:subClassOf	"query"
s8.1	"regular path"	rdfs:subClassOf	"path"
s8.1	"regular path"	rdfs:member	"regular"
s8.1	"query language"	rdfs:subClassOf	"language"
s8.1	"path query"	rdfs:member	"path"
s8.1	"path query"	rdfs:subClassOf	"query"
s8.1	"query language"	rdfs:member	"query"
s8.1	"thus include"	rdfs:subClassOf	"include"
s8.1	"regular path query"	rdfs:subClassOf	"path query"
s8.1	"language thus include"	rdfs:subClassOf	"thus include"
s8.1	"conjunction of regular path query"	rdfs:member	"conjunction"
s8.1	"conjunction of regular path query"	rdfs:member	"regular path query"
s8	"the query language we adopt"
s8	"the query language we adopt"	rdf:subject	"we"
s8	"the query language we adopt"	rdf:predicate	"adopt"
s8	"the query language we adopt"	rdf:object	"query language"
s8	"query language"	rdfs:subClassOf	"language"
s8	"query language"	rdfs:member	"query"
s7.1	"using regular expressions"
s7.1	"using regular expressions"	rdf:subject	"regular expression"
s7.1	"regular expression"	rdfs:subClassOf	"expression"
s7.1	"regular expression"	rdfs:member	"regular"
s7.1	"using regular expressions"	rdf:predicate	"use"
s7	"querying paths using regular expressions"
s7	"querying paths using regular expressions"	rdf:subject	"path use regular expression"
s7	"path use regular expression"	rdfs:member	"path use"
s7	"path use regular expression"	rdfs:member	"regular expression"
s7	"regular expression"	rdfs:subClassOf	"expression"
s7	"path use"	rdfs:subClassOf	"use"
s7	"path use"	rdfs:member	"path"
s7	"regular expression"	rdfs:member	"regular"
s7	"use regular expression"	rdfs:subClassOf	"regular expression"
s7	"path use regular expression"	rdfs:subClassOf	"use regular expression"
s7	"querying paths using regular expressions"	rdf:predicate	"query"
s6	"based on rdfsbased inference rules"
s6	"based on rdfsbased inference rules"	rdf:predicate	"base"
s6	"based on rdfsbased inference rules"	local:AM-LOC	"rdfsbased inference rule"
s6	"inference rule"	rdfs:subClassOf	"rule"
s6	"inference rule"	rdfs:member	"inference"
s6	"rdfsbased inference rule"	rdfs:subClassOf	"inference rule"
s5	"based on edit distance"
s5	"based on edit distance"	rdf:predicate	"base"
s5	"based on edit distance"	local:AM-LOC	"edit distance"
s5	"edit distance"	rdfs:member	"edit"
s5	"edit distance"	rdfs:subClassOf	"distance"
s4	"our framework incorporates both standard notions of approximation"
s4	"our framework incorporates both standard notions of approximation"	rdf:subject	"framework"
s4	"our framework incorporates both standard notions of approximation"	rdf:predicate	"incorporate"
s4	"our framework incorporates both standard notions of approximation"	rdf:object	"standard notion of approximation"
s4	"standard notion of approximation"	rdfs:member	"standard notion"
s4	"standard notion of approximation"	rdfs:member	"approximation"
s4	"standard notion"	rdfs:member	"standard"
s4	"standard notion"	rdfs:subClassOf	"notion"
s4	"standard notion of approximation"	rdfs:member	"standard notion"
s4	"standard notion of approximation"	rdfs:member	"approximation"
s3.3	"how closely the users match the original query"
s3.3	"how closely the users match the original query"	rdf:subject	"user"
s3.3	"how closely the users match the original query"	rdf:predicate	"match"
s3.3	"how closely the users match the original query"	rdf:object	"original query"
s3.3	"original query"	rdfs:subClassOf	"query"
s3.3	"original query"	rdfs:member	"original"
s3.3	"how closely the users match the original query"	local:AM-MNR	"closely"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:subject	"query system"
s3.2	"query system"	rdfs:member	"query"
s3.2	"query system"	rdfs:subClassOf	"system"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:predicate	"rank"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	rdf:object	"answer closely the user match the original query"
s3.2	"answer closely the user match the original query"	rdfs:member	"answer"
s3.2	"answer closely the user match the original query"	rdfs:member	"original query"
s3.2	"answer closely the user match the original query"	rdfs:member	"user"
s3.2	"original query"	rdfs:subClassOf	"query"
s3.2	"original query"	rdfs:member	"original"
s3.2	"user match"	rdfs:subClassOf	"match"
s3.2	"closely user match"	rdfs:subClassOf	"user match"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	local:AM-MOD	"can"
s3.2	"the querying system can can rank the answers to how closely the users match the original query"	local:AM-MOD	"can"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:subject	"query system"
s3.1	"query system"	rdfs:member	"query"
s3.1	"query system"	rdfs:subClassOf	"system"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:predicate	"perform"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	rdf:object	"approximate match and relaxation of the user query"
s3.1	"approximate match and relaxation of the user query"	rdfs:member	"relaxation"
s3.1	"approximate match and relaxation of the user query"	rdfs:member	"user query"
s3.1	"approximate match and relaxation of the user query"	rdfs:member	"approximate match"
s3.1	"approximate match"	rdfs:member	"approximate"
s3.1	"approximate match"	rdfs:subClassOf	"match"
s3.1	"user query"	rdfs:member	"user"
s3.1	"user query"	rdfs:subClassOf	"query"
s3.1	"approximate match of user query"	rdfs:member	"approximate match"
s3.1	"approximate match of user query"	rdfs:member	"user query"
s3.1	"the querying system can perform both approximate matching and relaxation of the users query"	local:AM-MOD	"can"
s3	"querying system"
s3	"querying system"	rdf:subject	"system"
s3	"querying system"	rdf:predicate	"query"
s2.2	"the users lacks knowledge of the users full structure"
s2.2	"the users lacks knowledge of the users full structure"	rdf:subject	"user"
s2.2	"the users lacks knowledge of the users full structure"	rdf:predicate	"lack"
s2.2	"the users lacks knowledge of the users full structure"	rdf:object	"knowledge of the user full structure"
s2.2	"knowledge of the user full structure"	rdfs:member	"user full structure"
s2.2	"knowledge of the user full structure"	rdfs:member	"knowledge"
s2.2	"full structure"	rdfs:subClassOf	"structure"
s2.2	"user full"	rdfs:member	"user"
s2.2	"user full structure"	rdfs:subClassOf	"structure"
s2.2	"user full structure"	rdfs:member	"user full"
s2.2	"full structure"	rdfs:member	"full"
s2.2	"user full"	rdfs:subClassOf	"full"
s2.2	"knowledge of user"	rdfs:member	"knowledge"
s2.2	"knowledge of user"	rdfs:member	"user"
s2.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"
s2.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:subject	"we"
s2.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:predicate	"support"
s2.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:object	"flexible query of rdf data"
s2.1	"flexible query of rdf data"	rdfs:member	"rdf data"
s2.1	"flexible query of rdf data"	rdfs:member	"flexible query"
s2.1	"flexible query"	rdfs:subClassOf	"query"
s2.1	"rdf data"	rdfs:member	"rdf"
s2.1	"rdf data"	rdfs:subClassOf	"data"
s2.1	"flexible query"	rdfs:member	"flexible"
s2.1	"flexible query of rdf data"	rdfs:member	"flexible query"
s2.1	"flexible query of rdf data"	rdfs:member	"rdf data"
s2.1	"we support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-TMP	"user lack knowledge of the user full structure"
s2.1	"user lack knowledge of the user full structure"	rdfs:member	"user lack knowledge"
s2.1	"user lack knowledge of the user full structure"	rdfs:member	"user full structure"
s2.1	"user full"	rdfs:member	"user"
s2.1	"user lack knowledge"	rdfs:member	"user lack"
s2.1	"user lack knowledge"	rdfs:subClassOf	"knowledge"
s2.1	"lack knowledge"	rdfs:subClassOf	"knowledge"
s2.1	"full structure"	rdfs:subClassOf	"structure"
s2.1	"user full structure"	rdfs:subClassOf	"structure"
s2.1	"user full structure"	rdfs:member	"user full"
s2.1	"user lack"	rdfs:member	"user"
s2.1	"user lack"	rdfs:subClassOf	"lack"
s2.1	"full structure"	rdfs:member	"full"
s2.1	"lack knowledge"	rdfs:member	"lack"
s2.1	"user full"	rdfs:subClassOf	"full"
s2.1	"user lack knowledge"	rdfs:subClassOf	"lack knowledge"
s2.1	"user lack knowledge of user"	rdfs:member	"user lack knowledge"
s2.1	"user lack knowledge of user"	rdfs:member	"user"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:subject	"we"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:predicate	"combine"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	rdf:object	"regular path query"
s2	"regular path query"	rdfs:member	"regular path"
s2	"regular path query"	rdfs:subClassOf	"query"
s2	"regular path"	rdfs:subClassOf	"path"
s2	"regular path"	rdfs:member	"regular"
s2	"path query"	rdfs:member	"path"
s2	"path query"	rdfs:subClassOf	"query"
s2	"regular path query"	rdfs:subClassOf	"path query"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-MNR	"query approximation"
s2	"query approximation"	rdfs:member	"query"
s2	"query approximation"	rdfs:subClassOf	"approximation"
s2	"we combine regular path queries with query approximation in order to support flexible querying of rdf data when the users lacks knowledge of the users full structure"	local:AM-PNC	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"
s2	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"	rdfs:member	"user lack knowledge"
s2	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"	rdfs:member	"rdf data"
s2	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"	rdfs:member	"flexible query"
s2	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"	rdfs:member	"order"
s2	"order to support flexible query of rdf data when the user lack knowledge of the user full structure"	rdfs:member	"user full structure"
s2	"user full"	rdfs:member	"user"
s2	"user lack knowledge"	rdfs:member	"user lack"
s2	"user lack knowledge"	rdfs:subClassOf	"knowledge"
s2	"lack knowledge"	rdfs:subClassOf	"knowledge"
s2	"full structure"	rdfs:subClassOf	"structure"
s2	"rdf data"	rdfs:subClassOf	"data"
s2	"user full structure"	rdfs:subClassOf	"structure"
s2	"user full structure"	rdfs:member	"user full"
s2	"user lack"	rdfs:member	"user"
s2	"user lack"	rdfs:subClassOf	"lack"
s2	"full structure"	rdfs:member	"full"
s2	"lack knowledge"	rdfs:member	"lack"
s2	"user full"	rdfs:subClassOf	"full"
s2	"flexible query"	rdfs:subClassOf	"query"
s2	"rdf data"	rdfs:member	"rdf"
s2	"flexible query"	rdfs:member	"flexible"
s2	"user lack knowledge"	rdfs:subClassOf	"lack knowledge"
s2	"flexible query of rdf data"	rdfs:member	"flexible query"
s2	"flexible query of rdf data"	rdfs:member	"rdf data"
s2	"user lack knowledge of user"	rdfs:member	"user lack knowledge"
s2	"user lack knowledge of user"	rdfs:member	"user"
s1.1	"we support flexible querying of rdf data where its full structure is irregular"
s1.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:subject	"we"
s1.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:predicate	"support"
s1.1	"we support flexible querying of rdf data where its full structure is irregular"	rdf:object	"flexible query of rdf data where it full structure be irregular"
s1.1	"flexible query of rdf data where it full structure be irregular"	rdfs:member	"rdf data"
s1.1	"flexible query of rdf data where it full structure be irregular"	rdfs:member	"flexible query"
s1.1	"flexible query of rdf data where it full structure be irregular"	rdfs:member	"full structure"
s1.1	"full structure"	rdfs:subClassOf	"structure"
s1.1	"rdf data"	rdfs:subClassOf	"data"
s1.1	"full structure"	rdfs:member	"full"
s1.1	"flexible query"	rdfs:subClassOf	"query"
s1.1	"rdf data"	rdfs:member	"rdf"
s1.1	"flexible query"	rdfs:member	"flexible"
s1.1	"where irregular"	rdfs:subClassOf	"irregular"
s1.1	"flexible query of rdf data"	rdfs:member	"flexible query"
s1.1	"flexible query of rdf data"	rdfs:member	"rdf data"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:subject	"we"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:predicate	"combine"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	rdf:object	"regular path query"
s1	"regular path query"	rdfs:member	"regular path"
s1	"regular path query"	rdfs:subClassOf	"query"
s1	"regular path"	rdfs:subClassOf	"path"
s1	"regular path"	rdfs:member	"regular"
s1	"path query"	rdfs:member	"path"
s1	"path query"	rdfs:subClassOf	"query"
s1	"regular path query"	rdfs:subClassOf	"path query"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	local:AM-MNR	"query approximation"
s1	"query approximation"	rdfs:member	"query"
s1	"query approximation"	rdfs:subClassOf	"approximation"
s1	"we combine regular path queries with query approximation in order to support flexible querying of rdf data where its full structure is irregular"	local:AM-PNC	"order to support flexible query of rdf data where it full structure be irregular"
s1	"order to support flexible query of rdf data where it full structure be irregular"	rdfs:member	"order"
s1	"order to support flexible query of rdf data where it full structure be irregular"	rdfs:member	"flexible query"
s1	"order to support flexible query of rdf data where it full structure be irregular"	rdfs:member	"full structure"
s1	"order to support flexible query of rdf data where it full structure be irregular"	rdfs:member	"rdf data"
s1	"full structure"	rdfs:subClassOf	"structure"
s1	"rdf data"	rdfs:subClassOf	"data"
s1	"full structure"	rdfs:member	"full"
s1	"flexible query"	rdfs:subClassOf	"query"
s1	"rdf data"	rdfs:member	"rdf"
s1	"flexible query"	rdfs:member	"flexible"
s1	"where irregular"	rdfs:subClassOf	"irregular"
s1	"flexible query of rdf data"	rdfs:member	"flexible query"
s1	"flexible query of rdf data"	rdfs:member	"rdf data"
s0	"we develop query relaxation techniques for regular path queries"
s0	"we develop query relaxation techniques for regular path queries"	rdf:subject	"we"
s0	"we develop query relaxation techniques for regular path queries"	rdf:predicate	"develop"
s0	"we develop query relaxation techniques for regular path queries"	rdf:object	"query relaxation technique for regular path query"
s0	"query relaxation technique for regular path query"	rdfs:member	"query relaxation technique"
s0	"query relaxation technique for regular path query"	rdfs:member	"regular path query"
s0	"regular path query"	rdfs:member	"regular path"
s0	"regular path"	rdfs:subClassOf	"path"
s0	"regular path query"	rdfs:subClassOf	"query"
s0	"regular path"	rdfs:member	"regular"
s0	"query relaxation"	rdfs:member	"query"
s0	"query relaxation technique"	rdfs:subClassOf	"technique"
s0	"path query"	rdfs:member	"path"
s0	"query relaxation technique"	rdfs:member	"query relaxation"
s0	"path query"	rdfs:subClassOf	"query"
s0	"query relaxation"	rdfs:subClassOf	"relaxation"
s0	"relaxation technique"	rdfs:member	"relaxation"
s0	"relaxation technique"	rdfs:subClassOf	"technique"
s0	"regular path query"	rdfs:subClassOf	"path query"
s0	"query relaxation technique"	rdfs:subClassOf	"relaxation technique"
s0	"query relaxation technique for regular path query"	rdfs:member	"query relaxation technique"
s0	"query relaxation technique for regular path query"	rdfs:member	"regular path query"
