s12.4	"a policy engine developed for our language"
s12.4	"a policy engine developed for our language"	rdf:subject	"policy engine"
s12.4	"policy engine"	rdfs:member	"policy"
s12.4	"policy engine"	rdfs:subClassOf	"engine"
s12.4	"a policy engine developed for our language"	rdf:predicate	"develop"
s12.4	"a policy engine developed for our language"	local:AM-PNC	"language"
s12.3	"using a policy engine developed for our language"
s12.3	"using a policy engine developed for our language"	rdf:subject	"policy engine developed for our language"
s12.3	"policy engine developed for our language"	rdfs:member	"language"
s12.3	"policy engine developed for our language"	rdfs:member	"policy engine"
s12.3	"policy engine"	rdfs:member	"policy"
s12.3	"policy engine"	rdfs:subClassOf	"engine"
s12.3	"our language"	rdfs:subClassOf	"language"
s12.3	"developed for our language"	rdfs:member	"developed"
s12.3	"developed for our language"	rdfs:member	"our language"
s12.3	"using a policy engine developed for our language"	rdf:predicate	"use"
s12.2	"realizing a use case scenario using a policy engine developed for our language"
s12.2	"realizing a use case scenario using a policy engine developed for our language"	rdf:subject	"use case scenario using a policy engine developed for our language"
s12.2	"use case scenario using a policy engine developed for our language"	rdfs:member	"language"
s12.2	"use case scenario using a policy engine developed for our language"	rdfs:member	"policy engine"
s12.2	"use case scenario using a policy engine developed for our language"	rdfs:member	"use case scenario"
s12.2	"case scenario"	rdfs:member	"case"
s12.2	"case scenario"	rdfs:subClassOf	"scenario"
s12.2	"policy engine"	rdfs:subClassOf	"engine"
s12.2	"use case scenario"	rdfs:subClassOf	"scenario"
s12.2	"use case"	rdfs:member	"use"
s12.2	"use case"	rdfs:subClassOf	"case"
s12.2	"use case scenario"	rdfs:member	"use case"
s12.2	"policy engine"	rdfs:member	"policy"
s12.2	"our language"	rdfs:subClassOf	"language"
s12.2	"use case scenario"	rdfs:subClassOf	"case scenario"
s12.2	"use case scenario using"	rdfs:member	"use case scenario"
s12.2	"use case scenario using"	rdfs:member	"using"
s12.2	"developed for our language"	rdfs:member	"developed"
s12.2	"developed for our language"	rdfs:member	"our language"
s12.2	"realizing a use case scenario using a policy engine developed for our language"	rdf:predicate	"realize"
s12.1	"we approach by realizing a use case scenario using a policy engine developed for our language"
s12.1	"we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:subject	"We"
s12.1	"we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:predicate	"approach"
s12.1	"we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:object	"realizing a use case scenario using a policy engine developed for our language"
s12	"we validate we approach by realizing a use case scenario using a policy engine developed for our language"
s12	"we validate we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:subject	"We"
s12	"we validate we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:predicate	"validate"
s12	"we validate we approach by realizing a use case scenario using a policy engine developed for our language"	rdf:object	"approach"
s12	"we validate we approach by realizing a use case scenario using a policy engine developed for our language"	local:AM-MNR	"realizing a use case scenario using a policy engine developed for our language"
s11	"a policy language that can express such constraints on other policies"
s11	"a policy language that can express such constraints on other policies"	rdf:subject	"policy language"
s11	"policy language"	rdfs:subClassOf	"language"
s11	"policy language"	rdfs:member	"policy"
s11	"a policy language that can express such constraints on other policies"	rdf:predicate	"express"
s11	"a policy language that can express such constraints on other policies"	rdf:object	"constraints"
s11	"a policy language that can express such constraints on other policies"	local:AM-LOC	"policies"
s11	"a policy language that can express such constraints on other policies"	local:AM-MOD	"can"
s10	"in this paper we present a policy language"
s10	"in this paper we present a policy language"	rdf:subject	"we"
s10	"in this paper we present a policy language"	rdf:predicate	"present"
s10	"in this paper we present a policy language"	rdf:object	"policy language"
s10	"policy language"	rdfs:subClassOf	"language"
s10	"policy language"	rdfs:member	"policy"
s10	"in this paper we present a policy language"	local:AM-LOC	"paper"
s9	"applications using the google maps api"
s9	"applications using the google maps api"	rdf:subject	"applications"
s9	"applications using the google maps api"	rdf:predicate	"use"
s9	"applications using the google maps api"	rdf:object	"Google Maps API"
s9	"maps api"	rdfs:subClassOf	"api"
s9	"google maps api"	rdfs:subClassOf	"api"
s9	"google maps"	rdfs:member	"google"
s9	"google maps api"	rdfs:member	"google maps"
s9	"maps api"	rdfs:member	"maps"
s9	"google maps"	rdfs:subClassOf	"maps"
s9	"google maps api"	rdfs:subClassOf	"maps api"
s8.1	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"
s8.1	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:subject	"Google Maps API which requires that applications must be available without a fee ie the applications policy"
s8.1	"google maps api which requires that applications must be available without a fee ie the applications policy"	rdfs:member	"fee"
s8.1	"google maps api which requires that applications must be available without a fee ie the applications policy"	rdfs:member	"applications"
s8.1	"google maps api which requires that applications must be available without a fee ie the applications policy"	rdfs:member	"applications policy"
s8.1	"google maps api which requires that applications must be available without a fee ie the applications policy"	rdfs:member	"google maps api"
s8.1	"maps api"	rdfs:subClassOf	"api"
s8.1	"google maps api"	rdfs:subClassOf	"api"
s8.1	"google maps"	rdfs:member	"google"
s8.1	"google maps api"	rdfs:member	"google maps"
s8.1	"maps api"	rdfs:member	"maps"
s8.1	"applications policy"	rdfs:subClassOf	"policy"
s8.1	"google maps"	rdfs:subClassOf	"maps"
s8.1	"applications policy"	rdfs:member	"applications"
s8.1	"must available"	rdfs:subClassOf	"available"
s8.1	"google maps api"	rdfs:subClassOf	"maps api"
s8.1	"must available without fee"	rdfs:member	"must available"
s8.1	"must available without fee"	rdfs:member	"fee"
s8.1	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:predicate	"not require"
s8.1	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:object	"payment"
s8.1	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	local:AM-MOD	"must"
s8	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"
s8	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:subject	"Google Maps API"
s8	"maps api"	rdfs:subClassOf	"api"
s8	"google maps api"	rdfs:subClassOf	"api"
s8	"google maps"	rdfs:member	"google"
s8	"google maps api"	rdfs:member	"google maps"
s8	"maps api"	rdfs:member	"maps"
s8	"google maps"	rdfs:subClassOf	"maps"
s8	"google maps api"	rdfs:subClassOf	"maps api"
s8	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:predicate	"require"
s8	"the google maps api which requires that applications must be available without a fee ie the applications policy must not require a payment"	rdf:object	"applications must be available without a fee ie the applications policy must not require a payment"
s8	"applications must be available without a fee ie the applications policy must not require a payment"	rdfs:member	"applications"
s8	"applications must be available without a fee ie the applications policy must not require a payment"	rdfs:member	"applications policy"
s8	"applications must be available without a fee ie the applications policy must not require a payment"	rdfs:member	"fee"
s8	"applications must be available without a fee ie the applications policy must not require a payment"	rdfs:member	"payment"
s8	"applications policy"	rdfs:subClassOf	"policy"
s8	"applications policy"	rdfs:member	"applications"
s8	"not require"	rdfs:subClassOf	"require"
s8	"must not require"	rdfs:subClassOf	"not require"
s8	"ie must not require"	rdfs:subClassOf	"must not require"
s8	"must available"	rdfs:subClassOf	"available"
s8	"ie must not require without fee"	rdfs:member	"ie must not require"
s8	"ie must not require without fee"	rdfs:member	"fee"
s7	"consider for example the google maps api"
s7	"consider for example the google maps api"	rdf:subject	"example the Google Maps API"
s7	"example the google maps api"	rdfs:member	"example"
s7	"example the google maps api"	rdfs:member	"google maps api"
s7	"maps api"	rdfs:subClassOf	"api"
s7	"google maps api"	rdfs:subClassOf	"api"
s7	"google maps"	rdfs:member	"google"
s7	"google maps api"	rdfs:member	"google maps"
s7	"maps api"	rdfs:member	"maps"
s7	"google maps"	rdfs:subClassOf	"maps"
s7	"google maps api"	rdfs:subClassOf	"maps api"
s7	"consider for example the google maps api"	rdf:predicate	"Consider"
s6.1	"used entity"
s6.1	"used entity"	rdf:subject	"entity"
s6.1	"used entity"	rdf:predicate	"use"
s6	"policies which can restricted by the policy of a used entity"
s6	"policies which can restricted by the policy of a used entity"	rdf:subject	"policy of a used entity"
s6	"policy of a used entity"	rdfs:member	"used entity"
s6	"policy of a used entity"	rdfs:member	"policy"
s6	"used entity"	rdfs:member	"used"
s6	"used entity"	rdfs:subClassOf	"entity"
s6	"policy of used entity"	rdfs:member	"policy"
s6	"policy of used entity"	rdfs:member	"used entity"
s6	"policies which can restricted by the policy of a used entity"	rdf:predicate	"restrict"
s6	"policies which can restricted by the policy of a used entity"	rdf:object	"policies"
s6	"policies which can restricted by the policy of a used entity"	local:AM-MOD	"can"
s5.1	"usage situations can usage situations regulated by policies"
s5.1	"usage situations can usage situations regulated by policies"	rdf:subject	"policies"
s5.1	"usage situations can usage situations regulated by policies"	rdf:predicate	"regulate"
s5.1	"usage situations can usage situations regulated by policies"	rdf:object	"Usage situations"
s5.1	"usage situations"	rdfs:member	"usage"
s5.1	"usage situations"	rdfs:subClassOf	"situations"
s5.1	"usage situations can usage situations regulated by policies"	local:AM-MOD	"can"
s5	"usage situations can usage situations be regulated by policies"
s5	"usage situations can usage situations be regulated by policies"	rdf:subject	"Usage situations"
s5	"usage situations"	rdfs:member	"usage"
s5	"usage situations"	rdfs:subClassOf	"situations"
s5	"usage situations can usage situations be regulated by policies"	rdf:predicate	"Usage"
s5	"usage situations can usage situations be regulated by policies"	rdf:object	"situations be regulated by policies"
s5	"situations be regulated by policies"	rdfs:member	"situations"
s5	"situations be regulated by policies"	rdfs:member	"policies"
s5	"regulated agent policies"	rdfs:member	"regulated"
s5	"regulated agent policies"	rdfs:member	"policies"
s5	"usage situations can usage situations be regulated by policies"	local:AM-MOD	"can"
s4.1	"natural language policies currently"
s4.1	"natural language policies currently"	rdf:subject	"natural language policies"
s4.1	"natural language"	rdfs:subClassOf	"language"
s4.1	"natural language policies"	rdfs:subClassOf	"policies"
s4.1	"language policies"	rdfs:member	"language"
s4.1	"natural language policies"	rdfs:member	"natural language"
s4.1	"natural language"	rdfs:member	"natural"
s4.1	"language policies"	rdfs:subClassOf	"policies"
s4.1	"natural language policies"	rdfs:subClassOf	"language policies"
s4.1	"natural language policies currently"	rdf:predicate	"exist"
s4.1	"natural language policies currently"	local:AM-TMP	"currently"
s4	"integrating such data sources"
s4	"integrating such data sources"	rdf:subject	"data sources"
s4	"data sources"	rdfs:member	"data"
s4	"data sources"	rdfs:subClassOf	"sources"
s4	"integrating such data sources"	rdf:predicate	"integrate"
s3.1	"data provided via standardized interfaces"
s3.1	"data provided via standardized interfaces"	rdf:subject	"data"
s3.1	"data provided via standardized interfaces"	rdf:predicate	"provide"
s3.1	"data provided via standardized interfaces"	local:AM-MNR	"via standardized interfaces"
s3.1	"standardized interfaces"	rdfs:subClassOf	"interfaces"
s3.1	"standardized interfaces"	rdfs:member	"standardized"
s3	"using data provided via standardized interfaces"
s3	"using data provided via standardized interfaces"	rdf:subject	"data provided via standardized interfaces"
s3	"using data provided via standardized interfaces"	rdf:predicate	"use"
s2	"situations in which usage of certain entities enable the automatic evaluation whether a situation is compliant"
s2	"situations in which usage of certain entities enable the automatic evaluation whether a situation is compliant"	rdf:subject	"situations in which usage of certain entities"
s2	"situations in which usage of certain entities"	rdfs:member	"certain entities"
s2	"situations in which usage of certain entities"	rdfs:member	"usage"
s2	"situations in which usage of certain entities"	rdfs:member	"situations"
s2	"certain entities"	rdfs:subClassOf	"entities"
s2	"certain entities"	rdfs:member	"certain"
s2	"situations in which"	rdfs:member	"situations"
s2	"situations in which"	rdfs:member	"which"
s2	"usage of certain entities"	rdfs:member	"usage"
s2	"usage of certain entities"	rdfs:member	"certain entities"
s2	"situations in which usage of certain entities enable the automatic evaluation whether a situation is compliant"	rdf:predicate	"enable"
s2	"situations in which usage of certain entities enable the automatic evaluation whether a situation is compliant"	rdf:object	"automatic evaluation whether a situation is compliant"
s2	"automatic evaluation whether a situation is compliant"	rdfs:member	"situation"
s2	"automatic evaluation whether a situation is compliant"	rdfs:member	"automatic evaluation"
s2	"automatic evaluation"	rdfs:member	"automatic"
s2	"automatic evaluation"	rdfs:subClassOf	"evaluation"
s1	"formal policies allow the nonambiguous definition of situations"
s1	"formal policies allow the nonambiguous definition of situations"	rdf:subject	"Formal policies"
s1	"formal policies"	rdfs:member	"formal"
s1	"formal policies"	rdfs:subClassOf	"policies"
s1	"formal policies allow the nonambiguous definition of situations"	rdf:predicate	"allow"
s1	"formal policies allow the nonambiguous definition of situations"	rdf:object	"nonambiguous definition of situations"
s1	"nonambiguous definition of situations"	rdfs:member	"nonambiguous definition"
s1	"nonambiguous definition of situations"	rdfs:member	"situations"
s1	"nonambiguous definition"	rdfs:subClassOf	"definition"
s1	"nonambiguous definition"	rdfs:member	"nonambiguous"
s1	"nonambiguous definition of situations"	rdfs:member	"nonambiguous definition"
s1	"nonambiguous definition of situations"	rdfs:member	"situations"
s0	"situations in which usage of certain entities"
s0	"situations in which usage of certain entities"	rdf:subject	"situations in which usage of certain entities"
s0	"situations in which usage of certain entities"	rdf:predicate	"allow"
