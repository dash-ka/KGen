semantic web tasks that often require similarity measures such as semantic web service matchmaking
this research explores three sparqlbased techniques to solve semantic web tasks
semantic web tasks that often require similarity measures such as ontology mapping
semantic web tasks that often require similarity measures such as semantic data integration
our aim is to see how far it is possible to integrate customized similarity functions into sparql to achieve good results for these tasks
our first approach exploits virtual triples calling property functions to establish virtual relations among resources under comparison
our first approach exploits virtual triples the second approach uses extension functions to filter out resources finally our third technique applies new solution modifiers to postprocess a sparql solution sequence
resources that do not meet the requested similarity criteria
the semantics of the three approaches are formally elaborated
the semantics of the three approaches are formally discussed
our close the paper with a demonstration of the usefulness of our isparql framework in the context of a data integration experiment
our close the paper with a demonstration of the usefulness of our isparql framework in the context of an ontology mapping experiment