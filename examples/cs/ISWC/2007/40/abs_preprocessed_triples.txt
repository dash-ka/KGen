s19.1	"proposed algorithm"
s19.1	"proposed algorithm"	rdf:subject	"algorithm"
s19.1	"proposed algorithm"	rdf:predicate	"propose"
s19	"the experimental results show that the proposed algorithm is effective"
s19	"the experimental results show that the proposed algorithm is effective"	rdf:subject	"experimental results"
s19	"experimental results"	rdfs:subClassOf	"results"
s19	"experimental results"	rdfs:member	"experimental"
s19	"the experimental results show that the proposed algorithm is effective"	rdf:predicate	"show"
s19	"the experimental results show that the proposed algorithm is effective"	rdf:object	"proposed algorithm is effective"
s19	"proposed algorithm"	rdfs:subClassOf	"algorithm"
s18.1	"proposed algorithm"
s18.1	"proposed algorithm"	rdf:subject	"algorithm"
s18.1	"proposed algorithm"	rdf:predicate	"propose"
s18	"the experimental results show that the proposed algorithm is efficient"
s18	"the experimental results show that the proposed algorithm is efficient"	rdf:subject	"experimental results"
s18	"experimental results"	rdfs:subClassOf	"results"
s18	"experimental results"	rdfs:member	"experimental"
s18	"the experimental results show that the proposed algorithm is efficient"	rdf:predicate	"show"
s18	"the experimental results show that the proposed algorithm is efficient"	rdf:object	"proposed algorithm is efficient"
s18	"proposed algorithm"	rdfs:subClassOf	"algorithm"
s17.1	"proposed algorithm"
s17.1	"proposed algorithm"	rdf:subject	"algorithm"
s17.1	"proposed algorithm"	rdf:predicate	"propose"
s17	"the experimental results show that the proposed algorithm is simple"
s17	"the experimental results show that the proposed algorithm is simple"	rdf:subject	"experimental results"
s17	"experimental results"	rdfs:subClassOf	"results"
s17	"experimental results"	rdfs:member	"experimental"
s17	"the experimental results show that the proposed algorithm is simple"	rdf:predicate	"show"
s17	"the experimental results show that the proposed algorithm is simple"	rdf:object	"proposed algorithm is simple"
s17	"proposed algorithm"	rdfs:subClassOf	"algorithm"
s16	"the returned answers based on query coverage query coverage"
s16	"the returned answers based on query coverage query coverage"	rdf:predicate	"base"
s16	"the returned answers based on query coverage query coverage"	rdf:object	"the returned returned answers answers based on query query coverage coverage query query coverage coverage"
s16	"the returned returned answers answers based on query query coverage coverage query query coverage coverage"	rdfs:member	"answers answers"
s16	"the returned returned answers answers based on query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage coverage"
s16	"query query"	rdfs:member	"query"
s16	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query query coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage coverage query query"	rdfs:subClassOf	"query"
s16	"query coverage coverage query query"	rdfs:member	"query coverage coverage query"
s16	"coverage query query"	rdfs:member	"coverage query"
s16	"coverage query query coverage"	rdfs:member	"coverage query query"
s16	"coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage coverage query query coverage"	rdfs:member	"query coverage coverage query query"
s16	"coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query query coverage coverage query query coverage"	rdfs:member	"query query coverage coverage query query"
s16	"coverage coverage query query"	rdfs:member	"coverage coverage query"
s16	"query coverage coverage query"	rdfs:subClassOf	"query"
s16	"answers answers"	rdfs:subClassOf	"answers"
s16	"query query coverage coverage query query"	rdfs:subClassOf	"query"
s16	"coverage query"	rdfs:subClassOf	"query"
s16	"query query coverage coverage query"	rdfs:member	"query query coverage coverage"
s16	"query coverage coverage query query coverage coverage"	rdfs:member	"query coverage coverage query query coverage"
s16	"coverage coverage query"	rdfs:member	"coverage coverage"
s16	"query query coverage coverage query query"	rdfs:member	"query query coverage coverage query"
s16	"query coverage coverage"	rdfs:member	"query coverage"
s16	"coverage query query coverage"	rdfs:subClassOf	"coverage"
s16	"coverage coverage query query coverage"	rdfs:member	"coverage coverage query query"
s16	"query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query query coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query query coverage coverage query"	rdfs:subClassOf	"query"
s16	"coverage query query coverage coverage"	rdfs:member	"coverage query query coverage"
s16	"answers answers"	rdfs:member	"answers"
s16	"query coverage"	rdfs:member	"query"
s16	"coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage coverage query"	rdfs:member	"query coverage coverage"
s16	"query query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s16	"coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s16	"query query coverage"	rdfs:member	"query query"
s16	"query query"	rdfs:subClassOf	"query"
s16	"coverage coverage query query coverage coverage"	rdfs:member	"coverage coverage query query coverage"
s16	"query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage"
s16	"coverage coverage query query"	rdfs:subClassOf	"query"
s16	"coverage coverage query"	rdfs:subClassOf	"query"
s16	"coverage query query"	rdfs:subClassOf	"query"
s16	"coverage coverage"	rdfs:member	"coverage"
s16	"coverage query"	rdfs:member	"coverage"
s16	"query query coverage coverage"	rdfs:member	"query query coverage"
s16	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s16	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s16	"coverage query query coverage coverage"	rdfs:subClassOf	"query query coverage coverage"
s16	"coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage query query coverage coverage"
s16	"query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage coverage query query coverage coverage"
s16	"query query coverage coverage query query coverage coverage"	rdfs:subClassOf	"query coverage coverage query query coverage coverage"
s16	"answers answers based_on query query coverage coverage query query coverage coverage"	rdfs:member	"answers answers"
s16	"answers answers based_on query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage coverage"
s15	"the returned answers based on query coverage conceptual closeness"
s15	"the returned answers based on query coverage conceptual closeness"	rdf:predicate	"base"
s15	"the returned answers based on query coverage conceptual closeness"	rdf:object	"the returned returned answers answers based on query query coverage coverage conceptual conceptual closeness closeness"
s15	"the returned returned answers answers based on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness"
s15	"the returned returned answers answers based on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"answers answers"
s15	"the returned returned answers answers based on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"query query coverage coverage"
s15	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s15	"conceptual conceptual"	rdfs:member	"conceptual"
s15	"query query"	rdfs:member	"query"
s15	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s15	"closeness closeness"	rdfs:subClassOf	"closeness"
s15	"conceptual closeness"	rdfs:member	"conceptual"
s15	"answers answers"	rdfs:subClassOf	"answers"
s15	"closeness closeness"	rdfs:member	"closeness"
s15	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s15	"conceptual closeness"	rdfs:subClassOf	"closeness"
s15	"query coverage coverage"	rdfs:member	"query coverage"
s15	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s15	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s15	"query query coverage"	rdfs:subClassOf	"coverage"
s15	"query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"answers answers"	rdfs:member	"answers"
s15	"query coverage"	rdfs:member	"query"
s15	"coverage coverage"	rdfs:subClassOf	"coverage"
s15	"query coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s15	"query query coverage"	rdfs:member	"query query"
s15	"query query"	rdfs:subClassOf	"query"
s15	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s15	"coverage coverage"	rdfs:member	"coverage"
s15	"query query coverage coverage"	rdfs:member	"query query coverage"
s15	"conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness"
s15	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness"
s15	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s15	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s15	"answers answers based"	rdfs:member	"answers answers"
s15	"answers answers based"	rdfs:member	"based"
s15	"based on query query coverage coverage"	rdfs:member	"based"
s15	"based on query query coverage coverage"	rdfs:member	"query query coverage coverage"
s14	"the returned answers based on their conceptual closeness query coverage"
s14	"the returned answers based on their conceptual closeness query coverage"	rdf:predicate	"base"
s14	"the returned answers based on their conceptual closeness query coverage"	rdf:object	"the returned returned answers answers based on conceptual conceptual closeness closeness query query coverage coverage"
s14	"the returned returned answers answers based on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"answers answers"
s14	"the returned returned answers answers based on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage coverage"
s14	"closeness query query"	rdfs:member	"closeness query"
s14	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s14	"conceptual conceptual closeness closeness query"	rdfs:subClassOf	"query"
s14	"conceptual conceptual"	rdfs:member	"conceptual"
s14	"query query"	rdfs:member	"query"
s14	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"closeness query"	rdfs:member	"closeness"
s14	"closeness closeness query query coverage"	rdfs:member	"closeness closeness query query"
s14	"closeness closeness query"	rdfs:member	"closeness closeness"
s14	"closeness query query coverage"	rdfs:subClassOf	"coverage"
s14	"closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual conceptual closeness closeness query query coverage"	rdfs:member	"conceptual conceptual closeness closeness query query"
s14	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s14	"closeness closeness"	rdfs:subClassOf	"closeness"
s14	"closeness closeness query query"	rdfs:member	"closeness closeness query"
s14	"conceptual closeness closeness query query"	rdfs:subClassOf	"query"
s14	"closeness query query"	rdfs:subClassOf	"query"
s14	"conceptual closeness"	rdfs:member	"conceptual"
s14	"closeness query query coverage"	rdfs:member	"closeness query query"
s14	"closeness closeness query"	rdfs:subClassOf	"query"
s14	"conceptual conceptual closeness closeness query query"	rdfs:subClassOf	"query"
s14	"closeness query"	rdfs:subClassOf	"query"
s14	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage"
s14	"answers answers"	rdfs:subClassOf	"answers"
s14	"conceptual closeness closeness query"	rdfs:subClassOf	"query"
s14	"conceptual closeness closeness query"	rdfs:member	"conceptual closeness closeness"
s14	"closeness query query coverage coverage"	rdfs:member	"closeness query query coverage"
s14	"conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual closeness closeness query query coverage"
s14	"closeness closeness"	rdfs:member	"closeness"
s14	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s14	"conceptual closeness"	rdfs:subClassOf	"closeness"
s14	"query coverage coverage"	rdfs:member	"query coverage"
s14	"conceptual conceptual closeness closeness query query"	rdfs:member	"conceptual conceptual closeness closeness query"
s14	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s14	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s14	"query query coverage"	rdfs:subClassOf	"coverage"
s14	"query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"closeness closeness query query coverage coverage"	rdfs:member	"closeness closeness query query coverage"
s14	"answers answers"	rdfs:member	"answers"
s14	"query coverage"	rdfs:member	"query"
s14	"coverage coverage"	rdfs:subClassOf	"coverage"
s14	"query coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s14	"conceptual closeness closeness query query coverage"	rdfs:member	"conceptual closeness closeness query query"
s14	"query query coverage"	rdfs:member	"query query"
s14	"query query"	rdfs:subClassOf	"query"
s14	"conceptual conceptual closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s14	"conceptual closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s14	"closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"coverage coverage"	rdfs:member	"coverage"
s14	"closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"conceptual conceptual closeness closeness query"	rdfs:member	"conceptual conceptual closeness closeness"
s14	"closeness closeness query query"	rdfs:subClassOf	"query"
s14	"query query coverage coverage"	rdfs:member	"query query coverage"
s14	"conceptual closeness closeness query query"	rdfs:member	"conceptual closeness closeness query"
s14	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s14	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s14	"closeness query query coverage coverage"	rdfs:subClassOf	"query query coverage coverage"
s14	"closeness closeness query query coverage coverage"	rdfs:subClassOf	"closeness query query coverage coverage"
s14	"conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"closeness closeness query query coverage coverage"
s14	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"conceptual closeness closeness query query coverage coverage"
s14	"answers answers based_on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"answers answers"
s14	"answers answers based_on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage coverage"
s13	"in addition this paper ranks the returned answers"
s13	"in addition this paper ranks the returned answers"	rdf:subject	"paper"
s13	"in addition this paper ranks the returned answers"	rdf:predicate	"rank"
s13	"in addition this paper ranks the returned answers"	rdf:object	"returned answers"
s13	"in addition this paper ranks the returned answers"	local:AM-DIS	"addition"
s12	"the returned answers based on their conceptual closeness conceptual closeness"
s12	"the returned answers based on their conceptual closeness conceptual closeness"	rdf:predicate	"base"
s12	"the returned answers based on their conceptual closeness conceptual closeness"	rdf:object	"the returned returned answers answers based on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"
s12	"the returned returned answers answers based on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness"
s12	"the returned returned answers answers based on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"answers answers"
s12	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s12	"conceptual closeness"	rdfs:subClassOf	"closeness"
s12	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s12	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s12	"conceptual closeness"	rdfs:member	"conceptual"
s12	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s12	"closeness closeness"	rdfs:member	"closeness"
s12	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s12	"conceptual conceptual"	rdfs:member	"conceptual"
s12	"answers answers"	rdfs:subClassOf	"answers"
s12	"answers answers"	rdfs:member	"answers"
s12	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s12	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s12	"closeness closeness"	rdfs:subClassOf	"closeness"
s12	"conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness"
s12	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness"
s12	"closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual conceptual closeness closeness"
s12	"closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness conceptual conceptual closeness closeness"
s12	"conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness conceptual conceptual closeness closeness"
s12	"conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness conceptual conceptual closeness closeness"
s12	"answers answers based_on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"answers answers"
s12	"answers answers based_on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness conceptual conceptual closeness closeness"
s11.3	"submitted query"
s11.3	"submitted query"	rdf:subject	"query"
s11.3	"submitted query"	rdf:predicate	"submit"
s11.2	"the available collection of ontologies completely satisfy a submitted query"
s11.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:subject	"available collection of ontologies"
s11.2	"available collection of ontologies"	rdfs:member	"available collection"
s11.2	"available collection of ontologies"	rdfs:member	"ontologies"
s11.2	"available collection"	rdfs:subClassOf	"collection"
s11.2	"available collection"	rdfs:member	"available"
s11.2	"available collection of ontologies"	rdfs:member	"available collection"
s11.2	"available collection of ontologies"	rdfs:member	"ontologies"
s11.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:predicate	"satisfy"
s11.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:object	"submitted query"
s11.2	"the available collection of ontologies completely satisfy a submitted query"	local:AM-MNR	"completely"
s11.1	"combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"
s11.1	"combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:subject	"combiSQORE"
s11.1	"combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:predicate	"determine"
s11.1	"combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:object	"whether the available collection of ontologies is able to completely satisfy a submitted query"
s11.1	"whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"available collection"
s11.1	"whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"submitted query"
s11.1	"whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"ontologies"
s11.1	"submitted query"	rdfs:subClassOf	"query"
s11.1	"available collection"	rdfs:subClassOf	"collection"
s11.1	"available collection"	rdfs:member	"available"
s11.1	"submitted query"	rdfs:member	"submitted"
s11.1	"completely satisfy"	rdfs:subClassOf	"satisfy"
s11.1	"available collection of ontologies"	rdfs:member	"available collection"
s11.1	"available collection of ontologies"	rdfs:member	"ontologies"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:subject	"paper"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:predicate	"develop"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:object	"algorithm namely combiSQORE determine whether the available collection of ontologies is able to completely satisfy a submitted query"
s11	"algorithm namely combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"algorithm"
s11	"algorithm namely combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"ontologies"
s11	"algorithm namely combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"submitted query"
s11	"algorithm namely combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"available collection"
s11	"algorithm namely combisqore determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdfs:member	"namely combisqore determine"
s11	"namely combisqore determine"	rdfs:subClassOf	"determine"
s11	"namely combisqore"	rdfs:subClassOf	"combisqore"
s11	"submitted query"	rdfs:subClassOf	"query"
s11	"combisqore determine"	rdfs:subClassOf	"determine"
s11	"available collection"	rdfs:subClassOf	"collection"
s11	"namely combisqore determine"	rdfs:member	"namely combisqore"
s11	"submitted query"	rdfs:member	"submitted"
s11	"namely combisqore"	rdfs:member	"namely"
s11	"available collection"	rdfs:member	"available"
s11	"combisqore determine"	rdfs:member	"combisqore"
s11	"completely satisfy"	rdfs:subClassOf	"satisfy"
s11	"available collection of ontologies"	rdfs:member	"available collection"
s11	"available collection of ontologies"	rdfs:member	"ontologies"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	local:AM-DIS	"Thus"
s10.2	"the available collection of ontologies return a single ontology"
s10.2	"the available collection of ontologies return a single ontology"	rdf:subject	"available collection of ontologies"
s10.2	"available collection of ontologies"	rdfs:member	"available collection"
s10.2	"available collection of ontologies"	rdfs:member	"ontologies"
s10.2	"available collection"	rdfs:subClassOf	"collection"
s10.2	"available collection"	rdfs:member	"available"
s10.2	"available collection of ontologies"	rdfs:member	"available collection"
s10.2	"available collection of ontologies"	rdfs:member	"ontologies"
s10.2	"the available collection of ontologies return a single ontology"	rdf:predicate	"return"
s10.2	"the available collection of ontologies return a single ontology"	rdf:object	"single ontology"
s10.2	"single ontology"	rdfs:member	"single"
s10.2	"single ontology"	rdfs:subClassOf	"ontology"
s10.1	"combisqore determine whether the available collection of ontologies is able to return a single ontology"
s10.1	"combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdf:subject	"combiSQORE"
s10.1	"combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdf:predicate	"determine"
s10.1	"combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdf:object	"whether the available collection of ontologies is able to return a single ontology"
s10.1	"whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"single ontology"
s10.1	"whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"available collection"
s10.1	"whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"ontologies"
s10.1	"available collection"	rdfs:subClassOf	"collection"
s10.1	"single ontology"	rdfs:member	"single"
s10.1	"available collection"	rdfs:member	"available"
s10.1	"single ontology"	rdfs:subClassOf	"ontology"
s10.1	"available collection of ontologies"	rdfs:member	"available collection"
s10.1	"available collection of ontologies"	rdfs:member	"ontologies"
s10	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"
s10	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:subject	"paper"
s10	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:predicate	"develop"
s10	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:object	"algorithm namely combiSQORE determine whether the available collection of ontologies is able to return a single ontology"
s10	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"algorithm"
s10	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"ontologies"
s10	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"available collection"
s10	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"single ontology"
s10	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a single ontology"	rdfs:member	"namely combisqore determine"
s10	"namely combisqore"	rdfs:subClassOf	"combisqore"
s10	"single ontology"	rdfs:subClassOf	"ontology"
s10	"combisqore determine"	rdfs:subClassOf	"determine"
s10	"single ontology"	rdfs:member	"single"
s10	"available collection"	rdfs:subClassOf	"collection"
s10	"namely combisqore determine"	rdfs:member	"namely combisqore"
s10	"namely combisqore"	rdfs:member	"namely"
s10	"namely combisqore determine"	rdfs:subClassOf	"determine"
s10	"available collection"	rdfs:member	"available"
s10	"combisqore determine"	rdfs:member	"combisqore"
s10	"available collection of ontologies"	rdfs:member	"available collection"
s10	"available collection of ontologies"	rdfs:member	"ontologies"
s10	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	local:AM-DIS	"Thus"
s9	"a single ontology that guarantees query coverage"
s9	"a single ontology that guarantees query coverage"	rdf:subject	"single ontology"
s9	"single ontology"	rdfs:member	"single"
s9	"single ontology"	rdfs:subClassOf	"ontology"
s9	"a single ontology that guarantees query coverage"	rdf:predicate	"guarantee"
s9	"a single ontology that guarantees query coverage"	rdf:object	"query coverage"
s9	"query coverage"	rdfs:member	"query"
s9	"query coverage"	rdfs:subClassOf	"coverage"
s8	"a combinative ontology that guarantees query coverage"
s8	"a combinative ontology that guarantees query coverage"	rdf:subject	"combinative ontology"
s8	"combinative ontology"	rdfs:subClassOf	"ontology"
s8	"combinative ontology"	rdfs:member	"combinative"
s8	"a combinative ontology that guarantees query coverage"	rdf:predicate	"guarantee"
s8	"a combinative ontology that guarantees query coverage"	rdf:object	"query coverage"
s8	"query coverage"	rdfs:member	"query"
s8	"query coverage"	rdfs:subClassOf	"coverage"
s7.2	"the available collection of ontologies return a combinative ontology"
s7.2	"the available collection of ontologies return a combinative ontology"	rdf:subject	"available collection of ontologies"
s7.2	"available collection of ontologies"	rdfs:member	"available collection"
s7.2	"available collection of ontologies"	rdfs:member	"ontologies"
s7.2	"available collection"	rdfs:subClassOf	"collection"
s7.2	"available collection"	rdfs:member	"available"
s7.2	"available collection of ontologies"	rdfs:member	"available collection"
s7.2	"available collection of ontologies"	rdfs:member	"ontologies"
s7.2	"the available collection of ontologies return a combinative ontology"	rdf:predicate	"return"
s7.2	"the available collection of ontologies return a combinative ontology"	rdf:object	"combinative ontology"
s7.2	"combinative ontology"	rdfs:subClassOf	"ontology"
s7.2	"combinative ontology"	rdfs:member	"combinative"
s7.1	"combisqore determine whether the available collection of ontologies is able to return a combinative ontology"
s7.1	"combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:subject	"combiSQORE"
s7.1	"combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:predicate	"determine"
s7.1	"combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:object	"whether the available collection of ontologies is able to return a combinative ontology"
s7.1	"whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"available collection"
s7.1	"whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"combinative ontology"
s7.1	"whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"ontologies"
s7.1	"combinative ontology"	rdfs:subClassOf	"ontology"
s7.1	"available collection"	rdfs:subClassOf	"collection"
s7.1	"available collection"	rdfs:member	"available"
s7.1	"combinative ontology"	rdfs:member	"combinative"
s7.1	"available collection of ontologies"	rdfs:member	"available collection"
s7.1	"available collection of ontologies"	rdfs:member	"ontologies"
s7	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"
s7	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:subject	"paper"
s7	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:predicate	"develop"
s7	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:object	"algorithm namely combiSQORE determine whether the available collection of ontologies is able to return a combinative ontology"
s7	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"algorithm"
s7	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"ontologies"
s7	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"available collection"
s7	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"namely combisqore determine"
s7	"algorithm namely combisqore determine whether the available collection of ontologies is able to return a combinative ontology"	rdfs:member	"combinative ontology"
s7	"namely combisqore"	rdfs:subClassOf	"combisqore"
s7	"combinative ontology"	rdfs:member	"combinative"
s7	"combisqore determine"	rdfs:subClassOf	"determine"
s7	"available collection"	rdfs:subClassOf	"collection"
s7	"namely combisqore determine"	rdfs:member	"namely combisqore"
s7	"namely combisqore"	rdfs:member	"namely"
s7	"namely combisqore determine"	rdfs:subClassOf	"determine"
s7	"combinative ontology"	rdfs:subClassOf	"ontology"
s7	"available collection"	rdfs:member	"available"
s7	"combisqore determine"	rdfs:member	"combisqore"
s7	"available collection of ontologies"	rdfs:member	"available collection"
s7	"available collection of ontologies"	rdfs:member	"ontologies"
s7	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	local:AM-DIS	"Thus"
s6	"ontologies which can entirely fulfill the requirements"
s6	"ontologies which can entirely fulfill the requirements"	rdf:subject	"ontologies"
s6	"ontologies which can entirely fulfill the requirements"	rdf:predicate	"fulfill"
s6	"ontologies which can entirely fulfill the requirements"	rdf:object	"requirements"
s6	"ontologies which can entirely fulfill the requirements"	local:AM-MNR	"entirely"
s6	"ontologies which can entirely fulfill the requirements"	local:AM-MOD	"can"
s5.3	"existing ontologies"
s5.3	"existing ontologies"	rdf:subject	"ontologies"
s5.3	"existing ontologies"	rdf:predicate	"exist"
s5.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"
s5.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:subject	"mechanism"
s5.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:predicate	"check"
s5.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:object	"concept adequacy of existing ontologies user query"
s5.2	"concept adequacy of existing ontologies user query"	rdfs:member	"user query"
s5.2	"concept adequacy of existing ontologies user query"	rdfs:member	"concept adequacy"
s5.2	"concept adequacy of existing ontologies user query"	rdfs:member	"ontologies"
s5.2	"concept adequacy"	rdfs:member	"concept"
s5.2	"user query"	rdfs:subClassOf	"query"
s5.2	"concept adequacy"	rdfs:subClassOf	"adequacy"
s5.2	"user query"	rdfs:member	"user"
s5.2	"ontologies user query"	rdfs:subClassOf	"user query"
s5.2	"existing ontologies user query"	rdfs:subClassOf	"ontologies user query"
s5.2	"concept adequacy of existing ontologies user query"	rdfs:member	"concept adequacy"
s5.2	"concept adequacy of existing ontologies user query"	rdfs:member	"existing ontologies user query"
s5.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	local:AM-MNR	"respect"
s5.1	"increasing demand"
s5.1	"increasing demand"	rdf:subject	"demand"
s5.1	"increasing demand"	rdf:predicate	"increase"
s5	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"
s5	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdf:subject	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"tool"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"algorithm"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"mechanism"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"ontologies"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"user query"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"concept adequacy"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"demand"
s5	"increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdfs:member	"respect"
s5	"concept adequacy"	rdfs:member	"concept"
s5	"user query"	rdfs:subClassOf	"query"
s5	"concept adequacy"	rdfs:subClassOf	"adequacy"
s5	"user query"	rdfs:member	"user"
s5	"existing ontologies"	rdfs:subClassOf	"ontologies"
s5	"increasing demand"	rdfs:subClassOf	"demand"
s5	"increasing demand for tool"	rdfs:member	"increasing demand"
s5	"increasing demand for tool"	rdfs:member	"tool"
s5	"increasing demand for tool for algorithm"	rdfs:member	"increasing demand for tool"
s5	"increasing demand for tool for algorithm"	rdfs:member	"algorithm"
s5	"tool with mechanism"	rdfs:member	"tool"
s5	"tool with mechanism"	rdfs:member	"mechanism"
s5	"concept adequacy of existing ontologies"	rdfs:member	"concept adequacy"
s5	"concept adequacy of existing ontologies"	rdfs:member	"existing ontologies"
s5	"check with_respect_to user query"	rdfs:member	"check"
s5	"check with_respect_to user query"	rdfs:member	"user query"
s5	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdf:predicate	"arise"
s5	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	local:AM-ADV	"Therefore there"
s4	"therefore there arises combination of ontologies"
s4	"therefore there arises combination of ontologies"	rdf:subject	"combination of ontologies"
s4	"combination of ontologies"	rdfs:member	"ontologies"
s4	"combination of ontologies"	rdfs:member	"combination"
s4	"combination of ontologies"	rdfs:member	"combination"
s4	"combination of ontologies"	rdfs:member	"ontologies"
s4	"therefore there arises combination of ontologies"	rdf:predicate	"arise"
s4	"therefore there arises combination of ontologies"	local:AM-ADV	"Therefore there"
s3.2	"recommend a single"
s3.2	"recommend a single"	rdf:subject	"single"
s3.2	"recommend a single"	rdf:predicate	"recommend"
s3.1	"increasing demand"
s3.1	"increasing demand"	rdf:subject	"demand"
s3.1	"increasing demand"	rdf:predicate	"increase"
s3	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"
s3	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdf:subject	"increasing demand for a tool or algorithm with a mechanism to recommend a single"
s3	"increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"tool"
s3	"increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"algorithm"
s3	"increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"mechanism"
s3	"increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"demand"
s3	"increasing demand"	rdfs:subClassOf	"demand"
s3	"increasing demand for tool"	rdfs:member	"increasing demand"
s3	"increasing demand for tool"	rdfs:member	"tool"
s3	"increasing demand for tool for algorithm"	rdfs:member	"increasing demand for tool"
s3	"increasing demand for tool for algorithm"	rdfs:member	"algorithm"
s3	"tool with mechanism"	rdfs:member	"tool"
s3	"tool with mechanism"	rdfs:member	"mechanism"
s3	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdf:predicate	"arise"
s3	"therefore there arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"	local:AM-ADV	"Therefore there"
s2.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"
s2.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:subject	"Existing ontology retrieval systems"
s2.1	"retrieval systems"	rdfs:member	"retrieval"
s2.1	"ontology retrieval"	rdfs:subClassOf	"retrieval"
s2.1	"ontology retrieval systems"	rdfs:member	"ontology retrieval"
s2.1	"retrieval systems"	rdfs:subClassOf	"systems"
s2.1	"ontology retrieval systems"	rdfs:subClassOf	"systems"
s2.1	"ontology retrieval"	rdfs:member	"ontology"
s2.1	"ontology retrieval systems"	rdfs:subClassOf	"retrieval systems"
s2.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:predicate	"return"
s2.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:object	"lengthy list of relevant single ontologies"
s2.1	"lengthy list of relevant single ontologies"	rdfs:member	"lengthy list"
s2.1	"lengthy list of relevant single ontologies"	rdfs:member	"relevant single ontologies"
s2.1	"relevant single ontologies"	rdfs:member	"relevant single"
s2.1	"relevant single ontologies"	rdfs:subClassOf	"ontologies"
s2.1	"lengthy list"	rdfs:subClassOf	"list"
s2.1	"relevant single"	rdfs:member	"relevant"
s2.1	"single ontologies"	rdfs:subClassOf	"ontologies"
s2.1	"relevant single"	rdfs:subClassOf	"single"
s2.1	"lengthy list"	rdfs:member	"lengthy"
s2.1	"single ontologies"	rdfs:member	"single"
s2.1	"relevant single ontologies"	rdfs:subClassOf	"single ontologies"
s2.1	"lengthy list of relevant single ontologies"	rdfs:member	"lengthy list"
s2.1	"lengthy list of relevant single ontologies"	rdfs:member	"relevant single ontologies"
s2.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	local:AM-ADV	"merely"
s2	"existing ontology retrieval systems"
s2	"existing ontology retrieval systems"	rdf:subject	"ontology retrieval systems"
s2	"retrieval systems"	rdfs:member	"retrieval"
s2	"ontology retrieval"	rdfs:subClassOf	"retrieval"
s2	"ontology retrieval systems"	rdfs:member	"ontology retrieval"
s2	"retrieval systems"	rdfs:subClassOf	"systems"
s2	"ontology retrieval systems"	rdfs:subClassOf	"systems"
s2	"ontology retrieval"	rdfs:member	"ontology"
s2	"ontology retrieval systems"	rdfs:subClassOf	"retrieval systems"
s2	"existing ontology retrieval systems"	rdf:predicate	"Existing"
s1.1	"specified user requirements"
s1.1	"specified user requirements"	rdf:subject	"user requirements"
s1.1	"user requirements"	rdfs:member	"user"
s1.1	"user requirements"	rdfs:subClassOf	"requirements"
s1.1	"specified user requirements"	rdf:predicate	"specify"
s1	"relevant single ontologies which may not completely cover the specified user requirements"
s1	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:subject	"specified user requirements"
s1	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:predicate	"not cover"
s1	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:object	"relevant single ontologies"
s1	"relevant single ontologies"	rdfs:member	"relevant single"
s1	"relevant single ontologies"	rdfs:subClassOf	"ontologies"
s1	"relevant single"	rdfs:member	"relevant"
s1	"single ontologies"	rdfs:subClassOf	"ontologies"
s1	"relevant single"	rdfs:subClassOf	"single"
s1	"single ontologies"	rdfs:member	"single"
s1	"relevant single ontologies"	rdfs:subClassOf	"single ontologies"
s1	"relevant single ontologies which may not completely cover the specified user requirements"	local:AM-MNR	"completely"
s1	"relevant single ontologies which may not completely cover the specified user requirements"	local:AM-MOD	"may"
s0	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"
s0	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:subject	"Automatic knowledge reuse for Semantic Web applications"
s0	"automatic knowledge reuse for semantic web applications"	rdfs:member	"automatic knowledge reuse"
s0	"automatic knowledge reuse for semantic web applications"	rdfs:member	"semantic web applications"
s0	"web applications"	rdfs:subClassOf	"applications"
s0	"semantic web"	rdfs:subClassOf	"web"
s0	"web applications"	rdfs:member	"web"
s0	"semantic web applications"	rdfs:member	"semantic web"
s0	"automatic knowledge reuse"	rdfs:subClassOf	"reuse"
s0	"semantic web"	rdfs:member	"semantic"
s0	"semantic web applications"	rdfs:subClassOf	"applications"
s0	"automatic knowledge"	rdfs:subClassOf	"knowledge"
s0	"automatic knowledge"	rdfs:member	"automatic"
s0	"knowledge reuse"	rdfs:member	"knowledge"
s0	"automatic knowledge reuse"	rdfs:member	"automatic knowledge"
s0	"knowledge reuse"	rdfs:subClassOf	"reuse"
s0	"semantic web applications"	rdfs:subClassOf	"web applications"
s0	"automatic knowledge reuse"	rdfs:subClassOf	"knowledge reuse"
s0	"automatic knowledge reuse for semantic web applications"	rdfs:member	"automatic knowledge reuse"
s0	"automatic knowledge reuse for semantic web applications"	rdfs:member	"semantic web applications"
s0	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:predicate	"impose"
s0	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:object	"several challenges ontology search"
s0	"several challenges ontology search"	rdfs:member	"several challenges"
s0	"several challenges ontology search"	rdfs:member	"search"
s0	"several challenges"	rdfs:subClassOf	"challenges"
s0	"several challenges"	rdfs:member	"several"
s0	"ontology search"	rdfs:subClassOf	"search"
