s19.1	"proposed algorithm"
s19.1	"proposed algorithm"	rdf:subject	"algorithm"
s19.1	"proposed algorithm"	rdf:predicate	"propose"
s19	"the experimental results show that the proposed algorithm is simple"
s19	"the experimental results show that the proposed algorithm is simple"	rdf:subject	"experimental result"
s19	"experimental result"	rdfs:subClassOf	"result"
s19	"experimental result"	rdfs:member	"experimental"
s19	"the experimental results show that the proposed algorithm is simple"	rdf:predicate	"show"
s19	"the experimental results show that the proposed algorithm is simple"	rdf:object	"propose algorithm be simple"
s19	"propose algorithm"	rdfs:subClassOf	"algorithm"
s19	"propose algorithm"	rdfs:member	"propose"
s19	"propose simple"	rdfs:subClassOf	"simple"
s18.1	"proposed algorithm"
s18.1	"proposed algorithm"	rdf:subject	"algorithm"
s18.1	"proposed algorithm"	rdf:predicate	"propose"
s18	"the experimental results show that the proposed algorithm is effective"
s18	"the experimental results show that the proposed algorithm is effective"	rdf:subject	"experimental result"
s18	"experimental result"	rdfs:subClassOf	"result"
s18	"experimental result"	rdfs:member	"experimental"
s18	"the experimental results show that the proposed algorithm is effective"	rdf:predicate	"show"
s18	"the experimental results show that the proposed algorithm is effective"	rdf:object	"propose algorithm be effective"
s18	"propose algorithm"	rdfs:subClassOf	"algorithm"
s18	"propose algorithm"	rdfs:member	"propose"
s18	"propose effective"	rdfs:subClassOf	"effective"
s17.1	"proposed algorithm"
s17.1	"proposed algorithm"	rdf:subject	"algorithm"
s17.1	"proposed algorithm"	rdf:predicate	"propose"
s17	"the experimental results show that the proposed algorithm is efficient"
s17	"the experimental results show that the proposed algorithm is efficient"	rdf:subject	"experimental result"
s17	"experimental result"	rdfs:subClassOf	"result"
s17	"experimental result"	rdfs:member	"experimental"
s17	"the experimental results show that the proposed algorithm is efficient"	rdf:predicate	"show"
s17	"the experimental results show that the proposed algorithm is efficient"	rdf:object	"propose algorithm be efficient"
s17	"propose algorithm"	rdfs:subClassOf	"algorithm"
s17	"propose algorithm"	rdfs:member	"propose"
s17	"propose efficient"	rdfs:subClassOf	"efficient"
s16	"the returned answers based on their conceptual closeness conceptual closeness"
s16	"the returned answers based on their conceptual closeness conceptual closeness"	rdf:predicate	"base"
s16	"the returned answers based on their conceptual closeness conceptual closeness"	rdf:object	"the return return answer answer base on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"
s16	"the return return answer answer base on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"return return answer answer base"
s16	"the return return answer answer base on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness"
s16	"conceptual closeness"	rdfs:member	"conceptual"
s16	"return return answer"	rdfs:subClassOf	"answer"
s16	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s16	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s16	"return answer answer base"	rdfs:subClassOf	"base"
s16	"conceptual conceptual"	rdfs:member	"conceptual"
s16	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s16	"return return answer answer base"	rdfs:subClassOf	"base"
s16	"return answer"	rdfs:subClassOf	"answer"
s16	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s16	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s16	"return return answer answer base"	rdfs:member	"return return answer answer"
s16	"answer base"	rdfs:subClassOf	"base"
s16	"return answer answer"	rdfs:member	"return answer"
s16	"return return"	rdfs:member	"return"
s16	"answer answer base"	rdfs:member	"answer answer"
s16	"return answer answer"	rdfs:subClassOf	"answer"
s16	"return return"	rdfs:subClassOf	"return"
s16	"answer answer"	rdfs:member	"answer"
s16	"conceptual closeness"	rdfs:subClassOf	"closeness"
s16	"answer answer"	rdfs:subClassOf	"answer"
s16	"return return answer"	rdfs:member	"return return"
s16	"closeness closeness"	rdfs:member	"closeness"
s16	"return answer"	rdfs:member	"return"
s16	"answer base"	rdfs:member	"answer"
s16	"return return answer answer"	rdfs:member	"return return answer"
s16	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s16	"closeness closeness"	rdfs:subClassOf	"closeness"
s16	"answer answer base"	rdfs:subClassOf	"base"
s16	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s16	"return return answer answer"	rdfs:subClassOf	"answer"
s16	"return answer answer base"	rdfs:member	"return answer answer"
s16	"conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness"
s16	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness"
s16	"closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual conceptual closeness closeness"
s16	"closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness conceptual conceptual closeness closeness"
s16	"conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness conceptual conceptual closeness closeness"
s16	"conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness conceptual conceptual closeness closeness"
s16	"answer answer base"	rdfs:subClassOf	"answer base"
s16	"return answer answer base"	rdfs:subClassOf	"answer answer base"
s16	"return return answer answer base"	rdfs:subClassOf	"return answer answer base"
s16	"return return answer answer base on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"return return answer answer base"
s16	"return return answer answer base on conceptual conceptual closeness closeness conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness conceptual conceptual closeness closeness"
s15	"the returned answers based on their conceptual closeness query coverage"
s15	"the returned answers based on their conceptual closeness query coverage"	rdf:predicate	"base"
s15	"the returned answers based on their conceptual closeness query coverage"	rdf:object	"the return return answer answer base on conceptual conceptual closeness closeness query query coverage coverage"
s15	"the return return answer answer base on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"return return answer answer base"
s15	"the return return answer answer base on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage coverage"
s15	"conceptual conceptual closeness closeness query query"	rdfs:member	"conceptual conceptual closeness closeness query"
s15	"conceptual conceptual closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s15	"query query coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual closeness"	rdfs:member	"conceptual"
s15	"conceptual closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual closeness closeness query"	rdfs:subClassOf	"query"
s15	"return return answer"	rdfs:subClassOf	"answer"
s15	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s15	"closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"closeness query query"	rdfs:member	"closeness query"
s15	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s15	"return answer answer base"	rdfs:subClassOf	"base"
s15	"conceptual conceptual"	rdfs:member	"conceptual"
s15	"closeness closeness query query"	rdfs:subClassOf	"query"
s15	"conceptual closeness closeness query query"	rdfs:subClassOf	"query"
s15	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s15	"closeness closeness query query coverage"	rdfs:member	"closeness closeness query query"
s15	"return return answer answer base"	rdfs:subClassOf	"base"
s15	"query coverage coverage"	rdfs:member	"query coverage"
s15	"return answer"	rdfs:subClassOf	"answer"
s15	"query coverage"	rdfs:subClassOf	"coverage"
s15	"query query"	rdfs:member	"query"
s15	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s15	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s15	"conceptual closeness closeness query query"	rdfs:member	"conceptual closeness closeness query"
s15	"closeness query query"	rdfs:subClassOf	"query"
s15	"coverage coverage"	rdfs:member	"coverage"
s15	"query coverage"	rdfs:member	"query"
s15	"return return answer answer base"	rdfs:member	"return return answer answer"
s15	"closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"closeness closeness query query coverage"	rdfs:subClassOf	"coverage"
s15	"closeness closeness query query coverage coverage"	rdfs:member	"closeness closeness query query coverage"
s15	"answer base"	rdfs:subClassOf	"base"
s15	"conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual closeness closeness query query coverage"
s15	"return answer answer"	rdfs:member	"return answer"
s15	"query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"return return"	rdfs:member	"return"
s15	"query query"	rdfs:subClassOf	"query"
s15	"answer answer base"	rdfs:member	"answer answer"
s15	"closeness query query coverage"	rdfs:subClassOf	"coverage"
s15	"coverage coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual closeness closeness query"	rdfs:member	"conceptual closeness closeness"
s15	"return answer answer"	rdfs:subClassOf	"answer"
s15	"closeness query query coverage"	rdfs:member	"closeness query query"
s15	"conceptual conceptual closeness closeness query"	rdfs:subClassOf	"query"
s15	"return return"	rdfs:subClassOf	"return"
s15	"answer answer"	rdfs:member	"answer"
s15	"conceptual closeness closeness query query coverage"	rdfs:member	"conceptual closeness closeness query query"
s15	"conceptual conceptual closeness closeness query query"	rdfs:subClassOf	"query"
s15	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"conceptual closeness"	rdfs:subClassOf	"closeness"
s15	"closeness query"	rdfs:subClassOf	"query"
s15	"closeness closeness query"	rdfs:subClassOf	"query"
s15	"answer answer"	rdfs:subClassOf	"answer"
s15	"conceptual conceptual closeness closeness query"	rdfs:member	"conceptual conceptual closeness closeness"
s15	"return return answer"	rdfs:member	"return return"
s15	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage"
s15	"closeness closeness"	rdfs:member	"closeness"
s15	"return answer"	rdfs:member	"return"
s15	"answer base"	rdfs:member	"answer"
s15	"conceptual conceptual closeness closeness query query coverage"	rdfs:member	"conceptual conceptual closeness closeness query query"
s15	"closeness query query coverage coverage"	rdfs:member	"closeness query query coverage"
s15	"return return answer answer"	rdfs:member	"return return answer"
s15	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s15	"query query coverage"	rdfs:member	"query query"
s15	"closeness closeness"	rdfs:subClassOf	"closeness"
s15	"closeness closeness query"	rdfs:member	"closeness closeness"
s15	"query query coverage coverage"	rdfs:member	"query query coverage"
s15	"answer answer base"	rdfs:subClassOf	"base"
s15	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s15	"closeness closeness query query"	rdfs:member	"closeness closeness query"
s15	"closeness query"	rdfs:member	"closeness"
s15	"conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"return return answer answer"	rdfs:subClassOf	"answer"
s15	"return answer answer base"	rdfs:member	"return answer answer"
s15	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"coverage"
s15	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s15	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s15	"closeness query query coverage coverage"	rdfs:subClassOf	"query query coverage coverage"
s15	"closeness closeness query query coverage coverage"	rdfs:subClassOf	"closeness query query coverage coverage"
s15	"conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"closeness closeness query query coverage coverage"
s15	"conceptual conceptual closeness closeness query query coverage coverage"	rdfs:subClassOf	"conceptual closeness closeness query query coverage coverage"
s15	"answer answer base"	rdfs:subClassOf	"answer base"
s15	"return answer answer base"	rdfs:subClassOf	"answer answer base"
s15	"return return answer answer base"	rdfs:subClassOf	"return answer answer base"
s15	"return return answer answer base on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"return return answer answer base"
s15	"return return answer answer base on conceptual conceptual closeness closeness query query coverage coverage"	rdfs:member	"conceptual conceptual closeness closeness query query coverage coverage"
s14	"the returned answers based on query coverage query coverage"
s14	"the returned answers based on query coverage query coverage"	rdf:predicate	"base"
s14	"the returned answers based on query coverage query coverage"	rdf:object	"the return return answer answer base on query query coverage coverage query query coverage coverage"
s14	"the return return answer answer base on query query coverage coverage query query coverage coverage"	rdfs:member	"return return answer answer base"
s14	"the return return answer answer base on query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage coverage"
s14	"coverage query query"	rdfs:member	"coverage query"
s14	"coverage query query coverage coverage"	rdfs:member	"coverage query query coverage"
s14	"coverage coverage query"	rdfs:subClassOf	"query"
s14	"query query coverage"	rdfs:subClassOf	"coverage"
s14	"query coverage coverage query"	rdfs:subClassOf	"query"
s14	"query query coverage coverage query query coverage"	rdfs:member	"query query coverage coverage query query"
s14	"query coverage coverage query query coverage"	rdfs:member	"query coverage coverage query query"
s14	"query query coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s14	"return return answer"	rdfs:subClassOf	"answer"
s14	"query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage"
s14	"coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"query query coverage coverage query query"	rdfs:subClassOf	"query"
s14	"return answer answer base"	rdfs:subClassOf	"base"
s14	"coverage coverage query query coverage"	rdfs:member	"coverage coverage query query"
s14	"return return answer answer base"	rdfs:subClassOf	"base"
s14	"query coverage coverage"	rdfs:member	"query coverage"
s14	"return answer"	rdfs:subClassOf	"answer"
s14	"query coverage"	rdfs:subClassOf	"coverage"
s14	"query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"query query"	rdfs:member	"query"
s14	"query coverage coverage query query coverage coverage"	rdfs:member	"query coverage coverage query query coverage"
s14	"coverage query query coverage"	rdfs:member	"coverage query query"
s14	"coverage coverage"	rdfs:member	"coverage"
s14	"query coverage"	rdfs:member	"query"
s14	"return return answer answer base"	rdfs:member	"return return answer answer"
s14	"coverage coverage query"	rdfs:member	"coverage coverage"
s14	"coverage coverage query query"	rdfs:member	"coverage coverage query"
s14	"query coverage coverage query query"	rdfs:subClassOf	"query"
s14	"answer base"	rdfs:subClassOf	"base"
s14	"return answer answer"	rdfs:member	"return answer"
s14	"query coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s14	"query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"return return"	rdfs:member	"return"
s14	"query query"	rdfs:subClassOf	"query"
s14	"answer answer base"	rdfs:member	"answer answer"
s14	"coverage coverage"	rdfs:subClassOf	"coverage"
s14	"return answer answer"	rdfs:subClassOf	"answer"
s14	"query coverage coverage query query"	rdfs:member	"query coverage coverage query"
s14	"query query coverage coverage query query"	rdfs:member	"query query coverage coverage query"
s14	"return return"	rdfs:subClassOf	"return"
s14	"answer answer"	rdfs:member	"answer"
s14	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"coverage query query coverage"	rdfs:subClassOf	"coverage"
s14	"answer answer"	rdfs:subClassOf	"answer"
s14	"query coverage coverage query"	rdfs:member	"query coverage coverage"
s14	"return return answer"	rdfs:member	"return return"
s14	"coverage coverage query query"	rdfs:subClassOf	"query"
s14	"return answer"	rdfs:member	"return"
s14	"answer base"	rdfs:member	"answer"
s14	"coverage query"	rdfs:member	"coverage"
s14	"return return answer answer"	rdfs:member	"return return answer"
s14	"query query coverage"	rdfs:member	"query query"
s14	"coverage coverage query query coverage"	rdfs:subClassOf	"coverage"
s14	"coverage query query"	rdfs:subClassOf	"query"
s14	"query query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage"
s14	"coverage coverage query query coverage coverage"	rdfs:member	"coverage coverage query query coverage"
s14	"query query coverage coverage"	rdfs:member	"query query coverage"
s14	"answer answer base"	rdfs:subClassOf	"base"
s14	"query query coverage coverage query"	rdfs:member	"query query coverage coverage"
s14	"return return answer answer"	rdfs:subClassOf	"answer"
s14	"return answer answer base"	rdfs:member	"return answer answer"
s14	"coverage query"	rdfs:subClassOf	"query"
s14	"query query coverage coverage query"	rdfs:subClassOf	"query"
s14	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s14	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s14	"coverage query query coverage coverage"	rdfs:subClassOf	"query query coverage coverage"
s14	"coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage query query coverage coverage"
s14	"query coverage coverage query query coverage coverage"	rdfs:subClassOf	"coverage coverage query query coverage coverage"
s14	"query query coverage coverage query query coverage coverage"	rdfs:subClassOf	"query coverage coverage query query coverage coverage"
s14	"answer answer base"	rdfs:subClassOf	"answer base"
s14	"return answer answer base"	rdfs:subClassOf	"answer answer base"
s14	"return return answer answer base"	rdfs:subClassOf	"return answer answer base"
s14	"return return answer answer base on query query coverage coverage query query coverage coverage"	rdfs:member	"return return answer answer base"
s14	"return return answer answer base on query query coverage coverage query query coverage coverage"	rdfs:member	"query query coverage coverage query query coverage coverage"
s13	"this paper ranks the returned answers"
s13	"this paper ranks the returned answers"	rdf:subject	"paper"
s13	"this paper ranks the returned answers"	rdf:predicate	"rank"
s13	"this paper ranks the returned answers"	rdf:object	"return answer"
s13	"return answer"	rdfs:member	"return"
s13	"return answer"	rdfs:subClassOf	"answer"
s12	"the returned answers based on query coverage conceptual closeness"
s12	"the returned answers based on query coverage conceptual closeness"	rdf:predicate	"base"
s12	"the returned answers based on query coverage conceptual closeness"	rdf:object	"the return return answer answer base on query query coverage coverage conceptual conceptual closeness closeness"
s12	"the return return answer answer base on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"return return answer answer base"
s12	"the return return answer answer base on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"query query coverage coverage"
s12	"the return return answer answer base on query query coverage coverage conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness closeness"
s12	"query query coverage"	rdfs:subClassOf	"coverage"
s12	"conceptual closeness"	rdfs:member	"conceptual"
s12	"return return answer"	rdfs:subClassOf	"answer"
s12	"conceptual conceptual closeness"	rdfs:member	"conceptual conceptual"
s12	"conceptual conceptual closeness closeness"	rdfs:member	"conceptual conceptual closeness"
s12	"return answer answer base"	rdfs:subClassOf	"base"
s12	"conceptual conceptual"	rdfs:member	"conceptual"
s12	"conceptual conceptual"	rdfs:subClassOf	"conceptual"
s12	"return return answer answer base"	rdfs:subClassOf	"base"
s12	"query coverage coverage"	rdfs:member	"query coverage"
s12	"return answer"	rdfs:subClassOf	"answer"
s12	"query coverage"	rdfs:subClassOf	"coverage"
s12	"query query"	rdfs:member	"query"
s12	"conceptual conceptual closeness"	rdfs:subClassOf	"closeness"
s12	"conceptual closeness closeness"	rdfs:member	"conceptual closeness"
s12	"coverage coverage"	rdfs:member	"coverage"
s12	"query coverage"	rdfs:member	"query"
s12	"return return answer answer base"	rdfs:member	"return return answer answer"
s12	"answer base"	rdfs:subClassOf	"base"
s12	"return answer answer"	rdfs:member	"return answer"
s12	"query coverage coverage"	rdfs:subClassOf	"coverage"
s12	"return return"	rdfs:member	"return"
s12	"query query"	rdfs:subClassOf	"query"
s12	"answer answer base"	rdfs:member	"answer answer"
s12	"coverage coverage"	rdfs:subClassOf	"coverage"
s12	"return answer answer"	rdfs:subClassOf	"answer"
s12	"return return"	rdfs:subClassOf	"return"
s12	"answer answer"	rdfs:member	"answer"
s12	"query query coverage coverage"	rdfs:subClassOf	"coverage"
s12	"conceptual closeness"	rdfs:subClassOf	"closeness"
s12	"answer answer"	rdfs:subClassOf	"answer"
s12	"return return answer"	rdfs:member	"return return"
s12	"closeness closeness"	rdfs:member	"closeness"
s12	"return answer"	rdfs:member	"return"
s12	"answer base"	rdfs:member	"answer"
s12	"return return answer answer"	rdfs:member	"return return answer"
s12	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s12	"query query coverage"	rdfs:member	"query query"
s12	"closeness closeness"	rdfs:subClassOf	"closeness"
s12	"query query coverage coverage"	rdfs:member	"query query coverage"
s12	"answer answer base"	rdfs:subClassOf	"base"
s12	"conceptual closeness closeness"	rdfs:subClassOf	"closeness"
s12	"return return answer answer"	rdfs:subClassOf	"answer"
s12	"return answer answer base"	rdfs:member	"return answer answer"
s12	"conceptual closeness closeness"	rdfs:subClassOf	"closeness closeness"
s12	"conceptual conceptual closeness closeness"	rdfs:subClassOf	"conceptual closeness closeness"
s12	"query coverage coverage"	rdfs:subClassOf	"coverage coverage"
s12	"query query coverage coverage"	rdfs:subClassOf	"query coverage coverage"
s12	"answer answer base"	rdfs:subClassOf	"answer base"
s12	"return answer answer base"	rdfs:subClassOf	"answer answer base"
s12	"return return answer answer base"	rdfs:subClassOf	"return answer answer base"
s12	"return return answer answer base on query query coverage coverage"	rdfs:member	"return return answer answer base"
s12	"return return answer answer base on query query coverage coverage"	rdfs:member	"query query coverage coverage"
s11.2	"the available collection of ontologies return a single ontology"
s11.2	"the available collection of ontologies return a single ontology"	rdf:subject	"available collection of ontology"
s11.2	"available collection of ontology"	rdfs:member	"ontology"
s11.2	"available collection of ontology"	rdfs:member	"available collection"
s11.2	"available collection"	rdfs:member	"available"
s11.2	"available collection"	rdfs:subClassOf	"collection"
s11.2	"available collection of ontology"	rdfs:member	"available collection"
s11.2	"available collection of ontology"	rdfs:member	"ontology"
s11.2	"the available collection of ontologies return a single ontology"	rdf:predicate	"return"
s11.2	"the available collection of ontologies return a single ontology"	rdf:object	"single ontology"
s11.2	"single ontology"	rdfs:member	"single"
s11.2	"single ontology"	rdfs:subClassOf	"ontology"
s11.1	"this paper determine whether the available collection of ontologies is able to return a single ontology"
s11.1	"this paper determine whether the available collection of ontologies is able to return a single ontology"	rdf:subject	"paper"
s11.1	"this paper determine whether the available collection of ontologies is able to return a single ontology"	rdf:predicate	"determine"
s11.1	"this paper determine whether the available collection of ontologies is able to return a single ontology"	rdf:object	"whether the available collection of ontology be able to return a single ontology"
s11.1	"whether the available collection of ontology be able to return a single ontology"	rdfs:member	"single ontology"
s11.1	"whether the available collection of ontology be able to return a single ontology"	rdfs:member	"ontology"
s11.1	"whether the available collection of ontology be able to return a single ontology"	rdfs:member	"available collection"
s11.1	"available collection"	rdfs:member	"available"
s11.1	"single ontology"	rdfs:member	"single"
s11.1	"single ontology"	rdfs:subClassOf	"ontology"
s11.1	"available collection"	rdfs:subClassOf	"collection"
s11.1	"available collection of ontology"	rdfs:member	"available collection"
s11.1	"available collection of ontology"	rdfs:member	"ontology"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:subject	"paper"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:predicate	"develop"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	rdf:object	"algorithm namely combisqore determine whether the available collection of ontology be able to return a single ontology"
s11	"algorithm namely combisqore determine whether the available collection of ontology be able to return a single ontology"	rdfs:member	"single ontology"
s11	"algorithm namely combisqore determine whether the available collection of ontology be able to return a single ontology"	rdfs:member	"ontology"
s11	"algorithm namely combisqore determine whether the available collection of ontology be able to return a single ontology"	rdfs:member	"available collection"
s11	"algorithm namely combisqore determine whether the available collection of ontology be able to return a single ontology"	rdfs:member	"algorithm"
s11	"available collection"	rdfs:member	"available"
s11	"single ontology"	rdfs:member	"single"
s11	"single ontology"	rdfs:subClassOf	"ontology"
s11	"available collection"	rdfs:subClassOf	"collection"
s11	"namely combisqore"	rdfs:subClassOf	"combisqore"
s11	"available collection of ontology"	rdfs:member	"available collection"
s11	"available collection of ontology"	rdfs:member	"ontology"
s11	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a single ontology"	local:AM-DIS	"thus"
s10	"a combinative ontology that guarantees query coverage"
s10	"a combinative ontology that guarantees query coverage"	rdf:subject	"combinative ontology"
s10	"combinative ontology"	rdfs:member	"combinative"
s10	"combinative ontology"	rdfs:subClassOf	"ontology"
s10	"a combinative ontology that guarantees query coverage"	rdf:predicate	"guarantee"
s10	"a combinative ontology that guarantees query coverage"	rdf:object	"query coverage"
s10	"query coverage"	rdfs:member	"query"
s10	"query coverage"	rdfs:subClassOf	"coverage"
s9.2	"the available collection of ontologies return a combinative ontology"
s9.2	"the available collection of ontologies return a combinative ontology"	rdf:subject	"available collection of ontology"
s9.2	"available collection of ontology"	rdfs:member	"ontology"
s9.2	"available collection of ontology"	rdfs:member	"available collection"
s9.2	"available collection"	rdfs:member	"available"
s9.2	"available collection"	rdfs:subClassOf	"collection"
s9.2	"available collection of ontology"	rdfs:member	"available collection"
s9.2	"available collection of ontology"	rdfs:member	"ontology"
s9.2	"the available collection of ontologies return a combinative ontology"	rdf:predicate	"return"
s9.2	"the available collection of ontologies return a combinative ontology"	rdf:object	"combinative ontology"
s9.2	"combinative ontology"	rdfs:member	"combinative"
s9.2	"combinative ontology"	rdfs:subClassOf	"ontology"
s9.1	"this paper determine whether the available collection of ontologies is able to return a combinative ontology"
s9.1	"this paper determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:subject	"paper"
s9.1	"this paper determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:predicate	"determine"
s9.1	"this paper determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:object	"whether the available collection of ontology be able to return a combinative ontology"
s9.1	"whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"ontology"
s9.1	"whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"combinative ontology"
s9.1	"whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"available collection"
s9.1	"combinative ontology"	rdfs:member	"combinative"
s9.1	"combinative ontology"	rdfs:subClassOf	"ontology"
s9.1	"available collection"	rdfs:subClassOf	"collection"
s9.1	"available collection"	rdfs:member	"available"
s9.1	"available collection of ontology"	rdfs:member	"available collection"
s9.1	"available collection of ontology"	rdfs:member	"ontology"
s9	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"
s9	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:subject	"paper"
s9	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:predicate	"develop"
s9	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	rdf:object	"algorithm namely combisqore determine whether the available collection of ontology be able to return a combinative ontology"
s9	"algorithm namely combisqore determine whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"ontology"
s9	"algorithm namely combisqore determine whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"combinative ontology"
s9	"algorithm namely combisqore determine whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"available collection"
s9	"algorithm namely combisqore determine whether the available collection of ontology be able to return a combinative ontology"	rdfs:member	"algorithm"
s9	"combinative ontology"	rdfs:member	"combinative"
s9	"combinative ontology"	rdfs:subClassOf	"ontology"
s9	"available collection"	rdfs:subClassOf	"collection"
s9	"available collection"	rdfs:member	"available"
s9	"namely combisqore"	rdfs:subClassOf	"combisqore"
s9	"available collection of ontology"	rdfs:member	"available collection"
s9	"available collection of ontology"	rdfs:member	"ontology"
s9	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to return a combinative ontology"	local:AM-DIS	"thus"
s8.3	"submitted query"
s8.3	"submitted query"	rdf:subject	"query"
s8.3	"submitted query"	rdf:predicate	"submit"
s8.2	"the available collection of ontologies completely satisfy a submitted query"
s8.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:subject	"available collection of ontology"
s8.2	"available collection of ontology"	rdfs:member	"ontology"
s8.2	"available collection of ontology"	rdfs:member	"available collection"
s8.2	"available collection"	rdfs:member	"available"
s8.2	"available collection"	rdfs:subClassOf	"collection"
s8.2	"available collection of ontology"	rdfs:member	"available collection"
s8.2	"available collection of ontology"	rdfs:member	"ontology"
s8.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:predicate	"satisfy"
s8.2	"the available collection of ontologies completely satisfy a submitted query"	rdf:object	"submit query"
s8.2	"submit query"	rdfs:member	"submit"
s8.2	"submit query"	rdfs:subClassOf	"query"
s8.2	"the available collection of ontologies completely satisfy a submitted query"	local:AM-MNR	"completely"
s8.1	"this paper determine whether the available collection of ontologies is able to completely satisfy a submitted query"
s8.1	"this paper determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:subject	"paper"
s8.1	"this paper determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:predicate	"determine"
s8.1	"this paper determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:object	"whether the available collection of ontology be able to completely satisfy a submit query"
s8.1	"whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"ontology"
s8.1	"whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"available collection"
s8.1	"whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"submit query"
s8.1	"available collection"	rdfs:member	"available"
s8.1	"submit query"	rdfs:member	"submit"
s8.1	"available collection"	rdfs:subClassOf	"collection"
s8.1	"submit query"	rdfs:subClassOf	"query"
s8.1	"completely satisfy"	rdfs:subClassOf	"satisfy"
s8.1	"available collection of ontology"	rdfs:member	"available collection"
s8.1	"available collection of ontology"	rdfs:member	"ontology"
s8	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"
s8	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:subject	"paper"
s8	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:predicate	"develop"
s8	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	rdf:object	"algorithm namely combisqore determine whether the available collection of ontology be able to completely satisfy a submit query"
s8	"algorithm namely combisqore determine whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"ontology"
s8	"algorithm namely combisqore determine whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"submit query"
s8	"algorithm namely combisqore determine whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"available collection"
s8	"algorithm namely combisqore determine whether the available collection of ontology be able to completely satisfy a submit query"	rdfs:member	"algorithm"
s8	"available collection"	rdfs:member	"available"
s8	"submit query"	rdfs:member	"submit"
s8	"available collection"	rdfs:subClassOf	"collection"
s8	"submit query"	rdfs:subClassOf	"query"
s8	"completely satisfy"	rdfs:subClassOf	"satisfy"
s8	"namely combisqore"	rdfs:subClassOf	"combisqore"
s8	"available collection of ontology"	rdfs:member	"available collection"
s8	"available collection of ontology"	rdfs:member	"ontology"
s8	"thus this paper develops an algorithm namely combisqore to determine whether the available collection of ontologies is able to completely satisfy a submitted query"	local:AM-DIS	"thus"
s7	"a single ontology that guarantees query coverage"
s7	"a single ontology that guarantees query coverage"	rdf:subject	"single ontology"
s7	"single ontology"	rdfs:member	"single"
s7	"single ontology"	rdfs:subClassOf	"ontology"
s7	"a single ontology that guarantees query coverage"	rdf:predicate	"guarantee"
s7	"a single ontology that guarantees query coverage"	rdf:object	"query coverage"
s7	"query coverage"	rdfs:member	"query"
s7	"query coverage"	rdfs:subClassOf	"coverage"
s6.2	"recommend a single"
s6.2	"recommend a single"	rdf:subject	"single"
s6.2	"recommend a single"	rdf:predicate	"recommend"
s6.1	"increasing demand"
s6.1	"increasing demand"	rdf:subject	"demand"
s6.1	"increasing demand"	rdf:predicate	"increase"
s6	"arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"
s6	"arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdf:subject	"increase demand for a tool or algorithm with a mechanism to recommend a single"
s6	"increase demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"tool"
s6	"increase demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"increase demand"
s6	"increase demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"mechanism"
s6	"increase demand for a tool or algorithm with a mechanism to recommend a single"	rdfs:member	"algorithm"
s6	"increase demand"	rdfs:member	"increase"
s6	"increase demand"	rdfs:subClassOf	"demand"
s6	"increase demand for tool"	rdfs:member	"increase demand"
s6	"increase demand for tool"	rdfs:member	"tool"
s6	"increase demand for tool for algorithm"	rdfs:member	"increase demand for tool"
s6	"increase demand for tool for algorithm"	rdfs:member	"algorithm"
s6	"tool with mechanism"	rdfs:member	"tool"
s6	"tool with mechanism"	rdfs:member	"mechanism"
s6	"arises an increasing demand for a tool or algorithm with a mechanism to recommend a single"	rdf:predicate	"arise"
s5	"arises combination of ontologies"
s5	"arises combination of ontologies"	rdf:subject	"combination of ontology"
s5	"combination of ontology"	rdfs:member	"ontology"
s5	"combination of ontology"	rdfs:member	"combination"
s5	"combination of ontology"	rdfs:member	"combination"
s5	"combination of ontology"	rdfs:member	"ontology"
s5	"arises combination of ontologies"	rdf:predicate	"arise"
s4.3	"existing ontologies"
s4.3	"existing ontologies"	rdf:subject	"ontology"
s4.3	"existing ontologies"	rdf:predicate	"exist"
s4.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"
s4.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:subject	"mechanism"
s4.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:predicate	"check"
s4.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	rdf:object	"concept adequacy of exist ontology user query"
s4.2	"concept adequacy of exist ontology user query"	rdfs:member	"exist ontology user query"
s4.2	"concept adequacy of exist ontology user query"	rdfs:member	"concept adequacy"
s4.2	"exist ontology user query"	rdfs:member	"exist ontology user"
s4.2	"exist ontology"	rdfs:subClassOf	"ontology"
s4.2	"ontology user"	rdfs:member	"ontology"
s4.2	"ontology user query"	rdfs:subClassOf	"query"
s4.2	"ontology user"	rdfs:subClassOf	"user"
s4.2	"ontology user query"	rdfs:member	"ontology user"
s4.2	"concept adequacy"	rdfs:member	"concept"
s4.2	"exist ontology"	rdfs:member	"exist"
s4.2	"user query"	rdfs:subClassOf	"query"
s4.2	"exist ontology user query"	rdfs:subClassOf	"query"
s4.2	"exist ontology user"	rdfs:subClassOf	"user"
s4.2	"user query"	rdfs:member	"user"
s4.2	"exist ontology user"	rdfs:member	"exist ontology"
s4.2	"concept adequacy"	rdfs:subClassOf	"adequacy"
s4.2	"ontology user query"	rdfs:subClassOf	"user query"
s4.2	"a mechanism check concept adequacy of existing ontologies with respect to a user query"	local:AM-MNR	"respect"
s4.1	"increasing demand"
s4.1	"increasing demand"	rdf:subject	"demand"
s4.1	"increasing demand"	rdf:predicate	"increase"
s4	"arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"
s4	"arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdf:subject	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"increase demand"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"concept adequacy"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"mechanism"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"algorithm"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"user query"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"tool"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"exist ontology"
s4	"increase demand for a tool or algorithm with a mechanism to check concept adequacy of exist ontology with respect to a user query"	rdfs:member	"respect"
s4	"exist ontology"	rdfs:subClassOf	"ontology"
s4	"concept adequacy"	rdfs:member	"concept"
s4	"user query"	rdfs:subClassOf	"query"
s4	"exist ontology"	rdfs:member	"exist"
s4	"increase demand"	rdfs:member	"increase"
s4	"user query"	rdfs:member	"user"
s4	"increase demand"	rdfs:subClassOf	"demand"
s4	"concept adequacy"	rdfs:subClassOf	"adequacy"
s4	"increase demand for tool"	rdfs:member	"increase demand"
s4	"increase demand for tool"	rdfs:member	"tool"
s4	"increase demand for tool for algorithm"	rdfs:member	"increase demand for tool"
s4	"increase demand for tool for algorithm"	rdfs:member	"algorithm"
s4	"tool with mechanism"	rdfs:member	"tool"
s4	"tool with mechanism"	rdfs:member	"mechanism"
s4	"exist with_respect_to user query"	rdfs:member	"exist"
s4	"exist with_respect_to user query"	rdfs:member	"user query"
s4	"arises an increasing demand for a tool or algorithm with a mechanism to check concept adequacy of existing ontologies with respect to a user query"	rdf:predicate	"arise"
s3	"ontologies which can entirely fulfill the requirements"
s3	"ontologies which can entirely fulfill the requirements"	rdf:subject	"ontology"
s3	"ontologies which can entirely fulfill the requirements"	rdf:predicate	"fulfill"
s3	"ontologies which can entirely fulfill the requirements"	rdf:object	"requirement"
s3	"ontologies which can entirely fulfill the requirements"	local:AM-MNR	"entirely"
s3	"ontologies which can entirely fulfill the requirements"	local:AM-MOD	"can"
s2.1	"specified user requirements"
s2.1	"specified user requirements"	rdf:subject	"user requirement"
s2.1	"user requirement"	rdfs:subClassOf	"requirement"
s2.1	"user requirement"	rdfs:member	"user"
s2.1	"specified user requirements"	rdf:predicate	"specify"
s2	"relevant single ontologies which may not completely cover the specified user requirements"
s2	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:subject	"specify user requirement"
s2	"user requirement"	rdfs:subClassOf	"requirement"
s2	"user requirement"	rdfs:member	"user"
s2	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:predicate	"not cover"
s2	"relevant single ontologies which may not completely cover the specified user requirements"	rdf:object	"relevant single ontology"
s2	"relevant single"	rdfs:subClassOf	"single"
s2	"relevant single ontology"	rdfs:member	"relevant single"
s2	"single ontology"	rdfs:member	"single"
s2	"single ontology"	rdfs:subClassOf	"ontology"
s2	"relevant single ontology"	rdfs:subClassOf	"ontology"
s2	"relevant single"	rdfs:member	"relevant"
s2	"relevant single ontology"	rdfs:subClassOf	"single ontology"
s2	"relevant single ontologies which may not completely cover the specified user requirements"	local:AM-MNR	"completely"
s2	"relevant single ontologies which may not completely cover the specified user requirements"	local:AM-MOD	"may"
s1.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"
s1.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:subject	"exist ontology retrieval system"
s1.1	"ontology retrieval system"	rdfs:subClassOf	"system"
s1.1	"exist ontology retrieval"	rdfs:subClassOf	"retrieval"
s1.1	"exist ontology retrieval system"	rdfs:subClassOf	"system"
s1.1	"retrieval system"	rdfs:subClassOf	"system"
s1.1	"exist ontology"	rdfs:subClassOf	"ontology"
s1.1	"ontology retrieval"	rdfs:subClassOf	"retrieval"
s1.1	"exist ontology retrieval"	rdfs:member	"exist ontology"
s1.1	"ontology retrieval"	rdfs:member	"ontology"
s1.1	"exist ontology"	rdfs:member	"exist"
s1.1	"ontology retrieval system"	rdfs:member	"ontology retrieval"
s1.1	"retrieval system"	rdfs:member	"retrieval"
s1.1	"exist ontology retrieval system"	rdfs:member	"exist ontology retrieval"
s1.1	"ontology retrieval system"	rdfs:subClassOf	"retrieval system"
s1.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:predicate	"return"
s1.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	rdf:object	"lengthy list of relevant single ontology"
s1.1	"lengthy list of relevant single ontology"	rdfs:member	"lengthy list"
s1.1	"lengthy list of relevant single ontology"	rdfs:member	"relevant single ontology"
s1.1	"lengthy list"	rdfs:subClassOf	"list"
s1.1	"lengthy list"	rdfs:member	"lengthy"
s1.1	"relevant single"	rdfs:subClassOf	"single"
s1.1	"relevant single ontology"	rdfs:member	"relevant single"
s1.1	"single ontology"	rdfs:member	"single"
s1.1	"single ontology"	rdfs:subClassOf	"ontology"
s1.1	"relevant single ontology"	rdfs:subClassOf	"ontology"
s1.1	"relevant single"	rdfs:member	"relevant"
s1.1	"relevant single ontology"	rdfs:subClassOf	"single ontology"
s1.1	"lengthy list of relevant single ontology"	rdfs:member	"lengthy list"
s1.1	"lengthy list of relevant single ontology"	rdfs:member	"relevant single ontology"
s1.1	"existing ontology retrieval systems merely return a lengthy list of relevant single ontologies"	local:AM-ADV	"merely"
s1	"existing ontology retrieval systems"
s1	"existing ontology retrieval systems"	rdf:subject	"ontology retrieval system"
s1	"ontology retrieval system"	rdfs:subClassOf	"system"
s1	"retrieval system"	rdfs:subClassOf	"system"
s1	"ontology retrieval"	rdfs:subClassOf	"retrieval"
s1	"ontology retrieval"	rdfs:member	"ontology"
s1	"ontology retrieval system"	rdfs:member	"ontology retrieval"
s1	"retrieval system"	rdfs:member	"retrieval"
s1	"ontology retrieval system"	rdfs:subClassOf	"retrieval system"
s1	"existing ontology retrieval systems"	rdf:predicate	"exist"
s0.1	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"
s0.1	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:subject	"automatic knowledge reuse for semantic web application"
s0.1	"automatic knowledge reuse for semantic web application"	rdfs:member	"automatic knowledge reuse"
s0.1	"automatic knowledge reuse for semantic web application"	rdfs:member	"semantic web application"
s0.1	"semantic web application"	rdfs:subClassOf	"application"
s0.1	"web application"	rdfs:member	"web"
s0.1	"automatic knowledge reuse"	rdfs:subClassOf	"reuse"
s0.1	"semantic web application"	rdfs:member	"semantic web"
s0.1	"automatic knowledge reuse"	rdfs:member	"automatic knowledge"
s0.1	"knowledge reuse"	rdfs:subClassOf	"reuse"
s0.1	"semantic web"	rdfs:member	"semantic"
s0.1	"semantic web"	rdfs:subClassOf	"web"
s0.1	"automatic knowledge"	rdfs:member	"automatic"
s0.1	"knowledge reuse"	rdfs:member	"knowledge"
s0.1	"automatic knowledge"	rdfs:subClassOf	"knowledge"
s0.1	"web application"	rdfs:subClassOf	"application"
s0.1	"semantic web application"	rdfs:subClassOf	"web application"
s0.1	"automatic knowledge reuse"	rdfs:subClassOf	"knowledge reuse"
s0.1	"automatic knowledge reuse for semantic web application"	rdfs:member	"automatic knowledge reuse"
s0.1	"automatic knowledge reuse for semantic web application"	rdfs:member	"semantic web application"
s0.1	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:predicate	"impose"
s0.1	"automatic knowledge reuse for semantic web applications imposes several challenges on ontology search"	rdf:object	"several challenge ontology search"
s0.1	"several challenge"	rdfs:member	"several"
s0.1	"several challenge ontology search"	rdfs:subClassOf	"search"
s0.1	"challenge ontology"	rdfs:subClassOf	"ontology"
s0.1	"several challenge ontology"	rdfs:subClassOf	"ontology"
s0.1	"several challenge ontology"	rdfs:member	"several challenge"
s0.1	"challenge ontology search"	rdfs:member	"challenge ontology"
s0.1	"ontology search"	rdfs:member	"ontology"
s0.1	"challenge ontology search"	rdfs:subClassOf	"search"
s0.1	"challenge ontology"	rdfs:member	"challenge"
s0.1	"several challenge ontology search"	rdfs:member	"several challenge ontology"
s0.1	"ontology search"	rdfs:subClassOf	"search"
s0.1	"several challenge"	rdfs:subClassOf	"challenge"
s0.1	"challenge ontology search"	rdfs:subClassOf	"ontology search"
s0.1	"several challenge ontology search"	rdfs:subClassOf	"challenge ontology search"
s0	"knowledge reuse for semantic web applications"
s0	"knowledge reuse for semantic web applications"	rdf:subject	"knowledge"
s0	"knowledge reuse for semantic web applications"	rdf:predicate	"reuse"
s0	"knowledge reuse for semantic web applications"	rdf:object	"semantic web application"
s0	"semantic web application"	rdfs:subClassOf	"application"
s0	"web application"	rdfs:member	"web"
s0	"semantic web application"	rdfs:member	"semantic web"
s0	"semantic web"	rdfs:subClassOf	"web"
s0	"semantic web"	rdfs:member	"semantic"
s0	"web application"	rdfs:subClassOf	"application"
s0	"semantic web application"	rdfs:subClassOf	"web application"
