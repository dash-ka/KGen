s7.2	"distributed dataset"
s7.2	"distributed dataset"	rdf:subject	"dataset"
s7.2	"distributed dataset"	rdf:predicate	"distribute"
s7.1	"we approach on a large distributed dataset from the domain of library science"
s7.1	"we approach on a large distributed dataset from the domain of library science"	rdf:subject	"we"
s7.1	"we approach on a large distributed dataset from the domain of library science"	rdf:predicate	"approach"
s7.1	"we approach on a large distributed dataset from the domain of library science"	rdf:object	"large distribute dataset from the domain of library science"
s7.1	"large distribute dataset from the domain of library science"	rdfs:member	"large distribute dataset"
s7.1	"large distribute dataset from the domain of library science"	rdfs:member	"library science"
s7.1	"large distribute dataset from the domain of library science"	rdfs:member	"domain"
s7.1	"distribute dataset"	rdfs:member	"distribute"
s7.1	"large distribute dataset"	rdfs:member	"large distribute"
s7.1	"large distribute dataset"	rdfs:subClassOf	"dataset"
s7.1	"large distribute"	rdfs:subClassOf	"distribute"
s7.1	"library science"	rdfs:subClassOf	"science"
s7.1	"distribute dataset"	rdfs:subClassOf	"dataset"
s7.1	"large distribute"	rdfs:member	"large"
s7.1	"library science"	rdfs:member	"library"
s7.1	"distribute from domain"	rdfs:member	"distribute"
s7.1	"distribute from domain"	rdfs:member	"domain"
s7.1	"domain of library science"	rdfs:member	"domain"
s7.1	"domain of library science"	rdfs:member	"library science"
s7	"we evaluate we approach on a large distributed dataset from the domain of library science"
s7	"we evaluate we approach on a large distributed dataset from the domain of library science"	rdf:subject	"we"
s7	"we evaluate we approach on a large distributed dataset from the domain of library science"	rdf:predicate	"evaluate"
s7	"we evaluate we approach on a large distributed dataset from the domain of library science"	rdf:object	"approach on a large distribute dataset from the domain of library science"
s7	"approach on a large distribute dataset from the domain of library science"	rdfs:member	"large distribute dataset"
s7	"approach on a large distribute dataset from the domain of library science"	rdfs:member	"library science"
s7	"approach on a large distribute dataset from the domain of library science"	rdfs:member	"domain"
s7	"approach on a large distribute dataset from the domain of library science"	rdfs:member	"approach"
s7	"distribute dataset"	rdfs:member	"distribute"
s7	"large distribute dataset"	rdfs:member	"large distribute"
s7	"large distribute dataset"	rdfs:subClassOf	"dataset"
s7	"large distribute"	rdfs:subClassOf	"distribute"
s7	"library science"	rdfs:subClassOf	"science"
s7	"distribute dataset"	rdfs:subClassOf	"dataset"
s7	"large distribute"	rdfs:member	"large"
s7	"library science"	rdfs:member	"library"
s7	"approach on a"	rdfs:member	"approach"
s7	"approach on a"	rdfs:member	"a"
s7	"distribute from domain"	rdfs:member	"distribute"
s7	"distribute from domain"	rdfs:member	"domain"
s7	"domain of library science"	rdfs:member	"domain"
s7	"domain of library science"	rdfs:member	"library science"
s6.2	"based on which trust values for each integrated data source respective signature elements"
s6.2	"based on which trust values for each integrated data source respective signature elements"	rdf:predicate	"compute"
s6.2	"based on which trust values for each integrated data source respective signature elements"	local:AM-ADV	"base on which trust value for each integrate data source respective signature element"
s6.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"integrate data source"
s6.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"respective signature element"
s6.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"base"
s6.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"trust value"
s6.2	"integrate data source"	rdfs:member	"integrate data"
s6.2	"integrate data"	rdfs:subClassOf	"data"
s6.2	"trust value"	rdfs:subClassOf	"value"
s6.2	"data source"	rdfs:member	"data"
s6.2	"signature element"	rdfs:member	"signature"
s6.2	"respective signature"	rdfs:subClassOf	"signature"
s6.2	"trust value"	rdfs:member	"trust"
s6.2	"integrate data source"	rdfs:subClassOf	"source"
s6.2	"data source"	rdfs:subClassOf	"source"
s6.2	"signature element"	rdfs:subClassOf	"element"
s6.2	"respective signature element"	rdfs:member	"respective signature"
s6.2	"integrate data"	rdfs:member	"integrate"
s6.2	"respective signature element"	rdfs:subClassOf	"element"
s6.2	"respective signature"	rdfs:member	"respective"
s6.2	"respective signature element"	rdfs:subClassOf	"signature element"
s6.2	"source respective signature element"	rdfs:subClassOf	"respective signature element"
s6.2	"data source respective signature element"	rdfs:subClassOf	"source respective signature element"
s6.2	"integrate data source respective signature element"	rdfs:subClassOf	"data source respective signature element"
s6.2	"base on which"	rdfs:member	"base"
s6.2	"base on which"	rdfs:member	"which"
s6.2	"trust value for integrate data source respective signature element"	rdfs:member	"trust value"
s6.2	"trust value for integrate data source respective signature element"	rdfs:member	"integrate data source respective signature element"
s6.1	"integrated data source"
s6.1	"integrated data source"	rdf:subject	"data source"
s6.1	"data source"	rdfs:subClassOf	"source"
s6.1	"data source"	rdfs:member	"data"
s6.1	"integrated data source"	rdf:predicate	"integrate"
s6	"based on which trust values for each integrated data source respective signature elements"
s6	"based on which trust values for each integrated data source respective signature elements"	rdf:predicate	"base"
s6	"based on which trust values for each integrated data source respective signature elements"	rdf:object	"trust value for each integrate data source respective signature element"
s6	"trust value for each integrate data source respective signature element"	rdfs:member	"respective signature element"
s6	"trust value for each integrate data source respective signature element"	rdfs:member	"integrate data source"
s6	"trust value for each integrate data source respective signature element"	rdfs:member	"trust value"
s6	"integrate data source"	rdfs:member	"integrate data"
s6	"integrate data"	rdfs:subClassOf	"data"
s6	"trust value"	rdfs:subClassOf	"value"
s6	"data source"	rdfs:member	"data"
s6	"signature element"	rdfs:member	"signature"
s6	"respective signature"	rdfs:subClassOf	"signature"
s6	"trust value"	rdfs:member	"trust"
s6	"integrate data source"	rdfs:subClassOf	"source"
s6	"data source"	rdfs:subClassOf	"source"
s6	"signature element"	rdfs:subClassOf	"element"
s6	"respective signature element"	rdfs:member	"respective signature"
s6	"integrate data"	rdfs:member	"integrate"
s6	"respective signature element"	rdfs:subClassOf	"element"
s6	"respective signature"	rdfs:member	"respective"
s6	"respective signature element"	rdfs:subClassOf	"signature element"
s6	"source respective signature element"	rdfs:subClassOf	"respective signature element"
s6	"data source respective signature element"	rdfs:subClassOf	"source respective signature element"
s6	"integrate data source respective signature element"	rdfs:subClassOf	"data source respective signature element"
s6	"trust value for integrate data source respective signature element"	rdfs:member	"trust value"
s6	"trust value for integrate data source respective signature element"	rdfs:member	"integrate data source respective signature element"
s5.2	"based on which trust values for each integrated data source respective signature elements"
s5.2	"based on which trust values for each integrated data source respective signature elements"	rdf:predicate	"compute"
s5.2	"based on which trust values for each integrated data source respective signature elements"	local:AM-ADV	"base on which trust value for each integrate data source respective signature element"
s5.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"integrate data source"
s5.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"respective signature element"
s5.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"base"
s5.2	"base on which trust value for each integrate data source respective signature element"	rdfs:member	"trust value"
s5.2	"integrate data source"	rdfs:member	"integrate data"
s5.2	"integrate data"	rdfs:subClassOf	"data"
s5.2	"trust value"	rdfs:subClassOf	"value"
s5.2	"data source"	rdfs:member	"data"
s5.2	"signature element"	rdfs:member	"signature"
s5.2	"respective signature"	rdfs:subClassOf	"signature"
s5.2	"trust value"	rdfs:member	"trust"
s5.2	"integrate data source"	rdfs:subClassOf	"source"
s5.2	"data source"	rdfs:subClassOf	"source"
s5.2	"signature element"	rdfs:subClassOf	"element"
s5.2	"respective signature element"	rdfs:member	"respective signature"
s5.2	"integrate data"	rdfs:member	"integrate"
s5.2	"respective signature element"	rdfs:subClassOf	"element"
s5.2	"respective signature"	rdfs:member	"respective"
s5.2	"respective signature element"	rdfs:subClassOf	"signature element"
s5.2	"source respective signature element"	rdfs:subClassOf	"respective signature element"
s5.2	"data source respective signature element"	rdfs:subClassOf	"source respective signature element"
s5.2	"integrate data source respective signature element"	rdfs:subClassOf	"data source respective signature element"
s5.2	"base on which"	rdfs:member	"base"
s5.2	"base on which"	rdfs:member	"which"
s5.2	"trust value for integrate data source respective signature element"	rdfs:member	"trust value"
s5.2	"trust value for integrate data source respective signature element"	rdfs:member	"integrate data source respective signature element"
s5.1	"integrated data source"
s5.1	"integrated data source"	rdf:subject	"data source"
s5.1	"data source"	rdfs:subClassOf	"source"
s5.1	"data source"	rdfs:member	"data"
s5.1	"integrated data source"	rdf:predicate	"integrate"
s5	"based on which trust values for each integrated data source respective signature elements"
s5	"based on which trust values for each integrated data source respective signature elements"	rdf:predicate	"base"
s5	"based on which trust values for each integrated data source respective signature elements"	rdf:object	"trust value for each integrate data source respective signature element"
s5	"trust value for each integrate data source respective signature element"	rdfs:member	"respective signature element"
s5	"trust value for each integrate data source respective signature element"	rdfs:member	"integrate data source"
s5	"trust value for each integrate data source respective signature element"	rdfs:member	"trust value"
s5	"integrate data source"	rdfs:member	"integrate data"
s5	"integrate data"	rdfs:subClassOf	"data"
s5	"trust value"	rdfs:subClassOf	"value"
s5	"data source"	rdfs:member	"data"
s5	"signature element"	rdfs:member	"signature"
s5	"respective signature"	rdfs:subClassOf	"signature"
s5	"trust value"	rdfs:member	"trust"
s5	"integrate data source"	rdfs:subClassOf	"source"
s5	"data source"	rdfs:subClassOf	"source"
s5	"signature element"	rdfs:subClassOf	"element"
s5	"respective signature element"	rdfs:member	"respective signature"
s5	"integrate data"	rdfs:member	"integrate"
s5	"respective signature element"	rdfs:subClassOf	"element"
s5	"respective signature"	rdfs:member	"respective"
s5	"respective signature element"	rdfs:subClassOf	"signature element"
s5	"source respective signature element"	rdfs:subClassOf	"respective signature element"
s5	"data source respective signature element"	rdfs:subClassOf	"source respective signature element"
s5	"integrate data source respective signature element"	rdfs:subClassOf	"data source respective signature element"
s5	"trust value for integrate data source respective signature element"	rdfs:member	"trust value"
s5	"trust value for integrate data source respective signature element"	rdfs:member	"integrate data source respective signature element"
s4.4	"the application compute a probability for each conflicting assertion"
s4.4	"the application compute a probability for each conflicting assertion"	rdf:subject	"application"
s4.4	"the application compute a probability for each conflicting assertion"	rdf:predicate	"compute"
s4.4	"the application compute a probability for each conflicting assertion"	rdf:object	"probability for each conflict assertion"
s4.4	"probability for each conflict assertion"	rdfs:member	"conflict assertion"
s4.4	"probability for each conflict assertion"	rdfs:member	"probability"
s4.4	"conflict assertion"	rdfs:member	"conflict"
s4.4	"conflict assertion"	rdfs:subClassOf	"assertion"
s4.4	"probability for conflict assertion"	rdfs:member	"probability"
s4.4	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s4.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"
s4.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:subject	"markov network"
s4.3	"markov network"	rdfs:member	"markov"
s4.3	"markov network"	rdfs:subClassOf	"network"
s4.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:predicate	"facilitate"
s4.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:object	"application of gibbs sample"
s4.3	"application of gibbs sample"	rdfs:member	"gibbs sample"
s4.3	"application of gibbs sample"	rdfs:member	"application"
s4.3	"gibbs sample"	rdfs:member	"gibbs"
s4.3	"gibbs sample"	rdfs:subClassOf	"sample"
s4.3	"application of gibbs sample"	rdfs:member	"application"
s4.3	"application of gibbs sample"	rdfs:member	"gibbs sample"
s4.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	local:AM-PNC	"compute a probability for each conflict assertion"
s4.3	"compute a probability for each conflict assertion"	rdfs:member	"conflict assertion"
s4.3	"compute a probability for each conflict assertion"	rdfs:member	"compute"
s4.3	"compute a probability for each conflict assertion"	rdfs:member	"probability"
s4.3	"conflict assertion"	rdfs:member	"conflict"
s4.3	"conflict assertion"	rdfs:subClassOf	"assertion"
s4.3	"probability for conflict assertion"	rdfs:member	"probability"
s4.3	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s4.2	"gathering both statistical evidence generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"
s4.2	"gathering both statistical evidence generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:subject	"we"
s4.2	"gathering both statistical evidence generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:predicate	"create"
s4.2	"gathering both statistical evidence generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:object	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"
s4.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"gibbs sample"
s4.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"conflict assertion"
s4.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"application"
s4.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"markov network"
s4.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"probability"
s4.2	"markov network"	rdfs:member	"markov"
s4.2	"conflict assertion"	rdfs:member	"conflict"
s4.2	"gibbs sample"	rdfs:member	"gibbs"
s4.2	"markov network"	rdfs:subClassOf	"network"
s4.2	"conflict assertion"	rdfs:subClassOf	"assertion"
s4.2	"gibbs sample"	rdfs:subClassOf	"sample"
s4.2	"application of gibbs sample"	rdfs:member	"application"
s4.2	"application of gibbs sample"	rdfs:member	"gibbs sample"
s4.2	"probability for conflict assertion"	rdfs:member	"probability"
s4.2	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s4.2	"gathering both statistical evidence generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	local:AM-ADV	"gather both statistical evidence generate by inconsistency detection and resolution"
s4.2	"gather both statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"statistical evidence generate"
s4.2	"gather both statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s4.2	"gather both statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"resolution"
s4.2	"inconsistency detection"	rdfs:member	"inconsistency"
s4.2	"statistical evidence generate"	rdfs:member	"statistical evidence"
s4.2	"evidence generate"	rdfs:member	"evidence"
s4.2	"statistical evidence"	rdfs:subClassOf	"evidence"
s4.2	"statistical evidence generate"	rdfs:subClassOf	"generate"
s4.2	"statistical evidence"	rdfs:member	"statistical"
s4.2	"inconsistency detection"	rdfs:subClassOf	"detection"
s4.2	"evidence generate"	rdfs:subClassOf	"generate"
s4.2	"generate by inconsistency detection"	rdfs:member	"generate"
s4.2	"generate by inconsistency detection"	rdfs:member	"inconsistency detection"
s4.2	"generate by inconsistency detection by resolution"	rdfs:member	"generate by inconsistency detection"
s4.2	"generate by inconsistency detection by resolution"	rdfs:member	"resolution"
s4.1	"both statistical evidence generated by inconsistency detection and resolution"
s4.1	"both statistical evidence generated by inconsistency detection and resolution"	rdf:subject	"inconsistency detection and resolution"
s4.1	"inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s4.1	"inconsistency detection and resolution"	rdfs:member	"resolution"
s4.1	"inconsistency detection"	rdfs:subClassOf	"detection"
s4.1	"inconsistency detection"	rdfs:member	"inconsistency"
s4.1	"both statistical evidence generated by inconsistency detection and resolution"	rdf:predicate	"generate"
s4.1	"both statistical evidence generated by inconsistency detection and resolution"	rdf:object	"statistical evidence"
s4.1	"statistical evidence"	rdfs:member	"statistical"
s4.1	"statistical evidence"	rdfs:subClassOf	"evidence"
s4	"gathering both statistical evidence generated by inconsistency detection and resolution we"
s4	"gathering both statistical evidence generated by inconsistency detection and resolution we"	rdf:subject	"we"
s4	"gathering both statistical evidence generated by inconsistency detection and resolution we"	rdf:predicate	"gather"
s4	"gathering both statistical evidence generated by inconsistency detection and resolution we"	rdf:object	"statistical evidence generate by inconsistency detection and resolution"
s4	"statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"statistical evidence generate"
s4	"statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s4	"statistical evidence generate by inconsistency detection and resolution"	rdfs:member	"resolution"
s4	"inconsistency detection"	rdfs:member	"inconsistency"
s4	"statistical evidence generate"	rdfs:member	"statistical evidence"
s4	"evidence generate"	rdfs:member	"evidence"
s4	"statistical evidence"	rdfs:subClassOf	"evidence"
s4	"statistical evidence generate"	rdfs:subClassOf	"generate"
s4	"statistical evidence"	rdfs:member	"statistical"
s4	"inconsistency detection"	rdfs:subClassOf	"detection"
s4	"evidence generate"	rdfs:subClassOf	"generate"
s4	"generate by inconsistency detection"	rdfs:member	"generate"
s4	"generate by inconsistency detection"	rdfs:member	"inconsistency detection"
s4	"generate by inconsistency detection by resolution"	rdfs:member	"generate by inconsistency detection"
s4	"generate by inconsistency detection by resolution"	rdfs:member	"resolution"
s3.4	"the application compute a probability for each conflicting assertion"
s3.4	"the application compute a probability for each conflicting assertion"	rdf:subject	"application"
s3.4	"the application compute a probability for each conflicting assertion"	rdf:predicate	"compute"
s3.4	"the application compute a probability for each conflicting assertion"	rdf:object	"probability for each conflict assertion"
s3.4	"probability for each conflict assertion"	rdfs:member	"conflict assertion"
s3.4	"probability for each conflict assertion"	rdfs:member	"probability"
s3.4	"conflict assertion"	rdfs:member	"conflict"
s3.4	"conflict assertion"	rdfs:subClassOf	"assertion"
s3.4	"probability for conflict assertion"	rdfs:member	"probability"
s3.4	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s3.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"
s3.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:subject	"markov network"
s3.3	"markov network"	rdfs:member	"markov"
s3.3	"markov network"	rdfs:subClassOf	"network"
s3.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:predicate	"facilitate"
s3.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:object	"application of gibbs sample"
s3.3	"application of gibbs sample"	rdfs:member	"gibbs sample"
s3.3	"application of gibbs sample"	rdfs:member	"application"
s3.3	"gibbs sample"	rdfs:member	"gibbs"
s3.3	"gibbs sample"	rdfs:subClassOf	"sample"
s3.3	"application of gibbs sample"	rdfs:member	"application"
s3.3	"application of gibbs sample"	rdfs:member	"gibbs sample"
s3.3	"a markov network facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	local:AM-PNC	"compute a probability for each conflict assertion"
s3.3	"compute a probability for each conflict assertion"	rdfs:member	"conflict assertion"
s3.3	"compute a probability for each conflict assertion"	rdfs:member	"compute"
s3.3	"compute a probability for each conflict assertion"	rdfs:member	"probability"
s3.3	"conflict assertion"	rdfs:member	"conflict"
s3.3	"conflict assertion"	rdfs:subClassOf	"assertion"
s3.3	"probability for conflict assertion"	rdfs:member	"probability"
s3.3	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s3.2	"gathering both the conflict graph generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"
s3.2	"gathering both the conflict graph generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:subject	"we"
s3.2	"gathering both the conflict graph generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:predicate	"create"
s3.2	"gathering both the conflict graph generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:object	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"
s3.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"gibbs sample"
s3.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"conflict assertion"
s3.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"application"
s3.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"markov network"
s3.2	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"probability"
s3.2	"markov network"	rdfs:member	"markov"
s3.2	"conflict assertion"	rdfs:member	"conflict"
s3.2	"gibbs sample"	rdfs:member	"gibbs"
s3.2	"markov network"	rdfs:subClassOf	"network"
s3.2	"conflict assertion"	rdfs:subClassOf	"assertion"
s3.2	"gibbs sample"	rdfs:subClassOf	"sample"
s3.2	"application of gibbs sample"	rdfs:member	"application"
s3.2	"application of gibbs sample"	rdfs:member	"gibbs sample"
s3.2	"probability for conflict assertion"	rdfs:member	"probability"
s3.2	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s3.2	"gathering both the conflict graph generated by inconsistency detection and resolution we create a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	local:AM-ADV	"gather both the conflict graph generate by inconsistency detection and resolution"
s3.2	"gather both the conflict graph generate by inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s3.2	"gather both the conflict graph generate by inconsistency detection and resolution"	rdfs:member	"resolution"
s3.2	"gather both the conflict graph generate by inconsistency detection and resolution"	rdfs:member	"conflict graph generate"
s3.2	"graph generate"	rdfs:member	"graph"
s3.2	"conflict graph generate"	rdfs:member	"conflict graph"
s3.2	"conflict graph"	rdfs:subClassOf	"graph"
s3.2	"conflict graph generate"	rdfs:subClassOf	"generate"
s3.2	"conflict graph"	rdfs:member	"conflict"
s3.2	"inconsistency detection"	rdfs:subClassOf	"detection"
s3.2	"graph generate"	rdfs:subClassOf	"generate"
s3.2	"inconsistency detection"	rdfs:member	"inconsistency"
s3.2	"generate by inconsistency detection"	rdfs:member	"generate"
s3.2	"generate by inconsistency detection"	rdfs:member	"inconsistency detection"
s3.2	"generate by inconsistency detection by resolution"	rdfs:member	"generate by inconsistency detection"
s3.2	"generate by inconsistency detection by resolution"	rdfs:member	"resolution"
s3.1	"the conflict graph generated by inconsistency detection and resolution"
s3.1	"the conflict graph generated by inconsistency detection and resolution"	rdf:subject	"inconsistency detection and resolution"
s3.1	"inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s3.1	"inconsistency detection and resolution"	rdfs:member	"resolution"
s3.1	"inconsistency detection"	rdfs:subClassOf	"detection"
s3.1	"inconsistency detection"	rdfs:member	"inconsistency"
s3.1	"the conflict graph generated by inconsistency detection and resolution"	rdf:predicate	"generate"
s3.1	"the conflict graph generated by inconsistency detection and resolution"	rdf:object	"conflict graph"
s3.1	"conflict graph"	rdfs:member	"conflict"
s3.1	"conflict graph"	rdfs:subClassOf	"graph"
s3	"gathering both the conflict graph generated by inconsistency detection and resolution we a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"
s3	"gathering both the conflict graph generated by inconsistency detection and resolution we a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:subject	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"
s3	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"gibbs sample"
s3	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"conflict assertion"
s3	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"application"
s3	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"markov network"
s3	"markov network to facilitate the application of gibbs sample to compute a probability for each conflict assertion"	rdfs:member	"probability"
s3	"markov network"	rdfs:member	"markov"
s3	"conflict assertion"	rdfs:member	"conflict"
s3	"gibbs sample"	rdfs:member	"gibbs"
s3	"markov network"	rdfs:subClassOf	"network"
s3	"conflict assertion"	rdfs:subClassOf	"assertion"
s3	"gibbs sample"	rdfs:subClassOf	"sample"
s3	"application of gibbs sample"	rdfs:member	"application"
s3	"application of gibbs sample"	rdfs:member	"gibbs sample"
s3	"probability for conflict assertion"	rdfs:member	"probability"
s3	"probability for conflict assertion"	rdfs:member	"conflict assertion"
s3	"gathering both the conflict graph generated by inconsistency detection and resolution we a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:predicate	"gather"
s3	"gathering both the conflict graph generated by inconsistency detection and resolution we a markov network to facilitate the application of gibbs sampling to compute a probability for each conflicting assertion"	rdf:object	"conflict graph generate by inconsistency detection and resolution"
s3	"conflict graph generate by inconsistency detection and resolution"	rdfs:member	"inconsistency detection"
s3	"conflict graph generate by inconsistency detection and resolution"	rdfs:member	"resolution"
s3	"conflict graph generate by inconsistency detection and resolution"	rdfs:member	"conflict graph generate"
s3	"graph generate"	rdfs:member	"graph"
s3	"conflict graph generate"	rdfs:member	"conflict graph"
s3	"conflict graph"	rdfs:subClassOf	"graph"
s3	"conflict graph generate"	rdfs:subClassOf	"generate"
s3	"conflict graph"	rdfs:member	"conflict"
s3	"inconsistency detection"	rdfs:subClassOf	"detection"
s3	"graph generate"	rdfs:subClassOf	"generate"
s3	"inconsistency detection"	rdfs:member	"inconsistency"
s3	"generate by inconsistency detection"	rdfs:member	"generate"
s3	"generate by inconsistency detection"	rdfs:member	"inconsistency detection"
s3	"generate by inconsistency detection by resolution"	rdfs:member	"generate by inconsistency detection"
s3	"generate by inconsistency detection by resolution"	rdfs:member	"resolution"
s2.2	"fully automated approach"
s2.2	"fully automated approach"	rdf:subject	"approach"
s2.2	"fully automated approach"	rdf:predicate	"automate"
s2.2	"fully automated approach"	local:AM-MNR	"fully"
s2.1	"to tackle this challenge in federated knowledge bases we propose a fully automated approach for computing trust values at different levels of granularity"
s2.1	"to tackle this challenge in federated knowledge bases we propose a fully automated approach for computing trust values at different levels of granularity"	rdf:subject	"we"
s2.1	"to tackle this challenge in federated knowledge bases we propose a fully automated approach for computing trust values at different levels of granularity"	rdf:predicate	"propose"
s2.1	"to tackle this challenge in federated knowledge bases we propose a fully automated approach for computing trust values at different levels of granularity"	rdf:object	"fully automate approach for compute trust value at different level of granularity"
s2.1	"fully automate approach for compute trust value at different level of granularity"	rdfs:member	"different level"
s2.1	"fully automate approach for compute trust value at different level of granularity"	rdfs:member	"granularity"
s2.1	"fully automate approach for compute trust value at different level of granularity"	rdfs:member	"fully automate approach"
s2.1	"fully automate approach for compute trust value at different level of granularity"	rdfs:member	"compute trust value"
s2.1	"fully automate"	rdfs:subClassOf	"automate"
s2.1	"trust value"	rdfs:subClassOf	"value"
s2.1	"fully automate"	rdfs:member	"fully"
s2.1	"compute trust"	rdfs:subClassOf	"trust"
s2.1	"fully automate approach"	rdfs:subClassOf	"approach"
s2.1	"compute trust"	rdfs:member	"compute"
s2.1	"different level"	rdfs:member	"different"
s2.1	"different level"	rdfs:subClassOf	"level"
s2.1	"trust value"	rdfs:member	"trust"
s2.1	"fully automate approach"	rdfs:member	"fully automate"
s2.1	"compute trust value"	rdfs:subClassOf	"value"
s2.1	"compute trust value"	rdfs:member	"compute trust"
s2.1	"automate approach"	rdfs:member	"automate"
s2.1	"automate approach"	rdfs:subClassOf	"approach"
s2.1	"compute at different level"	rdfs:member	"compute"
s2.1	"compute at different level"	rdfs:member	"different level"
s2.1	"different level of granularity"	rdfs:member	"different level"
s2.1	"different level of granularity"	rdfs:member	"granularity"
s2.1	"to tackle this challenge in federated knowledge bases we propose a fully automated approach for computing trust values at different levels of granularity"	local:AM-PNC	"tackle this challenge in federate knowledge base"
s2.1	"tackle this challenge in federate knowledge base"	rdfs:member	"tackle"
s2.1	"tackle this challenge in federate knowledge base"	rdfs:member	"federate knowledge base"
s2.1	"tackle this challenge in federate knowledge base"	rdfs:member	"challenge"
s2.1	"knowledge base"	rdfs:member	"knowledge"
s2.1	"federate knowledge"	rdfs:subClassOf	"knowledge"
s2.1	"federate knowledge base"	rdfs:member	"federate knowledge"
s2.1	"federate knowledge base"	rdfs:subClassOf	"base"
s2.1	"federate knowledge"	rdfs:member	"federate"
s2.1	"knowledge base"	rdfs:subClassOf	"base"
s2.1	"federate knowledge base"	rdfs:subClassOf	"knowledge base"
s2.1	"tackle in federate knowledge base"	rdfs:member	"tackle"
s2.1	"tackle in federate knowledge base"	rdfs:member	"federate knowledge base"
s2	"tackle this challenge in federated knowledge bases we"
s2	"tackle this challenge in federated knowledge bases we"	rdf:subject	"we"
s2	"tackle this challenge in federated knowledge bases we"	rdf:predicate	"tackle"
s2	"tackle this challenge in federated knowledge bases we"	rdf:object	"challenge"
s2	"tackle this challenge in federated knowledge bases we"	local:AM-LOC	"federate knowledge base"
s2	"knowledge base"	rdfs:member	"knowledge"
s2	"federate knowledge"	rdfs:subClassOf	"knowledge"
s2	"federate knowledge base"	rdfs:member	"federate knowledge"
s2	"federate knowledge base"	rdfs:subClassOf	"base"
s2	"federate knowledge"	rdfs:member	"federate"
s2	"knowledge base"	rdfs:subClassOf	"base"
s0.2	"continuously growing amount"
s0.2	"continuously growing amount"	rdf:subject	"amount"
s0.2	"continuously growing amount"	rdf:predicate	"grow"
s0.2	"continuously growing amount"	local:AM-MNR	"continuously"
s0.1	"increasing attention"
s0.1	"increasing attention"	rdf:subject	"attention"
s0.1	"increasing attention"	rdf:predicate	"increase"
s0	"the federation of different data sources gained increasing attention due to the continuously growing amount of data"
s0	"the federation of different data sources gained increasing attention due to the continuously growing amount of data"	rdf:subject	"federation of different data source"
s0	"federation of different data source"	rdfs:member	"federation"
s0	"federation of different data source"	rdfs:member	"different data source"
s0	"data source"	rdfs:member	"data"
s0	"different data"	rdfs:member	"different"
s0	"different data source"	rdfs:member	"different data"
s0	"data source"	rdfs:subClassOf	"source"
s0	"different data"	rdfs:subClassOf	"data"
s0	"different data source"	rdfs:subClassOf	"source"
s0	"different data source"	rdfs:subClassOf	"data source"
s0	"federation of different data source"	rdfs:member	"federation"
s0	"federation of different data source"	rdfs:member	"different data source"
s0	"the federation of different data sources gained increasing attention due to the continuously growing amount of data"	rdf:predicate	"gain"
s0	"the federation of different data sources gained increasing attention due to the continuously growing amount of data"	rdf:object	"increase attention"
s0	"increase attention"	rdfs:member	"increase"
s0	"increase attention"	rdfs:subClassOf	"attention"
s0	"the federation of different data sources gained increasing attention due to the continuously growing amount of data"	local:AM-CAU	"due to the continuously grow amount of data"
s0	"due to the continuously grow amount of data"	rdfs:member	"continuously grow amount"
s0	"due to the continuously grow amount of data"	rdfs:member	"data"
s0	"grow amount"	rdfs:subClassOf	"amount"
s0	"continuously grow"	rdfs:member	"continuously"
s0	"continuously grow"	rdfs:subClassOf	"grow"
s0	"continuously grow amount"	rdfs:subClassOf	"amount"
s0	"grow amount"	rdfs:member	"grow"
s0	"continuously grow amount"	rdfs:member	"continuously grow"
s0	"grow amount of data"	rdfs:member	"grow amount"
s0	"grow amount of data"	rdfs:member	"data"
