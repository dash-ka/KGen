s15	"shapes can use possibly recursive references to other shapes"
s15	"shapes can use possibly recursive references to other shapes"	rdf:subject	"shape"
s15	"shapes can use possibly recursive references to other shapes"	rdf:predicate	"use"
s15	"shapes can use possibly recursive references to other shapes"	rdf:object	"possibly recursive reference to other shape"
s15	"possibly recursive reference to other shape"	rdfs:member	"other shape"
s15	"possibly recursive reference to other shape"	rdfs:member	"possibly recursive reference"
s15	"other shape"	rdfs:member	"other"
s15	"recursive reference"	rdfs:subClassOf	"reference"
s15	"possibly recursive"	rdfs:member	"possibly"
s15	"possibly recursive"	rdfs:subClassOf	"recursive"
s15	"possibly recursive reference"	rdfs:member	"possibly recursive"
s15	"recursive reference"	rdfs:member	"recursive"
s15	"other shape"	rdfs:subClassOf	"shape"
s15	"possibly recursive reference"	rdfs:subClassOf	"reference"
s15	"recursive reference to other shape"	rdfs:member	"recursive reference"
s15	"recursive reference to other shape"	rdfs:member	"other shape"
s15	"shapes can use possibly recursive references to other shapes"	local:AM-MOD	"can"
s14.1	"using boolean operators"
s14.1	"using boolean operators"	rdf:subject	"boolean operator"
s14.1	"boolean operator"	rdfs:member	"boolean"
s14.1	"boolean operator"	rdfs:subClassOf	"operator"
s14.1	"using boolean operators"	rdf:predicate	"use"
s14	"shapes can combined using boolean operators"
s14	"shapes can combined using boolean operators"	rdf:subject	"shape"
s14	"shapes can combined using boolean operators"	rdf:predicate	"combine"
s14	"shapes can combined using boolean operators"	local:AM-MNR	"use boolean operator"
s14	"use boolean operator"	rdfs:member	"use boolean"
s14	"use boolean"	rdfs:member	"use"
s14	"use boolean"	rdfs:subClassOf	"boolean"
s14	"boolean operator"	rdfs:member	"boolean"
s14	"boolean operator"	rdfs:subClassOf	"operator"
s14	"use boolean operator"	rdfs:subClassOf	"operator"
s14	"use boolean operator"	rdfs:subClassOf	"boolean operator"
s14	"shapes can combined using boolean operators"	local:AM-MOD	"can"
s13.1	"allowed occurrences of a property"
s13.1	"allowed occurrences of a property"	rdf:subject	"occurrence of a property"
s13.1	"occurrence of a property"	rdfs:member	"property"
s13.1	"occurrence of a property"	rdfs:member	"occurrence"
s13.1	"occurrence of property"	rdfs:member	"occurrence"
s13.1	"occurrence of property"	rdfs:member	"property"
s13.1	"allowed occurrences of a property"	rdf:predicate	"allow"
s13	"the language includes a choice operator for the number of allowed occurrences of a property"
s13	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:subject	"choice operator for the number of allow occurrence of a property"
s13	"choice operator for the number of allow occurrence of a property"	rdfs:member	"number"
s13	"choice operator for the number of allow occurrence of a property"	rdfs:member	"property"
s13	"choice operator for the number of allow occurrence of a property"	rdfs:member	"allow occurrence"
s13	"choice operator for the number of allow occurrence of a property"	rdfs:member	"choice operator"
s13	"choice operator"	rdfs:subClassOf	"operator"
s13	"choice operator"	rdfs:member	"choice"
s13	"allow occurrence"	rdfs:subClassOf	"occurrence"
s13	"allow occurrence"	rdfs:member	"allow"
s13	"choice operator for number"	rdfs:member	"choice operator"
s13	"choice operator for number"	rdfs:member	"number"
s13	"occurrence of property"	rdfs:member	"occurrence"
s13	"occurrence of property"	rdfs:member	"property"
s13	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:predicate	"include"
s13	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:object	"language"
s12.1	"an algebraic grouping operator allowed occurrences of a property"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:subject	"algebraic group operator"
s12.1	"group operator"	rdfs:subClassOf	"operator"
s12.1	"algebraic group operator"	rdfs:member	"algebraic group"
s12.1	"algebraic group"	rdfs:subClassOf	"group"
s12.1	"algebraic group"	rdfs:member	"algebraic"
s12.1	"algebraic group operator"	rdfs:subClassOf	"operator"
s12.1	"group operator"	rdfs:member	"group"
s12.1	"algebraic group operator"	rdfs:subClassOf	"group operator"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:predicate	"allow"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:object	"occurrence of a property"
s12.1	"occurrence of a property"	rdfs:member	"property"
s12.1	"occurrence of a property"	rdfs:member	"occurrence"
s12.1	"occurrence of property"	rdfs:member	"occurrence"
s12.1	"occurrence of property"	rdfs:member	"property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:subject	"algebraic group operator for the number of allow occurrence of a property"
s12	"algebraic group operator for the number of allow occurrence of a property"	rdfs:member	"number"
s12	"algebraic group operator for the number of allow occurrence of a property"	rdfs:member	"algebraic group operator"
s12	"algebraic group operator for the number of allow occurrence of a property"	rdfs:member	"property"
s12	"algebraic group operator for the number of allow occurrence of a property"	rdfs:member	"allow occurrence"
s12	"group operator"	rdfs:subClassOf	"operator"
s12	"algebraic group operator"	rdfs:member	"algebraic group"
s12	"algebraic group"	rdfs:subClassOf	"group"
s12	"algebraic group"	rdfs:member	"algebraic"
s12	"allow occurrence"	rdfs:member	"allow"
s12	"algebraic group operator"	rdfs:subClassOf	"operator"
s12	"group operator"	rdfs:member	"group"
s12	"allow occurrence"	rdfs:subClassOf	"occurrence"
s12	"algebraic group operator"	rdfs:subClassOf	"group operator"
s12	"algebraic group operator for number"	rdfs:member	"algebraic group operator"
s12	"algebraic group operator for number"	rdfs:member	"number"
s12	"occurrence of property"	rdfs:member	"occurrence"
s12	"occurrence of property"	rdfs:member	"property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:predicate	"include"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:object	"language"
s11.1	"allowed occurrences of a property"
s11.1	"allowed occurrences of a property"	rdf:subject	"occurrence of a property"
s11.1	"occurrence of a property"	rdfs:member	"property"
s11.1	"occurrence of a property"	rdfs:member	"occurrence"
s11.1	"occurrence of property"	rdfs:member	"occurrence"
s11.1	"occurrence of property"	rdfs:member	"property"
s11.1	"allowed occurrences of a property"	rdf:predicate	"allow"
s11	"the language includes cardinality constraints for the number of allowed occurrences of a property"
s11	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:subject	"cardinality constraint for the number of allow occurrence of a property"
s11	"cardinality constraint for the number of allow occurrence of a property"	rdfs:member	"number"
s11	"cardinality constraint for the number of allow occurrence of a property"	rdfs:member	"property"
s11	"cardinality constraint for the number of allow occurrence of a property"	rdfs:member	"allow occurrence"
s11	"cardinality constraint for the number of allow occurrence of a property"	rdfs:member	"cardinality constraint"
s11	"cardinality constraint"	rdfs:subClassOf	"constraint"
s11	"cardinality constraint"	rdfs:member	"cardinality"
s11	"allow occurrence"	rdfs:subClassOf	"occurrence"
s11	"allow occurrence"	rdfs:member	"allow"
s11	"cardinality constraint for number"	rdfs:member	"cardinality constraint"
s11	"cardinality constraint for number"	rdfs:member	"number"
s11	"occurrence of property"	rdfs:member	"occurrence"
s11	"occurrence of property"	rdfs:member	"property"
s11	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:predicate	"include"
s11	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:object	"language"
s10	"the language defines a typing mechanism"
s10	"the language defines a typing mechanism"	rdf:subject	"language"
s10	"the language defines a typing mechanism"	rdf:predicate	"define"
s10	"the language defines a typing mechanism"	rdf:object	"type mechanism"
s10	"type mechanism"	rdfs:subClassOf	"mechanism"
s10	"type mechanism"	rdfs:member	"type"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	rdf:subject	"type mechanism call shape against which nod of the graph"
s9.1	"type mechanism call shape against which nod of the graph"	rdfs:member	"nod"
s9.1	"type mechanism call shape against which nod of the graph"	rdfs:member	"graph"
s9.1	"type mechanism call shape against which nod of the graph"	rdfs:member	"type mechanism call shape"
s9.1	"call shape"	rdfs:member	"call"
s9.1	"type mechanism call"	rdfs:subClassOf	"call"
s9.1	"type mechanism call"	rdfs:member	"type mechanism"
s9.1	"type mechanism call shape"	rdfs:subClassOf	"shape"
s9.1	"call shape"	rdfs:subClassOf	"shape"
s9.1	"mechanism call"	rdfs:subClassOf	"call"
s9.1	"type mechanism call shape"	rdfs:member	"type mechanism call"
s9.1	"mechanism call shape"	rdfs:member	"mechanism call"
s9.1	"mechanism call"	rdfs:member	"mechanism"
s9.1	"mechanism call shape"	rdfs:subClassOf	"shape"
s9.1	"type mechanism"	rdfs:subClassOf	"mechanism"
s9.1	"type mechanism"	rdfs:member	"type"
s9.1	"mechanism call shape"	rdfs:subClassOf	"call shape"
s9.1	"type mechanism call shape"	rdfs:subClassOf	"mechanism call shape"
s9.1	"type mechanism call shape against which"	rdfs:member	"type mechanism call shape"
s9.1	"type mechanism call shape against which"	rdfs:member	"which"
s9.1	"nod of graph"	rdfs:member	"nod"
s9.1	"nod of graph"	rdfs:member	"graph"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	rdf:predicate	"check"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	local:AM-MOD	"can"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:subject	"type mechanism"
s9	"type mechanism"	rdfs:subClassOf	"mechanism"
s9	"type mechanism"	rdfs:member	"type"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:predicate	"call"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:object	"shape against which nod of the graph can be check"
s9	"shape against which nod of the graph can be check"	rdfs:member	"nod"
s9	"shape against which nod of the graph can be check"	rdfs:member	"graph"
s9	"shape against which nod of the graph can be check"	rdfs:member	"shape"
s9	"can check"	rdfs:subClassOf	"check"
s9	"can check against shape"	rdfs:member	"can check"
s9	"can check against shape"	rdfs:member	"shape"
s9	"nod of graph"	rdfs:member	"nod"
s9	"nod of graph"	rdfs:member	"graph"
s8.1	"describe the structure of an rdf graph"
s8.1	"describe the structure of an rdf graph"	rdf:subject	"structure of an rdf graph"
s8.1	"structure of an rdf graph"	rdfs:member	"rdf graph"
s8.1	"structure of an rdf graph"	rdfs:member	"structure"
s8.1	"rdf graph"	rdfs:subClassOf	"graph"
s8.1	"rdf graph"	rdfs:member	"rdf"
s8.1	"structure of rdf graph"	rdfs:member	"structure"
s8.1	"structure of rdf graph"	rdfs:member	"rdf graph"
s8.1	"describe the structure of an rdf graph"	rdf:predicate	"describe"
s8	"it can used to describe the structure of an rdf graph"
s8	"it can used to describe the structure of an rdf graph"	rdf:subject	"it"
s8	"it can used to describe the structure of an rdf graph"	rdf:predicate	"use"
s8	"it can used to describe the structure of an rdf graph"	rdf:object	"describe the structure of an rdf graph"
s8	"it can used to describe the structure of an rdf graph"	local:AM-MOD	"can"
s7.1	"constrain the admissible values for nodes in that graph"
s7.1	"constrain the admissible values for nodes in that graph"	rdf:subject	"admissible value for nod in that graph"
s7.1	"admissible value for nod in that graph"	rdfs:member	"nod"
s7.1	"admissible value for nod in that graph"	rdfs:member	"admissible value"
s7.1	"admissible value for nod in that graph"	rdfs:member	"graph"
s7.1	"admissible value"	rdfs:subClassOf	"value"
s7.1	"admissible value"	rdfs:member	"admissible"
s7.1	"admissible value for nod"	rdfs:member	"admissible value"
s7.1	"admissible value for nod"	rdfs:member	"nod"
s7.1	"admissible value for nod in graph"	rdfs:member	"admissible value for nod"
s7.1	"admissible value for nod in graph"	rdfs:member	"graph"
s7.1	"constrain the admissible values for nodes in that graph"	rdf:predicate	"constrain"
s7	"it can used to constrain the admissible values for nodes in that graph"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:subject	"it"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:predicate	"use"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:object	"constrain the admissible value for nod in that graph"
s7	"constrain the admissible value for nod in that graph"	rdfs:member	"nod"
s7	"constrain the admissible value for nod in that graph"	rdfs:member	"admissible value"
s7	"constrain the admissible value for nod in that graph"	rdfs:member	"graph"
s7	"admissible value"	rdfs:subClassOf	"value"
s7	"admissible value"	rdfs:member	"admissible"
s7	"admissible value for nod"	rdfs:member	"admissible value"
s7	"admissible value for nod"	rdfs:member	"nod"
s7	"admissible value for nod in graph"	rdfs:member	"admissible value for nod"
s7	"admissible value for nod in graph"	rdfs:member	"graph"
s7	"it can used to constrain the admissible values for nodes in that graph"	local:AM-MOD	"can"
s6.1	"describe the vocabulary"
s6.1	"describe the vocabulary"	rdf:subject	"vocabulary"
s6.1	"describe the vocabulary"	rdf:predicate	"describe"
s6	"it can used to describe the vocabulary"
s6	"it can used to describe the vocabulary"	rdf:subject	"it"
s6	"it can used to describe the vocabulary"	rdf:predicate	"use"
s6	"it can used to describe the vocabulary"	rdf:object	"describe the vocabulary"
s6	"it can used to describe the vocabulary"	local:AM-MOD	"can"
s5.1	"constrain the admissible properties for nodes in that graph"
s5.1	"constrain the admissible properties for nodes in that graph"	rdf:subject	"admissible property"
s5.1	"admissible property"	rdfs:member	"admissible"
s5.1	"admissible property"	rdfs:subClassOf	"property"
s5.1	"constrain the admissible properties for nodes in that graph"	rdf:predicate	"constrain"
s5.1	"constrain the admissible properties for nodes in that graph"	rdf:object	"nod in that graph"
s5.1	"nod in that graph"	rdfs:member	"nod"
s5.1	"nod in that graph"	rdfs:member	"graph"
s5.1	"nod in graph"	rdfs:member	"nod"
s5.1	"nod in graph"	rdfs:member	"graph"
s5	"it can used to constrain the admissible properties for nodes in that graph"
s5	"it can used to constrain the admissible properties for nodes in that graph"	rdf:subject	"it"
s5	"it can used to constrain the admissible properties for nodes in that graph"	rdf:predicate	"use"
s5	"it can used to constrain the admissible properties for nodes in that graph"	rdf:object	"constrain the admissible property for nod in that graph"
s5	"constrain the admissible property for nod in that graph"	rdfs:member	"nod"
s5	"constrain the admissible property for nod in that graph"	rdfs:member	"admissible property"
s5	"constrain the admissible property for nod in that graph"	rdfs:member	"graph"
s5	"admissible property"	rdfs:member	"admissible"
s5	"admissible property"	rdfs:subClassOf	"property"
s5	"admissible property for nod"	rdfs:member	"admissible property"
s5	"admissible property for nod"	rdfs:member	"nod"
s5	"admissible property for nod in graph"	rdfs:member	"admissible property for nod"
s5	"admissible property for nod in graph"	rdfs:member	"graph"
s5	"it can used to constrain the admissible properties for nodes in that graph"	local:AM-MOD	"can"
s4	"we present proof of soundness for shapes schemas"
s4	"we present proof of soundness for shapes schemas"	rdf:subject	"we"
s4	"we present proof of soundness for shapes schemas"	rdf:predicate	"present"
s4	"we present proof of soundness for shapes schemas"	rdf:object	"proof of soundness for shape schema"
s4	"proof of soundness for shape schema"	rdfs:member	"proof"
s4	"proof of soundness for shape schema"	rdfs:member	"soundness"
s4	"proof of soundness for shape schema"	rdfs:member	"shape schema"
s4	"shape schema"	rdfs:member	"shape"
s4	"shape schema"	rdfs:subClassOf	"schema"
s4	"proof of soundness"	rdfs:member	"proof"
s4	"proof of soundness"	rdfs:member	"soundness"
s4	"proof of soundness for shape schema"	rdfs:member	"proof of soundness"
s4	"proof of soundness for shape schema"	rdfs:member	"shape schema"
s3	"we present a formal semantics for shapes schemas"
s3	"we present a formal semantics for shapes schemas"	rdf:subject	"we"
s3	"we present a formal semantics for shapes schemas"	rdf:predicate	"present"
s3	"we present a formal semantics for shapes schemas"	rdf:object	"formal semantics for shape schema"
s3	"formal semantics for shape schema"	rdfs:member	"formal semantics"
s3	"formal semantics for shape schema"	rdfs:member	"shape schema"
s3	"formal semantics"	rdfs:member	"formal"
s3	"shape schema"	rdfs:subClassOf	"schema"
s3	"shape schema"	rdfs:member	"shape"
s3	"formal semantics"	rdfs:subClassOf	"semantics"
s3	"formal semantics for shape schema"	rdfs:member	"formal semantics"
s3	"formal semantics for shape schema"	rdfs:member	"shape schema"
s2	"we present a formal semantics for an expressive schema language for rdf graphs"
s2	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:subject	"we"
s2	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:predicate	"present"
s2	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:object	"formal semantics for an expressive schema language for rdf graph"
s2	"formal semantics for an expressive schema language for rdf graph"	rdfs:member	"formal semantics"
s2	"formal semantics for an expressive schema language for rdf graph"	rdfs:member	"expressive schema language"
s2	"formal semantics for an expressive schema language for rdf graph"	rdfs:member	"rdf graph"
s2	"expressive schema language"	rdfs:subClassOf	"language"
s2	"expressive schema language"	rdfs:member	"expressive schema"
s2	"rdf graph"	rdfs:subClassOf	"graph"
s2	"schema language"	rdfs:subClassOf	"language"
s2	"expressive schema"	rdfs:member	"expressive"
s2	"schema language"	rdfs:member	"schema"
s2	"expressive schema"	rdfs:subClassOf	"schema"
s2	"rdf graph"	rdfs:member	"rdf"
s2	"formal semantics"	rdfs:subClassOf	"semantics"
s2	"formal semantics"	rdfs:member	"formal"
s2	"expressive schema language"	rdfs:subClassOf	"schema language"
s2	"formal semantics for expressive schema language"	rdfs:member	"formal semantics"
s2	"formal semantics for expressive schema language"	rdfs:member	"expressive schema language"
s2	"expressive schema language for rdf graph"	rdfs:member	"expressive schema language"
s2	"expressive schema language for rdf graph"	rdfs:member	"rdf graph"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:subject	"we"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:predicate	"present"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:object	"proof of soundness for an expressive schema language for rdf graph"
s0	"proof of soundness for an expressive schema language for rdf graph"	rdfs:member	"proof"
s0	"proof of soundness for an expressive schema language for rdf graph"	rdfs:member	"rdf graph"
s0	"proof of soundness for an expressive schema language for rdf graph"	rdfs:member	"expressive schema language"
s0	"proof of soundness for an expressive schema language for rdf graph"	rdfs:member	"soundness"
s0	"expressive schema language"	rdfs:subClassOf	"language"
s0	"rdf graph"	rdfs:subClassOf	"graph"
s0	"expressive schema language"	rdfs:member	"expressive schema"
s0	"schema language"	rdfs:subClassOf	"language"
s0	"expressive schema"	rdfs:member	"expressive"
s0	"schema language"	rdfs:member	"schema"
s0	"expressive schema"	rdfs:subClassOf	"schema"
s0	"rdf graph"	rdfs:member	"rdf"
s0	"expressive schema language"	rdfs:subClassOf	"schema language"
s0	"proof of soundness"	rdfs:member	"proof"
s0	"proof of soundness"	rdfs:member	"soundness"
s0	"proof of soundness for expressive schema language"	rdfs:member	"proof of soundness"
s0	"proof of soundness for expressive schema language"	rdfs:member	"expressive schema language"
s0	"expressive schema language for rdf graph"	rdfs:member	"expressive schema language"
s0	"expressive schema language for rdf graph"	rdfs:member	"rdf graph"
