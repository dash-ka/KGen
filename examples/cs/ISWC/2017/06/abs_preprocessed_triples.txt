s15	"shapes can use possibly recursive references to other shapes"
s15	"shapes can use possibly recursive references to other shapes"	rdf:subject	"Shapes"
s15	"shapes can use possibly recursive references to other shapes"	rdf:predicate	"use"
s15	"shapes can use possibly recursive references to other shapes"	rdf:object	"possibly recursive references to other shapes"
s15	"possibly recursive references to other shapes"	rdfs:member	"other shapes"
s15	"possibly recursive references to other shapes"	rdfs:member	"possibly recursive references"
s15	"recursive references"	rdfs:subClassOf	"references"
s15	"other shapes"	rdfs:member	"other"
s15	"other shapes"	rdfs:subClassOf	"shapes"
s15	"possibly recursive references"	rdfs:subClassOf	"references"
s15	"possibly recursive references"	rdfs:member	"possibly recursive"
s15	"possibly recursive"	rdfs:member	"possibly"
s15	"possibly recursive"	rdfs:subClassOf	"recursive"
s15	"recursive references"	rdfs:member	"recursive"
s15	"recursive references to other shapes"	rdfs:member	"recursive references"
s15	"recursive references to other shapes"	rdfs:member	"other shapes"
s15	"shapes can use possibly recursive references to other shapes"	local:AM-MOD	"can"
s14.1	"using boolean operators"
s14.1	"using boolean operators"	rdf:subject	"Boolean operators"
s14.1	"boolean operators"	rdfs:member	"boolean"
s14.1	"boolean operators"	rdfs:subClassOf	"operators"
s14.1	"using boolean operators"	rdf:predicate	"use"
s14	"shapes can combined using boolean operators"
s14	"shapes can combined using boolean operators"	rdf:subject	"Shapes"
s14	"shapes can combined using boolean operators"	rdf:predicate	"combine"
s14	"shapes can combined using boolean operators"	local:AM-MNR	"using Boolean operators"
s14	"boolean operators"	rdfs:member	"boolean"
s14	"boolean operators"	rdfs:subClassOf	"operators"
s14	"shapes can combined using boolean operators"	local:AM-MOD	"can"
s13.1	"allowed occurrences of a property"
s13.1	"allowed occurrences of a property"	rdf:subject	"occurrences of a property"
s13.1	"occurrences of a property"	rdfs:member	"occurrences"
s13.1	"occurrences of a property"	rdfs:member	"property"
s13.1	"occurrences of property"	rdfs:member	"occurrences"
s13.1	"occurrences of property"	rdfs:member	"property"
s13.1	"allowed occurrences of a property"	rdf:predicate	"allow"
s13	"the language includes cardinality constraints for the number of allowed occurrences of a property"
s13	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:subject	"cardinality constraints for the number of allowed occurrences of a property"
s13	"cardinality constraints for the number of allowed occurrences of a property"	rdfs:member	"allowed occurrences"
s13	"cardinality constraints for the number of allowed occurrences of a property"	rdfs:member	"number"
s13	"cardinality constraints for the number of allowed occurrences of a property"	rdfs:member	"property"
s13	"cardinality constraints for the number of allowed occurrences of a property"	rdfs:member	"cardinality constraints"
s13	"cardinality constraints"	rdfs:member	"cardinality"
s13	"cardinality constraints"	rdfs:subClassOf	"constraints"
s13	"allowed occurrences"	rdfs:member	"allowed"
s13	"allowed occurrences"	rdfs:subClassOf	"occurrences"
s13	"cardinality constraints for number"	rdfs:member	"cardinality constraints"
s13	"cardinality constraints for number"	rdfs:member	"number"
s13	"number of allowed occurrences"	rdfs:member	"number"
s13	"number of allowed occurrences"	rdfs:member	"allowed occurrences"
s13	"allowed occurrences of property"	rdfs:member	"allowed occurrences"
s13	"allowed occurrences of property"	rdfs:member	"property"
s13	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:predicate	"include"
s13	"the language includes cardinality constraints for the number of allowed occurrences of a property"	rdf:object	"language"
s12.1	"an algebraic grouping operator allowed occurrences of a property"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:subject	"algebraic grouping operator"
s12.1	"grouping operator"	rdfs:subClassOf	"operator"
s12.1	"algebraic grouping operator"	rdfs:subClassOf	"grouping operator"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:predicate	"allow"
s12.1	"an algebraic grouping operator allowed occurrences of a property"	rdf:object	"occurrences of a property"
s12.1	"occurrences of a property"	rdfs:member	"occurrences"
s12.1	"occurrences of a property"	rdfs:member	"property"
s12.1	"occurrences of property"	rdfs:member	"occurrences"
s12.1	"occurrences of property"	rdfs:member	"property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:subject	"algebraic grouping operator for the number of allowed occurrences of a property"
s12	"algebraic grouping operator for the number of allowed occurrences of a property"	rdfs:member	"allowed occurrences"
s12	"algebraic grouping operator for the number of allowed occurrences of a property"	rdfs:member	"property"
s12	"algebraic grouping operator for the number of allowed occurrences of a property"	rdfs:member	"number"
s12	"algebraic grouping operator for the number of allowed occurrences of a property"	rdfs:member	"operator"
s12	"allowed occurrences"	rdfs:member	"allowed"
s12	"allowed occurrences"	rdfs:subClassOf	"occurrences"
s12	"grouping operator"	rdfs:subClassOf	"operator"
s12	"algebraic grouping operator"	rdfs:subClassOf	"grouping operator"
s12	"algebraic grouping operator for number"	rdfs:member	"algebraic grouping operator"
s12	"algebraic grouping operator for number"	rdfs:member	"number"
s12	"number of allowed occurrences"	rdfs:member	"number"
s12	"number of allowed occurrences"	rdfs:member	"allowed occurrences"
s12	"allowed occurrences of property"	rdfs:member	"allowed occurrences"
s12	"allowed occurrences of property"	rdfs:member	"property"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:predicate	"include"
s12	"the language includes an algebraic grouping operator for the number of allowed occurrences of a property"	rdf:object	"language"
s11.1	"allowed occurrences of a property"
s11.1	"allowed occurrences of a property"	rdf:subject	"occurrences of a property"
s11.1	"occurrences of a property"	rdfs:member	"occurrences"
s11.1	"occurrences of a property"	rdfs:member	"property"
s11.1	"occurrences of property"	rdfs:member	"occurrences"
s11.1	"occurrences of property"	rdfs:member	"property"
s11.1	"allowed occurrences of a property"	rdf:predicate	"allow"
s11	"the language includes a choice operator for the number of allowed occurrences of a property"
s11	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:subject	"choice operator for the number of allowed occurrences of a property"
s11	"choice operator for the number of allowed occurrences of a property"	rdfs:member	"allowed occurrences"
s11	"choice operator for the number of allowed occurrences of a property"	rdfs:member	"property"
s11	"choice operator for the number of allowed occurrences of a property"	rdfs:member	"choice operator"
s11	"choice operator for the number of allowed occurrences of a property"	rdfs:member	"number"
s11	"choice operator"	rdfs:subClassOf	"operator"
s11	"choice operator"	rdfs:member	"choice"
s11	"allowed occurrences"	rdfs:member	"allowed"
s11	"allowed occurrences"	rdfs:subClassOf	"occurrences"
s11	"choice operator for number"	rdfs:member	"choice operator"
s11	"choice operator for number"	rdfs:member	"number"
s11	"number of allowed occurrences"	rdfs:member	"number"
s11	"number of allowed occurrences"	rdfs:member	"allowed occurrences"
s11	"allowed occurrences of property"	rdfs:member	"allowed occurrences"
s11	"allowed occurrences of property"	rdfs:member	"property"
s11	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:predicate	"include"
s11	"the language includes a choice operator for the number of allowed occurrences of a property"	rdf:object	"language"
s10	"the language defines a typing mechanism"
s10	"the language defines a typing mechanism"	rdf:subject	"language"
s10	"the language defines a typing mechanism"	rdf:predicate	"define"
s10	"the language defines a typing mechanism"	rdf:object	"typing mechanism"
s10	"typing mechanism"	rdfs:subClassOf	"mechanism"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	rdf:subject	"typing mechanism called shapes against which nodes of the graph"
s9.1	"typing mechanism called shapes against which nodes of the graph"	rdfs:member	"shapes"
s9.1	"typing mechanism called shapes against which nodes of the graph"	rdfs:member	"graph"
s9.1	"typing mechanism called shapes against which nodes of the graph"	rdfs:member	"nodes"
s9.1	"typing mechanism called shapes against which nodes of the graph"	rdfs:member	"mechanism"
s9.1	"typing mechanism"	rdfs:subClassOf	"mechanism"
s9.1	"typing mechanism called"	rdfs:member	"typing mechanism"
s9.1	"typing mechanism called"	rdfs:member	"called"
s9.1	"typing mechanism called against which"	rdfs:member	"typing mechanism called"
s9.1	"typing mechanism called against which"	rdfs:member	"which"
s9.1	"nodes of graph"	rdfs:member	"nodes"
s9.1	"nodes of graph"	rdfs:member	"graph"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	rdf:predicate	"check"
s9.1	"a typing mechanism called shapes against which nodes of the graph can"	local:AM-MOD	"can"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:subject	"typing mechanism"
s9	"typing mechanism"	rdfs:subClassOf	"mechanism"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:predicate	"call"
s9	"a typing mechanism called shapes against which nodes of the graph can be checked"	rdf:object	"shapes against which nodes of the graph can be checked"
s9	"shapes against which nodes of the graph can be checked"	rdfs:member	"shapes"
s9	"shapes against which nodes of the graph can be checked"	rdfs:member	"graph"
s9	"shapes against which nodes of the graph can be checked"	rdfs:member	"nodes"
s9	"can checked"	rdfs:subClassOf	"checked"
s9	"can checked against shapes"	rdfs:member	"can checked"
s9	"can checked against shapes"	rdfs:member	"shapes"
s9	"nodes of graph"	rdfs:member	"nodes"
s9	"nodes of graph"	rdfs:member	"graph"
s8.1	"constrain the admissible properties for nodes in that graph"
s8.1	"constrain the admissible properties for nodes in that graph"	rdf:subject	"admissible properties for nodes in that graph"
s8.1	"admissible properties for nodes in that graph"	rdfs:member	"graph"
s8.1	"admissible properties for nodes in that graph"	rdfs:member	"nodes"
s8.1	"admissible properties for nodes in that graph"	rdfs:member	"admissible properties"
s8.1	"admissible properties"	rdfs:subClassOf	"properties"
s8.1	"admissible properties"	rdfs:member	"admissible"
s8.1	"admissible properties for nodes"	rdfs:member	"admissible properties"
s8.1	"admissible properties for nodes"	rdfs:member	"nodes"
s8.1	"nodes in graph"	rdfs:member	"nodes"
s8.1	"nodes in graph"	rdfs:member	"graph"
s8.1	"constrain the admissible properties for nodes in that graph"	rdf:predicate	"constrain"
s8	"it can used to constrain the admissible properties for nodes in that graph"
s8	"it can used to constrain the admissible properties for nodes in that graph"	rdf:subject	"It"
s8	"it can used to constrain the admissible properties for nodes in that graph"	rdf:predicate	"use"
s8	"it can used to constrain the admissible properties for nodes in that graph"	rdf:object	"constrain the admissible properties for nodes in that graph"
s8	"it can used to constrain the admissible properties for nodes in that graph"	local:AM-MOD	"can"
s7.1	"constrain the admissible values for nodes in that graph"
s7.1	"constrain the admissible values for nodes in that graph"	rdf:subject	"admissible values for nodes in that graph"
s7.1	"admissible values for nodes in that graph"	rdfs:member	"graph"
s7.1	"admissible values for nodes in that graph"	rdfs:member	"admissible values"
s7.1	"admissible values for nodes in that graph"	rdfs:member	"nodes"
s7.1	"admissible values"	rdfs:subClassOf	"values"
s7.1	"admissible values"	rdfs:member	"admissible"
s7.1	"admissible values for nodes"	rdfs:member	"admissible values"
s7.1	"admissible values for nodes"	rdfs:member	"nodes"
s7.1	"nodes in graph"	rdfs:member	"nodes"
s7.1	"nodes in graph"	rdfs:member	"graph"
s7.1	"constrain the admissible values for nodes in that graph"	rdf:predicate	"constrain"
s7	"it can used to constrain the admissible values for nodes in that graph"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:subject	"It"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:predicate	"use"
s7	"it can used to constrain the admissible values for nodes in that graph"	rdf:object	"constrain the admissible values for nodes in that graph"
s7	"it can used to constrain the admissible values for nodes in that graph"	local:AM-MOD	"can"
s6.1	"describe the structure of an rdf graph"
s6.1	"describe the structure of an rdf graph"	rdf:subject	"structure of an RDF graph"
s6.1	"structure of an rdf graph"	rdfs:member	"rdf graph"
s6.1	"structure of an rdf graph"	rdfs:member	"structure"
s6.1	"rdf graph"	rdfs:member	"rdf"
s6.1	"rdf graph"	rdfs:subClassOf	"graph"
s6.1	"structure of rdf graph"	rdfs:member	"structure"
s6.1	"structure of rdf graph"	rdfs:member	"rdf graph"
s6.1	"describe the structure of an rdf graph"	rdf:predicate	"describe"
s6	"it can used to describe the structure of an rdf graph"
s6	"it can used to describe the structure of an rdf graph"	rdf:subject	"It"
s6	"it can used to describe the structure of an rdf graph"	rdf:predicate	"use"
s6	"it can used to describe the structure of an rdf graph"	rdf:object	"describe the structure of an RDF graph"
s6	"describe the structure of an rdf graph"	rdfs:member	"rdf graph"
s6	"describe the structure of an rdf graph"	rdfs:member	"structure"
s6	"rdf graph"	rdfs:member	"rdf"
s6	"rdf graph"	rdfs:subClassOf	"graph"
s6	"structure of rdf graph"	rdfs:member	"structure"
s6	"structure of rdf graph"	rdfs:member	"rdf graph"
s6	"it can used to describe the structure of an rdf graph"	local:AM-MOD	"can"
s5.1	"describe the vocabulary"
s5.1	"describe the vocabulary"	rdf:subject	"vocabulary"
s5.1	"describe the vocabulary"	rdf:predicate	"describe"
s5	"it can used to describe the vocabulary"
s5	"it can used to describe the vocabulary"	rdf:subject	"It"
s5	"it can used to describe the vocabulary"	rdf:predicate	"use"
s5	"it can used to describe the vocabulary"	rdf:object	"describe the vocabulary"
s5	"it can used to describe the vocabulary"	local:AM-MOD	"can"
s3	"we present a formal semantics for an expressive schema language for rdf graphs"
s3	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:subject	"We"
s3	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:predicate	"present"
s3	"we present a formal semantics for an expressive schema language for rdf graphs"	rdf:object	"formal semantics"
s3	"formal semantics"	rdfs:member	"formal"
s3	"formal semantics"	rdfs:subClassOf	"semantics"
s3	"we present a formal semantics for an expressive schema language for rdf graphs"	local:AM-PNC	"expressive schema language for RDF graphs"
s3	"expressive schema language for rdf graphs"	rdfs:member	"rdf graphs"
s3	"expressive schema language for rdf graphs"	rdfs:member	"expressive schema language"
s3	"expressive schema"	rdfs:member	"expressive"
s3	"rdf graphs"	rdfs:subClassOf	"graphs"
s3	"schema language"	rdfs:subClassOf	"language"
s3	"expressive schema"	rdfs:subClassOf	"schema"
s3	"rdf graphs"	rdfs:member	"rdf"
s3	"schema language"	rdfs:member	"schema"
s3	"expressive schema language"	rdfs:subClassOf	"language"
s3	"expressive schema language"	rdfs:member	"expressive schema"
s3	"expressive schema language"	rdfs:subClassOf	"schema language"
s3	"expressive schema language for rdf graphs"	rdfs:member	"expressive schema language"
s3	"expressive schema language for rdf graphs"	rdfs:member	"rdf graphs"
s2	"we present a formal semantics for shapes schemas"
s2	"we present a formal semantics for shapes schemas"	rdf:subject	"We"
s2	"we present a formal semantics for shapes schemas"	rdf:predicate	"present"
s2	"we present a formal semantics for shapes schemas"	rdf:object	"formal semantics for shapes schemas"
s2	"formal semantics for shapes schemas"	rdfs:member	"formal semantics"
s2	"formal semantics for shapes schemas"	rdfs:member	"shapes schemas"
s2	"formal semantics"	rdfs:member	"formal"
s2	"shapes schemas"	rdfs:member	"shapes"
s2	"shapes schemas"	rdfs:subClassOf	"schemas"
s2	"formal semantics"	rdfs:subClassOf	"semantics"
s2	"formal semantics for shapes schemas"	rdfs:member	"formal semantics"
s2	"formal semantics for shapes schemas"	rdfs:member	"shapes schemas"
s1	"we present proof of soundness for shapes schemas"
s1	"we present proof of soundness for shapes schemas"	rdf:subject	"We"
s1	"we present proof of soundness for shapes schemas"	rdf:predicate	"present"
s1	"we present proof of soundness for shapes schemas"	rdf:object	"proof of soundness for shapes schemas"
s1	"proof of soundness for shapes schemas"	rdfs:member	"soundness"
s1	"proof of soundness for shapes schemas"	rdfs:member	"proof"
s1	"proof of soundness for shapes schemas"	rdfs:member	"shapes schemas"
s1	"shapes schemas"	rdfs:subClassOf	"schemas"
s1	"shapes schemas"	rdfs:member	"shapes"
s1	"proof of soundness"	rdfs:member	"proof"
s1	"proof of soundness"	rdfs:member	"soundness"
s1	"proof of soundness for shapes schemas"	rdfs:member	"proof of soundness"
s1	"proof of soundness for shapes schemas"	rdfs:member	"shapes schemas"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:subject	"We"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:predicate	"present"
s0	"we present proof of soundness for an expressive schema language for rdf graphs"	rdf:object	"proof of soundness for an expressive schema language for RDF graphs"
s0	"proof of soundness for an expressive schema language for rdf graphs"	rdfs:member	"rdf graphs"
s0	"proof of soundness for an expressive schema language for rdf graphs"	rdfs:member	"expressive schema language"
s0	"proof of soundness for an expressive schema language for rdf graphs"	rdfs:member	"soundness"
s0	"proof of soundness for an expressive schema language for rdf graphs"	rdfs:member	"proof"
s0	"expressive schema"	rdfs:member	"expressive"
s0	"rdf graphs"	rdfs:subClassOf	"graphs"
s0	"schema language"	rdfs:subClassOf	"language"
s0	"expressive schema"	rdfs:subClassOf	"schema"
s0	"rdf graphs"	rdfs:member	"rdf"
s0	"schema language"	rdfs:member	"schema"
s0	"expressive schema language"	rdfs:subClassOf	"language"
s0	"expressive schema language"	rdfs:member	"expressive schema"
s0	"expressive schema language"	rdfs:subClassOf	"schema language"
s0	"proof of soundness"	rdfs:member	"proof"
s0	"proof of soundness"	rdfs:member	"soundness"
s0	"proof of soundness for expressive schema language"	rdfs:member	"proof of soundness"
s0	"proof of soundness for expressive schema language"	rdfs:member	"expressive schema language"
s0	"expressive schema language for rdf graphs"	rdfs:member	"expressive schema language"
s0	"expressive schema language for rdf graphs"	rdfs:member	"rdf graphs"
