s12	"we cover the description logic"
s12	"we cover the description logic"	rdf:subject	"we"
s12	"we cover the description logic"	rdf:predicate	"cover"
s12	"we cover the description logic"	rdf:object	"description logic"
s12	"description logic"	rdfs:subClassOf	"logic"
s12	"description logic"	rdfs:member	"description"
s11.1	"a tractable fragment based on the lightweight description logic"
s11.1	"a tractable fragment based on the lightweight description logic"	rdf:subject	"tractable fragment"
s11.1	"tractable fragment"	rdfs:subClassOf	"fragment"
s11.1	"tractable fragment"	rdfs:member	"tractable"
s11.1	"a tractable fragment based on the lightweight description logic"	rdf:predicate	"base"
s11.1	"a tractable fragment based on the lightweight description logic"	rdf:object	"lightweight description logic"
s11.1	"lightweight description"	rdfs:member	"lightweight"
s11.1	"description logic"	rdfs:subClassOf	"logic"
s11.1	"lightweight description logic"	rdfs:subClassOf	"logic"
s11.1	"lightweight description"	rdfs:subClassOf	"description"
s11.1	"description logic"	rdfs:member	"description"
s11.1	"lightweight description logic"	rdfs:member	"lightweight description"
s11.1	"lightweight description logic"	rdfs:subClassOf	"description logic"
s11	"we describe a tractable fragment based on the lightweight description logic"
s11	"we describe a tractable fragment based on the lightweight description logic"	rdf:subject	"we"
s11	"we describe a tractable fragment based on the lightweight description logic"	rdf:predicate	"describe"
s11	"we describe a tractable fragment based on the lightweight description logic"	rdf:object	"tractable fragment base on the lightweight description logic"
s11	"tractable fragment base on the lightweight description logic"	rdfs:member	"lightweight description logic"
s11	"tractable fragment base on the lightweight description logic"	rdfs:member	"tractable fragment base"
s11	"fragment base"	rdfs:subClassOf	"base"
s11	"fragment base"	rdfs:member	"fragment"
s11	"lightweight description"	rdfs:member	"lightweight"
s11	"tractable fragment base"	rdfs:subClassOf	"base"
s11	"description logic"	rdfs:subClassOf	"logic"
s11	"lightweight description logic"	rdfs:subClassOf	"logic"
s11	"tractable fragment"	rdfs:subClassOf	"fragment"
s11	"tractable fragment base"	rdfs:member	"tractable fragment"
s11	"lightweight description"	rdfs:subClassOf	"description"
s11	"description logic"	rdfs:member	"description"
s11	"lightweight description logic"	rdfs:member	"lightweight description"
s11	"tractable fragment"	rdfs:member	"tractable"
s11	"lightweight description logic"	rdfs:subClassOf	"description logic"
s11	"tractable fragment base"	rdfs:subClassOf	"fragment base"
s11	"tractable fragment base on lightweight description logic"	rdfs:member	"tractable fragment base"
s11	"tractable fragment base on lightweight description logic"	rdfs:member	"lightweight description logic"
s10.1	"a tractable fragment based on mathcal el"
s10.1	"a tractable fragment based on mathcal el"	rdf:subject	"tractable fragment"
s10.1	"tractable fragment"	rdfs:subClassOf	"fragment"
s10.1	"tractable fragment"	rdfs:member	"tractable"
s10.1	"a tractable fragment based on mathcal el"	rdf:predicate	"base"
s10.1	"a tractable fragment based on mathcal el"	local:AM-LOC	"mathcal el"
s10.1	"mathcal el"	rdfs:member	"mathcal"
s10.1	"mathcal el"	rdfs:subClassOf	"el"
s10	"we describe a tractable fragment based on mathcal el"
s10	"we describe a tractable fragment based on mathcal el"	rdf:subject	"we"
s10	"we describe a tractable fragment based on mathcal el"	rdf:predicate	"describe"
s10	"we describe a tractable fragment based on mathcal el"	rdf:object	"tractable fragment base on mathcal el"
s10	"tractable fragment base on mathcal el"	rdfs:member	"mathcal el"
s10	"tractable fragment base on mathcal el"	rdfs:member	"tractable fragment base"
s10	"fragment base"	rdfs:subClassOf	"base"
s10	"mathcal el"	rdfs:subClassOf	"el"
s10	"fragment base"	rdfs:member	"fragment"
s10	"mathcal el"	rdfs:member	"mathcal"
s10	"tractable fragment base"	rdfs:subClassOf	"base"
s10	"tractable fragment"	rdfs:subClassOf	"fragment"
s10	"tractable fragment base"	rdfs:member	"tractable fragment"
s10	"tractable fragment"	rdfs:member	"tractable"
s10	"tractable fragment base"	rdfs:subClassOf	"fragment base"
s10	"tractable fragment base on mathcal el"	rdfs:member	"tractable fragment base"
s10	"tractable fragment base on mathcal el"	rdfs:member	"mathcal el"
s9	"the description logic underlying owl 2 description logic"
s9	"the description logic underlying owl 2 description logic"	rdf:subject	"description logic"
s9	"description logic"	rdfs:subClassOf	"logic"
s9	"description logic"	rdfs:member	"description"
s9	"the description logic underlying owl 2 description logic"	rdf:predicate	"underlie"
s9	"the description logic underlying owl 2 description logic"	rdf:object	"owl 2 description logic"
s9	"description logic"	rdfs:subClassOf	"logic"
s9	"description logic"	rdfs:member	"description"
s9	"2 description logic"	rdfs:subClassOf	"description logic"
s9	"owl 2 description logic"	rdfs:subClassOf	"2 description logic"
s8	"we cover mathcal sroiq"
s8	"we cover mathcal sroiq"	rdf:subject	"we"
s8	"we cover mathcal sroiq"	rdf:predicate	"cover"
s8	"we cover mathcal sroiq"	rdf:object	"mathcal sroiq"
s8	"mathcal sroiq"	rdfs:member	"mathcal"
s8	"mathcal sroiq"	rdfs:subClassOf	"sroiq"
s6.2	"increased complexity"
s6.2	"increased complexity"	rdf:subject	"complexity"
s6.2	"increased complexity"	rdf:predicate	"increase"
s6.1	"this may lead to increased complexity"
s6.1	"this may lead to increased complexity"	rdf:subject	"this"
s6.1	"this may lead to increased complexity"	rdf:predicate	"lead"
s6.1	"this may lead to increased complexity"	rdf:object	"increase complexity"
s6.1	"increase complexity"	rdfs:subClassOf	"complexity"
s6.1	"increase complexity"	rdfs:member	"increase"
s6.1	"this may lead to increased complexity"	local:AM-MOD	"may"
s6	"we show that this may lead to increased complexity"
s6	"we show that this may lead to increased complexity"	rdf:subject	"we"
s6	"we show that this may lead to increased complexity"	rdf:predicate	"show"
s6	"we show that this may lead to increased complexity"	rdf:object	"may lead to increase complexity"
s6	"may lead"	rdfs:subClassOf	"lead"
s5.3	"this increased expressivity incurring increased complexity of reasoning"
s5.3	"this increased expressivity incurring increased complexity of reasoning"	rdf:subject	"increase expressivity"
s5.3	"increase expressivity"	rdfs:member	"increase"
s5.3	"increase expressivity"	rdfs:subClassOf	"expressivity"
s5.3	"this increased expressivity incurring increased complexity of reasoning"	rdf:predicate	"incur"
s5.3	"this increased expressivity incurring increased complexity of reasoning"	rdf:object	"increase complexity of reason"
s5.3	"increase complexity of reason"	rdfs:member	"increase complexity"
s5.3	"increase complexity of reason"	rdfs:member	"reason"
s5.3	"increase complexity"	rdfs:subClassOf	"complexity"
s5.3	"increase complexity"	rdfs:member	"increase"
s5.3	"increase complexity of reason"	rdfs:member	"increase complexity"
s5.3	"increase complexity of reason"	rdfs:member	"reason"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"	rdf:subject	"increase expressivity"
s5.2	"increase expressivity"	rdfs:member	"increase"
s5.2	"increase expressivity"	rdfs:subClassOf	"expressivity"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"	rdf:predicate	"achieve"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"	local:AM-LOC	"case"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"	local:AM-MNR	"without incur increase complexity of reason"
s5.2	"without incur increase complexity of reason"	rdfs:member	"incur increase complexity"
s5.2	"without incur increase complexity of reason"	rdfs:member	"reason"
s5.2	"incur increase"	rdfs:member	"incur"
s5.2	"incur increase"	rdfs:subClassOf	"increase"
s5.2	"incur increase complexity"	rdfs:subClassOf	"complexity"
s5.2	"increase complexity"	rdfs:member	"increase"
s5.2	"increase complexity"	rdfs:subClassOf	"complexity"
s5.2	"incur increase complexity"	rdfs:member	"incur increase"
s5.2	"increase complexity of reason"	rdfs:member	"increase complexity"
s5.2	"increase complexity of reason"	rdfs:member	"reason"
s5.2	"cases where this increased expressivity can achieved without incurring increased complexity of reasoning"	local:AM-MOD	"can"
s5.1	"increased complexity"
s5.1	"increased complexity"	rdf:subject	"this"
s5.1	"increased complexity"	rdf:predicate	"increase"
s5.1	"increased complexity"	rdf:object	"complexity"
s5	"we identify cases where this increased expressivity can be achieved without incurring increased complexity of reasoning"
s5	"we identify cases where this increased expressivity can be achieved without incurring increased complexity of reasoning"	rdf:subject	"we"
s5	"we identify cases where this increased expressivity can be achieved without incurring increased complexity of reasoning"	rdf:predicate	"identify"
s5	"we identify cases where this increased expressivity can be achieved without incurring increased complexity of reasoning"	rdf:object	"case where this increase expressivity can be achieve without incur increase complexity of reason"
s5	"case where this increase expressivity can be achieve without incur increase complexity of reason"	rdfs:member	"incur increase complexity"
s5	"case where this increase expressivity can be achieve without incur increase complexity of reason"	rdfs:member	"case"
s5	"case where this increase expressivity can be achieve without incur increase complexity of reason"	rdfs:member	"increase expressivity"
s5	"case where this increase expressivity can be achieve without incur increase complexity of reason"	rdfs:member	"reason"
s5	"incur increase"	rdfs:member	"incur"
s5	"incur increase"	rdfs:subClassOf	"increase"
s5	"increase expressivity"	rdfs:member	"increase"
s5	"incur increase complexity"	rdfs:subClassOf	"complexity"
s5	"increase complexity"	rdfs:member	"increase"
s5	"increase complexity"	rdfs:subClassOf	"complexity"
s5	"incur increase complexity"	rdfs:member	"incur increase"
s5	"increase expressivity"	rdfs:subClassOf	"expressivity"
s5	"be achieve"	rdfs:subClassOf	"achieve"
s5	"can be achieve"	rdfs:subClassOf	"be achieve"
s5	"where can be achieve"	rdfs:subClassOf	"can be achieve"
s5	"increase complexity of reason"	rdfs:member	"increase complexity"
s5	"increase complexity of reason"	rdfs:member	"reason"
s4.1	"this may lead to even undecidability"
s4.1	"this may lead to even undecidability"	rdf:subject	"this"
s4.1	"this may lead to even undecidability"	rdf:predicate	"lead"
s4.1	"this may lead to even undecidability"	rdf:object	"even undecidability"
s4.1	"even undecidability"	rdfs:subClassOf	"undecidability"
s4.1	"even undecidability"	rdfs:member	"even"
s4.1	"this may lead to even undecidability"	local:AM-MOD	"may"
s4	"we show that this may lead to even undecidability"
s4	"we show that this may lead to even undecidability"	rdf:subject	"we"
s4	"we show that this may lead to even undecidability"	rdf:predicate	"show"
s4	"we show that this may lead to even undecidability"	rdf:object	"may lead to even undecidability"
s4	"even undecidability"	rdfs:subClassOf	"undecidability"
s4	"may lead"	rdfs:subClassOf	"lead"
s4	"may lead to even undecidability"	rdfs:member	"may lead"
s4	"may lead to even undecidability"	rdfs:member	"even undecidability"
s3.3	"finite sets of attributevalue pairs called annotations"
s3.3	"finite sets of attributevalue pairs called annotations"	rdf:subject	"finite set of attributevalue pair"
s3.3	"finite set of attributevalue pair"	rdfs:member	"finite set"
s3.3	"finite set of attributevalue pair"	rdfs:member	"attributevalue pair"
s3.3	"attributevalue pair"	rdfs:subClassOf	"pair"
s3.3	"finite set"	rdfs:member	"finite"
s3.3	"finite set"	rdfs:subClassOf	"set"
s3.3	"attributevalue pair"	rdfs:member	"attributevalue"
s3.3	"finite set of attributevalue pair"	rdfs:member	"finite set"
s3.3	"finite set of attributevalue pair"	rdfs:member	"attributevalue pair"
s3.3	"finite sets of attributevalue pairs called annotations"	rdf:predicate	"call"
s3.3	"finite sets of attributevalue pairs called annotations"	rdf:object	"annotation"
s3.2	"for dealing with such ontologies we enrich description logic concepts"
s3.2	"for dealing with such ontologies we enrich description logic concepts"	rdf:subject	"we"
s3.2	"for dealing with such ontologies we enrich description logic concepts"	rdf:predicate	"enrich"
s3.2	"for dealing with such ontologies we enrich description logic concepts"	rdf:object	"description logic concept"
s3.2	"description logic"	rdfs:subClassOf	"logic"
s3.2	"description logic concept"	rdfs:subClassOf	"concept"
s3.2	"description logic"	rdfs:member	"description"
s3.2	"logic concept"	rdfs:member	"logic"
s3.2	"logic concept"	rdfs:subClassOf	"concept"
s3.2	"description logic concept"	rdfs:member	"description logic"
s3.2	"description logic concept"	rdfs:subClassOf	"logic concept"
s3.2	"for dealing with such ontologies we enrich description logic concepts"	local:AM-PNC	"deal with such ontology"
s3.2	"deal with such ontology"	rdfs:member	"deal"
s3.2	"deal with such ontology"	rdfs:member	"such ontology"
s3.2	"such ontology"	rdfs:member	"such"
s3.2	"such ontology"	rdfs:subClassOf	"ontology"
s3.2	"deal with such ontology"	rdfs:member	"deal"
s3.2	"deal with such ontology"	rdfs:member	"such ontology"
s3.1	"dealing with such ontologies we"
s3.1	"dealing with such ontologies we"	rdf:subject	"we"
s3.1	"dealing with such ontologies we"	rdf:predicate	"deal"
s3.1	"dealing with such ontologies we"	rdf:object	"ontology"
s3	"equip description logics for dealing with such ontologies we"
s3	"equip description logics for dealing with such ontologies we"	rdf:subject	"we"
s3	"equip description logics for dealing with such ontologies we"	rdf:predicate	"equip"
s3	"equip description logics for dealing with such ontologies we"	rdf:object	"description logic for deal with such ontology"
s3	"description logic for deal with such ontology"	rdfs:member	"deal"
s3	"description logic for deal with such ontology"	rdfs:member	"such ontology"
s3	"description logic for deal with such ontology"	rdfs:member	"description logic"
s3	"description logic"	rdfs:subClassOf	"logic"
s3	"description logic"	rdfs:member	"description"
s3	"such ontology"	rdfs:member	"such"
s3	"such ontology"	rdfs:subClassOf	"ontology"
s3	"description logic for deal"	rdfs:member	"description logic"
s3	"description logic for deal"	rdfs:member	"deal"
s3	"deal with such ontology"	rdfs:member	"deal"
s3	"deal with such ontology"	rdfs:member	"such ontology"
s2.3	"concept inclusions express constraints on annotations"
s2.3	"concept inclusions express constraints on annotations"	rdf:subject	"concept inclusion"
s2.3	"concept inclusion"	rdfs:subClassOf	"inclusion"
s2.3	"concept inclusion"	rdfs:member	"concept"
s2.3	"concept inclusions express constraints on annotations"	rdf:predicate	"express"
s2.3	"concept inclusions express constraints on annotations"	rdf:object	"constraint on annotation"
s2.3	"constraint on annotation"	rdfs:member	"annotation"
s2.3	"constraint on annotation"	rdfs:member	"constraint"
s2.3	"constraint on annotation"	rdfs:member	"constraint"
s2.3	"constraint on annotation"	rdfs:member	"annotation"
s2.2	"for dealing with such ontologies we allow concept inclusions to express constraints on annotations"
s2.2	"for dealing with such ontologies we allow concept inclusions to express constraints on annotations"	rdf:subject	"we"
s2.2	"for dealing with such ontologies we allow concept inclusions to express constraints on annotations"	rdf:predicate	"allow"
s2.2	"for dealing with such ontologies we allow concept inclusions to express constraints on annotations"	rdf:object	"concept inclusion to express constraint on annotation"
s2.2	"concept inclusion to express constraint on annotation"	rdfs:member	"concept inclusion"
s2.2	"concept inclusion to express constraint on annotation"	rdfs:member	"annotation"
s2.2	"concept inclusion to express constraint on annotation"	rdfs:member	"constraint"
s2.2	"concept inclusion"	rdfs:subClassOf	"inclusion"
s2.2	"concept inclusion"	rdfs:member	"concept"
s2.2	"express on annotation"	rdfs:member	"express"
s2.2	"express on annotation"	rdfs:member	"annotation"
s2.2	"for dealing with such ontologies we allow concept inclusions to express constraints on annotations"	local:AM-PNC	"deal with such ontology"
s2.2	"deal with such ontology"	rdfs:member	"deal"
s2.2	"deal with such ontology"	rdfs:member	"such ontology"
s2.2	"such ontology"	rdfs:member	"such"
s2.2	"such ontology"	rdfs:subClassOf	"ontology"
s2.2	"deal with such ontology"	rdfs:member	"deal"
s2.2	"deal with such ontology"	rdfs:member	"such ontology"
s2.1	"dealing with such ontologies we annotations"
s2.1	"dealing with such ontologies we annotations"	rdf:subject	"annotation"
s2.1	"dealing with such ontologies we annotations"	rdf:predicate	"deal"
s2.1	"dealing with such ontologies we annotations"	rdf:object	"ontology"
s2	"equip description logics for dealing with such ontologies we concept inclusions to express constraints on annotations"
s2	"equip description logics for dealing with such ontologies we concept inclusions to express constraints on annotations"	rdf:subject	"concept inclusion"
s2	"concept inclusion"	rdfs:subClassOf	"inclusion"
s2	"concept inclusion"	rdfs:member	"concept"
s2	"equip description logics for dealing with such ontologies we concept inclusions to express constraints on annotations"	rdf:predicate	"equip"
s2	"equip description logics for dealing with such ontologies we concept inclusions to express constraints on annotations"	rdf:object	"description logic for deal with such ontology"
s2	"description logic for deal with such ontology"	rdfs:member	"deal"
s2	"description logic for deal with such ontology"	rdfs:member	"such ontology"
s2	"description logic for deal with such ontology"	rdfs:member	"description logic"
s2	"description logic"	rdfs:subClassOf	"logic"
s2	"description logic"	rdfs:member	"description"
s2	"such ontology"	rdfs:member	"such"
s2	"such ontology"	rdfs:subClassOf	"ontology"
s2	"description logic for deal"	rdfs:member	"description logic"
s2	"description logic for deal"	rdfs:member	"deal"
s2	"deal with such ontology"	rdfs:member	"deal"
s2	"deal with such ontology"	rdfs:member	"such ontology"
s2	"equip description logics for dealing with such ontologies we concept inclusions to express constraints on annotations"	local:AM-PNC	"express constraint on annotation"
s2	"express constraint on annotation"	rdfs:member	"annotation"
s2	"express constraint on annotation"	rdfs:member	"express constraint"
s2	"express constraint"	rdfs:subClassOf	"constraint"
s2	"express constraint"	rdfs:member	"express"
s2	"express on annotation"	rdfs:member	"express"
s2	"express on annotation"	rdfs:member	"annotation"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"	rdf:subject	"reason"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"	rdf:predicate	"arise"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"	rdf:object	"metaknowledge"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"	local:AM-LOC	"model realworld knowledge there"
s1	"model realworld"	rdfs:subClassOf	"realworld"
s1	"realworld knowledge"	rdfs:member	"realworld"
s1	"model realworld knowledge"	rdfs:member	"model realworld"
s1	"model realworld knowledge"	rdfs:subClassOf	"knowledge"
s1	"model realworld"	rdfs:member	"model"
s1	"realworld knowledge"	rdfs:subClassOf	"knowledge"
s1	"there knowledge"	rdfs:subClassOf	"knowledge"
s1	"realworld there knowledge"	rdfs:subClassOf	"there knowledge"
s1	"model realworld there knowledge"	rdfs:subClassOf	"realworld there knowledge"
s1	"in modelling realworld knowledge there often arises reason with metaknowledge"	local:AM-TMP	"often"
s0.1	""
s0.1	""	rdf:predicate	"represent"
s0	"in modelling realworld knowledge there often arises a need to represent"
s0	"in modelling realworld knowledge there often arises a need to represent"	rdf:predicate	"arise"
s0	"in modelling realworld knowledge there often arises a need to represent"	rdf:object	"need to represent"
s0	"in modelling realworld knowledge there often arises a need to represent"	local:AM-LOC	"model realworld knowledge there"
s0	"model realworld"	rdfs:subClassOf	"realworld"
s0	"realworld knowledge"	rdfs:member	"realworld"
s0	"model realworld knowledge"	rdfs:member	"model realworld"
s0	"model realworld knowledge"	rdfs:subClassOf	"knowledge"
s0	"model realworld"	rdfs:member	"model"
s0	"realworld knowledge"	rdfs:subClassOf	"knowledge"
s0	"there knowledge"	rdfs:subClassOf	"knowledge"
s0	"realworld there knowledge"	rdfs:subClassOf	"there knowledge"
s0	"model realworld there knowledge"	rdfs:subClassOf	"realworld there knowledge"
s0	"in modelling realworld knowledge there often arises a need to represent"	local:AM-TMP	"often"
