s24.4	"sets of progs shapes compare with corresponding results for shacl"
s24.4	"sets of progs shapes compare with corresponding results for shacl"	rdf:subject	"set of progs shape"
s24.4	"set of progs shape"	rdfs:member	"set"
s24.4	"set of progs shape"	rdfs:member	"progs shape"
s24.4	"progs shape"	rdfs:member	"progs"
s24.4	"progs shape"	rdfs:subClassOf	"shape"
s24.4	"set of progs shape"	rdfs:member	"set"
s24.4	"set of progs shape"	rdfs:member	"progs shape"
s24.4	"sets of progs shapes compare with corresponding results for shacl"	rdf:predicate	"compare"
s24.4	"sets of progs shapes compare with corresponding results for shacl"	rdf:object	"correspond result for shacl"
s24.4	"correspond result for shacl"	rdfs:member	"shacl"
s24.4	"correspond result for shacl"	rdfs:member	"correspond result"
s24.4	"correspond result"	rdfs:member	"correspond"
s24.4	"correspond result"	rdfs:subClassOf	"result"
s24.4	"result for shacl"	rdfs:member	"result"
s24.4	"result for shacl"	rdfs:member	"shacl"
s24.3	"validating property graphs against sets of progs shapes compare with corresponding results for shacl"
s24.3	"validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:subject	"property graph"
s24.3	"property graph"	rdfs:subClassOf	"graph"
s24.3	"property graph"	rdfs:member	"property"
s24.3	"validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:predicate	"validate"
s24.3	"validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:object	"set of progs shape compare with correspond result for shacl"
s24.3	"set of progs shape compare with correspond result for shacl"	rdfs:member	"set"
s24.3	"set of progs shape compare with correspond result for shacl"	rdfs:member	"progs shape"
s24.3	"set of progs shape compare with correspond result for shacl"	rdfs:member	"shacl"
s24.3	"set of progs shape compare with correspond result for shacl"	rdfs:member	"correspond result"
s24.3	"correspond result"	rdfs:member	"correspond"
s24.3	"correspond result"	rdfs:subClassOf	"result"
s24.3	"progs shape"	rdfs:member	"progs"
s24.3	"progs shape"	rdfs:subClassOf	"shape"
s24.3	"set of progs shape"	rdfs:member	"set"
s24.3	"set of progs shape"	rdfs:member	"progs shape"
s24.3	"compare with correspond result"	rdfs:member	"compare"
s24.3	"compare with correspond result"	rdfs:member	"correspond result"
s24.3	"correspond result for shacl"	rdfs:member	"correspond result"
s24.3	"correspond result for shacl"	rdfs:member	"shacl"
s24.2	"resulting complexity"
s24.2	"resulting complexity"	rdf:subject	"complexity"
s24.2	"resulting complexity"	rdf:predicate	"result"
s24.1	"a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"
s24.1	"a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:subject	"formal semantics of progs"
s24.1	"formal semantics of progs"	rdfs:member	"progs"
s24.1	"formal semantics of progs"	rdfs:member	"formal semantics"
s24.1	"formal semantics"	rdfs:member	"formal"
s24.1	"formal semantics"	rdfs:subClassOf	"semantics"
s24.1	"formal semantics of progs"	rdfs:member	"formal semantics"
s24.1	"formal semantics of progs"	rdfs:member	"progs"
s24.1	"a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:predicate	"investigate"
s24.1	"a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:object	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"validate property graph"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"progs shape"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"shacl"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"set"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"result complexity"
s24.1	"result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"correspond result"
s24.1	"result complexity"	rdfs:member	"result"
s24.1	"result complexity"	rdfs:subClassOf	"complexity"
s24.1	"property graph"	rdfs:member	"property"
s24.1	"correspond result"	rdfs:member	"correspond"
s24.1	"validate property"	rdfs:member	"validate"
s24.1	"property graph"	rdfs:subClassOf	"graph"
s24.1	"validate property graph"	rdfs:subClassOf	"graph"
s24.1	"progs shape"	rdfs:member	"progs"
s24.1	"validate property"	rdfs:subClassOf	"property"
s24.1	"progs shape"	rdfs:subClassOf	"shape"
s24.1	"validate property graph"	rdfs:member	"validate property"
s24.1	"correspond result"	rdfs:subClassOf	"result"
s24.1	"validate property graph"	rdfs:subClassOf	"property graph"
s24.1	"result complexity of validate property graph"	rdfs:member	"result complexity"
s24.1	"result complexity of validate property graph"	rdfs:member	"validate property graph"
s24.1	"result complexity of validate property graph against set"	rdfs:member	"result complexity of validate property graph"
s24.1	"result complexity of validate property graph against set"	rdfs:member	"set"
s24.1	"set of progs shape"	rdfs:member	"set"
s24.1	"set of progs shape"	rdfs:member	"progs shape"
s24.1	"compare with correspond result"	rdfs:member	"compare"
s24.1	"compare with correspond result"	rdfs:member	"correspond result"
s24.1	"correspond result for shacl"	rdfs:member	"correspond result"
s24.1	"correspond result for shacl"	rdfs:member	"shacl"
s24	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"
s24	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:subject	"we"
s24	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:predicate	"define"
s24	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes compare with corresponding results for shacl"	rdf:object	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"validate property graph"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"progs shape"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"progs"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"shacl"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"set"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"result complexity"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"formal semantics"
s24	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape compare with correspond result for shacl"	rdfs:member	"correspond result"
s24	"result complexity"	rdfs:member	"result"
s24	"result complexity"	rdfs:subClassOf	"complexity"
s24	"property graph"	rdfs:member	"property"
s24	"formal semantics"	rdfs:subClassOf	"semantics"
s24	"correspond result"	rdfs:member	"correspond"
s24	"validate property"	rdfs:member	"validate"
s24	"property graph"	rdfs:subClassOf	"graph"
s24	"validate property graph"	rdfs:subClassOf	"graph"
s24	"progs shape"	rdfs:member	"progs"
s24	"validate property"	rdfs:subClassOf	"property"
s24	"progs shape"	rdfs:subClassOf	"shape"
s24	"validate property graph"	rdfs:member	"validate property"
s24	"correspond result"	rdfs:subClassOf	"result"
s24	"formal semantics"	rdfs:member	"formal"
s24	"validate property graph"	rdfs:subClassOf	"property graph"
s24	"formal semantics of progs"	rdfs:member	"formal semantics"
s24	"formal semantics of progs"	rdfs:member	"progs"
s24	"result complexity of validate property graph"	rdfs:member	"result complexity"
s24	"result complexity of validate property graph"	rdfs:member	"validate property graph"
s24	"result complexity of validate property graph against set"	rdfs:member	"result complexity of validate property graph"
s24	"result complexity of validate property graph against set"	rdfs:member	"set"
s24	"set of progs shape"	rdfs:member	"set"
s24	"set of progs shape"	rdfs:member	"progs shape"
s24	"set of progs shape compare"	rdfs:member	"set of progs shape"
s24	"set of progs shape compare"	rdfs:member	"compare"
s24	"compare with correspond result"	rdfs:member	"compare"
s24	"compare with correspond result"	rdfs:member	"correspond result"
s24	"correspond result for shacl"	rdfs:member	"correspond result"
s24	"correspond result for shacl"	rdfs:member	"shacl"
s23	"answer set programming"
s23	"answer set programming"	rdf:subject	"answer"
s23	"answer set programming"	rdf:predicate	"set"
s23	"answer set programming"	rdf:object	"program"
s22	"a prototypical validator that utilizes answer"
s22	"a prototypical validator that utilizes answer"	rdf:subject	"prototypical validator"
s22	"prototypical validator"	rdfs:subClassOf	"validator"
s22	"prototypical validator"	rdfs:member	"prototypical"
s22	"a prototypical validator that utilizes answer"	rdf:predicate	"utilize"
s22	"a prototypical validator that utilizes answer"	rdf:object	"answer"
s21.4	"property graphs against sets of progs shapes implement a prototypical validator"
s21.4	"property graphs against sets of progs shapes implement a prototypical validator"	rdf:subject	"property graph against set of progs shape"
s21.4	"property graph against set of progs shape"	rdfs:member	"set"
s21.4	"property graph against set of progs shape"	rdfs:member	"property graph"
s21.4	"property graph against set of progs shape"	rdfs:member	"progs shape"
s21.4	"progs shape"	rdfs:member	"progs"
s21.4	"progs shape"	rdfs:subClassOf	"shape"
s21.4	"property graph"	rdfs:subClassOf	"graph"
s21.4	"property graph"	rdfs:member	"property"
s21.4	"property graph against set"	rdfs:member	"property graph"
s21.4	"property graph against set"	rdfs:member	"set"
s21.4	"set of progs shape"	rdfs:member	"set"
s21.4	"set of progs shape"	rdfs:member	"progs shape"
s21.4	"property graphs against sets of progs shapes implement a prototypical validator"	rdf:predicate	"implement"
s21.4	"property graphs against sets of progs shapes implement a prototypical validator"	rdf:object	"prototypical validator"
s21.4	"prototypical validator"	rdfs:subClassOf	"validator"
s21.4	"prototypical validator"	rdfs:member	"prototypical"
s21.3	"validating property graphs against sets of progs shapes"
s21.3	"validating property graphs against sets of progs shapes"	rdf:subject	"property graph"
s21.3	"property graph"	rdfs:subClassOf	"graph"
s21.3	"property graph"	rdfs:member	"property"
s21.3	"validating property graphs against sets of progs shapes"	rdf:predicate	"validate"
s21.3	"validating property graphs against sets of progs shapes"	rdf:object	"set of progs shape"
s21.3	"set of progs shape"	rdfs:member	"set"
s21.3	"set of progs shape"	rdfs:member	"progs shape"
s21.3	"progs shape"	rdfs:member	"progs"
s21.3	"progs shape"	rdfs:subClassOf	"shape"
s21.3	"set of progs shape"	rdfs:member	"set"
s21.3	"set of progs shape"	rdfs:member	"progs shape"
s21.2	"resulting complexity"
s21.2	"resulting complexity"	rdf:subject	"complexity"
s21.2	"resulting complexity"	rdf:predicate	"result"
s21.1	"progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"
s21.1	"progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:subject	"progs"
s21.1	"progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:predicate	"investigate"
s21.1	"progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:object	"result complexity of validate property graph against set of progs shape implement a prototypical validator"
s21.1	"result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"prototypical validator"
s21.1	"result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"validate property graph"
s21.1	"result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"progs"
s21.1	"result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"set"
s21.1	"result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"result complexity"
s21.1	"prototypical validator"	rdfs:member	"prototypical"
s21.1	"result complexity"	rdfs:member	"result"
s21.1	"result complexity"	rdfs:subClassOf	"complexity"
s21.1	"property graph"	rdfs:member	"property"
s21.1	"prototypical validator"	rdfs:subClassOf	"validator"
s21.1	"validate property"	rdfs:member	"validate"
s21.1	"property graph"	rdfs:subClassOf	"graph"
s21.1	"validate property graph"	rdfs:subClassOf	"graph"
s21.1	"validate property"	rdfs:subClassOf	"property"
s21.1	"validate property graph"	rdfs:member	"validate property"
s21.1	"progs shape"	rdfs:subClassOf	"shape"
s21.1	"validate property graph"	rdfs:subClassOf	"property graph"
s21.1	"result complexity of validate property graph"	rdfs:member	"result complexity"
s21.1	"result complexity of validate property graph"	rdfs:member	"validate property graph"
s21.1	"result complexity of validate property graph against set"	rdfs:member	"result complexity of validate property graph"
s21.1	"result complexity of validate property graph against set"	rdfs:member	"set"
s21.1	"set of progs shape"	rdfs:member	"set"
s21.1	"set of progs shape"	rdfs:member	"progs shape"
s21	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"
s21	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:subject	"we"
s21	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:predicate	"define"
s21	"we define a formal semantics of progs investigate the resulting complexity of validating property graphs against sets of progs shapes implement a prototypical validator"	rdf:object	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"prototypical validator"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"validate property graph"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"progs"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"set"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"result complexity"
s21	"formal semantics of progs investigate the result complexity of validate property graph against set of progs shape implement a prototypical validator"	rdfs:member	"formal semantics"
s21	"prototypical validator"	rdfs:member	"prototypical"
s21	"result complexity"	rdfs:member	"result"
s21	"result complexity"	rdfs:subClassOf	"complexity"
s21	"property graph"	rdfs:member	"property"
s21	"formal semantics"	rdfs:subClassOf	"semantics"
s21	"prototypical validator"	rdfs:subClassOf	"validator"
s21	"validate property"	rdfs:member	"validate"
s21	"property graph"	rdfs:subClassOf	"graph"
s21	"validate property graph"	rdfs:subClassOf	"graph"
s21	"validate property"	rdfs:subClassOf	"property"
s21	"validate property graph"	rdfs:member	"validate property"
s21	"formal semantics"	rdfs:member	"formal"
s21	"progs shape"	rdfs:subClassOf	"shape"
s21	"validate property graph"	rdfs:subClassOf	"property graph"
s21	"formal semantics of progs"	rdfs:member	"formal semantics"
s21	"formal semantics of progs"	rdfs:member	"progs"
s21	"result complexity of validate property graph"	rdfs:member	"result complexity"
s21	"result complexity of validate property graph"	rdfs:member	"validate property graph"
s21	"result complexity of validate property graph against set"	rdfs:member	"result complexity of validate property graph"
s21	"result complexity of validate property graph against set"	rdfs:member	"set"
s21	"set of progs shape"	rdfs:member	"set"
s21	"set of progs shape"	rdfs:member	"progs shape"
s20.1	"progs which formulating shape constraints"
s20.1	"progs which formulating shape constraints"	rdf:subject	"progs"
s20.1	"progs which formulating shape constraints"	rdf:predicate	"formulate"
s20.1	"progs which formulating shape constraints"	rdf:object	"shape constraint"
s20.1	"shape constraint"	rdfs:member	"shape"
s20.1	"shape constraint"	rdfs:subClassOf	"constraint"
s20	"progs which allows for formulating shape constraints on"
s20	"progs which allows for formulating shape constraints on"	rdf:subject	"progs"
s20	"progs which allows for formulating shape constraints on"	rdf:predicate	"allow"
s20	"progs which allows for formulating shape constraints on"	rdf:object	"formulate shape constraint on"
s20	"shape constraint"	rdfs:subClassOf	"constraint"
s20	"formulate shape"	rdfs:member	"formulate"
s20	"formulate shape constraint"	rdfs:member	"formulate shape"
s20	"formulate shape"	rdfs:subClassOf	"shape"
s20	"shape constraint"	rdfs:member	"shape"
s20	"formulate shape constraint"	rdfs:subClassOf	"constraint"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:subject	"we"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:predicate	"design"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:object	"shape language"
s19.1	"shape language"	rdfs:subClassOf	"language"
s19.1	"shape language"	rdfs:member	"shape"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"	local:AM-ADV	"borrow idea from the syntax definition of shacl"
s19.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"syntax definition"
s19.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"borrow idea"
s19.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"shacl"
s19.1	"borrow idea"	rdfs:member	"borrow"
s19.1	"syntax definition"	rdfs:member	"syntax"
s19.1	"syntax definition"	rdfs:subClassOf	"definition"
s19.1	"borrow idea"	rdfs:subClassOf	"idea"
s19.1	"borrow from syntax definition"	rdfs:member	"borrow"
s19.1	"borrow from syntax definition"	rdfs:member	"syntax definition"
s19.1	"syntax definition of shacl"	rdfs:member	"syntax definition"
s19.1	"syntax definition of shacl"	rdfs:member	"shacl"
s19.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as edges with identities"	local:AM-PNC	"property graph progs such a edge with identity"
s19.1	"property graph progs such a edge with identity"	rdfs:member	"property graph progs"
s19.1	"property graph progs such a edge with identity"	rdfs:member	"identity"
s19.1	"property graph progs such a edge with identity"	rdfs:member	"edge"
s19.1	"graph progs"	rdfs:subClassOf	"progs"
s19.1	"property graph progs"	rdfs:subClassOf	"progs"
s19.1	"property graph"	rdfs:member	"property"
s19.1	"graph progs"	rdfs:member	"graph"
s19.1	"property graph progs"	rdfs:member	"property graph"
s19.1	"property graph"	rdfs:subClassOf	"graph"
s19.1	"such edge"	rdfs:subClassOf	"edge"
s19.1	"property graph progs"	rdfs:subClassOf	"graph progs"
s19.1	"such edge with identity"	rdfs:member	"such edge"
s19.1	"such edge with identity"	rdfs:member	"identity"
s19	"borrowing ideas"
s19	"borrowing ideas"	rdf:subject	"idea"
s19	"borrowing ideas"	rdf:predicate	"borrow"
s18	"borrowing ideas"
s18	"borrowing ideas"	rdf:subject	"idea"
s18	"borrowing ideas"	rdf:predicate	"borrow"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:subject	"we"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:predicate	"design"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:object	"shape language"
s16.1	"shape language"	rdfs:subClassOf	"language"
s16.1	"shape language"	rdfs:member	"shape"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	local:AM-ADV	"borrow idea from the syntax definition of shacl"
s16.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"syntax definition"
s16.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"borrow idea"
s16.1	"borrow idea from the syntax definition of shacl"	rdfs:member	"shacl"
s16.1	"borrow idea"	rdfs:member	"borrow"
s16.1	"syntax definition"	rdfs:member	"syntax"
s16.1	"syntax definition"	rdfs:subClassOf	"definition"
s16.1	"borrow idea"	rdfs:subClassOf	"idea"
s16.1	"borrow from syntax definition"	rdfs:member	"borrow"
s16.1	"borrow from syntax definition"	rdfs:member	"syntax definition"
s16.1	"syntax definition of shacl"	rdfs:member	"syntax definition"
s16.1	"syntax definition of shacl"	rdfs:member	"shacl"
s16.1	"borrowing ideas from the syntax definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	local:AM-PNC	"property graph progs such a keyvalue annotation to both nod and edge"
s16.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"property graph progs"
s16.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"nod"
s16.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"edge"
s16.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"keyvalue annotation"
s16.1	"graph progs"	rdfs:subClassOf	"progs"
s16.1	"property graph progs"	rdfs:subClassOf	"progs"
s16.1	"property graph"	rdfs:member	"property"
s16.1	"keyvalue annotation"	rdfs:subClassOf	"annotation"
s16.1	"graph progs"	rdfs:member	"graph"
s16.1	"property graph progs"	rdfs:member	"property graph"
s16.1	"property graph"	rdfs:subClassOf	"graph"
s16.1	"keyvalue annotation"	rdfs:member	"keyvalue"
s16.1	"property graph progs"	rdfs:subClassOf	"graph progs"
s16.1	"keyvalue annotation to nod"	rdfs:member	"keyvalue annotation"
s16.1	"keyvalue annotation to nod"	rdfs:member	"nod"
s16.1	"keyvalue annotation to nod to edge"	rdfs:member	"keyvalue annotation to nod"
s16.1	"keyvalue annotation to nod to edge"	rdfs:member	"edge"
s16	"borrowing ideas"
s16	"borrowing ideas"	rdf:subject	"idea"
s16	"borrowing ideas"	rdf:predicate	"borrow"
s15.1	"progs which formulating shape constraints on property graphs"
s15.1	"progs which formulating shape constraints on property graphs"	rdf:subject	"progs"
s15.1	"progs which formulating shape constraints on property graphs"	rdf:predicate	"formulate"
s15.1	"progs which formulating shape constraints on property graphs"	rdf:object	"shape constraint property graph"
s15.1	"shape constraint"	rdfs:subClassOf	"constraint"
s15.1	"constraint property"	rdfs:subClassOf	"property"
s15.1	"property graph"	rdfs:member	"property"
s15.1	"constraint property graph"	rdfs:subClassOf	"graph"
s15.1	"shape constraint property graph"	rdfs:subClassOf	"graph"
s15.1	"constraint property"	rdfs:member	"constraint"
s15.1	"property graph"	rdfs:subClassOf	"graph"
s15.1	"shape constraint property"	rdfs:subClassOf	"property"
s15.1	"shape constraint property"	rdfs:member	"shape constraint"
s15.1	"shape constraint"	rdfs:member	"shape"
s15.1	"shape constraint property graph"	rdfs:member	"shape constraint property"
s15.1	"constraint property graph"	rdfs:member	"constraint property"
s15.1	"constraint property graph"	rdfs:subClassOf	"property graph"
s15.1	"shape constraint property graph"	rdfs:subClassOf	"constraint property graph"
s15	"progs which allows for formulating shape constraints on property graphs"
s15	"progs which allows for formulating shape constraints on property graphs"	rdf:subject	"progs"
s15	"progs which allows for formulating shape constraints on property graphs"	rdf:predicate	"allow"
s15	"progs which allows for formulating shape constraints on property graphs"	rdf:object	"formulate shape constraint on property graph"
s15	"formulate shape constraint on property graph"	rdfs:member	"formulate shape constraint"
s15	"formulate shape constraint on property graph"	rdfs:member	"property graph"
s15	"shape constraint"	rdfs:subClassOf	"constraint"
s15	"property graph"	rdfs:member	"property"
s15	"formulate shape"	rdfs:member	"formulate"
s15	"formulate shape constraint"	rdfs:member	"formulate shape"
s15	"property graph"	rdfs:subClassOf	"graph"
s15	"formulate shape"	rdfs:subClassOf	"shape"
s15	"shape constraint"	rdfs:member	"shape"
s15	"formulate shape constraint"	rdfs:subClassOf	"constraint"
s15	"formulate on property graph"	rdfs:member	"formulate"
s15	"formulate on property graph"	rdfs:member	"property graph"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:subject	"we"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:predicate	"design"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"	rdf:object	"shape language"
s13.1	"shape language"	rdfs:subClassOf	"language"
s13.1	"shape language"	rdfs:member	"shape"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"	local:AM-ADV	"borrow idea from the semantics definition of shacl"
s13.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"borrow idea"
s13.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"semantics definition"
s13.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"shacl"
s13.1	"borrow idea"	rdfs:member	"borrow"
s13.1	"semantics definition"	rdfs:subClassOf	"definition"
s13.1	"borrow idea"	rdfs:subClassOf	"idea"
s13.1	"semantics definition"	rdfs:member	"semantics"
s13.1	"borrow from semantics definition"	rdfs:member	"borrow"
s13.1	"borrow from semantics definition"	rdfs:member	"semantics definition"
s13.1	"semantics definition of shacl"	rdfs:member	"semantics definition"
s13.1	"semantics definition of shacl"	rdfs:member	"shacl"
s13.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as edges with identities"	local:AM-PNC	"property graph progs such a edge with identity"
s13.1	"property graph progs such a edge with identity"	rdfs:member	"property graph progs"
s13.1	"property graph progs such a edge with identity"	rdfs:member	"identity"
s13.1	"property graph progs such a edge with identity"	rdfs:member	"edge"
s13.1	"graph progs"	rdfs:subClassOf	"progs"
s13.1	"property graph progs"	rdfs:subClassOf	"progs"
s13.1	"property graph"	rdfs:member	"property"
s13.1	"graph progs"	rdfs:member	"graph"
s13.1	"property graph progs"	rdfs:member	"property graph"
s13.1	"property graph"	rdfs:subClassOf	"graph"
s13.1	"such edge"	rdfs:subClassOf	"edge"
s13.1	"property graph progs"	rdfs:subClassOf	"graph progs"
s13.1	"such edge with identity"	rdfs:member	"such edge"
s13.1	"such edge with identity"	rdfs:member	"identity"
s13	"borrowing ideas"
s13	"borrowing ideas"	rdf:subject	"idea"
s13	"borrowing ideas"	rdf:predicate	"borrow"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:subject	"we"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:predicate	"design"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	rdf:object	"shape language"
s12.1	"shape language"	rdfs:subClassOf	"language"
s12.1	"shape language"	rdfs:member	"shape"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	local:AM-ADV	"borrow idea from the semantics definition of shacl"
s12.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"borrow idea"
s12.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"semantics definition"
s12.1	"borrow idea from the semantics definition of shacl"	rdfs:member	"shacl"
s12.1	"borrow idea"	rdfs:member	"borrow"
s12.1	"semantics definition"	rdfs:subClassOf	"definition"
s12.1	"borrow idea"	rdfs:subClassOf	"idea"
s12.1	"semantics definition"	rdfs:member	"semantics"
s12.1	"borrow from semantics definition"	rdfs:member	"borrow"
s12.1	"borrow from semantics definition"	rdfs:member	"semantics definition"
s12.1	"semantics definition of shacl"	rdfs:member	"semantics definition"
s12.1	"semantics definition of shacl"	rdfs:member	"shacl"
s12.1	"borrowing ideas from the semantics definitions of shacl we design a shape language for property graphs progs such as keyvalue annotations to both nodes and edges"	local:AM-PNC	"property graph progs such a keyvalue annotation to both nod and edge"
s12.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"property graph progs"
s12.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"nod"
s12.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"edge"
s12.1	"property graph progs such a keyvalue annotation to both nod and edge"	rdfs:member	"keyvalue annotation"
s12.1	"graph progs"	rdfs:subClassOf	"progs"
s12.1	"property graph progs"	rdfs:subClassOf	"progs"
s12.1	"property graph"	rdfs:member	"property"
s12.1	"keyvalue annotation"	rdfs:subClassOf	"annotation"
s12.1	"graph progs"	rdfs:member	"graph"
s12.1	"property graph progs"	rdfs:member	"property graph"
s12.1	"property graph"	rdfs:subClassOf	"graph"
s12.1	"keyvalue annotation"	rdfs:member	"keyvalue"
s12.1	"property graph progs"	rdfs:subClassOf	"graph progs"
s12.1	"keyvalue annotation to nod"	rdfs:member	"keyvalue annotation"
s12.1	"keyvalue annotation to nod"	rdfs:member	"nod"
s12.1	"keyvalue annotation to nod to edge"	rdfs:member	"keyvalue annotation to nod"
s12.1	"keyvalue annotation to nod to edge"	rdfs:member	"edge"
s12	"borrowing ideas"
s12	"borrowing ideas"	rdf:subject	"idea"
s12	"borrowing ideas"	rdf:predicate	"borrow"
s11.1	"checking whether graphs"
s11.1	"checking whether graphs"	rdf:subject	"whether graph"
s11.1	"checking whether graphs"	rdf:predicate	"check"
s11	"which allow for checking whether graphs are valid with respect to a set of domain constraints"
s11	"which allow for checking whether graphs are valid with respect to a set of domain constraints"	rdf:subject	"check whether graph be valid with respect to a set of domain constraint"
s11	"check whether graph be valid with respect to a set of domain constraint"	rdfs:member	"graph"
s11	"check whether graph be valid with respect to a set of domain constraint"	rdfs:member	"respect"
s11	"check whether graph be valid with respect to a set of domain constraint"	rdfs:member	"check"
s11	"check whether graph be valid with respect to a set of domain constraint"	rdfs:member	"set"
s11	"check whether graph be valid with respect to a set of domain constraint"	rdfs:member	"domain constraint"
s11	"domain constraint"	rdfs:member	"domain"
s11	"domain constraint"	rdfs:subClassOf	"constraint"
s11	"valid with_respect_to set"	rdfs:member	"valid"
s11	"valid with_respect_to set"	rdfs:member	"set"
s11	"set of domain constraint"	rdfs:member	"set"
s11	"set of domain constraint"	rdfs:member	"domain constraint"
s11	"which allow for checking whether graphs are valid with respect to a set of domain constraints"	rdf:predicate	"allow"
s10	"in rdf representations this error can addressed by shape languages such as shacl"
s10	"in rdf representations this error can addressed by shape languages such as shacl"	rdf:subject	"shape language such a shacl"
s10	"shape language such a shacl"	rdfs:member	"shape language"
s10	"shape language such a shacl"	rdfs:member	"shacl"
s10	"shape language"	rdfs:subClassOf	"language"
s10	"shape language"	rdfs:member	"shape"
s10	"such shacl"	rdfs:subClassOf	"shacl"
s10	"in rdf representations this error can addressed by shape languages such as shacl"	rdf:predicate	"address"
s10	"in rdf representations this error can addressed by shape languages such as shacl"	rdf:object	"error"
s10	"in rdf representations this error can addressed by shape languages such as shacl"	local:AM-LOC	"rdf representation"
s10	"rdf representation"	rdfs:subClassOf	"representation"
s10	"rdf representation"	rdfs:member	"rdf"
s10	"in rdf representations this error can addressed by shape languages such as shacl"	local:AM-MOD	"can"
s9.1	"checking whether graphs"
s9.1	"checking whether graphs"	rdf:subject	"whether graph"
s9.1	"checking whether graphs"	rdf:predicate	"check"
s9	"shacl which allow for checking whether graphs"
s9	"shacl which allow for checking whether graphs"	rdf:subject	"shacl"
s9	"shacl which allow for checking whether graphs"	rdf:predicate	"allow"
s9	"shacl which allow for checking whether graphs"	local:AM-PNC	"check whether graph"
s9	"check whether graph"	rdfs:member	"check"
s9	"check whether graph"	rdfs:member	"graph"
s8	"in rdf representations this error can addressed by shape languages such as shex"
s8	"in rdf representations this error can addressed by shape languages such as shex"	rdf:subject	"shape language such a shex"
s8	"shape language such a shex"	rdfs:member	"shape language"
s8	"shape language such a shex"	rdfs:member	"shex"
s8	"shape language"	rdfs:subClassOf	"language"
s8	"shape language"	rdfs:member	"shape"
s8	"such shex"	rdfs:subClassOf	"shex"
s8	"in rdf representations this error can addressed by shape languages such as shex"	rdf:predicate	"address"
s8	"in rdf representations this error can addressed by shape languages such as shex"	rdf:object	"error"
s8	"in rdf representations this error can addressed by shape languages such as shex"	local:AM-LOC	"rdf representation"
s8	"rdf representation"	rdfs:subClassOf	"representation"
s8	"rdf representation"	rdfs:member	"rdf"
s8	"in rdf representations this error can addressed by shape languages such as shex"	local:AM-MOD	"can"
s7	"the second type of error not addressed with regard to property graphs so far"
s7	"the second type of error not addressed with regard to property graphs so far"	rdf:subject	"second type of error"
s7	"second type of error"	rdfs:member	"second type"
s7	"second type of error"	rdfs:member	"error"
s7	"second type"	rdfs:member	"second"
s7	"second type"	rdfs:subClassOf	"type"
s7	"second type of error"	rdfs:member	"second type"
s7	"second type of error"	rdfs:member	"error"
s7	"the second type of error not addressed with regard to property graphs so far"	rdf:predicate	"not address"
s7	"the second type of error not addressed with regard to property graphs so far"	local:AM-MNR	"regard to property graph"
s7	"regard to property graph"	rdfs:member	"property graph"
s7	"regard to property graph"	rdfs:member	"regard"
s7	"property graph"	rdfs:subClassOf	"graph"
s7	"property graph"	rdfs:member	"property"
s7	"regard to property graph"	rdfs:member	"regard"
s7	"regard to property graph"	rdfs:member	"property graph"
s7	"the second type of error not addressed with regard to property graphs so far"	local:AM-TMP	"far"
s6	"violation of domain constraints not addressed with regard to property graphs so far"
s6	"violation of domain constraints not addressed with regard to property graphs so far"	rdf:subject	"violation of domain constraint"
s6	"violation of domain constraint"	rdfs:member	"domain constraint"
s6	"violation of domain constraint"	rdfs:member	"violation"
s6	"domain constraint"	rdfs:member	"domain"
s6	"domain constraint"	rdfs:subClassOf	"constraint"
s6	"violation of domain constraint"	rdfs:member	"violation"
s6	"violation of domain constraint"	rdfs:member	"domain constraint"
s6	"violation of domain constraints not addressed with regard to property graphs so far"	rdf:predicate	"not address"
s6	"violation of domain constraints not addressed with regard to property graphs so far"	local:AM-MNR	"regard to property graph"
s6	"regard to property graph"	rdfs:member	"property graph"
s6	"regard to property graph"	rdfs:member	"regard"
s6	"property graph"	rdfs:subClassOf	"graph"
s6	"property graph"	rdfs:member	"property"
s6	"regard to property graph"	rdfs:member	"regard"
s6	"regard to property graph"	rdfs:member	"property graph"
s6	"violation of domain constraints not addressed with regard to property graphs so far"	local:AM-TMP	"far"
s5.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"
s5.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"representation of provenance make triple"
s5.2	"representation of provenance make triple"	rdfs:member	"triple"
s5.2	"representation of provenance make triple"	rdfs:member	"provenance"
s5.2	"representation of provenance make triple"	rdfs:member	"representation"
s5.2	"representation of provenance"	rdfs:member	"representation"
s5.2	"representation of provenance"	rdfs:member	"provenance"
s5.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"occur"
s5.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	local:AM-TMP	"firstorder object in subject position of metadata triple"
s5.2	"firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s5.2	"firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s5.2	"firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s5.2	"subject position"	rdfs:member	"subject"
s5.2	"metadata triple"	rdfs:subClassOf	"triple"
s5.2	"firstorder object"	rdfs:subClassOf	"object"
s5.2	"metadata triple"	rdfs:member	"metadata"
s5.2	"firstorder object"	rdfs:member	"firstorder"
s5.2	"subject position"	rdfs:subClassOf	"position"
s5.2	"firstorder object in subject position"	rdfs:member	"firstorder object"
s5.2	"firstorder object in subject position"	rdfs:member	"subject position"
s5.2	"subject position of metadata triple"	rdfs:member	"subject position"
s5.2	"subject position of metadata triple"	rdfs:member	"metadata triple"
s5.1	"making triples occur as firstorder objects in subject position of metadata triples"
s5.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"triple"
s5.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"make"
s5.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"occur a firstorder object in subject position of metadata triple"
s5.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s5.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s5.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s5.1	"subject position"	rdfs:member	"subject"
s5.1	"metadata triple"	rdfs:subClassOf	"triple"
s5.1	"firstorder object"	rdfs:subClassOf	"object"
s5.1	"metadata triple"	rdfs:member	"metadata"
s5.1	"firstorder object"	rdfs:member	"firstorder"
s5.1	"subject position"	rdfs:subClassOf	"position"
s5.1	"occur in subject position"	rdfs:member	"occur"
s5.1	"occur in subject position"	rdfs:member	"subject position"
s5.1	"subject position of metadata triple"	rdfs:member	"subject position"
s5.1	"subject position of metadata triple"	rdfs:member	"metadata triple"
s5	"falsity of facts addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"
s5	"falsity of facts addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"provenance"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"property graph"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"representation"
s5	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s5	"subject position"	rdfs:member	"subject"
s5	"metadata triple"	rdfs:subClassOf	"triple"
s5	"property graph"	rdfs:member	"property"
s5	"firstorder object"	rdfs:subClassOf	"object"
s5	"metadata triple"	rdfs:member	"metadata"
s5	"firstorder object"	rdfs:member	"firstorder"
s5	"property graph"	rdfs:subClassOf	"graph"
s5	"subject position"	rdfs:subClassOf	"position"
s5	"property graph through representation"	rdfs:member	"property graph"
s5	"property graph through representation"	rdfs:member	"representation"
s5	"representation of provenance"	rdfs:member	"representation"
s5	"representation of provenance"	rdfs:member	"provenance"
s5	"occur in subject position"	rdfs:member	"occur"
s5	"occur in subject position"	rdfs:member	"subject position"
s5	"subject position of metadata triple"	rdfs:member	"subject position"
s5	"subject position of metadata triple"	rdfs:member	"metadata triple"
s5	"falsity of facts addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"address"
s5	"falsity of facts addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"falsity of fact"
s5	"falsity of fact"	rdfs:member	"falsity"
s5	"falsity of fact"	rdfs:member	"fact"
s5	"falsity of fact"	rdfs:member	"falsity"
s5	"falsity of fact"	rdfs:member	"fact"
s4.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"
s4.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"representation of validity make triple"
s4.2	"representation of validity make triple"	rdfs:member	"triple"
s4.2	"representation of validity make triple"	rdfs:member	"representation"
s4.2	"representation of validity make triple"	rdfs:member	"validity"
s4.2	"representation of validity"	rdfs:member	"representation"
s4.2	"representation of validity"	rdfs:member	"validity"
s4.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"occur"
s4.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	local:AM-TMP	"firstorder object in subject position of metadata triple"
s4.2	"firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s4.2	"firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s4.2	"firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s4.2	"subject position"	rdfs:member	"subject"
s4.2	"metadata triple"	rdfs:subClassOf	"triple"
s4.2	"firstorder object"	rdfs:subClassOf	"object"
s4.2	"metadata triple"	rdfs:member	"metadata"
s4.2	"firstorder object"	rdfs:member	"firstorder"
s4.2	"subject position"	rdfs:subClassOf	"position"
s4.2	"firstorder object in subject position"	rdfs:member	"firstorder object"
s4.2	"firstorder object in subject position"	rdfs:member	"subject position"
s4.2	"subject position of metadata triple"	rdfs:member	"subject position"
s4.2	"subject position of metadata triple"	rdfs:member	"metadata triple"
s4.1	"making triples occur as firstorder objects in subject position of metadata triples"
s4.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"triple"
s4.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"make"
s4.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"occur a firstorder object in subject position of metadata triple"
s4.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s4.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s4.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s4.1	"subject position"	rdfs:member	"subject"
s4.1	"metadata triple"	rdfs:subClassOf	"triple"
s4.1	"firstorder object"	rdfs:subClassOf	"object"
s4.1	"metadata triple"	rdfs:member	"metadata"
s4.1	"firstorder object"	rdfs:member	"firstorder"
s4.1	"subject position"	rdfs:subClassOf	"position"
s4.1	"occur in subject position"	rdfs:member	"occur"
s4.1	"occur in subject position"	rdfs:member	"subject position"
s4.1	"subject position of metadata triple"	rdfs:member	"subject position"
s4.1	"subject position of metadata triple"	rdfs:member	"metadata triple"
s4	"falsity of facts addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"
s4	"falsity of facts addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"property graph"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"representation"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"validity"
s4	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s4	"subject position"	rdfs:member	"subject"
s4	"metadata triple"	rdfs:subClassOf	"triple"
s4	"property graph"	rdfs:member	"property"
s4	"firstorder object"	rdfs:subClassOf	"object"
s4	"metadata triple"	rdfs:member	"metadata"
s4	"firstorder object"	rdfs:member	"firstorder"
s4	"property graph"	rdfs:subClassOf	"graph"
s4	"subject position"	rdfs:subClassOf	"position"
s4	"property graph through representation"	rdfs:member	"property graph"
s4	"property graph through representation"	rdfs:member	"representation"
s4	"representation of validity"	rdfs:member	"representation"
s4	"representation of validity"	rdfs:member	"validity"
s4	"occur in subject position"	rdfs:member	"occur"
s4	"occur in subject position"	rdfs:member	"subject position"
s4	"subject position of metadata triple"	rdfs:member	"subject position"
s4	"subject position of metadata triple"	rdfs:member	"metadata triple"
s4	"falsity of facts addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"address"
s4	"falsity of facts addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"falsity of fact"
s4	"falsity of fact"	rdfs:member	"falsity"
s4	"falsity of fact"	rdfs:member	"fact"
s4	"falsity of fact"	rdfs:member	"falsity"
s4	"falsity of fact"	rdfs:member	"fact"
s3.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"
s3.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"representation of provenance make triple"
s3.2	"representation of provenance make triple"	rdfs:member	"triple"
s3.2	"representation of provenance make triple"	rdfs:member	"provenance"
s3.2	"representation of provenance make triple"	rdfs:member	"representation"
s3.2	"representation of provenance"	rdfs:member	"representation"
s3.2	"representation of provenance"	rdfs:member	"provenance"
s3.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"occur"
s3.2	"the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	local:AM-TMP	"firstorder object in subject position of metadata triple"
s3.2	"firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s3.2	"firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s3.2	"firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s3.2	"subject position"	rdfs:member	"subject"
s3.2	"metadata triple"	rdfs:subClassOf	"triple"
s3.2	"firstorder object"	rdfs:subClassOf	"object"
s3.2	"metadata triple"	rdfs:member	"metadata"
s3.2	"firstorder object"	rdfs:member	"firstorder"
s3.2	"subject position"	rdfs:subClassOf	"position"
s3.2	"firstorder object in subject position"	rdfs:member	"firstorder object"
s3.2	"firstorder object in subject position"	rdfs:member	"subject position"
s3.2	"subject position of metadata triple"	rdfs:member	"subject position"
s3.2	"subject position of metadata triple"	rdfs:member	"metadata triple"
s3.1	"making triples occur as firstorder objects in subject position of metadata triples"
s3.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"triple"
s3.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"make"
s3.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"occur a firstorder object in subject position of metadata triple"
s3.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s3.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s3.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s3.1	"subject position"	rdfs:member	"subject"
s3.1	"metadata triple"	rdfs:subClassOf	"triple"
s3.1	"firstorder object"	rdfs:subClassOf	"object"
s3.1	"metadata triple"	rdfs:member	"metadata"
s3.1	"firstorder object"	rdfs:member	"firstorder"
s3.1	"subject position"	rdfs:subClassOf	"position"
s3.1	"occur in subject position"	rdfs:member	"occur"
s3.1	"occur in subject position"	rdfs:member	"subject position"
s3.1	"subject position of metadata triple"	rdfs:member	"subject position"
s3.1	"subject position of metadata triple"	rdfs:member	"metadata triple"
s3	"the first type of error addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"
s3	"the first type of error addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"provenance"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"property graph"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"representation"
s3	"property graph through the representation of provenance make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s3	"subject position"	rdfs:member	"subject"
s3	"metadata triple"	rdfs:subClassOf	"triple"
s3	"property graph"	rdfs:member	"property"
s3	"firstorder object"	rdfs:subClassOf	"object"
s3	"metadata triple"	rdfs:member	"metadata"
s3	"firstorder object"	rdfs:member	"firstorder"
s3	"property graph"	rdfs:subClassOf	"graph"
s3	"subject position"	rdfs:subClassOf	"position"
s3	"property graph through representation"	rdfs:member	"property graph"
s3	"property graph through representation"	rdfs:member	"representation"
s3	"representation of provenance"	rdfs:member	"representation"
s3	"representation of provenance"	rdfs:member	"provenance"
s3	"occur in subject position"	rdfs:member	"occur"
s3	"occur in subject position"	rdfs:member	"subject position"
s3	"subject position of metadata triple"	rdfs:member	"subject position"
s3	"subject position of metadata triple"	rdfs:member	"metadata triple"
s3	"the first type of error addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"address"
s3	"the first type of error addressed by property graphs through the representation of provenance making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"first type of error"
s3	"first type of error"	rdfs:member	"error"
s3	"first type of error"	rdfs:member	"first type"
s3	"first type"	rdfs:member	"first"
s3	"first type"	rdfs:subClassOf	"type"
s3	"first type of error"	rdfs:member	"first type"
s3	"first type of error"	rdfs:member	"error"
s2.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"
s2.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"representation of validity make triple"
s2.2	"representation of validity make triple"	rdfs:member	"triple"
s2.2	"representation of validity make triple"	rdfs:member	"representation"
s2.2	"representation of validity make triple"	rdfs:member	"validity"
s2.2	"representation of validity"	rdfs:member	"representation"
s2.2	"representation of validity"	rdfs:member	"validity"
s2.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"occur"
s2.2	"the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	local:AM-TMP	"firstorder object in subject position of metadata triple"
s2.2	"firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s2.2	"firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s2.2	"firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s2.2	"subject position"	rdfs:member	"subject"
s2.2	"metadata triple"	rdfs:subClassOf	"triple"
s2.2	"firstorder object"	rdfs:subClassOf	"object"
s2.2	"metadata triple"	rdfs:member	"metadata"
s2.2	"firstorder object"	rdfs:member	"firstorder"
s2.2	"subject position"	rdfs:subClassOf	"position"
s2.2	"firstorder object in subject position"	rdfs:member	"firstorder object"
s2.2	"firstorder object in subject position"	rdfs:member	"subject position"
s2.2	"subject position of metadata triple"	rdfs:member	"subject position"
s2.2	"subject position of metadata triple"	rdfs:member	"metadata triple"
s2.1	"making triples occur as firstorder objects in subject position of metadata triples"
s2.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"triple"
s2.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"make"
s2.1	"making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"occur a firstorder object in subject position of metadata triple"
s2.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s2.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s2.1	"occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s2.1	"subject position"	rdfs:member	"subject"
s2.1	"metadata triple"	rdfs:subClassOf	"triple"
s2.1	"firstorder object"	rdfs:subClassOf	"object"
s2.1	"metadata triple"	rdfs:member	"metadata"
s2.1	"firstorder object"	rdfs:member	"firstorder"
s2.1	"subject position"	rdfs:subClassOf	"position"
s2.1	"occur in subject position"	rdfs:member	"occur"
s2.1	"occur in subject position"	rdfs:member	"subject position"
s2.1	"subject position of metadata triple"	rdfs:member	"subject position"
s2.1	"subject position of metadata triple"	rdfs:member	"metadata triple"
s2	"the first type of error addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"
s2	"the first type of error addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:subject	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"subject position"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"property graph"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"metadata triple"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"representation"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"validity"
s2	"property graph through the representation of validity make triple occur a firstorder object in subject position of metadata triple"	rdfs:member	"firstorder object"
s2	"subject position"	rdfs:member	"subject"
s2	"metadata triple"	rdfs:subClassOf	"triple"
s2	"property graph"	rdfs:member	"property"
s2	"firstorder object"	rdfs:subClassOf	"object"
s2	"metadata triple"	rdfs:member	"metadata"
s2	"firstorder object"	rdfs:member	"firstorder"
s2	"property graph"	rdfs:subClassOf	"graph"
s2	"subject position"	rdfs:subClassOf	"position"
s2	"property graph through representation"	rdfs:member	"property graph"
s2	"property graph through representation"	rdfs:member	"representation"
s2	"representation of validity"	rdfs:member	"representation"
s2	"representation of validity"	rdfs:member	"validity"
s2	"occur in subject position"	rdfs:member	"occur"
s2	"occur in subject position"	rdfs:member	"subject position"
s2	"subject position of metadata triple"	rdfs:member	"subject position"
s2	"subject position of metadata triple"	rdfs:member	"metadata triple"
s2	"the first type of error addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:predicate	"address"
s2	"the first type of error addressed by property graphs through the representation of validity making triples occur as firstorder objects in subject position of metadata triples"	rdf:object	"first type of error"
s2	"first type of error"	rdfs:member	"error"
s2	"first type of error"	rdfs:member	"first type"
s2	"first type"	rdfs:member	"first"
s2	"first type"	rdfs:subClassOf	"type"
s2	"first type of error"	rdfs:member	"first type"
s2	"first type of error"	rdfs:member	"error"
s1.1	"contributors leaving contributors prone to two types of errors"
s1.1	"contributors leaving contributors prone to two types of errors"	rdf:subject	"contributor"
s1.1	"contributors leaving contributors prone to two types of errors"	rdf:predicate	"leave"
s1.1	"contributors leaving contributors prone to two types of errors"	rdf:object	"contributor prone to two type of error"
s1.1	"contributor prone to two type of error"	rdfs:member	"contributor prone"
s1.1	"contributor prone to two type of error"	rdfs:member	"error"
s1.1	"contributor prone to two type of error"	rdfs:member	"type"
s1.1	"contributor prone"	rdfs:subClassOf	"prone"
s1.1	"contributor prone"	rdfs:member	"contributor"
s1.1	"two type"	rdfs:subClassOf	"type"
s1.1	"prone contributor"	rdfs:subClassOf	"contributor"
s1.1	"prone to two type"	rdfs:member	"prone"
s1.1	"prone to two type"	rdfs:member	"two type"
s1.1	"two type of error"	rdfs:member	"two type"
s1.1	"two type of error"	rdfs:member	"error"
s1	"knowledge graphs such as wikidata created by a diversity of contributors leaving contributors prone to two types of errors"
s1	"knowledge graphs such as wikidata created by a diversity of contributors leaving contributors prone to two types of errors"	rdf:subject	"diversity of contributor leave contributor prone to two type of error"
s1	"diversity of contributor leave contributor prone to two type of error"	rdfs:member	"error"
s1	"diversity of contributor leave contributor prone to two type of error"	rdfs:member	"diversity"
s1	"diversity of contributor leave contributor prone to two type of error"	rdfs:member	"contributor"
s1	"diversity of contributor leave contributor prone to two type of error"	rdfs:member	"contributor prone"
s1	"diversity of contributor leave contributor prone to two type of error"	rdfs:member	"type"
s1	"contributor prone"	rdfs:subClassOf	"prone"
s1	"contributor prone"	rdfs:member	"contributor"
s1	"two type"	rdfs:subClassOf	"type"
s1	"prone contributor"	rdfs:subClassOf	"contributor"
s1	"diversity of contributor"	rdfs:member	"diversity"
s1	"diversity of contributor"	rdfs:member	"contributor"
s1	"prone to two type"	rdfs:member	"prone"
s1	"prone to two type"	rdfs:member	"two type"
s1	"two type of error"	rdfs:member	"two type"
s1	"two type of error"	rdfs:member	"error"
s1	"knowledge graphs such as wikidata created by a diversity of contributors leaving contributors prone to two types of errors"	rdf:predicate	"create"
s1	"knowledge graphs such as wikidata created by a diversity of contributors leaving contributors prone to two types of errors"	rdf:object	"knowledge graph such a wikidata"
s1	"knowledge graph such a wikidata"	rdfs:member	"knowledge graph"
s1	"knowledge graph such a wikidata"	rdfs:member	"wikidata"
s1	"knowledge graph"	rdfs:member	"knowledge"
s1	"knowledge graph"	rdfs:subClassOf	"graph"
s1	"such wikidata"	rdfs:subClassOf	"wikidata"
s0.1	"sources leaving contributors prone to two types of errors"
s0.1	"sources leaving contributors prone to two types of errors"	rdf:subject	"source"
s0.1	"sources leaving contributors prone to two types of errors"	rdf:predicate	"leave"
s0.1	"sources leaving contributors prone to two types of errors"	rdf:object	"contributor prone to two type of error"
s0.1	"contributor prone to two type of error"	rdfs:member	"contributor prone"
s0.1	"contributor prone to two type of error"	rdfs:member	"error"
s0.1	"contributor prone to two type of error"	rdfs:member	"type"
s0.1	"contributor prone"	rdfs:subClassOf	"prone"
s0.1	"contributor prone"	rdfs:member	"contributor"
s0.1	"two type"	rdfs:subClassOf	"type"
s0.1	"prone contributor"	rdfs:subClassOf	"contributor"
s0.1	"prone to two type"	rdfs:member	"prone"
s0.1	"prone to two type"	rdfs:member	"two type"
s0.1	"two type of error"	rdfs:member	"two type"
s0.1	"two type of error"	rdfs:member	"error"
s0	"knowledge graphs such as wikidata created by a range of sources leaving contributors prone to two types of errors"
s0	"knowledge graphs such as wikidata created by a range of sources leaving contributors prone to two types of errors"	rdf:subject	"range of source leave contributor prone to two type of error"
s0	"range of source leave contributor prone to two type of error"	rdfs:member	"source"
s0	"range of source leave contributor prone to two type of error"	rdfs:member	"error"
s0	"range of source leave contributor prone to two type of error"	rdfs:member	"contributor prone"
s0	"range of source leave contributor prone to two type of error"	rdfs:member	"range"
s0	"range of source leave contributor prone to two type of error"	rdfs:member	"type"
s0	"contributor prone"	rdfs:subClassOf	"prone"
s0	"contributor prone"	rdfs:member	"contributor"
s0	"two type"	rdfs:subClassOf	"type"
s0	"prone contributor"	rdfs:subClassOf	"contributor"
s0	"range of source"	rdfs:member	"range"
s0	"range of source"	rdfs:member	"source"
s0	"prone to two type"	rdfs:member	"prone"
s0	"prone to two type"	rdfs:member	"two type"
s0	"two type of error"	rdfs:member	"two type"
s0	"two type of error"	rdfs:member	"error"
s0	"knowledge graphs such as wikidata created by a range of sources leaving contributors prone to two types of errors"	rdf:predicate	"create"
s0	"knowledge graphs such as wikidata created by a range of sources leaving contributors prone to two types of errors"	rdf:object	"knowledge graph such a wikidata"
s0	"knowledge graph such a wikidata"	rdfs:member	"knowledge graph"
s0	"knowledge graph such a wikidata"	rdfs:member	"wikidata"
s0	"knowledge graph"	rdfs:member	"knowledge"
s0	"knowledge graph"	rdfs:subClassOf	"graph"
s0	"such wikidata"	rdfs:subClassOf	"wikidata"
