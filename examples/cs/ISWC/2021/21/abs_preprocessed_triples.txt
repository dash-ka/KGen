s13.2	"some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"
s13.2	"some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:subject	"experiment on a popular benchmark show effectiveness of we"
s13.2	"experiment on a popular benchmark show effectiveness of we"	rdfs:member	"experiment"
s13.2	"experiment on a popular benchmark show effectiveness of we"	rdfs:member	"popular benchmark show effectiveness"
s13.2	"show effectiveness"	rdfs:subClassOf	"effectiveness"
s13.2	"popular benchmark"	rdfs:member	"popular"
s13.2	"popular benchmark show effectiveness"	rdfs:subClassOf	"effectiveness"
s13.2	"popular benchmark show"	rdfs:subClassOf	"show"
s13.2	"benchmark show"	rdfs:member	"benchmark"
s13.2	"benchmark show effectiveness"	rdfs:subClassOf	"effectiveness"
s13.2	"popular benchmark"	rdfs:subClassOf	"benchmark"
s13.2	"popular benchmark show effectiveness"	rdfs:member	"popular benchmark show"
s13.2	"popular benchmark show"	rdfs:member	"popular benchmark"
s13.2	"benchmark show"	rdfs:subClassOf	"show"
s13.2	"show effectiveness"	rdfs:member	"show"
s13.2	"benchmark show effectiveness"	rdfs:member	"benchmark show"
s13.2	"experiment on popular benchmark"	rdfs:member	"experiment"
s13.2	"experiment on popular benchmark"	rdfs:member	"popular benchmark"
s13.2	"effectiveness of we"	rdfs:member	"effectiveness"
s13.2	"effectiveness of we"	rdfs:member	"we"
s13.2	"some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:predicate	"approach"
s13.2	"some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:object	"realworld scenario"
s13.2	"realworld scenario"	rdfs:subClassOf	"scenario"
s13.2	"realworld scenario"	rdfs:member	"realworld"
s13.1	"a popular benchmark showing effectiveness of we approach in a realworld scenario"
s13.1	"a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:subject	"popular benchmark"
s13.1	"popular benchmark"	rdfs:member	"popular"
s13.1	"popular benchmark"	rdfs:subClassOf	"benchmark"
s13.1	"a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:predicate	"show"
s13.1	"a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:object	"effectiveness of we approach in a realworld scenario"
s13.1	"effectiveness of we approach in a realworld scenario"	rdfs:member	"realworld scenario"
s13.1	"effectiveness of we approach in a realworld scenario"	rdfs:member	"effectiveness"
s13.1	"realworld scenario"	rdfs:subClassOf	"scenario"
s13.1	"realworld scenario"	rdfs:member	"realworld"
s13.1	"approach in realworld scenario"	rdfs:member	"approach"
s13.1	"approach in realworld scenario"	rdfs:member	"realworld scenario"
s13	"we also present some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"
s13	"we also present some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:subject	"we"
s13	"we also present some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:predicate	"present"
s13	"we also present some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	rdf:object	"experiment on a popular benchmark show effectiveness of we approach in a realworld scenario"
s13	"experiment on a popular benchmark show effectiveness of we approach in a realworld scenario"	rdfs:member	"experiment"
s13	"experiment on a popular benchmark show effectiveness of we approach in a realworld scenario"	rdfs:member	"realworld scenario"
s13	"experiment on a popular benchmark show effectiveness of we approach in a realworld scenario"	rdfs:member	"popular benchmark show effectiveness"
s13	"realworld scenario"	rdfs:subClassOf	"scenario"
s13	"show effectiveness"	rdfs:subClassOf	"effectiveness"
s13	"popular benchmark"	rdfs:member	"popular"
s13	"popular benchmark show effectiveness"	rdfs:subClassOf	"effectiveness"
s13	"popular benchmark show"	rdfs:subClassOf	"show"
s13	"benchmark show"	rdfs:member	"benchmark"
s13	"benchmark show effectiveness"	rdfs:subClassOf	"effectiveness"
s13	"popular benchmark"	rdfs:subClassOf	"benchmark"
s13	"realworld scenario"	rdfs:member	"realworld"
s13	"popular benchmark show"	rdfs:member	"popular benchmark"
s13	"benchmark show"	rdfs:subClassOf	"show"
s13	"popular benchmark show effectiveness"	rdfs:member	"popular benchmark show"
s13	"show effectiveness"	rdfs:member	"show"
s13	"benchmark show effectiveness"	rdfs:member	"benchmark show"
s13	"experiment on popular benchmark"	rdfs:member	"experiment"
s13	"experiment on popular benchmark"	rdfs:member	"popular benchmark"
s13	"approach in realworld scenario"	rdfs:member	"approach"
s13	"approach in realworld scenario"	rdfs:member	"realworld scenario"
s13	"we also present some experiments on a popular benchmark showing effectiveness of we approach in a realworld scenario"	local:AM-DIS	"also"
s12.2	"some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"
s12.2	"some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:subject	"experiment on a popular benchmark show feasibility of we"
s12.2	"experiment on a popular benchmark show feasibility of we"	rdfs:member	"experiment"
s12.2	"experiment on a popular benchmark show feasibility of we"	rdfs:member	"popular benchmark show feasibility"
s12.2	"popular benchmark show feasibility"	rdfs:member	"popular benchmark show"
s12.2	"benchmark show feasibility"	rdfs:subClassOf	"feasibility"
s12.2	"popular benchmark"	rdfs:member	"popular"
s12.2	"show feasibility"	rdfs:subClassOf	"feasibility"
s12.2	"popular benchmark show"	rdfs:subClassOf	"show"
s12.2	"popular benchmark show feasibility"	rdfs:subClassOf	"feasibility"
s12.2	"benchmark show"	rdfs:member	"benchmark"
s12.2	"popular benchmark"	rdfs:subClassOf	"benchmark"
s12.2	"popular benchmark show"	rdfs:member	"popular benchmark"
s12.2	"benchmark show"	rdfs:subClassOf	"show"
s12.2	"benchmark show feasibility"	rdfs:member	"benchmark show"
s12.2	"show feasibility"	rdfs:member	"show"
s12.2	"experiment on popular benchmark"	rdfs:member	"experiment"
s12.2	"experiment on popular benchmark"	rdfs:member	"popular benchmark"
s12.2	"feasibility of we"	rdfs:member	"feasibility"
s12.2	"feasibility of we"	rdfs:member	"we"
s12.2	"some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:predicate	"approach"
s12.2	"some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:object	"realworld scenario"
s12.2	"realworld scenario"	rdfs:subClassOf	"scenario"
s12.2	"realworld scenario"	rdfs:member	"realworld"
s12.1	"a popular benchmark showing feasibility of we approach in a realworld scenario"
s12.1	"a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:subject	"popular benchmark"
s12.1	"popular benchmark"	rdfs:member	"popular"
s12.1	"popular benchmark"	rdfs:subClassOf	"benchmark"
s12.1	"a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:predicate	"show"
s12.1	"a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:object	"feasibility of we approach in a realworld scenario"
s12.1	"feasibility of we approach in a realworld scenario"	rdfs:member	"realworld scenario"
s12.1	"feasibility of we approach in a realworld scenario"	rdfs:member	"feasibility"
s12.1	"realworld scenario"	rdfs:subClassOf	"scenario"
s12.1	"realworld scenario"	rdfs:member	"realworld"
s12.1	"approach in realworld scenario"	rdfs:member	"approach"
s12.1	"approach in realworld scenario"	rdfs:member	"realworld scenario"
s12	"we also present some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"
s12	"we also present some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:subject	"we"
s12	"we also present some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:predicate	"present"
s12	"we also present some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	rdf:object	"experiment on a popular benchmark show feasibility of we approach in a realworld scenario"
s12	"experiment on a popular benchmark show feasibility of we approach in a realworld scenario"	rdfs:member	"experiment"
s12	"experiment on a popular benchmark show feasibility of we approach in a realworld scenario"	rdfs:member	"realworld scenario"
s12	"experiment on a popular benchmark show feasibility of we approach in a realworld scenario"	rdfs:member	"popular benchmark show feasibility"
s12	"realworld scenario"	rdfs:subClassOf	"scenario"
s12	"popular benchmark show feasibility"	rdfs:member	"popular benchmark show"
s12	"benchmark show feasibility"	rdfs:subClassOf	"feasibility"
s12	"popular benchmark"	rdfs:member	"popular"
s12	"show feasibility"	rdfs:subClassOf	"feasibility"
s12	"popular benchmark show"	rdfs:subClassOf	"show"
s12	"popular benchmark show feasibility"	rdfs:subClassOf	"feasibility"
s12	"benchmark show"	rdfs:member	"benchmark"
s12	"popular benchmark"	rdfs:subClassOf	"benchmark"
s12	"realworld scenario"	rdfs:member	"realworld"
s12	"popular benchmark show"	rdfs:member	"popular benchmark"
s12	"benchmark show"	rdfs:subClassOf	"show"
s12	"benchmark show feasibility"	rdfs:member	"benchmark show"
s12	"show feasibility"	rdfs:member	"show"
s12	"experiment on popular benchmark"	rdfs:member	"experiment"
s12	"experiment on popular benchmark"	rdfs:member	"popular benchmark"
s12	"approach in realworld scenario"	rdfs:member	"approach"
s12	"approach in realworld scenario"	rdfs:member	"realworld scenario"
s12	"we also present some experiments on a popular benchmark showing feasibility of we approach in a realworld scenario"	local:AM-DIS	"also"
s11.1	"answering conjunctive queries in we framework"
s11.1	"answering conjunctive queries in we framework"	rdf:subject	"conjunctive query"
s11.1	"conjunctive query"	rdfs:member	"conjunctive"
s11.1	"conjunctive query"	rdfs:subClassOf	"query"
s11.1	"answering conjunctive queries in we framework"	rdf:predicate	"answer"
s11.1	"answering conjunctive queries in we framework"	local:AM-MNR	"framework"
s11	"we show that answering conjunctive queries in we framework is firstorder rewritable for extitdllitea ontologies complexity"
s11	"we show that answering conjunctive queries in we framework is firstorder rewritable for extitdllitea ontologies complexity"	rdf:subject	"we"
s11	"we show that answering conjunctive queries in we framework is firstorder rewritable for extitdllitea ontologies complexity"	rdf:predicate	"show"
s11	"we show that answering conjunctive queries in we framework is firstorder rewritable for extitdllitea ontologies complexity"	rdf:object	"answer conjunctive query in we framework be firstorder rewritable for extitdllitea ontology complexity"
s11	"answer conjunctive query in we framework be firstorder rewritable for extitdllitea ontology complexity"	rdfs:member	"answer conjunctive query"
s11	"answer conjunctive query in we framework be firstorder rewritable for extitdllitea ontology complexity"	rdfs:member	"extitdllitea ontology complexity"
s11	"answer conjunctive query"	rdfs:subClassOf	"query"
s11	"ontology complexity"	rdfs:member	"ontology"
s11	"answer conjunctive"	rdfs:subClassOf	"conjunctive"
s11	"answer conjunctive"	rdfs:member	"answer"
s11	"answer conjunctive query"	rdfs:member	"answer conjunctive"
s11	"extitdllitea ontology"	rdfs:member	"extitdllitea"
s11	"extitdllitea ontology complexity"	rdfs:member	"extitdllitea ontology"
s11	"extitdllitea ontology complexity"	rdfs:subClassOf	"complexity"
s11	"conjunctive query"	rdfs:subClassOf	"query"
s11	"conjunctive query"	rdfs:member	"conjunctive"
s11	"ontology complexity"	rdfs:subClassOf	"complexity"
s11	"extitdllitea ontology"	rdfs:subClassOf	"ontology"
s11	"extitdllitea ontology complexity"	rdfs:subClassOf	"ontology complexity"
s11	"firstorder rewritable"	rdfs:subClassOf	"rewritable"
s11	"answer conjunctive query"	rdfs:subClassOf	"conjunctive query"
s11	"answer conjunctive query in firstorder rewritable"	rdfs:member	"answer conjunctive query"
s11	"answer conjunctive query in firstorder rewritable"	rdfs:member	"firstorder rewritable"
s11	"firstorder rewritable for extitdllitea ontology complexity"	rdfs:member	"firstorder rewritable"
s11	"firstorder rewritable for extitdllitea ontology complexity"	rdfs:member	"extitdllitea ontology complexity"
s10.1	"answering conjunctive queries in we framework"
s10.1	"answering conjunctive queries in we framework"	rdf:subject	"conjunctive query"
s10.1	"conjunctive query"	rdfs:member	"conjunctive"
s10.1	"conjunctive query"	rdfs:subClassOf	"query"
s10.1	"answering conjunctive queries in we framework"	rdf:predicate	"answer"
s10.1	"answering conjunctive queries in we framework"	local:AM-MNR	"framework"
s10	"we show that answering conjunctive queries in we framework is firstorder thus in ac0 in data complexity"
s10	"we show that answering conjunctive queries in we framework is firstorder thus in ac0 in data complexity"	rdf:subject	"we"
s10	"we show that answering conjunctive queries in we framework is firstorder thus in ac0 in data complexity"	rdf:predicate	"show"
s10	"we show that answering conjunctive queries in we framework is firstorder thus in ac0 in data complexity"	rdf:object	"answer conjunctive query in we framework be firstorder thus in ac0 in data complexity"
s10	"answer conjunctive query in we framework be firstorder thus in ac0 in data complexity"	rdfs:member	"answer conjunctive query"
s10	"answer conjunctive query in we framework be firstorder thus in ac0 in data complexity"	rdfs:member	"data complexity"
s10	"answer conjunctive query in we framework be firstorder thus in ac0 in data complexity"	rdfs:member	"ac0"
s10	"answer conjunctive query"	rdfs:subClassOf	"query"
s10	"data complexity"	rdfs:subClassOf	"complexity"
s10	"data complexity"	rdfs:member	"data"
s10	"answer conjunctive"	rdfs:subClassOf	"conjunctive"
s10	"answer conjunctive"	rdfs:member	"answer"
s10	"answer conjunctive query"	rdfs:member	"answer conjunctive"
s10	"conjunctive query"	rdfs:subClassOf	"query"
s10	"conjunctive query"	rdfs:member	"conjunctive"
s10	"thus ac0"	rdfs:subClassOf	"ac0"
s10	"answer conjunctive query"	rdfs:subClassOf	"conjunctive query"
s10	"answer conjunctive query in firstorder"	rdfs:member	"answer conjunctive query"
s10	"answer conjunctive query in firstorder"	rdfs:member	"firstorder"
s10	"answer conjunctive query in firstorder in thus ac0"	rdfs:member	"answer conjunctive query in firstorder"
s10	"answer conjunctive query in firstorder in thus ac0"	rdfs:member	"thus ac0"
s10	"thus ac0 in data complexity"	rdfs:member	"thus ac0"
s10	"thus ac0 in data complexity"	rdfs:member	"data complexity"
s9.1	"answering conjunctive queries in we framework"
s9.1	"answering conjunctive queries in we framework"	rdf:subject	"conjunctive query"
s9.1	"conjunctive query"	rdfs:member	"conjunctive"
s9.1	"conjunctive query"	rdfs:subClassOf	"query"
s9.1	"answering conjunctive queries in we framework"	rdf:predicate	"answer"
s9.1	"answering conjunctive queries in we framework"	local:AM-MNR	"framework"
s9	"we show that answering conjunctive queries in we framework is firstorder rewritable for safe policies complexity"
s9	"we show that answering conjunctive queries in we framework is firstorder rewritable for safe policies complexity"	rdf:subject	"we"
s9	"we show that answering conjunctive queries in we framework is firstorder rewritable for safe policies complexity"	rdf:predicate	"show"
s9	"we show that answering conjunctive queries in we framework is firstorder rewritable for safe policies complexity"	rdf:object	"answer conjunctive query in we framework be firstorder rewritable for safe policy complexity"
s9	"answer conjunctive query in we framework be firstorder rewritable for safe policy complexity"	rdfs:member	"answer conjunctive query"
s9	"answer conjunctive query in we framework be firstorder rewritable for safe policy complexity"	rdfs:member	"safe policy complexity"
s9	"answer conjunctive query"	rdfs:subClassOf	"query"
s9	"safe policy"	rdfs:member	"safe"
s9	"safe policy complexity"	rdfs:member	"safe policy"
s9	"answer conjunctive"	rdfs:subClassOf	"conjunctive"
s9	"safe policy complexity"	rdfs:subClassOf	"complexity"
s9	"answer conjunctive"	rdfs:member	"answer"
s9	"answer conjunctive query"	rdfs:member	"answer conjunctive"
s9	"policy complexity"	rdfs:subClassOf	"complexity"
s9	"conjunctive query"	rdfs:subClassOf	"query"
s9	"conjunctive query"	rdfs:member	"conjunctive"
s9	"policy complexity"	rdfs:member	"policy"
s9	"safe policy"	rdfs:subClassOf	"policy"
s9	"safe policy complexity"	rdfs:subClassOf	"policy complexity"
s9	"firstorder rewritable"	rdfs:subClassOf	"rewritable"
s9	"answer conjunctive query"	rdfs:subClassOf	"conjunctive query"
s9	"answer conjunctive query in firstorder rewritable"	rdfs:member	"answer conjunctive query"
s9	"answer conjunctive query in firstorder rewritable"	rdfs:member	"firstorder rewritable"
s9	"firstorder rewritable for safe policy complexity"	rdfs:member	"firstorder rewritable"
s9	"firstorder rewritable for safe policy complexity"	rdfs:member	"safe policy complexity"
s8.1	"which decide the portion of a secret"
s8.1	"which decide the portion of a secret"	rdf:subject	"portion of a secret"
s8.1	"portion of secret"	rdfs:member	"portion"
s8.1	"portion of secret"	rdfs:member	"secret"
s8.1	"which decide the portion of a secret"	rdf:predicate	"decide"
s8	"ontology predicates which can exploited to decide the portion of a secret"
s8	"ontology predicates which can exploited to decide the portion of a secret"	rdf:subject	"ontology predicate"
s8	"ontology predicate"	rdfs:member	"ontology"
s8	"ontology predicate"	rdfs:subClassOf	"predicate"
s8	"ontology predicates which can exploited to decide the portion of a secret"	rdf:predicate	"exploit"
s8	"ontology predicates which can exploited to decide the portion of a secret"	rdf:object	"decide the portion of a secret"
s8	"portion of secret"	rdfs:member	"portion"
s8	"portion of secret"	rdfs:member	"secret"
s8	"ontology predicates which can exploited to decide the portion of a secret"	local:AM-MOD	"can"
s7.3	"augmenting the throughput of query answers"
s7.3	"augmenting the throughput of query answers"	rdf:subject	"throughput of query answer"
s7.3	"throughput of query answer"	rdfs:member	"query answer"
s7.3	"throughput of query answer"	rdfs:member	"throughput"
s7.3	"query answer"	rdfs:subClassOf	"answer"
s7.3	"query answer"	rdfs:member	"query"
s7.3	"throughput of query answer"	rdfs:member	"throughput"
s7.3	"throughput of query answer"	rdfs:member	"query answer"
s7.3	"augmenting the throughput of query answers"	rdf:predicate	"augment"
s7.2	"we introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"
s7.2	"we introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:subject	"we"
s7.2	"we introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:predicate	"introduce"
s7.2	"we introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:object	"preference"
s7.2	"we introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	local:AM-MNR	"ontology predicate thus in principle augment the throughput of query answer"
s7.2	"ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"query answer"
s7.2	"ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"ontology predicate"
s7.2	"ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"principle augment"
s7.2	"ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"throughput"
s7.2	"ontology predicate"	rdfs:subClassOf	"predicate"
s7.2	"principle augment"	rdfs:member	"principle"
s7.2	"query answer"	rdfs:member	"query"
s7.2	"principle augment"	rdfs:subClassOf	"augment"
s7.2	"ontology predicate"	rdfs:member	"ontology"
s7.2	"query answer"	rdfs:subClassOf	"answer"
s7.2	"thus principle"	rdfs:subClassOf	"principle"
s7.2	"ontology predicate in thus principle"	rdfs:member	"ontology predicate"
s7.2	"ontology predicate in thus principle"	rdfs:member	"thus principle"
s7.2	"throughput of query answer"	rdfs:member	"throughput"
s7.2	"throughput of query answer"	rdfs:member	"query answer"
s7.1	"we extending conjunctive queries in the policy with comparison predicates"
s7.1	"we extending conjunctive queries in the policy with comparison predicates"	rdf:subject	"we"
s7.1	"we extending conjunctive queries in the policy with comparison predicates"	rdf:predicate	"extend"
s7.1	"we extending conjunctive queries in the policy with comparison predicates"	rdf:object	"conjunctive query in the policy comparison predicate"
s7.1	"conjunctive query in the policy comparison predicate"	rdfs:member	"conjunctive query"
s7.1	"conjunctive query in the policy comparison predicate"	rdfs:member	"policy comparison predicate"
s7.1	"policy comparison predicate"	rdfs:subClassOf	"predicate"
s7.1	"policy comparison"	rdfs:member	"policy"
s7.1	"policy comparison predicate"	rdfs:member	"policy comparison"
s7.1	"comparison predicate"	rdfs:subClassOf	"predicate"
s7.1	"conjunctive query"	rdfs:subClassOf	"query"
s7.1	"conjunctive query"	rdfs:member	"conjunctive"
s7.1	"policy comparison"	rdfs:subClassOf	"comparison"
s7.1	"comparison predicate"	rdfs:member	"comparison"
s7.1	"conjunctive query in policy comparison"	rdfs:member	"conjunctive query"
s7.1	"conjunctive query in policy comparison"	rdfs:member	"policy comparison"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:subject	"we"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:predicate	"enrich"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	rdf:object	"framework"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	local:AM-LOC	"paper"
s7	"in this paper we enrich the framework by extending conjunctive queries in the policy with comparison predicates and introducing preferences between ontology predicates thus in principle augmenting the throughput of query answers"	local:AM-MNR	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"policy"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"comparison predicate"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"preference"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"ontology predicate"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"throughput"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"principle augment"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"query answer"
s7	"extend conjunctive query in the policy with comparison predicate and introduce preference between ontology predicate thus in principle augment the throughput of query answer"	rdfs:member	"conjunctive query"
s7	"ontology predicate"	rdfs:subClassOf	"predicate"
s7	"comparison predicate"	rdfs:subClassOf	"predicate"
s7	"principle augment"	rdfs:member	"principle"
s7	"query answer"	rdfs:member	"query"
s7	"conjunctive query"	rdfs:subClassOf	"query"
s7	"conjunctive query"	rdfs:member	"conjunctive"
s7	"principle augment"	rdfs:subClassOf	"augment"
s7	"ontology predicate"	rdfs:member	"ontology"
s7	"query answer"	rdfs:subClassOf	"answer"
s7	"comparison predicate"	rdfs:member	"comparison"
s7	"thus augment"	rdfs:subClassOf	"augment"
s7	"comparison ontology predicate"	rdfs:subClassOf	"ontology predicate"
s7	"extend in policy"	rdfs:member	"extend"
s7	"extend in policy"	rdfs:member	"policy"
s7	"extend in policy with comparison ontology predicate"	rdfs:member	"extend in policy"
s7	"extend in policy with comparison ontology predicate"	rdfs:member	"comparison ontology predicate"
s7	"preference between ontology predicate"	rdfs:member	"preference"
s7	"preference between ontology predicate"	rdfs:member	"ontology predicate"
s7	"thus augment in principle"	rdfs:member	"thus augment"
s7	"thus augment in principle"	rdfs:member	"principle"
s7	"throughput of query answer"	rdfs:member	"throughput"
s7	"throughput of query answer"	rdfs:member	"query answer"
s6	"a secret that can disclosed to a user"
s6	"a secret that can disclosed to a user"	rdf:subject	"secret"
s6	"a secret that can disclosed to a user"	rdf:predicate	"disclose"
s6	"a secret that can disclosed to a user"	rdf:object	"user"
s6	"a secret that can disclosed to a user"	local:AM-MOD	"can"
s5	"censors that might result too restrictive in the practice in terms of the amount of nonprotected information"
s5	"censors that might result too restrictive in the practice in terms of the amount of nonprotected information"	rdf:predicate	"result"
s5	"censors that might result too restrictive in the practice in terms of the amount of nonprotected information"	rdf:object	"censor restrictive in the practice"
s5	"censor restrictive in the practice"	rdfs:member	"censor restrictive"
s5	"censor restrictive in the practice"	rdfs:member	"practice"
s5	"censor restrictive"	rdfs:subClassOf	"restrictive"
s5	"censor restrictive"	rdfs:member	"censor"
s5	"restrictive in practice"	rdfs:member	"restrictive"
s5	"restrictive in practice"	rdfs:member	"practice"
s5	"censors that might result too restrictive in the practice in terms of the amount of nonprotected information"	local:AM-ADV	"term of the amount of nonprotected information"
s5	"term of the amount of nonprotected information"	rdfs:member	"amount"
s5	"term of the amount of nonprotected information"	rdfs:member	"nonprotected information"
s5	"term of the amount of nonprotected information"	rdfs:member	"term"
s5	"nonprotected information"	rdfs:subClassOf	"information"
s5	"nonprotected information"	rdfs:member	"nonprotected"
s5	"term of amount"	rdfs:member	"term"
s5	"term of amount"	rdfs:member	"amount"
s5	"amount of nonprotected information"	rdfs:member	"amount"
s5	"amount of nonprotected information"	rdfs:member	"nonprotected information"
s5	"censors that might result too restrictive in the practice in terms of the amount of nonprotected information"	local:AM-MOD	"might"
s4.3	"approximated notions of censors returned to the users"
s4.3	"approximated notions of censors returned to the users"	rdf:subject	"approximate notion of censor"
s4.3	"approximate notion of censor"	rdfs:member	"approximate notion"
s4.3	"approximate notion of censor"	rdfs:member	"censor"
s4.3	"approximate notion"	rdfs:member	"approximate"
s4.3	"approximate notion"	rdfs:subClassOf	"notion"
s4.3	"approximate notion of"	rdfs:member	"approximate notion"
s4.3	"approximate notion of"	rdfs:member	"of"
s4.3	"approximated notions of censors returned to the users"	rdf:predicate	"return"
s4.3	"approximated notions of censors returned to the users"	rdf:object	"user"
s4.2	"approximated notions"
s4.2	"approximated notions"	rdf:subject	"notion"
s4.2	"approximated notions"	rdf:predicate	"approximate"
s4.1	"also existing implementations adopt approximated notions of censors returned to the users"
s4.1	"also existing implementations adopt approximated notions of censors returned to the users"	rdf:subject	"exist implementation"
s4.1	"exist implementation"	rdfs:subClassOf	"implementation"
s4.1	"exist implementation"	rdfs:member	"exist"
s4.1	"also existing implementations adopt approximated notions of censors returned to the users"	rdf:predicate	"adopt"
s4.1	"also existing implementations adopt approximated notions of censors returned to the users"	rdf:object	"approximate notion of censor return to the user"
s4.1	"approximate notion of censor return to the user"	rdfs:member	"approximate notion"
s4.1	"approximate notion of censor return to the user"	rdfs:member	"censor return"
s4.1	"approximate notion of censor return to the user"	rdfs:member	"user"
s4.1	"censor return"	rdfs:subClassOf	"return"
s4.1	"approximate notion"	rdfs:member	"approximate"
s4.1	"censor return"	rdfs:member	"censor"
s4.1	"approximate notion"	rdfs:subClassOf	"notion"
s4.1	"return to user"	rdfs:member	"return"
s4.1	"return to user"	rdfs:member	"user"
s4.1	"also existing implementations adopt approximated notions of censors returned to the users"	local:AM-DIS	"also"
s4	"existing implementations"
s4	"existing implementations"	rdf:subject	"implementation"
s4	"existing implementations"	rdf:predicate	"exist"
s3.3	"whose answer must never inferred by a user"
s3.3	"whose answer must never inferred by a user"	rdf:subject	"user"
s3.3	"whose answer must never inferred by a user"	rdf:predicate	"infer"
s3.3	"whose answer must never inferred by a user"	local:AM-MOD	"must"
s3.3	"whose answer must never inferred by a user"	local:AM-TMP	"never"
s3.2	"limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"
s3.2	"limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:subject	"conjunctive query whose answer must never be infer by a user"
s3.2	"conjunctive query whose answer must never be infer by a user"	rdfs:member	"conjunctive query"
s3.2	"conjunctive query whose answer must never be infer by a user"	rdfs:member	"answer"
s3.2	"conjunctive query whose answer must never be infer by a user"	rdfs:member	"user"
s3.2	"conjunctive query"	rdfs:member	"conjunctive"
s3.2	"conjunctive query"	rdfs:subClassOf	"query"
s3.2	"be infer"	rdfs:subClassOf	"infer"
s3.2	"never be infer"	rdfs:subClassOf	"be infer"
s3.2	"must never be infer"	rdfs:subClassOf	"never be infer"
s3.2	"query answer"	rdfs:subClassOf	"answer"
s3.2	"must never be infer by user"	rdfs:member	"must never be infer"
s3.2	"must never be infer by user"	rdfs:member	"user"
s3.2	"limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:predicate	"constitute"
s3.2	"limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:object	"limit form of policy"
s3.2	"limit form of policy"	rdfs:member	"policy"
s3.2	"limit form of policy"	rdfs:member	"limit form"
s3.2	"limit form"	rdfs:subClassOf	"form"
s3.2	"limit form"	rdfs:member	"limit"
s3.2	"limit form of policy"	rdfs:member	"limit form"
s3.2	"limit form of policy"	rdfs:member	"policy"
s3.2	"limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	local:AM-TMP	"typically"
s3.1	"limited forms"
s3.1	"limited forms"	rdf:subject	"form"
s3.1	"limited forms"	rdf:predicate	"limit"
s3	"previous works considered limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"
s3	"previous works considered limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:subject	"previous work"
s3	"previous work"	rdfs:member	"previous"
s3	"previous work"	rdfs:subClassOf	"work"
s3	"previous works considered limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:predicate	"consider"
s3	"previous works considered limited forms of policy typically constituted by conjunctive queries whose answer must never be inferred by a user"	rdf:object	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"
s3	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"	rdfs:member	"policy"
s3	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"	rdfs:member	"answer"
s3	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"	rdfs:member	"conjunctive query"
s3	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"	rdfs:member	"user"
s3	"limit form of policy typically constitute by conjunctive query whose answer must never be infer by a user"	rdfs:member	"limit form"
s3	"conjunctive query"	rdfs:member	"conjunctive"
s3	"limit form"	rdfs:subClassOf	"form"
s3	"limit form"	rdfs:member	"limit"
s3	"conjunctive query"	rdfs:subClassOf	"query"
s3	"be infer"	rdfs:subClassOf	"infer"
s3	"never be infer"	rdfs:subClassOf	"be infer"
s3	"must never be infer"	rdfs:subClassOf	"never be infer"
s3	"query answer"	rdfs:subClassOf	"answer"
s3	"typically constitute"	rdfs:subClassOf	"constitute"
s3	"limit form of policy"	rdfs:member	"limit form"
s3	"limit form of policy"	rdfs:member	"policy"
s3	"typically constitute by conjunctive query"	rdfs:member	"typically constitute"
s3	"typically constitute by conjunctive query"	rdfs:member	"conjunctive query"
s3	"must never be infer by user"	rdfs:member	"must never be infer"
s3	"must never be infer by user"	rdfs:member	"user"
s2	"data protected by a declarative policy"
s2	"data protected by a declarative policy"	rdf:subject	"data"
s2	"data protected by a declarative policy"	rdf:predicate	"protect"
s2	"data protected by a declarative policy"	rdf:object	"declarative policy"
s2	"declarative policy"	rdfs:subClassOf	"policy"
s2	"declarative policy"	rdfs:member	"declarative"
s1.1	"query answering filtered through optimal censors"
s1.1	"query answering filtered through optimal censors"	rdf:subject	"query answer"
s1.1	"query answer"	rdfs:subClassOf	"answer"
s1.1	"query answer"	rdfs:member	"query"
s1.1	"query answering filtered through optimal censors"	rdf:predicate	"filter"
s1.1	"query answering filtered through optimal censors"	local:AM-MNR	"optimal censor"
s1.1	"optimal censor"	rdfs:member	"optimal"
s1.1	"optimal censor"	rdfs:subClassOf	"censor"
s1	"we study information disclosure in description logic ontologies in the spirit of controlled query evaluation where query answering is filtered through optimal censors"
s1	"we study information disclosure in description logic ontologies in the spirit of controlled query evaluation where query answering is filtered through optimal censors"	rdf:subject	"we"
s1	"we study information disclosure in description logic ontologies in the spirit of controlled query evaluation where query answering is filtered through optimal censors"	rdf:predicate	"study"
s1	"we study information disclosure in description logic ontologies in the spirit of controlled query evaluation where query answering is filtered through optimal censors"	rdf:object	"information disclosure in description logic ontology"
s1	"information disclosure in description logic ontology"	rdfs:member	"description logic ontology"
s1	"information disclosure in description logic ontology"	rdfs:member	"information disclosure"
s1	"description logic"	rdfs:member	"description"
s1	"description logic"	rdfs:subClassOf	"logic"
s1	"description logic ontology"	rdfs:member	"description logic"
s1	"description logic ontology"	rdfs:subClassOf	"ontology"
s1	"logic ontology"	rdfs:member	"logic"
s1	"information disclosure"	rdfs:subClassOf	"disclosure"
s1	"information disclosure"	rdfs:member	"information"
s1	"logic ontology"	rdfs:subClassOf	"ontology"
s1	"description logic ontology"	rdfs:subClassOf	"logic ontology"
s1	"information disclosure in description logic ontology"	rdfs:member	"information disclosure"
s1	"information disclosure in description logic ontology"	rdfs:member	"description logic ontology"
s1	"we study information disclosure in description logic ontologies in the spirit of controlled query evaluation where query answering is filtered through optimal censors"	local:AM-PNC	"spirit of control query evaluation where query answer be filter through optimal censor"
s1	"spirit of control query evaluation where query answer be filter through optimal censor"	rdfs:member	"query answer"
s1	"spirit of control query evaluation where query answer be filter through optimal censor"	rdfs:member	"control query evaluation"
s1	"spirit of control query evaluation where query answer be filter through optimal censor"	rdfs:member	"spirit"
s1	"spirit of control query evaluation where query answer be filter through optimal censor"	rdfs:member	"optimal censor"
s1	"optimal censor"	rdfs:member	"optimal"
s1	"control query evaluation"	rdfs:member	"control query"
s1	"control query"	rdfs:member	"control"
s1	"optimal censor"	rdfs:subClassOf	"censor"
s1	"control query"	rdfs:subClassOf	"query"
s1	"query answer"	rdfs:member	"query"
s1	"query evaluation"	rdfs:member	"query"
s1	"control query evaluation"	rdfs:subClassOf	"evaluation"
s1	"query answer"	rdfs:subClassOf	"answer"
s1	"query evaluation"	rdfs:subClassOf	"evaluation"
s1	"where filter"	rdfs:subClassOf	"filter"
s1	"control query evaluation"	rdfs:subClassOf	"query evaluation"
s1	"spirit of control query evaluation"	rdfs:member	"spirit"
s1	"spirit of control query evaluation"	rdfs:member	"control query evaluation"
s1	"where filter through optimal"	rdfs:member	"where filter"
s1	"where filter through optimal"	rdfs:member	"optimal"
s0.1	"optimal censors hiding data"
s0.1	"optimal censors hiding data"	rdf:subject	"optimal censor"
s0.1	"optimal censor"	rdfs:member	"optimal"
s0.1	"optimal censor"	rdfs:subClassOf	"censor"
s0.1	"optimal censors hiding data"	rdf:predicate	"hide"
s0.1	"optimal censors hiding data"	rdf:object	"data"
s0	"optimal censors maximizing answers"
s0	"optimal censors maximizing answers"	rdf:subject	"optimal censor"
s0	"optimal censor"	rdfs:member	"optimal"
s0	"optimal censor"	rdfs:subClassOf	"censor"
s0	"optimal censors maximizing answers"	rdf:predicate	"maximize"
s0	"optimal censors maximizing answers"	rdf:object	"answer"
