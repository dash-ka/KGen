s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:subject	"running time of SchemaRank"
s6.2	"running time of schemarank"	rdfs:member	"time"
s6.2	"running time of schemarank"	rdfs:member	"schemarank"
s6.2	"time of schemarank"	rdfs:member	"time"
s6.2	"time of schemarank"	rdfs:member	"schemarank"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:predicate	"outperform"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:object	"existing methods two orders of magnitude"
s6.2	"existing methods two orders of magnitude"	rdfs:member	"orders"
s6.2	"existing methods two orders of magnitude"	rdfs:member	"methods"
s6.2	"existing methods two orders of magnitude"	rdfs:member	"magnitude"
s6.2	"two orders"	rdfs:subClassOf	"orders"
s6.2	"existing methods"	rdfs:subClassOf	"methods"
s6.2	"two orders of magnitude"	rdfs:member	"two orders"
s6.2	"two orders of magnitude"	rdfs:member	"magnitude"
s6.1	"running time"
s6.1	"running time"	rdf:subject	"time"
s6.1	"running time"	rdf:predicate	"run"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:subject	"extensive evaluations"
s6	"extensive evaluations"	rdfs:subClassOf	"evaluations"
s6	"extensive evaluations"	rdfs:member	"extensive"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:predicate	"demonstrate"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:object	"running time of SchemaRank outperforms existing methods by up to two orders of magnitude"
s6	"running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdfs:member	"orders"
s6	"running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdfs:member	"schemarank outperforms"
s6	"running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdfs:member	"time"
s6	"running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdfs:member	"methods"
s6	"running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdfs:member	"magnitude"
s6	"schemarank outperforms"	rdfs:subClassOf	"outperforms"
s6	"schemarank outperforms"	rdfs:member	"schemarank"
s6	"two orders"	rdfs:subClassOf	"orders"
s6	"existing methods"	rdfs:subClassOf	"methods"
s6	"running time"	rdfs:subClassOf	"time"
s6	"running time of schemarank"	rdfs:member	"running time"
s6	"running time of schemarank"	rdfs:member	"schemarank"
s6	"outperforms by two orders"	rdfs:member	"outperforms"
s6	"outperforms by two orders"	rdfs:member	"two orders"
s6	"two orders of magnitude"	rdfs:member	"two orders"
s6	"two orders of magnitude"	rdfs:member	"magnitude"
s5	"schemarank dynamically excludes unpromising nodes and edges"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:subject	"SchemaRank"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:predicate	"exclude"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:object	"unpromising nodes and edges"
s5	"unpromising nodes and edges"	rdfs:member	"nodes"
s5	"unpromising nodes and edges"	rdfs:member	"edges"
s5	"unpromising nodes"	rdfs:subClassOf	"nodes"
s5	"schemarank dynamically excludes unpromising nodes and edges"	local:AM-MNR	"dynamically"
s4.1	"schemarank detects the same topk important nodes as objectrank"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:subject	"SchemaRank"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:predicate	"detect"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:object	"topk important nodes as ObjectRank"
s4.1	"topk important nodes as objectrank"	rdfs:member	"topk"
s4.1	"topk important nodes as objectrank"	rdfs:member	"important nodes"
s4.1	"topk important nodes as objectrank"	rdfs:member	"objectrank"
s4.1	"important nodes"	rdfs:subClassOf	"nodes"
s4.1	"important nodes"	rdfs:member	"important"
s4.1	"topk important nodes"	rdfs:subClassOf	"important nodes"
s4.1	"topk important nodes as objectrank"	rdfs:member	"topk important nodes"
s4.1	"topk important nodes as objectrank"	rdfs:member	"objectrank"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"	rdf:subject	"SchemaRank detects the same topk important nodes as ObjectRank"
s4	"schemarank detects the same topk important nodes as objectrank"	rdfs:member	"important nodes"
s4	"schemarank detects the same topk important nodes as objectrank"	rdfs:member	"same topk"
s4	"schemarank detects the same topk important nodes as objectrank"	rdfs:member	"schemarank"
s4	"schemarank detects the same topk important nodes as objectrank"	rdfs:member	"objectrank"
s4	"same topk"	rdfs:member	"same"
s4	"same topk"	rdfs:subClassOf	"topk"
s4	"important nodes"	rdfs:subClassOf	"nodes"
s4	"important nodes"	rdfs:member	"important"
s4	"topk important nodes"	rdfs:subClassOf	"important nodes"
s4	"same topk important nodes"	rdfs:subClassOf	"topk important nodes"
s4	"detects as objectrank"	rdfs:member	"detects"
s4	"detects as objectrank"	rdfs:member	"objectrank"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"	rdf:predicate	"ensure"
s3	"this paper proposes schemarank"
s3	"this paper proposes schemarank"	rdf:subject	"paper"
s3	"this paper proposes schemarank"	rdf:predicate	"propose"
s3	"this paper proposes schemarank"	rdf:object	"SchemaRank"
s2.1	"given query"
s2.1	"given query"	rdf:subject	"query"
s2.1	"given query"	rdf:predicate	"give"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:subject	"SchemaRank"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:predicate	"detect"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:object	"exact topk important nodes"
s2	"exact topk important nodes"	rdfs:member	"important nodes"
s2	"exact topk important nodes"	rdfs:member	"exact topk"
s2	"important nodes"	rdfs:subClassOf	"nodes"
s2	"exact topk"	rdfs:member	"exact"
s2	"important nodes"	rdfs:member	"important"
s2	"exact topk"	rdfs:subClassOf	"topk"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"	local:AM-PNC	"given query"
s2	"schemarank which detects the exact topk important nodes for a given query within a short running time"	local:AM-TMP	"within a short running time"
s2	"short running"	rdfs:subClassOf	"running"
s2	"short running time"	rdfs:subClassOf	"time"
s2	"running time"	rdfs:subClassOf	"time"
s2	"short running time"	rdfs:member	"short running"
s2	"short running"	rdfs:member	"short"
s2	"running time"	rdfs:member	"running"
s2	"short running time"	rdfs:subClassOf	"running time"
s1.1	"existing methods iteratively compute all nodes and edges"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:subject	"existing methods"
s1.1	"existing methods"	rdfs:subClassOf	"methods"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:predicate	"compute"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:object	"nodes and edges"
s1.1	"nodes and edges"	rdfs:member	"nodes"
s1.1	"nodes and edges"	rdfs:member	"edges"
s1.1	"existing methods iteratively compute all nodes and edges"	local:AM-MNR	"iteratively"
s1	"existing methods"
s1	"existing methods"	rdf:subject	"methods"
s1	"existing methods"	rdf:predicate	"exist"
s1	"existing methods"	rdf:object	"methods"
s0	"objectrank evaluate an importance of nodes for a userspecified query in heterogeneous graphs"
s0	"objectrank evaluate an importance of nodes for a userspecified query in heterogeneous graphs"	rdf:subject	"ObjectRank"
s0	"objectrank evaluate an importance of nodes for a userspecified query in heterogeneous graphs"	rdf:predicate	"evaluate"
s0	"objectrank evaluate an importance of nodes for a userspecified query in heterogeneous graphs"	rdf:object	"importance of nodes for a userspecified query in heterogeneous graphs"
s0	"importance of nodes for a userspecified query in heterogeneous graphs"	rdfs:member	"importance"
s0	"importance of nodes for a userspecified query in heterogeneous graphs"	rdfs:member	"nodes"
s0	"importance of nodes for a userspecified query in heterogeneous graphs"	rdfs:member	"userspecified query"
s0	"importance of nodes for a userspecified query in heterogeneous graphs"	rdfs:member	"heterogeneous graphs"
s0	"heterogeneous graphs"	rdfs:member	"heterogeneous"
s0	"userspecified query"	rdfs:subClassOf	"query"
s0	"userspecified query"	rdfs:member	"userspecified"
s0	"heterogeneous graphs"	rdfs:subClassOf	"graphs"
s0	"importance of nodes"	rdfs:member	"importance"
s0	"importance of nodes"	rdfs:member	"nodes"
s0	"importance of nodes for userspecified query"	rdfs:member	"importance of nodes"
s0	"importance of nodes for userspecified query"	rdfs:member	"userspecified query"
s0	"userspecified query in heterogeneous graphs"	rdfs:member	"userspecified query"
s0	"userspecified query in heterogeneous graphs"	rdfs:member	"heterogeneous graphs"
