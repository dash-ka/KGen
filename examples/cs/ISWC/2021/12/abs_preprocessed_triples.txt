s6.3	"existing methods"
s6.3	"existing methods"	rdf:subject	"method"
s6.3	"existing methods"	rdf:predicate	"exist"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:subject	"run time of schemarank"
s6.2	"run time of schemarank"	rdfs:member	"run time"
s6.2	"run time of schemarank"	rdfs:member	"schemarank"
s6.2	"run time"	rdfs:member	"run"
s6.2	"run time"	rdfs:subClassOf	"time"
s6.2	"time of schemarank"	rdfs:member	"time"
s6.2	"time of schemarank"	rdfs:member	"schemarank"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:predicate	"outperform"
s6.2	"the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:object	"exist method two order of magnitude"
s6.2	"exist method two order of magnitude"	rdfs:member	"order"
s6.2	"exist method two order of magnitude"	rdfs:member	"exist method"
s6.2	"exist method two order of magnitude"	rdfs:member	"magnitude"
s6.2	"exist method"	rdfs:member	"exist"
s6.2	"exist method"	rdfs:subClassOf	"method"
s6.2	"two order"	rdfs:subClassOf	"order"
s6.2	"method two order"	rdfs:subClassOf	"two order"
s6.2	"method two order of magnitude"	rdfs:member	"method two order"
s6.2	"method two order of magnitude"	rdfs:member	"magnitude"
s6.1	"running time"
s6.1	"running time"	rdf:subject	"time"
s6.1	"running time"	rdf:predicate	"run"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:subject	"extensive evaluation"
s6	"extensive evaluation"	rdfs:subClassOf	"evaluation"
s6	"extensive evaluation"	rdfs:member	"extensive"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:predicate	"demonstrate"
s6	"our extensive evaluations demonstrate that the running time of schemarank outperforms existing methods by up to two orders of magnitude"	rdf:object	"run time of schemarank outperform exist method by up to two order of magnitude"
s6	"run time of schemarank outperform exist method by up to two order of magnitude"	rdfs:member	"order"
s6	"run time of schemarank outperform exist method by up to two order of magnitude"	rdfs:member	"run time"
s6	"run time of schemarank outperform exist method by up to two order of magnitude"	rdfs:member	"magnitude"
s6	"run time of schemarank outperform exist method by up to two order of magnitude"	rdfs:member	"schemarank outperform exist method"
s6	"outperform exist"	rdfs:subClassOf	"exist"
s6	"schemarank outperform"	rdfs:subClassOf	"outperform"
s6	"run time"	rdfs:subClassOf	"time"
s6	"outperform exist method"	rdfs:member	"outperform exist"
s6	"schemarank outperform exist method"	rdfs:member	"schemarank outperform exist"
s6	"schemarank outperform exist"	rdfs:subClassOf	"exist"
s6	"outperform exist method"	rdfs:subClassOf	"method"
s6	"schemarank outperform"	rdfs:member	"schemarank"
s6	"outperform exist"	rdfs:member	"outperform"
s6	"schemarank outperform exist"	rdfs:member	"schemarank outperform"
s6	"run time"	rdfs:member	"run"
s6	"exist method"	rdfs:member	"exist"
s6	"exist method"	rdfs:subClassOf	"method"
s6	"schemarank outperform exist method"	rdfs:subClassOf	"method"
s6	"two order"	rdfs:subClassOf	"order"
s6	"outperform schemarank"	rdfs:subClassOf	"schemarank"
s6	"time of outperform schemarank"	rdfs:member	"time"
s6	"time of outperform schemarank"	rdfs:member	"outperform schemarank"
s6	"exist by two order"	rdfs:member	"exist"
s6	"exist by two order"	rdfs:member	"two order"
s6	"two order of magnitude"	rdfs:member	"two order"
s6	"two order of magnitude"	rdfs:member	"magnitude"
s5	"schemarank dynamically excludes unpromising nodes and edges"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:subject	"schemarank"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:predicate	"exclude"
s5	"schemarank dynamically excludes unpromising nodes and edges"	rdf:object	"unpromising nod and edge"
s5	"unpromising nod and edge"	rdfs:member	"edge"
s5	"unpromising nod and edge"	rdfs:member	"nod"
s5	"unpromising nod"	rdfs:subClassOf	"nod"
s5	"schemarank dynamically excludes unpromising nodes and edges"	local:AM-MNR	"dynamically"
s4.1	"schemarank detects the same topk important nodes as objectrank"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:subject	"schemarank"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:predicate	"detect"
s4.1	"schemarank detects the same topk important nodes as objectrank"	rdf:object	"topk important nod a objectrank"
s4.1	"topk important nod a objectrank"	rdfs:member	"objectrank"
s4.1	"topk important nod a objectrank"	rdfs:member	"important nod"
s4.1	"topk important nod a objectrank"	rdfs:member	"topk"
s4.1	"important nod"	rdfs:member	"important"
s4.1	"important nod"	rdfs:subClassOf	"nod"
s4.1	"topk important nod"	rdfs:subClassOf	"important nod"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"	rdf:subject	"schemarank detect the same topk important nod a objectrank"
s4	"schemarank detect the same topk important nod a objectrank"	rdfs:member	"schemarank"
s4	"schemarank detect the same topk important nod a objectrank"	rdfs:member	"objectrank"
s4	"schemarank detect the same topk important nod a objectrank"	rdfs:member	"important nod"
s4	"schemarank detect the same topk important nod a objectrank"	rdfs:member	"same topk"
s4	"same topk"	rdfs:subClassOf	"topk"
s4	"same topk"	rdfs:member	"same"
s4	"important nod"	rdfs:member	"important"
s4	"important nod"	rdfs:subClassOf	"nod"
s4	"topk important nod"	rdfs:subClassOf	"important nod"
s4	"same topk important nod"	rdfs:subClassOf	"topk important nod"
s4	"ensuring that schemarank detects the same topk important nodes as objectrank"	rdf:predicate	"ensure"
s3.1	"given query"
s3.1	"given query"	rdf:subject	"query"
s3.1	"given query"	rdf:predicate	"give"
s3	"schemarank which detects the exact topk important nodes for a given query within a short running time"
s3	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:subject	"schemarank"
s3	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:predicate	"detect"
s3	"schemarank which detects the exact topk important nodes for a given query within a short running time"	rdf:object	"exact topk important nod"
s3	"exact topk important nod"	rdfs:member	"exact topk"
s3	"exact topk important nod"	rdfs:member	"important nod"
s3	"exact topk"	rdfs:member	"exact"
s3	"important nod"	rdfs:member	"important"
s3	"exact topk"	rdfs:subClassOf	"topk"
s3	"important nod"	rdfs:subClassOf	"nod"
s3	"schemarank which detects the exact topk important nodes for a given query within a short running time"	local:AM-PNC	"give query within a short run time"
s3	"give query within a short run time"	rdfs:member	"give query"
s3	"give query within a short run time"	rdfs:member	"short run time"
s3	"run time"	rdfs:subClassOf	"time"
s3	"give query"	rdfs:member	"give"
s3	"short run"	rdfs:member	"short"
s3	"short run time"	rdfs:member	"short run"
s3	"short run"	rdfs:subClassOf	"run"
s3	"run time"	rdfs:member	"run"
s3	"give query"	rdfs:subClassOf	"query"
s3	"short run time"	rdfs:subClassOf	"time"
s3	"short run time"	rdfs:subClassOf	"run time"
s3	"give within short run time"	rdfs:member	"give"
s3	"give within short run time"	rdfs:member	"short run time"
s2	"this paper proposes schemarank"
s2	"this paper proposes schemarank"	rdf:subject	"paper"
s2	"this paper proposes schemarank"	rdf:predicate	"propose"
s2	"this paper proposes schemarank"	rdf:object	"schemarank"
s1.1	"existing methods iteratively compute all nodes and edges"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:subject	"exist method"
s1.1	"exist method"	rdfs:member	"exist"
s1.1	"exist method"	rdfs:subClassOf	"method"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:predicate	"compute"
s1.1	"existing methods iteratively compute all nodes and edges"	rdf:object	"nod and edge"
s1.1	"nod and edge"	rdfs:member	"edge"
s1.1	"nod and edge"	rdfs:member	"nod"
s1.1	"existing methods iteratively compute all nodes and edges"	local:AM-MNR	"iteratively"
s1	"existing methods"
s1	"existing methods"	rdf:subject	"method"
s1	"existing methods"	rdf:predicate	"exist"
s1	"existing methods"	rdf:object	"method"
s0	"evaluate an importance of nodes for a userspecified query in heterogeneous graphs"
s0	"evaluate an importance of nodes for a userspecified query in heterogeneous graphs"	rdf:subject	"importance of nod for a userspecified query in heterogeneous graph"
s0	"importance of nod for a userspecified query in heterogeneous graph"	rdfs:member	"heterogeneous graph"
s0	"importance of nod for a userspecified query in heterogeneous graph"	rdfs:member	"userspecified query"
s0	"importance of nod for a userspecified query in heterogeneous graph"	rdfs:member	"importance"
s0	"importance of nod for a userspecified query in heterogeneous graph"	rdfs:member	"nod"
s0	"heterogeneous graph"	rdfs:member	"heterogeneous"
s0	"userspecified query"	rdfs:member	"userspecified"
s0	"userspecified query"	rdfs:subClassOf	"query"
s0	"heterogeneous graph"	rdfs:subClassOf	"graph"
s0	"importance of nod"	rdfs:member	"importance"
s0	"importance of nod"	rdfs:member	"nod"
s0	"importance of nod for userspecified query"	rdfs:member	"importance of nod"
s0	"importance of nod for userspecified query"	rdfs:member	"userspecified query"
s0	"userspecified query in heterogeneous graph"	rdfs:member	"userspecified query"
s0	"userspecified query in heterogeneous graph"	rdfs:member	"heterogeneous graph"
s0	"evaluate an importance of nodes for a userspecified query in heterogeneous graphs"	rdf:predicate	"evaluate"
