s8.2	"no datasetspecific optimizations"
s8.2	"no datasetspecific optimizations"	rdf:subject	"datasetspecific optimization"
s8.2	"datasetspecific optimization"	rdfs:subClassOf	"optimization"
s8.2	"datasetspecific optimization"	rdfs:member	"datasetspecific"
s8.2	"no datasetspecific optimizations"	rdf:predicate	"make"
s8.1	"we best matcher configuration with babelnet compared to other matching systems even though no datasetspecific optimizations were made"
s8.1	"we best matcher configuration with babelnet compared to other matching systems even though no datasetspecific optimizations were made"	rdf:subject	"best matcher configuration with babelnet"
s8.1	"best matcher configuration with babelnet"	rdfs:member	"best matcher configuration"
s8.1	"best matcher configuration with babelnet"	rdfs:member	"babelnet"
s8.1	"best matcher configuration"	rdfs:subClassOf	"configuration"
s8.1	"best matcher configuration"	rdfs:member	"best matcher"
s8.1	"best matcher"	rdfs:subClassOf	"matcher"
s8.1	"matcher configuration"	rdfs:member	"matcher"
s8.1	"matcher configuration"	rdfs:subClassOf	"configuration"
s8.1	"best matcher"	rdfs:member	"best"
s8.1	"best matcher configuration"	rdfs:subClassOf	"matcher configuration"
s8.1	"best matcher configuration with babelnet"	rdfs:member	"best matcher configuration"
s8.1	"best matcher configuration with babelnet"	rdfs:member	"babelnet"
s8.1	"we best matcher configuration with babelnet compared to other matching systems even though no datasetspecific optimizations were made"	rdf:predicate	"compare"
s8.1	"we best matcher configuration with babelnet compared to other matching systems even though no datasetspecific optimizations were made"	rdf:object	"match system"
s8.1	"match system"	rdfs:subClassOf	"system"
s8.1	"match system"	rdfs:member	"match"
s8.1	"we best matcher configuration with babelnet compared to other matching systems even though no datasetspecific optimizations were made"	local:AM-ADV	"even though no datasetspecific optimization be make"
s8.1	"datasetspecific optimization"	rdfs:subClassOf	"optimization"
s8.1	"datasetspecific optimization"	rdfs:member	"datasetspecific"
s8.1	"be make"	rdfs:subClassOf	"make"
s8.1	"no datasetspecific optimization"	rdfs:subClassOf	"datasetspecific optimization"
s8.1	"even be make"	rdfs:subClassOf	"be make"
s8	"we best matcher configuration with babelnet performs very competitively when compared to other matching systems even though no datasetspecific optimizations were made"
s8	"we best matcher configuration with babelnet performs very competitively when compared to other matching systems even though no datasetspecific optimizations were made"	rdf:subject	"best matcher configuration with babelnet"
s8	"best matcher configuration with babelnet"	rdfs:member	"best matcher configuration"
s8	"best matcher configuration with babelnet"	rdfs:member	"babelnet"
s8	"best matcher configuration"	rdfs:subClassOf	"configuration"
s8	"best matcher configuration"	rdfs:member	"best matcher"
s8	"best matcher"	rdfs:subClassOf	"matcher"
s8	"matcher configuration"	rdfs:member	"matcher"
s8	"matcher configuration"	rdfs:subClassOf	"configuration"
s8	"best matcher"	rdfs:member	"best"
s8	"best matcher configuration"	rdfs:subClassOf	"matcher configuration"
s8	"best matcher configuration with babelnet"	rdfs:member	"best matcher configuration"
s8	"best matcher configuration with babelnet"	rdfs:member	"babelnet"
s8	"we best matcher configuration with babelnet performs very competitively when compared to other matching systems even though no datasetspecific optimizations were made"	rdf:predicate	"perform"
s8	"we best matcher configuration with babelnet performs very competitively when compared to other matching systems even though no datasetspecific optimizations were made"	local:AM-MNR	"competitively"
s8	"we best matcher configuration with babelnet performs very competitively when compared to other matching systems even though no datasetspecific optimizations were made"	local:AM-TMP	"compare to other match system even though no datasetspecific optimization be make"
s8	"compare to other match system even though no datasetspecific optimization be make"	rdfs:member	"other match system"
s8	"compare to other match system even though no datasetspecific optimization be make"	rdfs:member	"compare"
s8	"compare to other match system even though no datasetspecific optimization be make"	rdfs:member	"datasetspecific optimization"
s8	"other match system"	rdfs:subClassOf	"system"
s8	"datasetspecific optimization"	rdfs:subClassOf	"optimization"
s8	"other match"	rdfs:subClassOf	"match"
s8	"match system"	rdfs:subClassOf	"system"
s8	"other match system"	rdfs:member	"other match"
s8	"match system"	rdfs:member	"match"
s8	"other match"	rdfs:member	"other"
s8	"datasetspecific optimization"	rdfs:member	"datasetspecific"
s8	"be make"	rdfs:subClassOf	"make"
s8	"no datasetspecific optimization"	rdfs:subClassOf	"datasetspecific optimization"
s8	"even be make"	rdfs:subClassOf	"be make"
s8	"other match system"	rdfs:subClassOf	"match system"
s8	"compare to other match system"	rdfs:member	"compare"
s8	"compare to other match system"	rdfs:member	"other match system"
s7.1	"we could not identify a universally superior resource babelnet achieved consistently good results"
s7.1	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:subject	"could not identify a universally superior resource babelnet"
s7.1	"universally superior resource"	rdfs:subClassOf	"resource"
s7.1	"universally superior"	rdfs:member	"universally"
s7.1	"superior resource"	rdfs:member	"superior"
s7.1	"resource babelnet"	rdfs:subClassOf	"babelnet"
s7.1	"resource babelnet"	rdfs:member	"resource"
s7.1	"universally superior"	rdfs:subClassOf	"superior"
s7.1	"superior resource babelnet"	rdfs:subClassOf	"babelnet"
s7.1	"universally superior resource"	rdfs:member	"universally superior"
s7.1	"superior resource"	rdfs:subClassOf	"resource"
s7.1	"superior resource babelnet"	rdfs:member	"superior resource"
s7.1	"universally superior resource babelnet"	rdfs:member	"universally superior resource"
s7.1	"universally superior resource babelnet"	rdfs:subClassOf	"babelnet"
s7.1	"superior resource babelnet"	rdfs:subClassOf	"resource babelnet"
s7.1	"not identify"	rdfs:subClassOf	"identify"
s7.1	"could not identify"	rdfs:subClassOf	"not identify"
s7.1	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:predicate	"achieve"
s7.1	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:object	"consistently good result"
s7.1	"consistently good"	rdfs:member	"consistently"
s7.1	"good result"	rdfs:subClassOf	"result"
s7.1	"consistently good result"	rdfs:member	"consistently good"
s7.1	"consistently good"	rdfs:subClassOf	"good"
s7.1	"consistently good result"	rdfs:subClassOf	"result"
s7.1	"good result"	rdfs:member	"good"
s7	"we could not identify a universally superior resource babelnet achieved consistently good results"
s7	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:subject	"we"
s7	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:predicate	"not identify"
s7	"we could not identify a universally superior resource babelnet achieved consistently good results"	rdf:object	"universally superior resource babelnet achieve consistently good result"
s7	"universally superior resource babelnet achieve consistently good result"	rdfs:member	"consistently good result"
s7	"universally superior resource babelnet achieve consistently good result"	rdfs:member	"universally superior resource babelnet"
s7	"universally superior resource"	rdfs:subClassOf	"resource"
s7	"consistently good"	rdfs:member	"consistently"
s7	"universally superior"	rdfs:member	"universally"
s7	"good result"	rdfs:subClassOf	"result"
s7	"superior resource"	rdfs:member	"superior"
s7	"resource babelnet"	rdfs:subClassOf	"babelnet"
s7	"resource babelnet"	rdfs:member	"resource"
s7	"universally superior"	rdfs:subClassOf	"superior"
s7	"superior resource babelnet"	rdfs:subClassOf	"babelnet"
s7	"universally superior resource babelnet"	rdfs:member	"universally superior resource"
s7	"universally superior resource"	rdfs:member	"universally superior"
s7	"superior resource"	rdfs:subClassOf	"resource"
s7	"superior resource babelnet"	rdfs:member	"superior resource"
s7	"consistently good result"	rdfs:member	"consistently good"
s7	"universally superior resource babelnet"	rdfs:subClassOf	"babelnet"
s7	"consistently good"	rdfs:subClassOf	"good"
s7	"consistently good result"	rdfs:subClassOf	"result"
s7	"good result"	rdfs:member	"good"
s7	"superior resource babelnet"	rdfs:subClassOf	"resource babelnet"
s7	"we could not identify a universally superior resource babelnet achieved consistently good results"	local:AM-MOD	"could"
s6.1	"the choice of the strategy has a greater impact on the final alignment than the actual background dataset"
s6.1	"the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:subject	"choice of the strategy"
s6.1	"choice of the strategy"	rdfs:member	"strategy"
s6.1	"choice of the strategy"	rdfs:member	"choice"
s6.1	"choice of strategy"	rdfs:member	"choice"
s6.1	"choice of strategy"	rdfs:member	"strategy"
s6.1	"the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:predicate	"have"
s6.1	"the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:object	"greater impact on the final alignment than the actual background dataset"
s6.1	"greater impact on the final alignment than the actual background dataset"	rdfs:member	"final alignment"
s6.1	"greater impact on the final alignment than the actual background dataset"	rdfs:member	"greater impact"
s6.1	"greater impact on the final alignment than the actual background dataset"	rdfs:member	"actual background dataset"
s6.1	"actual background"	rdfs:subClassOf	"background"
s6.1	"final alignment"	rdfs:member	"final"
s6.1	"background dataset"	rdfs:member	"background"
s6.1	"greater impact"	rdfs:member	"greater"
s6.1	"actual background dataset"	rdfs:subClassOf	"dataset"
s6.1	"final alignment"	rdfs:subClassOf	"alignment"
s6.1	"background dataset"	rdfs:subClassOf	"dataset"
s6.1	"actual background"	rdfs:member	"actual"
s6.1	"greater impact"	rdfs:subClassOf	"impact"
s6.1	"actual background dataset"	rdfs:member	"actual background"
s6.1	"actual background dataset"	rdfs:subClassOf	"background dataset"
s6.1	"greater impact on final alignment"	rdfs:member	"greater impact"
s6.1	"greater impact on final alignment"	rdfs:member	"final alignment"
s6.1	"greater impact on final alignment than actual background dataset"	rdfs:member	"greater impact on final alignment"
s6.1	"greater impact on final alignment than actual background dataset"	rdfs:member	"actual background dataset"
s6	"we find that the choice of the strategy has a greater impact on the final alignment than the actual background dataset"
s6	"we find that the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:subject	"we"
s6	"we find that the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:predicate	"find"
s6	"we find that the choice of the strategy has a greater impact on the final alignment than the actual background dataset"	rdf:object	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"
s6	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"	rdfs:member	"strategy"
s6	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"	rdfs:member	"actual background dataset"
s6	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"	rdfs:member	"final alignment"
s6	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"	rdfs:member	"greater impact"
s6	"choice of the strategy have a greater impact on the final alignment than the actual background dataset"	rdfs:member	"choice"
s6	"actual background"	rdfs:subClassOf	"background"
s6	"final alignment"	rdfs:member	"final"
s6	"background dataset"	rdfs:member	"background"
s6	"greater impact"	rdfs:member	"greater"
s6	"actual background dataset"	rdfs:subClassOf	"dataset"
s6	"background dataset"	rdfs:subClassOf	"dataset"
s6	"final alignment"	rdfs:subClassOf	"alignment"
s6	"actual background"	rdfs:member	"actual"
s6	"greater impact"	rdfs:subClassOf	"impact"
s6	"actual background dataset"	rdfs:member	"actual background"
s6	"actual background dataset"	rdfs:subClassOf	"background dataset"
s6	"choice of strategy"	rdfs:member	"choice"
s6	"choice of strategy"	rdfs:member	"strategy"
s6	"greater impact on final alignment"	rdfs:member	"greater impact"
s6	"greater impact on final alignment"	rdfs:member	"final alignment"
s6	"greater impact on final alignment than actual background dataset"	rdfs:member	"greater impact on final alignment"
s6	"greater impact on final alignment than actual background dataset"	rdfs:member	"actual background dataset"
s5	"we find that explicit strategies still outperform latent ones"
s5	"we find that explicit strategies still outperform latent ones"	rdf:subject	"we"
s5	"we find that explicit strategies still outperform latent ones"	rdf:predicate	"find"
s5	"we find that explicit strategies still outperform latent ones"	rdf:object	"explicit strategy still outperform latent one"
s5	"explicit strategy still outperform latent one"	rdfs:member	"latent"
s5	"explicit strategy still outperform latent one"	rdfs:member	"explicit strategy"
s5	"explicit strategy"	rdfs:subClassOf	"strategy"
s5	"explicit strategy"	rdfs:member	"explicit"
s5	"latent one"	rdfs:subClassOf	"one"
s5	"still outperform"	rdfs:subClassOf	"outperform"
s4	"the actual background dataset on which the strategy"
s4	"the actual background dataset on which the strategy"	rdf:subject	"actual background dataset on which the strategy"
s4	"actual background dataset on which the strategy"	rdfs:member	"strategy"
s4	"actual background dataset on which the strategy"	rdfs:member	"actual background dataset"
s4	"actual background"	rdfs:subClassOf	"background"
s4	"background dataset"	rdfs:member	"background"
s4	"actual background dataset"	rdfs:subClassOf	"dataset"
s4	"background dataset"	rdfs:subClassOf	"dataset"
s4	"actual background"	rdfs:member	"actual"
s4	"actual background dataset"	rdfs:member	"actual background"
s4	"actual background dataset"	rdfs:subClassOf	"background dataset"
s4	"actual background dataset on which"	rdfs:member	"actual background dataset"
s4	"actual background dataset on which"	rdfs:member	"which"
s4	"the actual background dataset on which the strategy"	rdf:predicate	"apply"
s3.1	"the background sources applying three different exploitation strategies"
s3.1	"the background sources applying three different exploitation strategies"	rdf:subject	"background source"
s3.1	"background source"	rdfs:member	"background"
s3.1	"background source"	rdfs:subClassOf	"source"
s3.1	"the background sources applying three different exploitation strategies"	rdf:predicate	"apply"
s3.1	"the background sources applying three different exploitation strategies"	rdf:object	"three different exploitation strategy"
s3.1	"different exploitation strategy"	rdfs:member	"different exploitation"
s3.1	"exploitation strategy"	rdfs:member	"exploitation"
s3.1	"different exploitation"	rdfs:subClassOf	"exploitation"
s3.1	"exploitation strategy"	rdfs:subClassOf	"strategy"
s3.1	"different exploitation"	rdfs:member	"different"
s3.1	"different exploitation strategy"	rdfs:subClassOf	"strategy"
s3.1	"different exploitation strategy"	rdfs:subClassOf	"exploitation strategy"
s3.1	"three different exploitation strategy"	rdfs:subClassOf	"different exploitation strategy"
s3	"the background sources evaluated by applying three different exploitation strategies"
s3	"the background sources evaluated by applying three different exploitation strategies"	rdf:subject	"apply three different exploitation strategy"
s3	"different exploitation strategy"	rdfs:member	"different exploitation"
s3	"exploitation strategy"	rdfs:member	"exploitation"
s3	"different exploitation"	rdfs:subClassOf	"exploitation"
s3	"exploitation strategy"	rdfs:subClassOf	"strategy"
s3	"different exploitation"	rdfs:member	"different"
s3	"different exploitation strategy"	rdfs:subClassOf	"strategy"
s3	"different exploitation strategy"	rdfs:subClassOf	"exploitation strategy"
s3	"three different exploitation strategy"	rdfs:subClassOf	"different exploitation strategy"
s3	"the background sources evaluated by applying three different exploitation strategies"	rdf:predicate	"evaluate"
s3	"the background sources evaluated by applying three different exploitation strategies"	rdf:object	"background source"
s3	"background source"	rdfs:member	"background"
s3	"background source"	rdfs:subClassOf	"source"
s2	"in this paper we exploit six generalpurpose knowledge graphs as sources of background knowledge for the matching task"
s2	"in this paper we exploit six generalpurpose knowledge graphs as sources of background knowledge for the matching task"	rdf:subject	"we"
s2	"in this paper we exploit six generalpurpose knowledge graphs as sources of background knowledge for the matching task"	rdf:predicate	"exploit"
s2	"in this paper we exploit six generalpurpose knowledge graphs as sources of background knowledge for the matching task"	rdf:object	"six generalpurpose knowledge graph a source of background knowledge for the match task"
s2	"six generalpurpose knowledge graph a source of background knowledge for the match task"	rdfs:member	"generalpurpose knowledge graph"
s2	"six generalpurpose knowledge graph a source of background knowledge for the match task"	rdfs:member	"match task"
s2	"six generalpurpose knowledge graph a source of background knowledge for the match task"	rdfs:member	"background knowledge"
s2	"six generalpurpose knowledge graph a source of background knowledge for the match task"	rdfs:member	"source"
s2	"match task"	rdfs:member	"match"
s2	"knowledge graph"	rdfs:subClassOf	"graph"
s2	"generalpurpose knowledge graph"	rdfs:member	"generalpurpose knowledge"
s2	"background knowledge"	rdfs:member	"background"
s2	"knowledge graph"	rdfs:member	"knowledge"
s2	"match task"	rdfs:subClassOf	"task"
s2	"generalpurpose knowledge"	rdfs:subClassOf	"knowledge"
s2	"background knowledge"	rdfs:subClassOf	"knowledge"
s2	"generalpurpose knowledge graph"	rdfs:subClassOf	"graph"
s2	"generalpurpose knowledge"	rdfs:member	"generalpurpose"
s2	"generalpurpose knowledge graph"	rdfs:subClassOf	"knowledge graph"
s2	"six generalpurpose knowledge graph"	rdfs:subClassOf	"generalpurpose knowledge graph"
s2	"source of background knowledge"	rdfs:member	"source"
s2	"source of background knowledge"	rdfs:member	"background knowledge"
s2	"source of background knowledge for match task"	rdfs:member	"source of background knowledge"
s2	"source of background knowledge for match task"	rdfs:member	"match task"
s2	"in this paper we exploit six generalpurpose knowledge graphs as sources of background knowledge for the matching task"	local:AM-LOC	"paper"
s1	"matching schemas automatically"
s1	"matching schemas automatically"	rdf:subject	"schema automatically"
s1	"automatically schema"	rdfs:subClassOf	"schema"
s1	"matching schemas automatically"	rdf:predicate	"match"
s0	"matching ontologies automatically"
s0	"matching ontologies automatically"	rdf:subject	"ontology automatically"
s0	"automatically ontology"	rdfs:subClassOf	"ontology"
s0	"matching ontologies automatically"	rdf:predicate	"match"
